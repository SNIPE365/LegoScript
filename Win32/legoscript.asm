	.file "..\\ls\\win32\\legoscript.bas"
	.stabs "C:\\Users\\kris\\Desktop\\FreeBASIC-1.10.0-winlibs-gcc-9.3.0\\",100,0,0,.L_0002
	.stabs "..\\ls\\win32\\legoscript.bas",100,0,0,.L_0002

.section .text
.L_0002:
	.stabs "integer:t1=-1",128,0,0,0
	.stabs "void:t7=-11",128,0,0,0
	.stabs "byte:t2=-6",128,0,0,0
	.stabs "ubyte:t3=-5",128,0,0,0
	.stabs "char:t4=-2",128,0,0,0
	.stabs "short:t5=-3",128,0,0,0
	.stabs "ushort:t6=-7",128,0,0,0
	.stabs "uinteger:t8=-8",128,0,0,0
	.stabs "longint:t9=-31",128,0,0,0
	.stabs "ulongint:t10=-32",128,0,0,0
	.stabs "single:t11=-12",128,0,0,0
	.stabs "double:t12=-13",128,0,0,0
	.stabs "string:t13=s12data:15,0,32;len:1,32,32;size:1,64,32;;",128,0,0,0
	.stabs "fixstr:t14=-2",128,0,0,0
	.stabs "pchar:t15=*4;",128,0,0,0
	.stabs "boolean:t16=@s8;-16",128,0,0,0
	.stabs "va_list:t17=-11",128,0,0,0

	.intel_syntax noprefix
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\COLOREDBUTTONS.BAS",132,0,0,.L_2140
.L_2140:
	.stabs "__ZN14COLOREDCONTROL4INITEv@0:F7",36,0,7,__ZN14COLOREDCONTROL4INITEv@0
.balign 16

.globl __ZN14COLOREDCONTROL4INITEv@0
__ZN14COLOREDCONTROL4INITEv@0:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,7,__ZN14COLOREDCONTROL4INITEv@0-__ZN14COLOREDCONTROL4INITEv@0
.L_213E:
.L_2141:
	push 0
	call _GetDC@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,8,.L_2141-__ZN14COLOREDCONTROL4INITEv@0
.L_2142:
	push dword ptr [ebp-4]
	call _CreateCompatibleDC@4
	mov dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE], eax
.stabn 68,0,9,.L_2142-__ZN14COLOREDCONTROL4INITEv@0
.L_2143:
	push 0
	push 1
	push 1
	push 1
	push 1
	call _CreateBitmap@20
	mov dword ptr [__ZN14COLOREDCONTROL8HBMALPHAE], eax
.stabn 68,0,10,.L_2143-__ZN14COLOREDCONTROL4INITEv@0
.L_2144:
	push dword ptr [__ZN14COLOREDCONTROL8HBMALPHAE]
	push dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE]
	call _SelectObject@8
.stabn 68,0,11,.L_2144-__ZN14COLOREDCONTROL4INITEv@0
.L_2145:
	push dword ptr [ebp-4]
	push 0
	call _ReleaseDC@8
.stabn 68,0,12,.L_2145-__ZN14COLOREDCONTROL4INITEv@0
.L_2146:
	push offset __ZN14COLOREDCONTROL10CSCOLORIZEE
	call _InitializeCriticalSection@4
.stabn 68,0,13,.L_2146-__ZN14COLOREDCONTROL4INITEv@0
.L_2147:
.L_213F:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,14,.L_213F-__ZN14COLOREDCONTROL4INITEv@0
	.stabs "HDC__:Tt19=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HDC:18=*19",128,0,0,-4
	.stabn 192,0,0,.L_213E-__ZN14COLOREDCONTROL4INITEv@0
	.stabn 224,0,0,.L_213F-__ZN14COLOREDCONTROL4INITEv@0
.L_2148:
	.stabs "",36,0,0,.L_2148-__ZN14COLOREDCONTROL4INITEv@0
	.stabs "__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16:F1",36,0,15,__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabs "HWND__:Tt21=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HWND:p20=*21",160,0,0,8
	.stabs "MESSAGE:p8",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16

.globl __ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16:
	push ebp
	mov ebp, esp
	sub esp, 112
	.stabn 68,0,15,__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	mov dword ptr [ebp-4], 0
.L_2149:
.L_216D:
	push -21
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-8], eax
.stabn 68,0,17,.L_216D-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_216E:
.L_214B:
	cmp dword ptr [ebp+12], 10
	je .L_214E
.L_214F:
	cmp dword ptr [ebp+12], 6
	jne .L_214D
.L_214E:
.L_2150:
.stabn 68,0,20,.L_216E-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_216F:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcA@20
	mov dword ptr [ebp-12], eax
.stabn 68,0,21,.L_216F-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2170:
	push -1
	push 0
	push dword ptr [ebp+8]
	call _InvalidateRect@12
.stabn 68,0,22,.L_2170-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2171:
.L_2151:
	jmp .L_214C
.L_214D:
	cmp dword ptr [ebp+12], 12
	jne .L_2152
.L_2153:
.L_2154:
.stabn 68,0,23,.L_2171-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2172:
	push 0
	push 0
	push 11
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,25,.L_2172-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2173:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcA@20
	mov dword ptr [ebp-12], eax
.stabn 68,0,26,.L_2173-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2174:
	push 0
	push 4294967295
	push 11
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,27,.L_2174-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2175:
	push -1
	push 0
	push dword ptr [ebp+8]
	call _InvalidateRect@12
.stabn 68,0,29,.L_2175-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2176:
.L_2155:
	jmp .L_214C
.L_2152:
	cmp dword ptr [ebp+12], 15
	jne .L_2156
.L_2157:
.L_2158:
.stabn 68,0,30,.L_2176-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2177:
	push offset __ZN14COLOREDCONTROL10CSCOLORIZEE
	call _EnterCriticalSection@4
.stabn 68,0,32,.L_2177-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2178:
	lea eax, [ebp-24]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,33,.L_2178-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2179:
	push 0
	call _GetDC@4
	mov dword ptr [ebp-28], eax
.stabn 68,0,35,.L_2179-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_217A:
	push dword ptr [ebp-28]
	call _CreateCompatibleDC@4
	mov dword ptr [ebp-32], eax
.stabn 68,0,36,.L_217A-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_217B:
	cmp dword ptr [_Lt_217C], 0
	jne .L_215A
.L_215B:
	push 1024
	push 2048
	push dword ptr [ebp-28]
	call _CreateCompatibleBitmap@12
	mov dword ptr [_Lt_217C], eax
.L_215A:
.L_215C:
.stabn 68,0,38,.L_217B-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_217D:
	push dword ptr [_Lt_217C]
	push dword ptr [ebp-32]
	call _SelectObject@8
	mov dword ptr [ebp-36], eax
.stabn 68,0,40,.L_217D-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_217E:
	mov eax, dword ptr [ebp-32]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-96]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 15
	rep stosd
	pop edi
	pop eax
.stabn 68,0,41,.L_217E-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_217F:
	push dword ptr [ebp-28]
	push 0
	call _ReleaseDC@8
.stabn 68,0,42,.L_217F-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2180:
	cmp dword ptr [ebp+16], 0
	jne .L_215F
.L_2160:
	lea eax, [ebp-100]
	push eax
	push dword ptr [ebp+8]
	call _BeginPaint@8
.L_215F:
.L_2161:
.stabn 68,0,45,.L_2180-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2181:
	push dword ptr [ebp+20]
	push dword ptr [ebp-32]
	push 20
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcA@20
.stabn 68,0,48,.L_2181-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2182:
	push dword ptr [ebp-32]
	call _SaveDC@4
	mov dword ptr [ebp-104], eax
.stabn 68,0,50,.L_2182-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2183:
	push dword ptr [ebp+20]
	push dword ptr [ebp-32]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcA@20
.stabn 68,0,51,.L_2183-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2184:
	cmp dword ptr [ebp+16], 0
	je .L_2162
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-108], eax
	jmp .L_216C
.L_2162:
	mov eax, dword ptr [ebp-100]
	mov dword ptr [ebp-108], eax
.L_216C:
	mov eax, dword ptr [ebp-108]
	mov dword ptr [ebp-28], eax
.stabn 68,0,52,.L_2184-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2185:
	push dword ptr [ebp-104]
	push dword ptr [ebp-32]
	call _RestoreDC@8
.stabn 68,0,53,.L_2185-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2186:
	mov byte ptr [ebp-112], 0
	mov byte ptr [ebp-111], 0
	mov byte ptr [ebp-110], 64
	mov byte ptr [ebp-109], 0
.stabn 68,0,57,.L_2186-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2187:
	push offset _Lt_2165
	push dword ptr [ebp+8]
	call _GetPropA@8
	push eax
	push dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE]
	call _SetTextColor@8
.stabn 68,0,58,.L_2187-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2188:
	push dword ptr [ebp-112]
	push 1
	push 1
	push 0
	push 0
	push dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE]
	push dword ptr [ebp-12]
	push dword ptr [ebp-16]
	push 0
	push 0
	push dword ptr [ebp-32]
	call _AlphaBlend@44
.stabn 68,0,59,.L_2188-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2189:
	push 13369376
	push 0
	push 0
	push dword ptr [ebp-32]
	push dword ptr [ebp-12]
	push dword ptr [ebp-16]
	push 0
	push 0
	push dword ptr [ebp-28]
	call _BitBlt@36
.stabn 68,0,62,.L_2189-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218A:
	push dword ptr [ebp-36]
	push dword ptr [ebp-32]
	call _SelectObject@8
.stabn 68,0,65,.L_218A-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218B:
	push dword ptr [ebp-32]
	call _DeleteDC@4
.stabn 68,0,67,.L_218B-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218C:
	cmp dword ptr [ebp+16], 0
	jne .L_2167
.L_2168:
	lea eax, [ebp-100]
	push eax
	push dword ptr [ebp+8]
	call _EndPaint@8
.L_2167:
.L_2169:
.stabn 68,0,70,.L_218C-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218D:
	push offset __ZN14COLOREDCONTROL10CSCOLORIZEE
	call _LeaveCriticalSection@4
.stabn 68,0,72,.L_218D-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218E:
	mov dword ptr [ebp-4], 0
	jmp .L_214A
.stabn 68,0,73,.L_218E-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_218F:
.L_216A:
.L_2156:
.L_214C:
.L_216B:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcA@20
	mov dword ptr [ebp-4], eax
.stabn 68,0,77,.L_218F-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2190:
.L_214A:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,79,.L_214A-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabs "ORGPROC:22=*7",128,0,0,-8
	.stabn 192,0,0,.L_2149-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 192,0,0,.L_214B-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabs "IRESU:1",128,0,0,-12
	.stabn 192,0,0,.L_2150-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_2151-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabs "IRESU:1",128,0,0,-12
	.stabn 192,0,0,.L_2154-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_2155-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabs "TAGRECT:Tt23=s16LEFT:1,0,32;TOP:1,32,32;RIGHT:1,64,32;BOTTOM:1,96,32;;",128,0,0,0
	.stabs "RCCTL:23",128,0,0,-24
	.stabs "HCTLDC:24=*19",128,0,0,-28
	.stabs "HDCBUFFER:25=*19",128,0,0,-32
	.stabs "HBITMAP__:Tt27=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HBUFBM:V26=*27",40,0,0,_Lt_217C
	.stabs "HOLDBM:28=*27",128,0,0,-36
	.stabs "TAGPAINTSTRUCT:Tt29=s64HDC:30=*19,0,32;FERASE:1,32,32;RCPAINT:23,64,128;FRESTORE:1,192,32;FINCUPDATE:1,224,32;RGBRESERVED:31=ar1;0;31;3,256,256;;",128,0,0,0
	.stabs "TPAINT:29",128,0,0,-100
	.stabs "IDC:1",128,0,0,-104
	.stabs "_BLENDFUNCTION:Tt32=s4BLENDOP:3,0,8;BLENDFLAGS:3,8,8;SOURCECONSTANTALPHA:3,16,8;ALPHAFORMAT:3,24,8;;",128,0,0,0
	.stabs "SRCBLEND:32",128,0,0,-112
	.stabn 192,0,0,.L_2158-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 192,0,0,.L_215B-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_215C-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 192,0,0,.L_2160-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_2161-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 192,0,0,.L_2168-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_2169-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_216A-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_216B-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	.stabn 224,0,0,.L_214A-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
.L_2191:
	.stabs "",36,0,0,.L_2191-__ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16

.section .bss
.balign 4
	.lcomm	_Lt_217C,4

.section .text
	.stabs "__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16:F1",36,0,80,__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabs "HWND:p33=*21",160,0,0,8
	.stabs "MESSAGE:p8",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16

.globl __ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16:
	push ebp
	mov ebp, esp
	sub esp, 112
	.stabn 68,0,80,__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	mov dword ptr [ebp-4], 0
.L_2192:
.L_21B5:
	push -21
	push dword ptr [ebp+8]
	call _GetWindowLongW@8
	mov dword ptr [ebp-8], eax
.stabn 68,0,82,.L_21B5-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21B6:
.L_2194:
	cmp dword ptr [ebp+12], 10
	je .L_2197
.L_2198:
	cmp dword ptr [ebp+12], 6
	jne .L_2196
.L_2197:
.L_2199:
.stabn 68,0,85,.L_21B6-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21B7:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcW@20
	mov dword ptr [ebp-12], eax
.stabn 68,0,86,.L_21B7-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21B8:
	push -1
	push 0
	push dword ptr [ebp+8]
	call _InvalidateRect@12
.stabn 68,0,87,.L_21B8-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21B9:
.L_219A:
	jmp .L_2195
.L_2196:
	cmp dword ptr [ebp+12], 12
	jne .L_219B
.L_219C:
.L_219D:
.stabn 68,0,88,.L_21B9-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BA:
	push 0
	push 0
	push 11
	push dword ptr [ebp+8]
	call _SendMessageW@16
.stabn 68,0,90,.L_21BA-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BB:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcW@20
	mov dword ptr [ebp-12], eax
.stabn 68,0,91,.L_21BB-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BC:
	push 0
	push 4294967295
	push 11
	push dword ptr [ebp+8]
	call _SendMessageW@16
.stabn 68,0,92,.L_21BC-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BD:
	push -1
	push 0
	push dword ptr [ebp+8]
	call _InvalidateRect@12
.stabn 68,0,94,.L_21BD-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BE:
.L_219E:
	jmp .L_2195
.L_219B:
	cmp dword ptr [ebp+12], 15
	jne .L_219F
.L_21A0:
.L_21A1:
.stabn 68,0,95,.L_21BE-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21BF:
	push offset __ZN14COLOREDCONTROL10CSCOLORIZEE
	call _EnterCriticalSection@4
.stabn 68,0,97,.L_21BF-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C0:
	lea eax, [ebp-24]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,98,.L_21C0-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C1:
	push 0
	call _GetDC@4
	mov dword ptr [ebp-28], eax
.stabn 68,0,100,.L_21C1-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C2:
	push dword ptr [ebp-28]
	call _CreateCompatibleDC@4
	mov dword ptr [ebp-32], eax
.stabn 68,0,101,.L_21C2-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C3:
	cmp dword ptr [_Lt_21C4], 0
	jne .L_21A3
.L_21A4:
	push 1024
	push 2048
	push dword ptr [ebp-28]
	call _CreateCompatibleBitmap@12
	mov dword ptr [_Lt_21C4], eax
.L_21A3:
.L_21A5:
.stabn 68,0,103,.L_21C3-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C5:
	push dword ptr [_Lt_21C4]
	push dword ptr [ebp-32]
	call _SelectObject@8
	mov dword ptr [ebp-36], eax
.stabn 68,0,105,.L_21C5-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C6:
	mov eax, dword ptr [ebp-32]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-96]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 15
	rep stosd
	pop edi
	pop eax
.stabn 68,0,106,.L_21C6-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C7:
	push dword ptr [ebp-28]
	push 0
	call _ReleaseDC@8
.stabn 68,0,107,.L_21C7-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C8:
	cmp dword ptr [ebp+16], 0
	jne .L_21A8
.L_21A9:
	lea eax, [ebp-100]
	push eax
	push dword ptr [ebp+8]
	call _BeginPaint@8
.L_21A8:
.L_21AA:
.stabn 68,0,110,.L_21C8-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21C9:
	push dword ptr [ebp+20]
	push dword ptr [ebp-32]
	push 20
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcW@20
.stabn 68,0,113,.L_21C9-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CA:
	push dword ptr [ebp-32]
	call _SaveDC@4
	mov dword ptr [ebp-104], eax
.stabn 68,0,115,.L_21CA-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CB:
	push dword ptr [ebp+20]
	push dword ptr [ebp-32]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcW@20
.stabn 68,0,116,.L_21CB-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CC:
	cmp dword ptr [ebp+16], 0
	je .L_21AB
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-108], eax
	jmp .L_21B4
.L_21AB:
	mov eax, dword ptr [ebp-100]
	mov dword ptr [ebp-108], eax
.L_21B4:
	mov eax, dword ptr [ebp-108]
	mov dword ptr [ebp-28], eax
.stabn 68,0,117,.L_21CC-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CD:
	push dword ptr [ebp-104]
	push dword ptr [ebp-32]
	call _RestoreDC@8
.stabn 68,0,118,.L_21CD-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CE:
	mov byte ptr [ebp-112], 0
	mov byte ptr [ebp-111], 0
	mov byte ptr [ebp-110], 64
	mov byte ptr [ebp-109], 0
.stabn 68,0,122,.L_21CE-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21CF:
	push offset _Lt_2165
	push dword ptr [ebp+8]
	call _GetPropA@8
	push eax
	push dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE]
	call _SetTextColor@8
.stabn 68,0,123,.L_21CF-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D0:
	push dword ptr [ebp-112]
	push 1
	push 1
	push 0
	push 0
	push dword ptr [__ZN14COLOREDCONTROL8HDCALPHAE]
	push dword ptr [ebp-12]
	push dword ptr [ebp-16]
	push 0
	push 0
	push dword ptr [ebp-32]
	call _AlphaBlend@44
.stabn 68,0,124,.L_21D0-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D1:
	push 13369376
	push 0
	push 0
	push dword ptr [ebp-32]
	push dword ptr [ebp-12]
	push dword ptr [ebp-16]
	push 0
	push 0
	push dword ptr [ebp-28]
	call _BitBlt@36
.stabn 68,0,127,.L_21D1-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D2:
	push dword ptr [ebp-36]
	push dword ptr [ebp-32]
	call _SelectObject@8
.stabn 68,0,130,.L_21D2-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D3:
	push dword ptr [ebp-32]
	call _DeleteDC@4
.stabn 68,0,132,.L_21D3-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D4:
	cmp dword ptr [ebp+16], 0
	jne .L_21AF
.L_21B0:
	lea eax, [ebp-100]
	push eax
	push dword ptr [ebp+8]
	call _EndPaint@8
.L_21AF:
.L_21B1:
.stabn 68,0,135,.L_21D4-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D5:
	push offset __ZN14COLOREDCONTROL10CSCOLORIZEE
	call _LeaveCriticalSection@4
.stabn 68,0,137,.L_21D5-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D6:
	mov dword ptr [ebp-4], 0
	jmp .L_2193
.stabn 68,0,138,.L_21D6-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D7:
.L_21B2:
.L_219F:
.L_2195:
.L_21B3:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [ebp-8]
	call _CallWindowProcW@20
	mov dword ptr [ebp-4], eax
.stabn 68,0,142,.L_21D7-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D8:
.L_2193:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,144,.L_2193-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabs "ORGPROC:34=*7",128,0,0,-8
	.stabn 192,0,0,.L_2192-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 192,0,0,.L_2194-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabs "IRESU:1",128,0,0,-12
	.stabn 192,0,0,.L_2199-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_219A-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabs "IRESU:1",128,0,0,-12
	.stabn 192,0,0,.L_219D-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_219E-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabs "RCCTL:23",128,0,0,-24
	.stabs "HCTLDC:35=*19",128,0,0,-28
	.stabs "HDCBUFFER:36=*19",128,0,0,-32
	.stabs "HBUFBM:V37=*27",40,0,0,_Lt_21C4
	.stabs "HOLDBM:38=*27",128,0,0,-36
	.stabs "TPAINT:29",128,0,0,-100
	.stabs "IDC:1",128,0,0,-104
	.stabs "SRCBLEND:32",128,0,0,-112
	.stabn 192,0,0,.L_21A1-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 192,0,0,.L_21A4-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_21A5-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 192,0,0,.L_21A9-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_21AA-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 192,0,0,.L_21B0-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_21B1-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_21B2-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_21B3-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
	.stabn 224,0,0,.L_2193-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16
.L_21D9:
	.stabs "",36,0,0,.L_21D9-__ZN14COLOREDCONTROL8WNDPROCWEP6HWND__jji@16

.section .bss
.balign 4
	.lcomm	_Lt_21C4,4

.section .text
	.stabs "__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8:F7",36,0,145,__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabs "HWND:p39=*21",160,0,0,8
	.stabs "PFNWNDPROC:p40=*7",160,0,0,12
.balign 16

.globl __ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8:
	push ebp
	mov ebp, esp
	.stabn 68,0,145,__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21DA:
.L_21E2:
	push dword ptr [ebp+8]
	call _IsWindowUnicode@4
	test eax, eax
	je .L_21DD
.L_21DE:
.stabn 68,0,146,.L_21E2-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21E3:
	push dword ptr [ebp+12]
	push -4
	push dword ptr [ebp+8]
	call _SetWindowLongW@12
	push eax
	push -21
	push dword ptr [ebp+8]
	call _SetWindowLongW@12
.stabn 68,0,147,.L_21E3-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21E4:
.L_21DF:
	jmp .L_21DC
.L_21DD:
.L_21E0:
.stabn 68,0,148,.L_21E4-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21E5:
	push dword ptr [ebp+12]
	push -4
	push dword ptr [ebp+8]
	call _SetWindowLongA@12
	push eax
	push -21
	push dword ptr [ebp+8]
	call _SetWindowLongA@12
.stabn 68,0,149,.L_21E5-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21E6:
.L_21E1:
.L_21DC:
.L_21DB:
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,151,.L_21DB-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 192,0,0,.L_21DA-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 192,0,0,.L_21DE-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 224,0,0,.L_21DF-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 192,0,0,.L_21E0-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 224,0,0,.L_21E1-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabn 224,0,0,.L_21DB-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.L_21E7:
	.stabs "",36,0,0,.L_21E7-__ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
	.stabs "__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8:F7",36,0,152,__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabs "HWND:p41=*21",160,0,0,8
	.stabs "UCOLOR:p8",160,0,0,12
.balign 16

.globl __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8:
	push ebp
	mov ebp, esp
	.stabn 68,0,152,__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21E8:
.L_21F5:
	cmp dword ptr [ebp+12], 0
	jne .L_21EB
.L_21EC:
	mov dword ptr [ebp+12], 1
.L_21EB:
.L_21ED:
.stabn 68,0,153,.L_21F5-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21F6:
	push offset _Lt_2165
	push dword ptr [ebp+8]
	call _GetPropA@8
	test eax, eax
	je .L_21EF
.L_21F0:
.stabn 68,0,154,.L_21F6-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21F7:
	push dword ptr [ebp+12]
	push offset _Lt_2165
	push dword ptr [ebp+8]
	call _SetPropA@12
.stabn 68,0,155,.L_21F7-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21F8:
.L_21F1:
	jmp .L_21EE
.L_21EF:
.L_21F2:
.stabn 68,0,156,.L_21F8-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21F9:
	push dword ptr [ebp+12]
	push offset _Lt_2165
	push dword ptr [ebp+8]
	call _SetPropA@12
.stabn 68,0,157,.L_21F9-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21FA:
	push offset __ZN14COLOREDCONTROL7WNDPROCEP6HWND__jji@16
	push dword ptr [ebp+8]
	call __ZN14COLOREDCONTROL8SUBCLASSEP6HWND__Pv@8
.stabn 68,0,158,.L_21FA-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21FB:
.L_21F4:
.L_21EE:
.L_21E9:
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,160,.L_21E9-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 192,0,0,.L_21E8-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 192,0,0,.L_21EC-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 224,0,0,.L_21ED-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 192,0,0,.L_21F0-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 224,0,0,.L_21F1-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 192,0,0,.L_21F2-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 224,0,0,.L_21F4-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabn 224,0,0,.L_21E9-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.L_21FC:
	.stabs "",36,0,0,.L_21FC-__ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LAYOUT.BAS",132,0,0,.L_2277
.L_2277:
	.stabs "CONTROLUPDATELAYOUT:F7",36,0,121,_CONTROLUPDATELAYOUT@12
	.stabs "CONTROLUNIT:Tt51=s4WRELID:6,0,14;BISPCT:6,14,1;BISEND:6,15,1;WOFFSET:5,16,16;;",128,0,0,0
	.stabs "CONTROLSTRUCT:Tt44=s48HWND:45=*21,0,32;CBAFTERSIZE:46=*47=f7,32,32;CBEVENT:48=*49=f1,64,32;PDATA:50=*7,96,32;TX:51,128,32;TY:51,160,32;TW:51,192,32;TH:51,224,32;TH2:51,256,32;IX:5,288,16;IY:5,304,16;IW:5,320,16;IH:5,336,16;IH2:5,352,16;BFONT:2,368,8;;",128,0,0,0
	.stabs "HFONT__:Tt55=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "FONTSTRUCT:Tt53=s20HFONT:54=*55,0,32;SNAME:13,32,96;BCURWID:3,128,8;BCURHEI:3,136,8;BSIZE:3,144,8;BBOLD:2,152,1;BITALIC:2,153,1;;",128,0,0,0
	.stabs "FORMSTRUCT:Tt42=s24ICLIWID:1,0,32;ICLIHEI:1,32,32;ICTLCNT:1,64,32;IFNTCNT:1,96,32;PCTL:43=*44,128,32;PFNT:52=*53,160,32;;",128,0,0,0
	.stabs "TFORM:v42",160,0,0,8
	.stabs "ICTL:p1",160,0,0,12
	.stabs "BRESIZE:p1",160,0,0,16
.balign 16

.globl _CONTROLUPDATELAYOUT@12
_CONTROLUPDATELAYOUT@12:
	push ebp
	mov ebp, esp
	sub esp, 40
	push ebx
	push esi
	.stabn 68,0,121,_CONTROLUPDATELAYOUT@12-_CONTROLUPDATELAYOUT@12
.L_2207:
.L_2278:
.L_2209:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	imul ebx, 48
	mov ecx, dword ptr [eax+16]
	add ecx, ebx
	mov dword ptr [ebp-4], ecx
.stabn 68,0,124,.L_2278-_CONTROLUPDATELAYOUT@12
.L_2279:
	mov ecx, dword ptr [ebp-4]
	mov bx, word ptr [ecx+18]
	mov word ptr [ebp-8], bx
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+36], 0
.stabn 68,0,126,.L_2279-_CONTROLUPDATELAYOUT@12
.L_227A:
	mov ebx, dword ptr [ebp-4]
	movzx ecx, word ptr [ebx+16]
	and ecx, 16383
	cmp ecx, 16383
	jne .L_220C
.L_220D:
.stabn 68,0,127,.L_227A-_CONTROLUPDATELAYOUT@12
.L_227B:
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+16]
	sar ebx, 15
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_220E
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ecx]
	mov dword ptr [ebp-32], ebx
	jmp .L_225D
.L_220E:
	mov dword ptr [ebp-32], 0
.L_225D:
	mov bx, word ptr [ebp-32]
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+36], bx
.stabn 68,0,128,.L_227B-_CONTROLUPDATELAYOUT@12
.L_227C:
.L_2210:
	jmp .L_220B
.L_220C:
	mov ebx, dword ptr [ebp-4]
	movzx ecx, word ptr [ebx+16]
	and ecx, 16383
	test ecx, ecx
	je .L_2211
.L_2212:
.stabn 68,0,129,.L_227C-_CONTROLUPDATELAYOUT@12
.L_227D:
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-4]
	movzx eax, word ptr [ebx+16]
	and eax, 16383
	mov ebx, eax
	imul ebx, 48
	mov eax, dword ptr [ecx+16]
	add eax, ebx
	mov dword ptr [ebp-32], eax
.stabn 68,0,130,.L_227D-_CONTROLUPDATELAYOUT@12
.L_227E:
	movsx eax, word ptr [ebp-8]
	cmp eax, -32768
	jne .L_2214
.L_2215:
.stabn 68,0,131,.L_227E-_CONTROLUPDATELAYOUT@12
.L_227F:
	mov word ptr [ebp-8], 0
	mov eax, dword ptr [ebp-32]
	movsx ebx, word ptr [eax+36]
	mov eax, dword ptr [ebp-32]
	movsx ecx, word ptr [eax+40]
	mov eax, dword ptr [ebp-4]
	movsx esi, word ptr [eax+40]
	sub ecx, esi
	push ecx
	mov ecx, 2
	pop eax
	cdq
	idiv ecx
	mov ecx, eax
	add ebx, ecx
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+36], bx
.stabn 68,0,132,.L_227F-_CONTROLUPDATELAYOUT@12
.L_2280:
.L_2216:
	jmp .L_2213
.L_2214:
.L_2217:
.stabn 68,0,133,.L_2280-_CONTROLUPDATELAYOUT@12
.L_2281:
	mov ebx, dword ptr [ebp-32]
	movsx ecx, word ptr [ebx+36]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+16]
	sar ebx, 15
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_2218
	mov ecx, dword ptr [ebp-32]
	movsx ebx, word ptr [ecx+40]
	mov dword ptr [ebp-36], ebx
	jmp .L_225E
.L_2218:
	mov dword ptr [ebp-36], 0
.L_225E:
	mov ebx, dword ptr [ebp-36]
	add ebx, dword ptr [ebp-40]
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+36], bx
.stabn 68,0,134,.L_2281-_CONTROLUPDATELAYOUT@12
.L_2282:
.L_221A:
.L_2213:
.L_221B:
.L_2211:
.L_220B:
	mov ebx, dword ptr [ebp-4]
	movsx ecx, word ptr [ebx+36]
	mov dword ptr [ebp-32], ecx
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+16]
	sar ebx, 14
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_221C
	movsx ecx, word ptr [ebp-8]
	mov ebx, dword ptr [ebp+8]
	imul ecx, dword ptr [ebx]
	push ecx
	mov ecx, 12800
	pop eax
	cdq
	idiv ecx
	mov ecx, eax
	mov dword ptr [ebp-12], ecx
	jmp .L_2260
.L_221C:
	movsx ecx, word ptr [ebp-8]
	mov dword ptr [ebp-12], ecx
.L_2260:
	mov ecx, dword ptr [ebp-12]
	add ecx, dword ptr [ebp-32]
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+36], cx
.stabn 68,0,137,.L_2282-_CONTROLUPDATELAYOUT@12
.L_2283:
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+38], 0
.stabn 68,0,139,.L_2283-_CONTROLUPDATELAYOUT@12
.L_2284:
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+20]
	and ebx, 16383
	cmp ebx, 16383
	jne .L_221F
.L_2220:
.stabn 68,0,140,.L_2284-_CONTROLUPDATELAYOUT@12
.L_2285:
	mov ebx, dword ptr [ebp-4]
	movzx ecx, word ptr [ebx+20]
	sar ecx, 15
	mov ebx, ecx
	and ebx, 1
	test ebx, ebx
	je .L_2221
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx+4]
	mov dword ptr [ebp-36], ecx
	jmp .L_2262
.L_2221:
	mov dword ptr [ebp-36], 0
.L_2262:
	mov cx, word ptr [ebp-36]
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+38], cx
.stabn 68,0,141,.L_2285-_CONTROLUPDATELAYOUT@12
.L_2286:
.L_2223:
	jmp .L_221E
.L_221F:
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+20]
	and ebx, 16383
	test ebx, ebx
	je .L_2224
.L_2225:
.stabn 68,0,142,.L_2286-_CONTROLUPDATELAYOUT@12
.L_2287:
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+20]
	and esi, 16383
	mov ecx, esi
	imul ecx, 48
	mov esi, dword ptr [ebx+16]
	add esi, ecx
	mov dword ptr [ebp-32], esi
.stabn 68,0,143,.L_2287-_CONTROLUPDATELAYOUT@12
.L_2288:
	mov esi, dword ptr [ebp-32]
	movsx ecx, word ptr [esi+38]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+20]
	sar esi, 15
	mov ecx, esi
	and ecx, 1
	test ecx, ecx
	je .L_2226
	mov ecx, dword ptr [ebp-32]
	movsx esi, word ptr [ecx+42]
	mov dword ptr [ebp-36], esi
	jmp .L_2263
.L_2226:
	mov dword ptr [ebp-36], 0
.L_2263:
	mov esi, dword ptr [ebp-36]
	add esi, dword ptr [ebp-40]
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+38], si
.stabn 68,0,144,.L_2288-_CONTROLUPDATELAYOUT@12
.L_2289:
.L_2228:
.L_2224:
.L_221E:
	mov esi, dword ptr [ebp-4]
	movsx ecx, word ptr [esi+38]
	mov dword ptr [ebp-32], ecx
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+20]
	sar esi, 14
	mov ecx, esi
	and ecx, 1
	test ecx, ecx
	je .L_2229
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+22]
	mov ecx, dword ptr [ebp+8]
	imul esi, dword ptr [ecx+4]
	mov ecx, 12800
	mov eax, esi
	cdq
	idiv ecx
	mov esi, eax
	mov dword ptr [ebp-16], esi
	jmp .L_2265
.L_2229:
	mov esi, dword ptr [ebp-4]
	movsx ecx, word ptr [esi+22]
	mov dword ptr [ebp-16], ecx
.L_2265:
	mov ecx, dword ptr [ebp-16]
	add ecx, dword ptr [ebp-32]
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+38], cx
.stabn 68,0,146,.L_2289-_CONTROLUPDATELAYOUT@12
.L_228A:
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+40], 0
.stabn 68,0,148,.L_228A-_CONTROLUPDATELAYOUT@12
.L_228B:
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+24]
	and esi, 16383
	cmp esi, 16383
	jne .L_222C
.L_222D:
.stabn 68,0,149,.L_228B-_CONTROLUPDATELAYOUT@12
.L_228C:
	mov esi, dword ptr [ebp-4]
	movzx ecx, word ptr [esi+24]
	sar ecx, 15
	mov esi, ecx
	and esi, 1
	test esi, esi
	je .L_222E
	mov esi, dword ptr [ebp+8]
	mov ecx, dword ptr [esi]
	mov dword ptr [ebp-36], ecx
	jmp .L_2267
.L_222E:
	mov dword ptr [ebp-36], 0
.L_2267:
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+36]
	mov ecx, dword ptr [ebp-36]
	sub ecx, esi
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+40], cx
.stabn 68,0,150,.L_228C-_CONTROLUPDATELAYOUT@12
.L_228D:
.L_2230:
	jmp .L_222B
.L_222C:
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+24]
	and esi, 16383
	test esi, esi
	je .L_2231
.L_2232:
.stabn 68,0,151,.L_228D-_CONTROLUPDATELAYOUT@12
.L_228E:
	mov esi, dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+24]
	and ebx, 16383
	mov ecx, ebx
	imul ecx, 48
	mov ebx, dword ptr [esi+16]
	add ebx, ecx
	mov dword ptr [ebp-32], ebx
.stabn 68,0,152,.L_228E-_CONTROLUPDATELAYOUT@12
.L_228F:
	mov ebx, dword ptr [ebp-32]
	movsx ecx, word ptr [ebx+36]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+24]
	sar ebx, 15
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_2233
	mov ecx, dword ptr [ebp-32]
	movsx ebx, word ptr [ecx+40]
	mov dword ptr [ebp-36], ebx
	jmp .L_2268
.L_2233:
	mov dword ptr [ebp-36], 0
.L_2268:
	mov ebx, dword ptr [ebp-36]
	add ebx, dword ptr [ebp-40]
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+36]
	sub ebx, esi
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+40], bx
.stabn 68,0,153,.L_228F-_CONTROLUPDATELAYOUT@12
.L_2290:
.L_2235:
.L_2231:
.L_222B:
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+40]
	mov dword ptr [ebp-32], esi
	mov esi, dword ptr [ebp-4]
	movzx ebx, word ptr [esi+24]
	sar ebx, 14
	mov esi, ebx
	and esi, 1
	test esi, esi
	je .L_2236
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+26]
	mov esi, dword ptr [ebp+8]
	imul ebx, dword ptr [esi]
	mov ecx, 12800
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	mov dword ptr [ebp-20], ebx
	jmp .L_226A
.L_2236:
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+26]
	mov dword ptr [ebp-20], esi
.L_226A:
	mov esi, dword ptr [ebp-20]
	add esi, dword ptr [ebp-32]
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+40], si
.stabn 68,0,155,.L_2290-_CONTROLUPDATELAYOUT@12
.L_2291:
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+40]
	test ebx, ebx
	jge .L_2239
.L_223A:
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+40]
	neg esi
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+40], si
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+36]
	mov esi, dword ptr [ebp-4]
	movsx ecx, word ptr [esi+40]
	sub ebx, ecx
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+36], bx
.L_2239:
.L_223B:
.stabn 68,0,156,.L_2291-_CONTROLUPDATELAYOUT@12
.L_2292:
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+42], 0
.stabn 68,0,158,.L_2292-_CONTROLUPDATELAYOUT@12
.L_2293:
	mov ebx, dword ptr [ebp-4]
	movzx ecx, word ptr [ebx+28]
	and ecx, 16383
	cmp ecx, 16383
	jne .L_223D
.L_223E:
.stabn 68,0,159,.L_2293-_CONTROLUPDATELAYOUT@12
.L_2294:
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+28]
	sar ebx, 15
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_223F
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ecx+4]
	mov dword ptr [ebp-32], ebx
	jmp .L_226C
.L_223F:
	mov dword ptr [ebp-32], 0
.L_226C:
	mov ebx, dword ptr [ebp-4]
	movsx ecx, word ptr [ebx+38]
	mov ebx, dword ptr [ebp-32]
	sub ebx, ecx
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+42], bx
.stabn 68,0,160,.L_2294-_CONTROLUPDATELAYOUT@12
.L_2295:
.L_2241:
	jmp .L_223C
.L_223D:
	mov ebx, dword ptr [ebp-4]
	movzx ecx, word ptr [ebx+28]
	and ecx, 16383
	test ecx, ecx
	je .L_2242
.L_2243:
.stabn 68,0,161,.L_2295-_CONTROLUPDATELAYOUT@12
.L_2296:
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-4]
	movzx esi, word ptr [ebx+28]
	and esi, 16383
	mov ebx, esi
	imul ebx, 48
	mov esi, dword ptr [ecx+16]
	add esi, ebx
	mov dword ptr [ebp-32], esi
.stabn 68,0,162,.L_2296-_CONTROLUPDATELAYOUT@12
.L_2297:
	mov esi, dword ptr [ebp-32]
	movsx ebx, word ptr [esi+38]
	mov dword ptr [ebp-40], ebx
	mov ebx, dword ptr [ebp-4]
	movzx esi, word ptr [ebx+28]
	sar esi, 15
	mov ebx, esi
	and ebx, 1
	test ebx, ebx
	je .L_2244
	mov ebx, dword ptr [ebp-32]
	movsx esi, word ptr [ebx+42]
	mov dword ptr [ebp-36], esi
	jmp .L_226D
.L_2244:
	mov dword ptr [ebp-36], 0
.L_226D:
	mov esi, dword ptr [ebp-36]
	add esi, dword ptr [ebp-40]
	mov ebx, dword ptr [ebp-4]
	movsx ecx, word ptr [ebx+38]
	sub esi, ecx
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+42], si
.stabn 68,0,163,.L_2297-_CONTROLUPDATELAYOUT@12
.L_2298:
.L_2246:
.L_2242:
.L_223C:
	mov esi, dword ptr [ebp-4]
	movsx ecx, word ptr [esi+42]
	mov dword ptr [ebp-32], ecx
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+28]
	sar esi, 14
	mov ecx, esi
	and ecx, 1
	test ecx, ecx
	je .L_2247
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+30]
	mov ecx, dword ptr [ebp+8]
	imul esi, dword ptr [ecx+4]
	mov ecx, 12800
	mov eax, esi
	cdq
	idiv ecx
	mov esi, eax
	mov dword ptr [ebp-24], esi
	jmp .L_226F
.L_2247:
	mov esi, dword ptr [ebp-4]
	movsx ecx, word ptr [esi+30]
	mov dword ptr [ebp-24], ecx
.L_226F:
	mov ecx, dword ptr [ebp-24]
	add ecx, dword ptr [ebp-32]
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+42], cx
.stabn 68,0,165,.L_2298-_CONTROLUPDATELAYOUT@12
.L_2299:
	mov ecx, dword ptr [ebp-4]
	mov word ptr [ecx+44], 0
.stabn 68,0,168,.L_2299-_CONTROLUPDATELAYOUT@12
.L_229A:
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+32]
	and esi, 16383
	cmp esi, 16383
	jne .L_224A
.L_224B:
.stabn 68,0,169,.L_229A-_CONTROLUPDATELAYOUT@12
.L_229B:
	mov esi, dword ptr [ebp-4]
	movzx ecx, word ptr [esi+32]
	sar ecx, 15
	mov esi, ecx
	and esi, 1
	test esi, esi
	je .L_224C
	mov esi, dword ptr [ebp+8]
	mov ecx, dword ptr [esi+4]
	mov dword ptr [ebp-36], ecx
	jmp .L_2271
.L_224C:
	mov dword ptr [ebp-36], 0
.L_2271:
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+38]
	mov ecx, dword ptr [ebp-36]
	sub ecx, esi
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+44], cx
.stabn 68,0,170,.L_229B-_CONTROLUPDATELAYOUT@12
.L_229C:
.L_224E:
	jmp .L_2249
.L_224A:
	mov ecx, dword ptr [ebp-4]
	movzx esi, word ptr [ecx+32]
	and esi, 16383
	test esi, esi
	je .L_224F
.L_2250:
.stabn 68,0,171,.L_229C-_CONTROLUPDATELAYOUT@12
.L_229D:
	mov esi, dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+32]
	and ebx, 16383
	mov ecx, ebx
	imul ecx, 48
	mov ebx, dword ptr [esi+16]
	add ebx, ecx
	mov dword ptr [ebp-32], ebx
.stabn 68,0,172,.L_229D-_CONTROLUPDATELAYOUT@12
.L_229E:
	mov ebx, dword ptr [ebp-32]
	movsx ecx, word ptr [ebx+38]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp-4]
	movzx ebx, word ptr [ecx+32]
	sar ebx, 15
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_2251
	mov ecx, dword ptr [ebp-32]
	movsx ebx, word ptr [ecx+42]
	mov dword ptr [ebp-36], ebx
	jmp .L_2272
.L_2251:
	mov dword ptr [ebp-36], 0
.L_2272:
	mov ebx, dword ptr [ebp-36]
	add ebx, dword ptr [ebp-40]
	mov ecx, dword ptr [ebp-4]
	movsx esi, word ptr [ecx+38]
	sub ebx, esi
	mov esi, dword ptr [ebp-4]
	mov word ptr [esi+44], bx
.stabn 68,0,173,.L_229E-_CONTROLUPDATELAYOUT@12
.L_229F:
.L_2253:
.L_224F:
.L_2249:
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+44]
	mov dword ptr [ebp-32], esi
	mov esi, dword ptr [ebp-4]
	movzx ebx, word ptr [esi+32]
	sar ebx, 14
	mov esi, ebx
	and esi, 1
	test esi, esi
	je .L_2254
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+34]
	mov esi, dword ptr [ebp+8]
	imul ebx, dword ptr [esi+4]
	mov ecx, 12800
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	mov dword ptr [ebp-28], ebx
	jmp .L_2274
.L_2254:
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+34]
	mov dword ptr [ebp-28], esi
.L_2274:
	mov esi, dword ptr [ebp-28]
	add esi, dword ptr [ebp-32]
	mov ebx, dword ptr [ebp-4]
	mov word ptr [ebx+44], si
.stabn 68,0,175,.L_229F-_CONTROLUPDATELAYOUT@12
.L_22A0:
	cmp dword ptr [ebp+16], 0
	je .L_2257
.L_2258:
	push 276
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+44]
	test ebx, ebx
	je .L_2259
	mov ebx, dword ptr [ebp-4]
	mov si, word ptr [ebx+44]
	mov word ptr [ebp-36], si
	jmp .L_2276
.L_2259:
	mov esi, dword ptr [ebp-4]
	mov bx, word ptr [esi+42]
	mov word ptr [ebp-36], bx
.L_2276:
	movsx ebx, word ptr [ebp-36]
	push ebx
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+40]
	push esi
	mov esi, dword ptr [ebp-4]
	movsx ebx, word ptr [esi+38]
	push ebx
	mov ebx, dword ptr [ebp-4]
	movsx esi, word ptr [ebx+36]
	push esi
	push 0
	mov esi, dword ptr [ebp-4]
	push dword ptr [esi]
	call _SetWindowPos@28
.L_2257:
.L_225B:
.stabn 68,0,178,.L_22A0-_CONTROLUPDATELAYOUT@12
.L_22A1:
.L_225C:
.L_2208:
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,181,.L_2208-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_2207-_CONTROLUPDATELAYOUT@12
	.stabs "WOFFSET:5",128,0,0,-8
	.stabn 192,0,0,.L_2209-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_220D-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2210-_CONTROLUPDATELAYOUT@12
	.stabs "PREL:56=*44",128,0,0,-32
	.stabn 192,0,0,.L_2212-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_2215-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2216-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_2217-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_221A-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_221B-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_2220-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2223-_CONTROLUPDATELAYOUT@12
	.stabs "PREL:57=*44",128,0,0,-32
	.stabn 192,0,0,.L_2225-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2228-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_222D-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2230-_CONTROLUPDATELAYOUT@12
	.stabs "PREL:58=*44",128,0,0,-32
	.stabn 192,0,0,.L_2232-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2235-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_223A-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_223B-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_223E-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2241-_CONTROLUPDATELAYOUT@12
	.stabs "PREL:59=*44",128,0,0,-32
	.stabn 192,0,0,.L_2243-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2246-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_224B-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_224E-_CONTROLUPDATELAYOUT@12
	.stabs "PREL:60=*44",128,0,0,-32
	.stabn 192,0,0,.L_2250-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2253-_CONTROLUPDATELAYOUT@12
	.stabn 192,0,0,.L_2258-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_225B-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_225C-_CONTROLUPDATELAYOUT@12
	.stabn 224,0,0,.L_2208-_CONTROLUPDATELAYOUT@12
.L_22A2:
	.stabs "",36,0,0,.L_22A2-_CONTROLUPDATELAYOUT@12
	.stabs "RESIZELAYOUT:F7",36,0,182,_RESIZELAYOUT@16
	.stabs "HWND:p61=*21",160,0,0,8
	.stabs "TFORM:v42",160,0,0,12
	.stabs "IWIDTH:p1",160,0,0,16
	.stabs "IHEIGHT:p1",160,0,0,20
.balign 16

.globl _RESIZELAYOUT@16
_RESIZELAYOUT@16:
	push ebp
	mov ebp, esp
	sub esp, 92
	push ebx
	push esi
	.stabn 68,0,182,_RESIZELAYOUT@16-_RESIZELAYOUT@16
.L_22A3:
.L_22FD:
.L_22A5:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-8], eax
.stabn 68,0,186,.L_22FD-_RESIZELAYOUT@16
.L_22FE:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [ebp+16]
	mov dword ptr [eax], ebx
	mov ebx, dword ptr [ebp-8]
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebx+4], eax
.stabn 68,0,187,.L_22FE-_RESIZELAYOUT@16
.L_22FF:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax]
	imul ebx, 9
	mov ecx, 16
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,188,.L_22FF-_RESIZELAYOUT@16
.L_2300:
	mov ebx, dword ptr [ebp-8]
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebx+4], eax
	jge .L_22A8
.L_22A9:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-12], ebx
.L_22A8:
.L_22AA:
.stabn 68,0,189,.L_2300-_RESIZELAYOUT@16
.L_2301:
	cmp dword ptr [ebp-12], 1
	jge .L_22AC
.L_22AD:
	mov dword ptr [ebp-12], 1
.L_22AC:
.L_22AE:
.stabn 68,0,190,.L_2301-_RESIZELAYOUT@16
.L_2302:
	push dword ptr [ebp+8]
	call _GetDC@4
	mov dword ptr [ebp-16], eax
.stabn 68,0,193,.L_2302-_RESIZELAYOUT@16
.L_2303:
	push 90
	push dword ptr [ebp-16]
	call _GetDeviceCaps@8
	mov dword ptr [ebp-20], eax
	mov eax, 25920
	cdq
	idiv dword ptr [ebp-12]
	mov dword ptr [ebp-24], eax
.stabn 68,0,194,.L_2303-_RESIZELAYOUT@16
.L_2304:
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 4
	mov dword ptr [ebp-44], 1
	mov dword ptr [ebp-40], 17
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax+12]
	dec ebx
	push ebx
	push 0
	push 1
	push 0
	push -1
	push 4
	lea ebx, [ebp-60]
	push ebx
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,196,.L_2304-_RESIZELAYOUT@16
.L_2305:
.L_22AF:
	mov dword ptr [ebp-64], 0
	mov ebx, dword ptr [ebp-8]
	mov eax, dword ptr [ebx+12]
	dec eax
	mov dword ptr [ebp-68], eax
	jmp .L_22B1
.L_22B4:
.L_22B5:
.stabn 68,0,197,.L_2305-_RESIZELAYOUT@16
.L_2306:
.L_22B6:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [ebp-64]
	imul ebx, 20
	mov ecx, dword ptr [eax+20]
	add ecx, ebx
	mov dword ptr [ebp-72], ecx
.stabn 68,0,198,.L_2306-_RESIZELAYOUT@16
.L_2307:
	mov ecx, dword ptr [ebp-72]
	mov ebx, dword ptr [ebp-64]
	sal ebx, 2
	add ebx, dword ptr [ebp-60]
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
.stabn 68,0,199,.L_2307-_RESIZELAYOUT@16
.L_2308:
	push dword ptr [ebp-24]
	push dword ptr [ebp-20]
	mov eax, dword ptr [ebp-72]
	movzx ebx, byte ptr [eax+18]
	push ebx
	call _MulDiv@12
	neg eax
	mov dword ptr [ebp-76], eax
.stabn 68,0,200,.L_2308-_RESIZELAYOUT@16
.L_2309:
	mov eax, dword ptr [ebp-72]
	movsx ebx, byte ptr [eax+19]
	and ebx, 1
	test ebx, ebx
	je .L_22B8
	mov dword ptr [ebp-80], 700
	jmp .L_22FB
.L_22B8:
	mov dword ptr [ebp-80], 400
.L_22FB:
	mov ebx, dword ptr [ebp-80]
	mov dword ptr [ebp-84], ebx
.stabn 68,0,201,.L_2309-_RESIZELAYOUT@16
.L_230A:
	mov ebx, dword ptr [ebp-72]
	push dword ptr [ebx+4]
	push 0
	push 5
	push 0
	push 0
	push 1
	push 0
	push 0
	mov ebx, dword ptr [ebp-72]
	movsx eax, byte ptr [ebx+19]
	sar eax, 1
	mov ebx, eax
	and ebx, 1
	push ebx
	push dword ptr [ebp-84]
	push 0
	push 0
	push 0
	push dword ptr [ebp-76]
	call _CreateFontA@56
	mov ebx, dword ptr [ebp-72]
	mov dword ptr [ebx], eax
.stabn 68,0,203,.L_230A-_RESIZELAYOUT@16
.L_230B:
	mov eax, dword ptr [ebp-72]
	push dword ptr [eax]
	push dword ptr [ebp-16]
	call _SelectObject@8
.stabn 68,0,205,.L_230B-_RESIZELAYOUT@16
.L_230C:
	lea eax, [ebp-92]
	push eax
	push 3
	push offset _Lt_22BA
	push dword ptr [ebp-16]
	call _GetTextExtentPoint32A@16
.stabn 68,0,206,.L_230C-_RESIZELAYOUT@16
.L_230D:
	mov eax, dword ptr [ebp-92]
	mov ecx, 3
	cdq
	idiv ecx
	mov bl, al
	mov eax, dword ptr [ebp-72]
	mov byte ptr [eax+16], bl
	mov bl, byte ptr [ebp-88]
	mov eax, dword ptr [ebp-72]
	mov byte ptr [eax+17], bl
.stabn 68,0,207,.L_230D-_RESIZELAYOUT@16
.L_230E:
.L_22BB:
.L_22BC:
.L_22B2:
	inc dword ptr [ebp-64]
.L_22B1:
	mov ebx, dword ptr [ebp-68]
	cmp dword ptr [ebp-64], ebx
	jle .L_22B4
.L_22B3:
.L_22BD:
.stabn 68,0,209,.L_230E-_RESIZELAYOUT@16
.L_230F:
.L_22BE:
	mov dword ptr [ebp-64], 0
	mov ebx, dword ptr [ebp-8]
	mov eax, dword ptr [ebx+8]
	dec eax
	mov dword ptr [ebp-68], eax
	jmp .L_22C0
.L_22C3:
.L_22C4:
.stabn 68,0,212,.L_230F-_RESIZELAYOUT@16
.L_2310:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [ebp-8]
	mov ecx, dword ptr [ebp-64]
	imul ecx, 48
	mov esi, dword ptr [ebx+16]
	add esi, ecx
	movsx ecx, byte ptr [esi+46]
	imul ecx, 20
	mov esi, dword ptr [eax+20]
	add esi, ecx
	mov ecx, dword ptr [esi]
	mov dword ptr [ebp-72], ecx
	mov ecx, dword ptr [ebp-8]
	mov esi, dword ptr [ebp-64]
	imul esi, 48
	mov eax, dword ptr [ecx+16]
	add eax, esi
	mov esi, dword ptr [eax]
	mov dword ptr [ebp-76], esi
.stabn 68,0,213,.L_2310-_RESIZELAYOUT@16
.L_2311:
	cmp dword ptr [ebp-76], 0
	jne .L_22C6
.L_22C7:
	jmp .L_22C1
.L_22C6:
.L_22C8:
.stabn 68,0,214,.L_2311-_RESIZELAYOUT@16
.L_2312:
	cmp dword ptr [ebp-76], 0
	je .L_22CA
.L_22CB:
.stabn 68,0,216,.L_2312-_RESIZELAYOUT@16
.L_2313:
	mov byte ptr [_G_BCHANGINGFONT], 1
.stabn 68,0,218,.L_2313-_RESIZELAYOUT@16
.L_2314:
	push 0
	push dword ptr [ebp-72]
	push 48
	push dword ptr [ebp-76]
	call _SendMessageA@16
.stabn 68,0,220,.L_2314-_RESIZELAYOUT@16
.L_2315:
	mov byte ptr [_G_BCHANGINGFONT], 0
.stabn 68,0,222,.L_2315-_RESIZELAYOUT@16
.L_2316:
.L_22CC:
.L_22CA:
.L_22C9:
.L_22CD:
.L_22C1:
	inc dword ptr [ebp-64]
.L_22C0:
	mov esi, dword ptr [ebp-68]
	cmp dword ptr [ebp-64], esi
	jle .L_22C3
.L_22C2:
.L_22CE:
.stabn 68,0,225,.L_2316-_RESIZELAYOUT@16
.L_2317:
	push dword ptr [ebp-16]
	push dword ptr [ebp+8]
	call _ReleaseDC@8
.stabn 68,0,226,.L_2317-_RESIZELAYOUT@16
.L_2318:
.L_22CF:
	mov dword ptr [ebp-64], 0
	mov esi, dword ptr [ebp-8]
	mov eax, dword ptr [esi+12]
	dec eax
	mov dword ptr [ebp-68], eax
	jmp .L_22D1
.L_22D4:
.L_22D5:
.stabn 68,0,227,.L_2318-_RESIZELAYOUT@16
.L_2319:
	mov eax, dword ptr [ebp-64]
	sal eax, 2
	add eax, dword ptr [ebp-60]
	cmp dword ptr [eax], 0
	je .L_22D7
.L_22D8:
	mov eax, dword ptr [ebp-64]
	sal eax, 2
	add eax, dword ptr [ebp-60]
	push dword ptr [eax]
	call _DeleteObject@4
	mov eax, dword ptr [ebp-64]
	sal eax, 2
	add eax, dword ptr [ebp-60]
	mov dword ptr [eax], 0
.L_22D7:
.L_22D9:
.stabn 68,0,228,.L_2319-_RESIZELAYOUT@16
.L_231A:
.L_22DA:
.L_22D2:
	inc dword ptr [ebp-64]
.L_22D1:
	mov eax, dword ptr [ebp-68]
	cmp dword ptr [ebp-64], eax
	jle .L_22D4
.L_22D3:
.L_22DB:
.stabn 68,0,229,.L_231A-_RESIZELAYOUT@16
.L_231B:
	lea eax, [ebp-60]
	push eax
	call _fb_ArrayErase@4
.L_22DC:
.stabn 68,0,230,.L_231B-_RESIZELAYOUT@16
.L_231C:
	mov eax, dword ptr [ebp+12]
	push dword ptr [eax+8]
	call _BeginDeferWindowPos@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,235,.L_231C-_RESIZELAYOUT@16
.L_231D:
.L_22DD:
	mov dword ptr [ebp-8], 0
.L_22E1:
.L_22E2:
.stabn 68,0,236,.L_231D-_RESIZELAYOUT@16
.L_231E:
	push 5
	push dword ptr [ebp+8]
	call _GetWindow@8
	mov dword ptr [ebp-12], eax
.stabn 68,0,237,.L_231E-_RESIZELAYOUT@16
.L_231F:
.L_22E3:
.L_22E6:
	push dword ptr [ebp-12]
	call _GetDlgCtrlID@4
	mov dword ptr [ebp-16], eax
.stabn 68,0,239,.L_231F-_RESIZELAYOUT@16
.L_2320:
	cmp dword ptr [ebp-16], 0
	je .L_22E8
.L_22E9:
.stabn 68,0,240,.L_2320-_RESIZELAYOUT@16
.L_2321:
.L_22EA:
	mov eax, dword ptr [ebp+12]
	mov esi, dword ptr [ebp-16]
	imul esi, 48
	mov ecx, dword ptr [eax+16]
	add ecx, esi
	mov dword ptr [ebp-20], ecx
.stabn 68,0,241,.L_2321-_RESIZELAYOUT@16
.L_2322:
	mov ecx, dword ptr [ebp-20]
	cmp dword ptr [ecx], 0
	je .L_22ED
.L_22EE:
.stabn 68,0,242,.L_2322-_RESIZELAYOUT@16
.L_2323:
	push dword ptr [ebp-8]
	push dword ptr [ebp-16]
	push dword ptr [ebp+12]
	call _CONTROLUPDATELAYOUT@12
.stabn 68,0,243,.L_2323-_RESIZELAYOUT@16
.L_2324:
.L_22EF:
.L_22ED:
.L_22EC:
	cmp dword ptr [ebp-8], 0
	je .L_22F1
.L_22F2:
	push 276
	mov ecx, dword ptr [ebp-20]
	movsx esi, word ptr [ecx+44]
	test esi, esi
	je .L_22F3
	mov esi, dword ptr [ebp-20]
	mov cx, word ptr [esi+44]
	mov word ptr [ebp-24], cx
	jmp .L_22FC
.L_22F3:
	mov ecx, dword ptr [ebp-20]
	mov si, word ptr [ecx+42]
	mov word ptr [ebp-24], si
.L_22FC:
	movsx esi, word ptr [ebp-24]
	push esi
	mov esi, dword ptr [ebp-20]
	movsx ecx, word ptr [esi+40]
	push ecx
	mov ecx, dword ptr [ebp-20]
	movsx esi, word ptr [ecx+38]
	push esi
	mov esi, dword ptr [ebp-20]
	movsx ecx, word ptr [esi+36]
	push ecx
	push 0
	mov ecx, dword ptr [ebp-20]
	push dword ptr [ecx]
	push dword ptr [ebp-4]
	call _DeferWindowPos@32
.L_22F1:
.L_22F5:
.stabn 68,0,245,.L_2324-_RESIZELAYOUT@16
.L_2325:
.L_22F6:
.L_22F7:
.L_22E8:
.L_22E7:
	push 2
	push dword ptr [ebp-12]
	call _GetWindow@8
	mov dword ptr [ebp-12], eax
.stabn 68,0,248,.L_2325-_RESIZELAYOUT@16
.L_2326:
.L_22F8:
.L_22E5:
	cmp dword ptr [ebp-12], 0
	jne .L_22E3
.L_22E4:
.stabn 68,0,249,.L_2326-_RESIZELAYOUT@16
.L_2327:
.L_22F9:
.L_22DF:
	inc dword ptr [ebp-8]
.L_22DE:
	cmp dword ptr [ebp-8], 1
	jle .L_22E1
.L_22E0:
.L_22FA:
.stabn 68,0,250,.L_2327-_RESIZELAYOUT@16
.L_2328:
	push dword ptr [ebp-4]
	call _EndDeferWindowPos@4
.stabn 68,0,251,.L_2328-_RESIZELAYOUT@16
.L_2329:
.L_22A4:
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,260,.L_22A4-_RESIZELAYOUT@16
	.stabs "HRESIZE:62=*7",128,0,0,-4
	.stabn 192,0,0,.L_22A3-_RESIZELAYOUT@16
	.stabs "ISZH:1",128,0,0,-12
	.stabs "HDC:63=*19",128,0,0,-16
	.stabs "ILOGY:1",128,0,0,-20
	.stabs "IDPI:1",128,0,0,-24
	.stabs "__FB_ARRAYDIMTB$:Tt70=s12ELEMENTS:1,0,32;LBOUND:1,32,32;UBOUND:1,64,32;;",128,0,0,0
	.stabs "FBARRAY1:Tt64=s36DATA:65=*66=*55,0,32;PTR:67=*68=*55,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:69=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "HOLDFONT:64",128,0,0,-60
	.stabn 192,0,0,.L_22A5-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22A9-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22AA-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22AD-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22AE-_RESIZELAYOUT@16
	.stabs "N:1",128,0,0,-64
	.stabn 192,0,0,.L_22AF-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22B5-_RESIZELAYOUT@16
	.stabs "NHEIGHT:1",128,0,0,-76
	.stabs "CWEIGHT:1",128,0,0,-84
	.stabs "TAGSIZE:Tt71=s8CX:1,0,32;CY:1,32,32;;",128,0,0,0
	.stabs "TSZ:71",128,0,0,-92
	.stabn 192,0,0,.L_22B6-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22BB-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22BC-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22BD-_RESIZELAYOUT@16
	.stabs "N:1",128,0,0,-64
	.stabn 192,0,0,.L_22BE-_RESIZELAYOUT@16
	.stabs "HCURFONT:72=*55",128,0,0,-72
	.stabs "HCTL:73=*21",128,0,0,-76
	.stabn 192,0,0,.L_22C4-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22C7-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22C8-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22CB-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22CC-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22CD-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22CE-_RESIZELAYOUT@16
	.stabs "N:1",128,0,0,-64
	.stabn 192,0,0,.L_22CF-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22D5-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22D8-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22D9-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22DA-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22DB-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22DC-_RESIZELAYOUT@16
	.stabs "R:1",128,0,0,-8
	.stabn 192,0,0,.L_22DD-_RESIZELAYOUT@16
	.stabs "HCTL:74=*21",128,0,0,-12
	.stabn 192,0,0,.L_22E2-_RESIZELAYOUT@16
	.stabs "N:1",128,0,0,-16
	.stabn 192,0,0,.L_22E6-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22E9-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22EA-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22EE-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22EF-_RESIZELAYOUT@16
	.stabn 192,0,0,.L_22F2-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22F5-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22F6-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22F7-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22F8-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22F9-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22FA-_RESIZELAYOUT@16
	.stabn 224,0,0,.L_22A4-_RESIZELAYOUT@16
.L_232A:
	.stabs "",36,0,0,.L_232A-_RESIZELAYOUT@16
	.stabs "LAYOUTFREERESOURCES:F7",36,0,262,_LAYOUTFREERESOURCES@4
	.stabs "TFORM:v42",160,0,0,8
.balign 16

.globl _LAYOUTFREERESOURCES@4
_LAYOUTFREERESOURCES@4:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,262,_LAYOUTFREERESOURCES@4-_LAYOUTFREERESOURCES@4
.L_232B:
.L_2340:
.L_232D:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,263,.L_2340-_LAYOUTFREERESOURCES@4
.L_2341:
.L_232F:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax+12]
	dec ebx
	mov dword ptr [ebp-12], ebx
	jmp .L_2331
.L_2334:
.L_2335:
.stabn 68,0,264,.L_2341-_LAYOUTFREERESOURCES@4
.L_2342:
.L_2336:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-8]
	imul eax, 20
	mov ecx, dword ptr [ebx+20]
	add ecx, eax
	mov dword ptr [ebp-16], ecx
.stabn 68,0,265,.L_2342-_LAYOUTFREERESOURCES@4
.L_2343:
	mov ecx, dword ptr [ebp-16]
	cmp dword ptr [ecx], 0
	je .L_2339
.L_233A:
	mov ecx, dword ptr [ebp-16]
	push dword ptr [ecx]
	call _DeleteObject@4
	mov ecx, dword ptr [ebp-16]
	mov dword ptr [ecx], 0
.L_2339:
.L_233B:
.stabn 68,0,266,.L_2343-_LAYOUTFREERESOURCES@4
.L_2344:
.L_233C:
.L_233D:
.L_2332:
	inc dword ptr [ebp-8]
.L_2331:
	mov ecx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ecx
	jle .L_2334
.L_2333:
.L_233E:
.stabn 68,0,268,.L_2344-_LAYOUTFREERESOURCES@4
.L_2345:
.L_233F:
.L_232C:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,270,.L_232C-_LAYOUTFREERESOURCES@4
	.stabn 192,0,0,.L_232B-_LAYOUTFREERESOURCES@4
	.stabn 192,0,0,.L_232D-_LAYOUTFREERESOURCES@4
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_232F-_LAYOUTFREERESOURCES@4
	.stabn 192,0,0,.L_2335-_LAYOUTFREERESOURCES@4
	.stabn 192,0,0,.L_2336-_LAYOUTFREERESOURCES@4
	.stabn 192,0,0,.L_233A-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_233B-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_233C-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_233D-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_233E-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_233F-_LAYOUTFREERESOURCES@4
	.stabn 224,0,0,.L_232C-_LAYOUTFREERESOURCES@4
.L_2346:
	.stabs "",36,0,0,.L_2346-_LAYOUTFREERESOURCES@4
	.stabs "_SETFONT:F7",36,0,271,__SETFONT@20
	.stabs "HFNT:v53",160,0,0,8
	.stabs "SNAME:v13",160,0,0,12
	.stabs "ISIZE:p3",160,0,0,16
	.stabs "BBOLD:p2",160,0,0,20
	.stabs "BITALIC:p2",160,0,0,24
.balign 16

.globl __SETFONT@20
__SETFONT@20:
	push ebp
	mov ebp, esp
	sub esp, 4
	push ebx
	.stabn 68,0,271,__SETFONT@20-__SETFONT@20
.L_2347:
.L_234C:
.L_2349:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,272,.L_234C-__SETFONT@20
.L_234D:
	push 0
	push -1
	push dword ptr [ebp+12]
	push -1
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrAssign@20
	mov ebx, dword ptr [ebp-4]
	mov al, byte ptr [ebp+16]
	mov byte ptr [ebx+18], al
	mov eax, dword ptr [ebp-4]
	movsx ebx, byte ptr [eax+19]
	and ebx, 4294967294
	movsx eax, byte ptr [ebp+20]
	and eax, 1
	or ebx, eax
	mov eax, dword ptr [ebp-4]
	mov byte ptr [eax+19], bl
	mov ebx, dword ptr [ebp-4]
	movsx eax, byte ptr [ebx+19]
	and eax, 4294967293
	movsx ebx, byte ptr [ebp+24]
	and ebx, 1
	shl ebx, 1
	or eax, ebx
	mov ebx, dword ptr [ebp-4]
	mov byte ptr [ebx+19], al
.stabn 68,0,273,.L_234D-__SETFONT@20
.L_234E:
.L_234B:
.L_2348:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,275,.L_2348-__SETFONT@20
	.stabn 192,0,0,.L_2347-__SETFONT@20
	.stabn 192,0,0,.L_2349-__SETFONT@20
	.stabn 224,0,0,.L_234B-__SETFONT@20
	.stabn 224,0,0,.L_2348-__SETFONT@20
.L_234F:
	.stabs "",36,0,0,.L_234F-__SETFONT@20
	.stabs "_SETCONTROLSFONT:F7",36,0,283,__SETCONTROLSFONT
	.stabs "PCTL:p75=*44",160,0,0,8
	.stabs "BFONT:p2",160,0,0,12
.balign 16

.globl __SETCONTROLSFONT
__SETCONTROLSFONT:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,283,__SETCONTROLSFONT-__SETCONTROLSFONT
.L_2350:
.L_235B:
	lea eax, [ebp+12]
	add eax, 4
	mov dword ptr [ebp-4], eax
.stabn 68,0,284,.L_235B-__SETCONTROLSFONT
.L_235C:
.L_2352:
.L_2355:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,286,.L_235C-__SETCONTROLSFONT
.L_235D:
	cmp dword ptr [ebp-8], 0
	jge .L_2357
.L_2358:
	jmp .L_2353
.L_2357:
.L_2359:
.stabn 68,0,287,.L_235D-__SETCONTROLSFONT
.L_235E:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 48
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	mov bl, byte ptr [ebp+12]
	mov byte ptr [eax+46], bl
.stabn 68,0,288,.L_235E-__SETCONTROLSFONT
.L_235F:
	add dword ptr [ebp-4], 4
.stabn 68,0,289,.L_235F-__SETCONTROLSFONT
.L_2360:
.L_235A:
.L_2354:
	jmp .L_2352
.L_2353:
.stabn 68,0,290,.L_2360-__SETCONTROLSFONT
.L_2361:
.L_2351:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,291,.L_2351-__SETCONTROLSFONT
	.stabs "P:76=*7",128,0,0,-4
	.stabn 192,0,0,.L_2350-__SETCONTROLSFONT
	.stabs "IID:1",128,0,0,-8
	.stabn 192,0,0,.L_2355-__SETCONTROLSFONT
	.stabn 192,0,0,.L_2358-__SETCONTROLSFONT
	.stabn 224,0,0,.L_2359-__SETCONTROLSFONT
	.stabn 224,0,0,.L_235A-__SETCONTROLSFONT
	.stabn 224,0,0,.L_2351-__SETCONTROLSFONT
.L_2362:
	.stabs "",36,0,0,.L_2362-__SETCONTROLSFONT
	.stabs "_SETCONTROLSEVENTCALLBACK:F7",36,0,294,__SETCONTROLSEVENTCALLBACK
	.stabs "PCTL:p77=*44",160,0,0,8
	.stabs "PCB:p78=*79=f1",160,0,0,12
.balign 16

.globl __SETCONTROLSEVENTCALLBACK
__SETCONTROLSEVENTCALLBACK:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,294,__SETCONTROLSEVENTCALLBACK-__SETCONTROLSEVENTCALLBACK
.L_2363:
.L_236E:
	lea eax, [ebp+12]
	add eax, 4
	mov dword ptr [ebp-4], eax
.stabn 68,0,295,.L_236E-__SETCONTROLSEVENTCALLBACK
.L_236F:
.L_2365:
.L_2368:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,297,.L_236F-__SETCONTROLSEVENTCALLBACK
.L_2370:
	cmp dword ptr [ebp-8], 0
	jge .L_236A
.L_236B:
	jmp .L_2366
.L_236A:
.L_236C:
.stabn 68,0,298,.L_2370-__SETCONTROLSEVENTCALLBACK
.L_2371:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 48
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [eax+8], ebx
.stabn 68,0,299,.L_2371-__SETCONTROLSEVENTCALLBACK
.L_2372:
	add dword ptr [ebp-4], 4
.stabn 68,0,300,.L_2372-__SETCONTROLSEVENTCALLBACK
.L_2373:
.L_236D:
.L_2367:
	jmp .L_2365
.L_2366:
.stabn 68,0,301,.L_2373-__SETCONTROLSEVENTCALLBACK
.L_2374:
.L_2364:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,302,.L_2364-__SETCONTROLSEVENTCALLBACK
	.stabs "P:80=*7",128,0,0,-4
	.stabn 192,0,0,.L_2363-__SETCONTROLSEVENTCALLBACK
	.stabs "IID:1",128,0,0,-8
	.stabn 192,0,0,.L_2368-__SETCONTROLSEVENTCALLBACK
	.stabn 192,0,0,.L_236B-__SETCONTROLSEVENTCALLBACK
	.stabn 224,0,0,.L_236C-__SETCONTROLSEVENTCALLBACK
	.stabn 224,0,0,.L_236D-__SETCONTROLSEVENTCALLBACK
	.stabn 224,0,0,.L_2364-__SETCONTROLSEVENTCALLBACK
.L_2375:
	.stabs "",36,0,0,.L_2375-__SETCONTROLSEVENTCALLBACK
	.stabs "_SETCONTROLSAFTERSIZE:F7",36,0,306,__SETCONTROLSAFTERSIZE
	.stabs "PCTL:p81=*44",160,0,0,8
	.stabs "PCB:p82=*83=f7",160,0,0,12
.balign 16

.globl __SETCONTROLSAFTERSIZE
__SETCONTROLSAFTERSIZE:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,306,__SETCONTROLSAFTERSIZE-__SETCONTROLSAFTERSIZE
.L_2376:
.L_2381:
	lea eax, [ebp+12]
	add eax, 4
	mov dword ptr [ebp-4], eax
.stabn 68,0,307,.L_2381-__SETCONTROLSAFTERSIZE
.L_2382:
.L_2378:
.L_237B:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,309,.L_2382-__SETCONTROLSAFTERSIZE
.L_2383:
	cmp dword ptr [ebp-8], 0
	jge .L_237D
.L_237E:
	jmp .L_2379
.L_237D:
.L_237F:
.stabn 68,0,310,.L_2383-__SETCONTROLSAFTERSIZE
.L_2384:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 48
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [eax+4], ebx
.stabn 68,0,311,.L_2384-__SETCONTROLSAFTERSIZE
.L_2385:
	add dword ptr [ebp-4], 4
.stabn 68,0,312,.L_2385-__SETCONTROLSAFTERSIZE
.L_2386:
.L_2380:
.L_237A:
	jmp .L_2378
.L_2379:
.stabn 68,0,313,.L_2386-__SETCONTROLSAFTERSIZE
.L_2387:
.L_2377:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,314,.L_2377-__SETCONTROLSAFTERSIZE
	.stabs "P:84=*7",128,0,0,-4
	.stabn 192,0,0,.L_2376-__SETCONTROLSAFTERSIZE
	.stabs "IID:1",128,0,0,-8
	.stabn 192,0,0,.L_237B-__SETCONTROLSAFTERSIZE
	.stabn 192,0,0,.L_237E-__SETCONTROLSAFTERSIZE
	.stabn 224,0,0,.L_237F-__SETCONTROLSAFTERSIZE
	.stabn 224,0,0,.L_2380-__SETCONTROLSAFTERSIZE
	.stabn 224,0,0,.L_2377-__SETCONTROLSAFTERSIZE
.L_2388:
	.stabs "",36,0,0,.L_2388-__SETCONTROLSAFTERSIZE
	.stabs "_SHOWHIDECONTROLRANGE:F7",36,0,317,__SHOWHIDECONTROLRANGE@16
	.stabs "PCTL:p85=*44",160,0,0,8
	.stabs "ISHOW:p1",160,0,0,12
	.stabs "IBEGIN:p1",160,0,0,16
	.stabs "IEND:p1",160,0,0,20
.balign 16

.globl __SHOWHIDECONTROLRANGE@16
__SHOWHIDECONTROLRANGE@16:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,317,__SHOWHIDECONTROLRANGE@16-__SHOWHIDECONTROLRANGE@16
.L_2389:
.L_239A:
	mov eax, dword ptr [ebp+20]
	sub eax, dword ptr [ebp+16]
	inc eax
	push eax
	call _BeginDeferWindowPos@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,319,.L_239A-__SHOWHIDECONTROLRANGE@16
.L_239B:
.L_238B:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-12], eax
	jmp .L_238D
.L_2390:
.L_2391:
.stabn 68,0,320,.L_239B-__SHOWHIDECONTROLRANGE@16
.L_239C:
	cmp dword ptr [ebp+12], 0
	je .L_2393
.L_2394:
.stabn 68,0,321,.L_239C-__SHOWHIDECONTROLRANGE@16
.L_239D:
	push 87
	push 0
	push 0
	push 0
	push 0
	push 0
	mov eax, dword ptr [ebp-8]
	imul eax, 48
	mov ebx, dword ptr [ebp+8]
	add ebx, eax
	push dword ptr [ebx]
	push dword ptr [ebp-4]
	call _DeferWindowPos@32
.stabn 68,0,322,.L_239D-__SHOWHIDECONTROLRANGE@16
.L_239E:
.L_2395:
	jmp .L_2392
.L_2393:
.L_2396:
.stabn 68,0,323,.L_239E-__SHOWHIDECONTROLRANGE@16
.L_239F:
	push 151
	push 0
	push 0
	push 0
	push 0
	push 0
	mov ebx, dword ptr [ebp-8]
	imul ebx, 48
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	push dword ptr [eax]
	push dword ptr [ebp-4]
	call _DeferWindowPos@32
.stabn 68,0,324,.L_239F-__SHOWHIDECONTROLRANGE@16
.L_23A0:
.L_2397:
.L_2392:
.L_2398:
.L_238E:
	inc dword ptr [ebp-8]
.L_238D:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_2390
.L_238F:
.L_2399:
.stabn 68,0,326,.L_23A0-__SHOWHIDECONTROLRANGE@16
.L_23A1:
	push dword ptr [ebp-4]
	call _EndDeferWindowPos@4
.stabn 68,0,327,.L_23A1-__SHOWHIDECONTROLRANGE@16
.L_23A2:
.L_238A:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,328,.L_238A-__SHOWHIDECONTROLRANGE@16
	.stabs "HDEFER:86=*7",128,0,0,-4
	.stabn 192,0,0,.L_2389-__SHOWHIDECONTROLRANGE@16
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_238B-__SHOWHIDECONTROLRANGE@16
	.stabn 192,0,0,.L_2391-__SHOWHIDECONTROLRANGE@16
	.stabn 192,0,0,.L_2394-__SHOWHIDECONTROLRANGE@16
	.stabn 224,0,0,.L_2395-__SHOWHIDECONTROLRANGE@16
	.stabn 192,0,0,.L_2396-__SHOWHIDECONTROLRANGE@16
	.stabn 224,0,0,.L_2397-__SHOWHIDECONTROLRANGE@16
	.stabn 224,0,0,.L_2398-__SHOWHIDECONTROLRANGE@16
	.stabn 224,0,0,.L_2399-__SHOWHIDECONTROLRANGE@16
	.stabn 224,0,0,.L_238A-__SHOWHIDECONTROLRANGE@16
.L_23A3:
	.stabs "",36,0,0,.L_23A3-__SHOWHIDECONTROLRANGE@16
	.stabs "_INVALIDATECONTROLAREA:F7",36,0,332,__INVALIDATECONTROLAREA@8
	.stabs "PCTL0:p87=*7",160,0,0,8
	.stabs "ICTL:p1",160,0,0,12
.balign 16

.globl __INVALIDATECONTROLAREA@8
__INVALIDATECONTROLAREA@8:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,332,__INVALIDATECONTROLAREA@8-__INVALIDATECONTROLAREA@8
.L_23A4:
.L_23AD:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,333,.L_23AD-__INVALIDATECONTROLAREA@8
.L_23AE:
	mov eax, dword ptr [ebp+12]
	imul eax, 48
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	cmp dword ptr [ebx], 0
	je .L_23A6
	mov ebx, dword ptr [ebp-4]
	cmp dword ptr [ebx], 0
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-8], eax
	jmp .L_23AC
.L_23A6:
	mov dword ptr [ebp-8], 0
.L_23AC:
	cmp dword ptr [ebp-8], 0
	je .L_23A9
.L_23AA:
.stabn 68,0,334,.L_23AE-__INVALIDATECONTROLAREA@8
.L_23B0:
	lea eax, [ebp-24]
	push eax
	mov eax, dword ptr [ebp+12]
	imul eax, 48
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	push dword ptr [ebx]
	call _GetClientRect@8
.stabn 68,0,335,.L_23B0-__INVALIDATECONTROLAREA@8
.L_23B1:
	push 2
	lea ebx, [ebp-24]
	push ebx
	mov ebx, dword ptr [ebp-4]
	push dword ptr [ebx]
	mov ebx, dword ptr [ebp+12]
	imul ebx, 48
	mov eax, dword ptr [ebp-4]
	add eax, ebx
	push dword ptr [eax]
	call _MapWindowPoints@16
.stabn 68,0,336,.L_23B1-__INVALIDATECONTROLAREA@8
.L_23B2:
	push -1
	lea eax, [ebp-24]
	push eax
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax]
	call _InvalidateRect@12
.stabn 68,0,337,.L_23B2-__INVALIDATECONTROLAREA@8
.L_23B3:
.L_23AB:
.L_23A9:
.L_23A8:
.L_23A5:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,339,.L_23A5-__INVALIDATECONTROLAREA@8
	.stabs "PCTL:88=*44",128,0,0,-4
	.stabn 192,0,0,.L_23A4-__INVALIDATECONTROLAREA@8
	.stabs "TRC:23",128,0,0,-24
	.stabn 192,0,0,.L_23AA-__INVALIDATECONTROLAREA@8
	.stabn 224,0,0,.L_23AB-__INVALIDATECONTROLAREA@8
	.stabn 224,0,0,.L_23A5-__INVALIDATECONTROLAREA@8
.L_23B4:
	.stabs "",36,0,0,.L_23B4-__INVALIDATECONTROLAREA@8
	.stabs "DEFFORMPROC:F1",36,0,342,_DEFFORMPROC@20
	.stabs "TFORM:v42",160,0,0,8
	.stabs "HWND:p89=*21",160,0,0,12
	.stabs "MESSAGE:p8",160,0,0,16
	.stabs "WPARAM:p8",160,0,0,20
	.stabs "LPARAM:p1",160,0,0,24
.balign 16

.globl _DEFFORMPROC@20
_DEFFORMPROC@20:
	push ebp
	mov ebp, esp
	sub esp, 48
	push ebx
	.stabn 68,0,342,_DEFFORMPROC@20-_DEFFORMPROC@20
	mov dword ptr [ebp-4], 0
.L_23B5:
.L_23FB:
.L_23B7:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-8], eax
	jmp .L_23B9
.stabn 68,0,343,.L_23FB-_DEFFORMPROC@20
.L_23FC:
.L_23BB:
.L_23BC:
	push dword ptr [ebp+24]
	call _GetDlgCtrlID@4
	mov dword ptr [ebp-12], eax
.stabn 68,0,345,.L_23FC-_DEFFORMPROC@20
.L_23FD:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+8]
	cmp dword ptr [ebp-12], ebx
	jae .L_23BE
.L_23BF:
.stabn 68,0,346,.L_23FD-_DEFFORMPROC@20
.L_23FE:
.L_23C0:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebp-12]
	imul eax, 48
	mov ecx, dword ptr [ebx+16]
	add ecx, eax
	mov dword ptr [ebp-16], ecx
.stabn 68,0,347,.L_23FE-_DEFFORMPROC@20
.L_23FF:
	mov ecx, dword ptr [ebp-16]
	cmp dword ptr [ecx+8], 0
	je .L_23C3
.L_23C4:
.stabn 68,0,348,.L_23FF-_DEFFORMPROC@20
.L_2400:
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ebp-48], ecx
	mov ecx, dword ptr [ebp+16]
	mov dword ptr [ebp-44], ecx
	mov ecx, dword ptr [ebp+20]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp+24]
	mov dword ptr [ebp-36], ecx
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	lea ecx, [ebp-48]
	push ecx
	mov ecx, dword ptr [ebp+8]
	mov eax, dword ptr [ebp-12]
	imul eax, 48
	mov ebx, dword ptr [ecx+16]
	add ebx, eax
	push ebx
	push dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-16]
	call dword ptr [ebx+8]
	mov dword ptr [ebp-20], eax
.stabn 68,0,349,.L_2400-_DEFFORMPROC@20
.L_2401:
	cmp dword ptr [ebp-20], 0
	je .L_23C8
.L_23C9:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-4], eax
	jmp .L_23B6
.L_23C8:
.L_23CA:
.stabn 68,0,350,.L_2401-_DEFFORMPROC@20
.L_2402:
.L_23CB:
.L_23C3:
.L_23C2:
.L_23CC:
.L_23CD:
.L_23BE:
.L_23BD:
.L_23CE:
	jmp .L_23B8
.L_23CF:
.L_23D0:
.stabn 68,0,355,.L_2402-_DEFFORMPROC@20
.L_2403:
	mov eax, dword ptr [ebp+24]
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-12], ebx
.stabn 68,0,356,.L_2403-_DEFFORMPROC@20
.L_2404:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+8]
	cmp dword ptr [ebp-12], eax
	jae .L_23D2
.L_23D3:
.stabn 68,0,357,.L_2404-_DEFFORMPROC@20
.L_2405:
.L_23D4:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-12]
	imul ebx, 48
	mov ecx, dword ptr [eax+16]
	add ecx, ebx
	mov dword ptr [ebp-16], ecx
.stabn 68,0,358,.L_2405-_DEFFORMPROC@20
.L_2406:
	mov ecx, dword ptr [ebp-16]
	cmp dword ptr [ecx+8], 0
	je .L_23D7
.L_23D8:
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ebp-44], ecx
	mov ecx, dword ptr [ebp+16]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp+20]
	mov dword ptr [ebp-36], ecx
	mov ecx, dword ptr [ebp+24]
	mov dword ptr [ebp-32], ecx
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	lea ecx, [ebp-44]
	push ecx
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-12]
	imul ebx, 48
	mov eax, dword ptr [ecx+16]
	add eax, ebx
	push eax
	push dword ptr [ebp+8]
	mov eax, dword ptr [ebp-16]
	call dword ptr [eax+8]
	mov dword ptr [ebp-4], eax
	jmp .L_23B6
.L_23D7:
.L_23DB:
.stabn 68,0,359,.L_2406-_DEFFORMPROC@20
.L_2407:
.L_23DC:
.L_23DD:
.L_23D2:
.L_23D1:
.L_23DE:
	jmp .L_23B8
.L_23DF:
.L_23E0:
.stabn 68,0,362,.L_2407-_DEFFORMPROC@20
.L_2408:
	mov eax, dword ptr [ebp+20]
	and eax, 65535
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,363,.L_2408-_DEFFORMPROC@20
.L_2409:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+8]
	cmp dword ptr [ebp-12], eax
	jae .L_23E2
.L_23E3:
.stabn 68,0,364,.L_2409-_DEFFORMPROC@20
.L_240A:
.L_23E4:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-12]
	imul ebx, 48
	mov ecx, dword ptr [eax+16]
	add ecx, ebx
	mov dword ptr [ebp-16], ecx
.stabn 68,0,365,.L_240A-_DEFFORMPROC@20
.L_240B:
	mov ecx, dword ptr [ebp-16]
	cmp dword ptr [ecx+8], 0
	je .L_23E7
.L_23E8:
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ebp-44], ecx
	mov ecx, dword ptr [ebp+16]
	mov dword ptr [ebp-40], ecx
	mov ecx, dword ptr [ebp+20]
	mov dword ptr [ebp-36], ecx
	mov ecx, dword ptr [ebp+24]
	mov dword ptr [ebp-32], ecx
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	lea ecx, [ebp-44]
	push ecx
	mov ecx, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-12]
	imul ebx, 48
	mov eax, dword ptr [ecx+16]
	add eax, ebx
	push eax
	push dword ptr [ebp+8]
	mov eax, dword ptr [ebp-16]
	call dword ptr [eax+8]
	mov dword ptr [ebp-4], eax
	jmp .L_23B6
.L_23E7:
.L_23EB:
.stabn 68,0,366,.L_240B-_DEFFORMPROC@20
.L_240C:
.L_23EC:
.L_23ED:
.L_23E2:
.L_23E1:
.L_23EE:
	jmp .L_23B8
.L_23EF:
.L_23F0:
.stabn 68,0,369,.L_240C-_DEFFORMPROC@20
.L_240D:
	cmp dword ptr [ebp+24], 0
	jne .L_23F2
.L_23F3:
.stabn 68,0,370,.L_240D-_DEFFORMPROC@20
.L_240E:
	lea eax, [ebp-24]
	push eax
	push dword ptr [ebp+12]
	call _GetClientRect@8
.stabn 68,0,371,.L_240E-_DEFFORMPROC@20
.L_240F:
	mov eax, dword ptr [ebp-16]
	and eax, 65535
	movzx eax, ax
	mov ebx, dword ptr [ebp-12]
	and ebx, 65535
	movzx ebx, bx
	shl ebx, 16
	or eax, ebx
	mov ecx, eax
	mov dword ptr [ebp+24], ecx
.stabn 68,0,372,.L_240F-_DEFFORMPROC@20
.L_2410:
.L_23F4:
.L_23F2:
.L_23F1:
	mov ecx, dword ptr [ebp+24]
	shr ecx, 16
	mov ebx, ecx
	push ebx
	mov ebx, dword ptr [ebp+24]
	and ebx, 65535
	mov ecx, ebx
	push ecx
	push dword ptr [ebp+8]
	push dword ptr [ebp+12]
	call _RESIZELAYOUT@16
.stabn 68,0,374,.L_2410-_DEFFORMPROC@20
.L_2411:
.L_23F5:
	jmp .L_23B8
.L_23F6:
.L_23F7:
.stabn 68,0,376,.L_2411-_DEFFORMPROC@20
.L_2412:
.L_23F8:
	jmp .L_23B8
.L_23B9:
	mov ecx, dword ptr [ebp-8]
	add ecx, 4294967291
	cmp ecx, 307
	ja .L_23B8
	mov ecx, dword ptr [ebp-8]
	jmp dword ptr [_.L_23F9+ecx*4-20]
_.L_23F9:
	.int .L_23EF
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23F6
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23CF
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23F6
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23DF
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23B8
	.int .L_23BB
	.int .L_23BB
	.int .L_23BB
	.int .L_23BB
	.int .L_23BB
	.int .L_23BB
	.int .L_23BB
.L_23B8:
.L_23FA:
.stabn 68,0,378,.L_2412-_DEFFORMPROC@20
.L_2413:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,379,.L_2413-_DEFFORMPROC@20
.L_2414:
.L_23B6:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,380,.L_23B6-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23B5-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23B7-_DEFFORMPROC@20
	.stabs "IID:1",128,0,0,-12
	.stabn 192,0,0,.L_23BC-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23BF-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23C0-_DEFFORMPROC@20
	.stabs "DWRESU:1",128,0,0,-20
	.stabn 192,0,0,.L_23C4-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23C9-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23CA-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23CB-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23CC-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23CD-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23CE-_DEFFORMPROC@20
	.stabs "IID:8",128,0,0,-12
	.stabn 192,0,0,.L_23D0-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23D3-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23D4-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23D8-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23DB-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23DC-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23DD-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23DE-_DEFFORMPROC@20
	.stabs "IID:1",128,0,0,-12
	.stabn 192,0,0,.L_23E0-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23E3-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23E4-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23E8-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23EB-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23EC-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23ED-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23EE-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23F0-_DEFFORMPROC@20
	.stabs "TRC:23",128,0,0,-24
	.stabn 192,0,0,.L_23F3-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23F4-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23F5-_DEFFORMPROC@20
	.stabn 192,0,0,.L_23F7-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23F8-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23FA-_DEFFORMPROC@20
	.stabn 224,0,0,.L_23B6-_DEFFORMPROC@20
.L_2415:
	.stabs "",36,0,0,.L_2415-_DEFFORMPROC@20
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\PARSERFUNCTIONS.BAS",132,0,0,.L_24B6
.L_24B6:
	.stabs "READHEX:F1",36,0,5,_READHEX@8
	.stabs "PFILE:p90=*3",160,0,0,8
	.stabs "IINT:v1",160,0,0,12
.balign 16

.globl _READHEX@8
_READHEX@8:
	push ebp
	mov ebp, esp
	sub esp, 20
	push ebx
	.stabn 68,0,5,_READHEX@8-_READHEX@8
	mov dword ptr [ebp-4], 0
.L_247D:
.L_24B7:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-16], 0
.stabn 68,0,6,.L_24B7-_READHEX@8
.L_24B8:
.L_247F:
.L_2482:
.L_2483:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-20], bl
.stabn 68,0,8,.L_24B8-_READHEX@8
.L_24B9:
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 48
	jb .L_2486
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 57
	ja .L_2486
.L_2489:
.L_248A:
.stabn 68,0,9,.L_24B9-_READHEX@8
.L_24BA:
	mov ebx, dword ptr [ebp-8]
	sal ebx, 4
	mov eax, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, dword ptr [ebp-12]
	movzx ecx, byte ptr [ebx]
	add eax, ecx
	add eax, 4294967248
	mov ecx, eax
	mov dword ptr [ebp-8], ecx
.stabn 68,0,10,.L_24BA-_READHEX@8
.L_24BB:
	mov dword ptr [ebp-16], 1
.stabn 68,0,11,.L_24BB-_READHEX@8
.L_24BC:
.L_248B:
	jmp .L_2484
.L_2486:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 97
	jb .L_248C
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 102
	ja .L_248C
.L_248F:
.L_2490:
.stabn 68,0,12,.L_24BC-_READHEX@8
.L_24BD:
	mov ecx, dword ptr [ebp-8]
	sal ecx, 4
	mov eax, ecx
	mov ecx, dword ptr [ebp+8]
	add ecx, dword ptr [ebp-12]
	movzx ebx, byte ptr [ecx]
	add eax, ebx
	add eax, 4294967209
	mov ebx, eax
	mov dword ptr [ebp-8], ebx
.stabn 68,0,13,.L_24BD-_READHEX@8
.L_24BE:
	mov dword ptr [ebp-16], 1
.stabn 68,0,14,.L_24BE-_READHEX@8
.L_24BF:
.L_2491:
	jmp .L_2484
.L_248C:
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 65
	jb .L_2492
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 70
	ja .L_2492
.L_2495:
.L_2496:
.stabn 68,0,15,.L_24BF-_READHEX@8
.L_24C0:
	mov ebx, dword ptr [ebp-8]
	sal ebx, 4
	mov eax, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, dword ptr [ebp-12]
	movzx ecx, byte ptr [ebx]
	add eax, ecx
	add eax, 4294967241
	mov ecx, eax
	mov dword ptr [ebp-8], ecx
.stabn 68,0,16,.L_24C0-_READHEX@8
.L_24C1:
	mov dword ptr [ebp-16], 1
.stabn 68,0,17,.L_24C1-_READHEX@8
.L_24C2:
.L_2497:
	jmp .L_2484
.L_2492:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 32
	je .L_249A
.L_249B:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 9
	jne .L_2498
.L_249A:
.L_249C:
.stabn 68,0,18,.L_24C2-_READHEX@8
.L_24C3:
	cmp dword ptr [ebp-16], 0
	je .L_249E
.L_249F:
	jmp .L_2480
.L_249E:
.L_24A0:
.stabn 68,0,19,.L_24C3-_READHEX@8
.L_24C4:
.L_24A1:
	jmp .L_2484
.L_2498:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 13
	jne .L_24A2
.L_24A4:
.L_24A5:
.stabn 68,0,20,.L_24C4-_READHEX@8
.L_24C5:
.L_24A6:
	jmp .L_2484
.L_24A2:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 10
	je .L_24A9
.L_24AA:
	movzx ecx, byte ptr [ebp-20]
	test ecx, ecx
	jne .L_24A7
.L_24A9:
.L_24AB:
.stabn 68,0,22,.L_24C5-_READHEX@8
.L_24C6:
	mov dword ptr [ebp-16], 1
	jmp .L_2480
.stabn 68,0,23,.L_24C6-_READHEX@8
.L_24C7:
.L_24AC:
	jmp .L_2484
.L_24A7:
.L_24AE:
.stabn 68,0,24,.L_24C7-_READHEX@8
.L_24C8:
	jmp .L_2480
.stabn 68,0,25,.L_24C8-_READHEX@8
.L_24C9:
.L_24AF:
.L_24AD:
.L_2484:
.L_24B0:
	inc dword ptr [ebp-12]
.stabn 68,0,27,.L_24C9-_READHEX@8
.L_24CA:
.L_24B1:
.L_2481:
	jmp .L_247F
.L_2480:
.stabn 68,0,28,.L_24CA-_READHEX@8
.L_24CB:
	cmp dword ptr [ebp-16], 0
	jne .L_24B3
.L_24B4:
	mov ecx, dword ptr [ebp+8]
	add ecx, dword ptr [ebp-12]
	movzx eax, byte ptr [ecx]
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ecx], eax
	mov dword ptr [ebp-4], -1
	jmp .L_247E
.L_24B3:
.L_24B5:
.stabn 68,0,30,.L_24CB-_READHEX@8
.L_24CC:
	mov eax, dword ptr [ebp+12]
	mov ecx, dword ptr [ebp-8]
	mov dword ptr [eax], ecx
.stabn 68,0,31,.L_24CC-_READHEX@8
.L_24CD:
	mov ecx, dword ptr [ebp-12]
	mov dword ptr [ebp-4], ecx
.stabn 68,0,32,.L_24CD-_READHEX@8
.L_24CE:
.L_247E:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,33,.L_247E-_READHEX@8
	.stabs "IRESU:1",128,0,0,-8
	.stabs "IREAD:1",128,0,0,-12
	.stabs "IHASDIGITS:1",128,0,0,-16
	.stabn 192,0,0,.L_247D-_READHEX@8
	.stabn 192,0,0,.L_2482-_READHEX@8
	.stabn 192,0,0,.L_2483-_READHEX@8
	.stabn 192,0,0,.L_248A-_READHEX@8
	.stabn 224,0,0,.L_248B-_READHEX@8
	.stabn 192,0,0,.L_2490-_READHEX@8
	.stabn 224,0,0,.L_2491-_READHEX@8
	.stabn 192,0,0,.L_2496-_READHEX@8
	.stabn 224,0,0,.L_2497-_READHEX@8
	.stabn 192,0,0,.L_249C-_READHEX@8
	.stabn 192,0,0,.L_249F-_READHEX@8
	.stabn 224,0,0,.L_24A0-_READHEX@8
	.stabn 224,0,0,.L_24A1-_READHEX@8
	.stabn 192,0,0,.L_24A5-_READHEX@8
	.stabn 224,0,0,.L_24A6-_READHEX@8
	.stabn 192,0,0,.L_24AB-_READHEX@8
	.stabn 224,0,0,.L_24AC-_READHEX@8
	.stabn 192,0,0,.L_24AE-_READHEX@8
	.stabn 224,0,0,.L_24AF-_READHEX@8
	.stabn 224,0,0,.L_24B0-_READHEX@8
	.stabn 224,0,0,.L_24B1-_READHEX@8
	.stabn 192,0,0,.L_24B4-_READHEX@8
	.stabn 224,0,0,.L_24B5-_READHEX@8
	.stabn 224,0,0,.L_247E-_READHEX@8
.L_24CF:
	.stabs "",36,0,0,.L_24CF-_READHEX@8
	.stabs "READINT:F1",36,0,34,_READINT@8
	.stabs "PFILE:p91=*3",160,0,0,8
	.stabs "IINT:v1",160,0,0,12
.balign 16

.globl _READINT@8
_READINT@8:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,34,_READINT@8-_READINT@8
	mov dword ptr [ebp-4], 0
.L_24D0:
.L_251E:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-20], 1
.stabn 68,0,35,.L_251E-_READINT@8
.L_251F:
.L_24D2:
.L_24D5:
.L_24D6:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-24], bl
.stabn 68,0,37,.L_251F-_READINT@8
.L_2520:
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 48
	jb .L_24D9
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 57
	ja .L_24D9
.L_24DA:
.L_24DB:
.stabn 68,0,38,.L_2520-_READINT@8
.L_2521:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 10
	mov eax, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, dword ptr [ebp-12]
	movzx ecx, byte ptr [ebx]
	add eax, ecx
	add eax, 4294967248
	mov ecx, eax
	mov dword ptr [ebp-8], ecx
.stabn 68,0,39,.L_2521-_READINT@8
.L_2522:
	mov dword ptr [ebp-16], 1
.stabn 68,0,40,.L_2522-_READINT@8
.L_2523:
.L_24DC:
	jmp .L_24D7
.L_24D9:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 32
	je .L_24DE
.L_24DF:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 9
	jne .L_24DD
.L_24DE:
.L_24E0:
.stabn 68,0,41,.L_2523-_READINT@8
.L_2524:
	cmp dword ptr [ebp-16], 0
	je .L_24E2
.L_24E3:
	jmp .L_24D3
.L_24E2:
.L_24E4:
.stabn 68,0,42,.L_2524-_READINT@8
.L_2525:
.L_24E5:
	jmp .L_24D7
.L_24DD:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 13
	jne .L_24E6
.L_24E7:
.L_24E8:
.stabn 68,0,43,.L_2525-_READINT@8
.L_2526:
.L_24E9:
	jmp .L_24D7
.L_24E6:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 10
	je .L_24EB
.L_24EC:
	movzx ecx, byte ptr [ebp-24]
	test ecx, ecx
	jne .L_24EA
.L_24EB:
.L_24ED:
.stabn 68,0,45,.L_2526-_READINT@8
.L_2527:
	mov dword ptr [ebp-16], 1
	jmp .L_24D3
.stabn 68,0,46,.L_2527-_READINT@8
.L_2528:
.L_24EE:
	jmp .L_24D7
.L_24EA:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 45
	jne .L_24EF
.L_24F1:
.L_24F2:
.stabn 68,0,47,.L_2528-_READINT@8
.L_2529:
	cmp dword ptr [ebp-20], 1
	jne .L_24F3
	mov ecx, dword ptr [ebp-16]
	test ecx, ecx
	sete cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-28], ecx
	jmp .L_251A
.L_24F3:
	mov dword ptr [ebp-28], 0
.L_251A:
	cmp dword ptr [ebp-28], 0
	je .L_24F6
.L_24F7:
	mov dword ptr [ebp-20], -1
.L_24F8:
	jmp .L_24F5
.L_24F6:
.L_24F9:
	jmp .L_24D3
.L_24F5:
.L_24FA:
.stabn 68,0,48,.L_2529-_READINT@8
.L_252B:
.L_24FB:
	jmp .L_24D7
.L_24EF:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 120
	je .L_24FF
.L_2500:
	movzx ecx, byte ptr [ebp-24]
	cmp ecx, 88
	jne .L_24FC
.L_24FF:
.L_2501:
.stabn 68,0,49,.L_252B-_READINT@8
.L_252C:
	cmp dword ptr [ebp-16], 0
	je .L_2502
	mov ecx, dword ptr [ebp-8]
	test ecx, ecx
	sete cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-28], ecx
	jmp .L_251B
.L_2502:
	mov dword ptr [ebp-28], 0
.L_251B:
	cmp dword ptr [ebp-28], 0
	je .L_2504
	mov ecx, dword ptr [ebp-20]
	cmp ecx, 1
	sete cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-32], ecx
	jmp .L_251C
.L_2504:
	mov dword ptr [ebp-32], 0
.L_251C:
	cmp dword ptr [ebp-32], 0
	je .L_2507
.L_2508:
.stabn 68,0,50,.L_252C-_READINT@8
.L_252F:
	push dword ptr [ebp+12]
	mov ecx, dword ptr [ebp+8]
	add ecx, dword ptr [ebp-12]
	inc ecx
	push ecx
	call _READHEX@8
	mov dword ptr [ebp-8], eax
.stabn 68,0,51,.L_252F-_READINT@8
.L_2530:
	cmp dword ptr [ebp-8], 7
	jne .L_2509
	mov eax, dword ptr [ebp+12]
	mov ecx, dword ptr [eax]
	sar ecx, 24
	cmp ecx, 2
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-36], ecx
	jmp .L_251D
.L_2509:
	mov dword ptr [ebp-36], -1
.L_251D:
	cmp dword ptr [ebp-36], 0
	je .L_250C
.L_250D:
	mov dword ptr [ebp-4], -1
	jmp .L_24D1
.L_250C:
.L_250E:
.stabn 68,0,52,.L_2530-_READINT@8
.L_2532:
	mov ecx, dword ptr [ebp-12]
	add ecx, dword ptr [ebp-8]
	inc ecx
	mov dword ptr [ebp-4], ecx
	jmp .L_24D1
.stabn 68,0,53,.L_2532-_READINT@8
.L_2533:
.L_250F:
.L_2507:
.L_2506:
	jmp .L_24D3
.stabn 68,0,55,.L_2533-_READINT@8
.L_2534:
.L_2510:
	jmp .L_24D7
.L_24FC:
.L_2512:
.stabn 68,0,56,.L_2534-_READINT@8
.L_2535:
	jmp .L_24D3
.stabn 68,0,57,.L_2535-_READINT@8
.L_2536:
.L_2513:
.L_2511:
.L_24D7:
.L_2514:
	inc dword ptr [ebp-12]
.stabn 68,0,59,.L_2536-_READINT@8
.L_2537:
.L_2515:
.L_24D4:
	jmp .L_24D2
.L_24D3:
.stabn 68,0,60,.L_2537-_READINT@8
.L_2538:
	cmp dword ptr [ebp-16], 0
	jne .L_2517
.L_2518:
	mov ecx, dword ptr [ebp+8]
	add ecx, dword ptr [ebp-12]
	movzx eax, byte ptr [ecx]
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ecx], eax
	mov dword ptr [ebp-4], -1
	jmp .L_24D1
.L_2517:
.L_2519:
.stabn 68,0,62,.L_2538-_READINT@8
.L_2539:
	mov eax, dword ptr [ebp-20]
	imul eax, dword ptr [ebp-8]
	mov ecx, dword ptr [ebp+12]
	mov dword ptr [ecx], eax
.stabn 68,0,63,.L_2539-_READINT@8
.L_253A:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-4], eax
.stabn 68,0,64,.L_253A-_READINT@8
.L_253B:
.L_24D1:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,65,.L_24D1-_READINT@8
	.stabs "IRESU:1",128,0,0,-8
	.stabs "IREAD:1",128,0,0,-12
	.stabs "IHASDIGITS:1",128,0,0,-16
	.stabs "ISIGN:1",128,0,0,-20
	.stabn 192,0,0,.L_24D0-_READINT@8
	.stabn 192,0,0,.L_24D5-_READINT@8
	.stabn 192,0,0,.L_24D6-_READINT@8
	.stabn 192,0,0,.L_24DB-_READINT@8
	.stabn 224,0,0,.L_24DC-_READINT@8
	.stabn 192,0,0,.L_24E0-_READINT@8
	.stabn 192,0,0,.L_24E3-_READINT@8
	.stabn 224,0,0,.L_24E4-_READINT@8
	.stabn 224,0,0,.L_24E5-_READINT@8
	.stabn 192,0,0,.L_24E8-_READINT@8
	.stabn 224,0,0,.L_24E9-_READINT@8
	.stabn 192,0,0,.L_24ED-_READINT@8
	.stabn 224,0,0,.L_24EE-_READINT@8
	.stabn 192,0,0,.L_24F2-_READINT@8
	.stabn 192,0,0,.L_24F7-_READINT@8
	.stabn 224,0,0,.L_24F8-_READINT@8
	.stabn 192,0,0,.L_24F9-_READINT@8
	.stabn 224,0,0,.L_24FA-_READINT@8
	.stabn 224,0,0,.L_24FB-_READINT@8
	.stabn 192,0,0,.L_2501-_READINT@8
	.stabn 192,0,0,.L_2508-_READINT@8
	.stabn 192,0,0,.L_250D-_READINT@8
	.stabn 224,0,0,.L_250E-_READINT@8
	.stabn 224,0,0,.L_250F-_READINT@8
	.stabn 224,0,0,.L_2510-_READINT@8
	.stabn 192,0,0,.L_2512-_READINT@8
	.stabn 224,0,0,.L_2513-_READINT@8
	.stabn 224,0,0,.L_2514-_READINT@8
	.stabn 224,0,0,.L_2515-_READINT@8
	.stabn 192,0,0,.L_2518-_READINT@8
	.stabn 224,0,0,.L_2519-_READINT@8
	.stabn 224,0,0,.L_24D1-_READINT@8
.L_253C:
	.stabs "",36,0,0,.L_253C-_READINT@8
	.stabs "READFLOAT:F1",36,0,66,_READFLOAT@8
	.stabs "PFILE:p92=*3",160,0,0,8
	.stabs "FFLOAT:v11",160,0,0,12
.balign 16

.globl _READFLOAT@8
_READFLOAT@8:
	push ebp
	mov ebp, esp
	sub esp, 60
	push ebx
	.stabn 68,0,66,_READFLOAT@8-_READFLOAT@8
	mov dword ptr [ebp-4], 0
.L_253D:
.L_25AE:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-16], 1
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-32], 1
.stabn 68,0,67,.L_25AE-_READFLOAT@8
.L_25AF:
.L_253F:
.L_2542:
.L_2543:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-20]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-36], bl
.stabn 68,0,69,.L_25AF-_READFLOAT@8
.L_25B0:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 48
	jb .L_2546
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 57
	ja .L_2546
.L_2547:
.L_2548:
.stabn 68,0,70,.L_25B0-_READFLOAT@8
.L_25B1:
	cmp dword ptr [ebp-28], 0
	jne .L_254A
.L_254B:
.stabn 68,0,71,.L_25B1-_READFLOAT@8
.L_25B2:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 10
	mov eax, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, dword ptr [ebp-20]
	movzx ecx, byte ptr [ebx]
	add eax, ecx
	add eax, 4294967248
	mov ecx, eax
	mov dword ptr [ebp-8], ecx
.stabn 68,0,72,.L_25B2-_READFLOAT@8
.L_25B3:
.L_254C:
	jmp .L_2549
.L_254A:
.L_254D:
.stabn 68,0,73,.L_25B3-_READFLOAT@8
.L_25B4:
	mov ecx, dword ptr [ebp-12]
	imul ecx, 10
	mov eax, ecx
	mov ecx, dword ptr [ebp+8]
	add ecx, dword ptr [ebp-20]
	movzx ebx, byte ptr [ecx]
	add eax, ebx
	add eax, 4294967248
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,74,.L_25B4-_READFLOAT@8
.L_25B5:
	mov eax, dword ptr [ebp-16]
	imul eax, 10
	mov dword ptr [ebp-16], eax
.stabn 68,0,75,.L_25B5-_READFLOAT@8
.L_25B6:
.L_254E:
.L_2549:
	mov dword ptr [ebp-24], 1
.stabn 68,0,77,.L_25B6-_READFLOAT@8
.L_25B7:
.L_254F:
	jmp .L_2544
.L_2546:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 32
	je .L_2551
.L_2552:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 9
	jne .L_2550
.L_2551:
.L_2553:
.stabn 68,0,78,.L_25B7-_READFLOAT@8
.L_25B8:
	cmp dword ptr [ebp-24], 0
	je .L_2555
.L_2556:
	jmp .L_2540
.L_2555:
.L_2557:
.stabn 68,0,79,.L_25B8-_READFLOAT@8
.L_25B9:
.L_2558:
	jmp .L_2544
.L_2550:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 13
	jne .L_2559
.L_255A:
.L_255B:
.stabn 68,0,80,.L_25B9-_READFLOAT@8
.L_25BA:
.L_255C:
	jmp .L_2544
.L_2559:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 10
	je .L_255E
.L_255F:
	movzx ebx, byte ptr [ebp-36]
	test ebx, ebx
	jne .L_255D
.L_255E:
.L_2560:
.stabn 68,0,82,.L_25BA-_READFLOAT@8
.L_25BB:
	mov dword ptr [ebp-24], 1
	jmp .L_2540
.stabn 68,0,83,.L_25BB-_READFLOAT@8
.L_25BC:
.L_2561:
	jmp .L_2544
.L_255D:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 46
	jne .L_2562
.L_2564:
.L_2565:
.stabn 68,0,84,.L_25BC-_READFLOAT@8
.L_25BD:
	cmp dword ptr [ebp-28], 0
	je .L_2567
.L_2568:
	jmp .L_2540
.L_2567:
.L_2569:
.stabn 68,0,85,.L_25BD-_READFLOAT@8
.L_25BE:
	mov dword ptr [ebp-28], 1
	mov dword ptr [ebp-24], 1
.stabn 68,0,86,.L_25BE-_READFLOAT@8
.L_25BF:
.L_256A:
	jmp .L_2544
.L_2562:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 45
	jne .L_256B
.L_256C:
.L_256D:
.stabn 68,0,87,.L_25BF-_READFLOAT@8
.L_25C0:
	cmp dword ptr [ebp-32], 1
	jne .L_256E
	mov ebx, dword ptr [ebp-24]
	test ebx, ebx
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-40], ebx
	jmp .L_25AB
.L_256E:
	mov dword ptr [ebp-40], 0
.L_25AB:
	cmp dword ptr [ebp-40], 0
	je .L_2571
.L_2572:
	mov dword ptr [ebp-32], -1
.L_2573:
	jmp .L_2570
.L_2571:
.L_2574:
	jmp .L_2540
.L_2570:
.L_2575:
.stabn 68,0,88,.L_25C0-_READFLOAT@8
.L_25C2:
.L_2576:
	jmp .L_2544
.L_256B:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 69
	je .L_257A
.L_257B:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 101
	jne .L_2577
.L_257A:
.L_257C:
.stabn 68,0,89,.L_25C2-_READFLOAT@8
.L_25C3:
	inc dword ptr [ebp-20]
.stabn 68,0,90,.L_25C3-_READFLOAT@8
.L_25C4:
	lea ebx, [ebp-40]
	push ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, dword ptr [ebp-20]
	push ebx
	call _READINT@8
	mov dword ptr [ebp-44], eax
.stabn 68,0,92,.L_25C4-_READFLOAT@8
.L_25C5:
	cmp dword ptr [ebp-44], 0
	jge .L_257E
.L_257F:
	mov dword ptr [ebp-4], -1
	jmp .L_253E
.L_257E:
.L_2580:
.stabn 68,0,93,.L_25C5-_READFLOAT@8
.L_25C6:
	mov eax, dword ptr [ebp-32]
	imul eax, dword ptr [ebp-8]
	push eax
	fild dword ptr [esp]
	add esp, 4
	fild dword ptr [ebp-12]
	fild dword ptr [ebp-16]
	fxch st(1)
	fdivrp
	fxch st(1)
	faddp
	fstp qword ptr [ebp-52]
.stabn 68,0,94,.L_25C6-_READFLOAT@8
.L_25C7:
	cmp dword ptr [ebp-40], 0
	jge .L_2582
.L_2583:
.stabn 68,0,95,.L_25C7-_READFLOAT@8
.L_25C8:
.L_2584:
	cmp dword ptr [ebp-40], -5
	jg .L_2585
.L_2586:
	fld qword ptr [ebp-52]
	fdiv qword ptr [_Lt_25AC]
	fstp qword ptr [ebp-52]
	add dword ptr [ebp-40], 5
.L_2587:
	jmp .L_2584
.L_2585:
.stabn 68,0,96,.L_25C8-_READFLOAT@8
.L_25C9:
.L_2588:
	mov dword ptr [ebp-56], 1
	mov eax, dword ptr [ebp-40]
	neg eax
	mov dword ptr [ebp-60], eax
	jmp .L_258A
.L_258D:
.L_258E:
	fld qword ptr [ebp-52]
	fdiv qword ptr [_Lt_25AD]
	fstp qword ptr [ebp-52]
.L_258F:
.L_258B:
	inc dword ptr [ebp-56]
.L_258A:
	mov eax, dword ptr [ebp-60]
	cmp dword ptr [ebp-56], eax
	jle .L_258D
.L_258C:
.L_2590:
.stabn 68,0,97,.L_25C9-_READFLOAT@8
.L_25CA:
.L_2591:
	jmp .L_2581
.L_2582:
.L_2592:
.stabn 68,0,98,.L_25CA-_READFLOAT@8
.L_25CB:
.L_2593:
	cmp dword ptr [ebp-40], 5
	jl .L_2594
.L_2595:
	fld qword ptr [_Lt_25AC]
	fmul qword ptr [ebp-52]
	fstp qword ptr [ebp-52]
	add dword ptr [ebp-40], -5
.L_2596:
	jmp .L_2593
.L_2594:
.stabn 68,0,99,.L_25CB-_READFLOAT@8
.L_25CC:
.L_2597:
	mov dword ptr [ebp-56], 1
	mov eax, dword ptr [ebp-40]
	mov dword ptr [ebp-60], eax
	jmp .L_2599
.L_259C:
.L_259D:
	fld qword ptr [_Lt_25AD]
	fmul qword ptr [ebp-52]
	fstp qword ptr [ebp-52]
.L_259E:
.L_259A:
	inc dword ptr [ebp-56]
.L_2599:
	mov eax, dword ptr [ebp-60]
	cmp dword ptr [ebp-56], eax
	jle .L_259C
.L_259B:
.L_259F:
.stabn 68,0,100,.L_25CC-_READFLOAT@8
.L_25CD:
.L_25A0:
.L_2581:
	mov eax, dword ptr [ebp+12]
	fld qword ptr [ebp-52]
	fstp dword ptr [eax]
.stabn 68,0,102,.L_25CD-_READFLOAT@8
.L_25CE:
	mov eax, dword ptr [ebp-44]
	add eax, dword ptr [ebp-20]
	mov dword ptr [ebp-4], eax
	jmp .L_253E
.stabn 68,0,103,.L_25CE-_READFLOAT@8
.L_25CF:
.L_25A1:
	jmp .L_2544
.L_2577:
.L_25A3:
.stabn 68,0,104,.L_25CF-_READFLOAT@8
.L_25D0:
	jmp .L_2540
.stabn 68,0,105,.L_25D0-_READFLOAT@8
.L_25D1:
.L_25A4:
.L_25A2:
.L_2544:
.L_25A5:
	inc dword ptr [ebp-20]
.stabn 68,0,107,.L_25D1-_READFLOAT@8
.L_25D2:
.L_25A6:
.L_2541:
	jmp .L_253F
.L_2540:
.stabn 68,0,108,.L_25D2-_READFLOAT@8
.L_25D3:
	cmp dword ptr [ebp-24], 0
	jne .L_25A8
.L_25A9:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-20]
	mov ebx, dword ptr [ebp+12]
	movzx ecx, byte ptr [eax]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fstp dword ptr [ebx]
	mov dword ptr [ebp-4], -1
	jmp .L_253E
.L_25A8:
.L_25AA:
.stabn 68,0,110,.L_25D3-_READFLOAT@8
.L_25D4:
	fild dword ptr [ebp-8]
	fild dword ptr [ebp-12]
	fild dword ptr [ebp-16]
	fxch st(1)
	fdivrp
	fxch st(1)
	faddp
	fild dword ptr [ebp-32]
	fxch st(1)
	fmulp
	mov eax, dword ptr [ebp+12]
	fstp dword ptr [eax]
.stabn 68,0,111,.L_25D4-_READFLOAT@8
.L_25D5:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-4], eax
.stabn 68,0,112,.L_25D5-_READFLOAT@8
.L_25D6:
.L_253E:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,113,.L_253E-_READFLOAT@8
	.stabs "IRESU:1",128,0,0,-8
	.stabs "IDECIMAL:1",128,0,0,-12
	.stabs "IDECMASK:1",128,0,0,-16
	.stabs "IREAD:1",128,0,0,-20
	.stabs "IHASDIGITS:1",128,0,0,-24
	.stabs "IHASDOT:1",128,0,0,-28
	.stabs "ISIGN:1",128,0,0,-32
	.stabn 192,0,0,.L_253D-_READFLOAT@8
	.stabn 192,0,0,.L_2542-_READFLOAT@8
	.stabn 192,0,0,.L_2543-_READFLOAT@8
	.stabn 192,0,0,.L_2548-_READFLOAT@8
	.stabn 192,0,0,.L_254B-_READFLOAT@8
	.stabn 224,0,0,.L_254C-_READFLOAT@8
	.stabn 192,0,0,.L_254D-_READFLOAT@8
	.stabn 224,0,0,.L_254E-_READFLOAT@8
	.stabn 224,0,0,.L_254F-_READFLOAT@8
	.stabn 192,0,0,.L_2553-_READFLOAT@8
	.stabn 192,0,0,.L_2556-_READFLOAT@8
	.stabn 224,0,0,.L_2557-_READFLOAT@8
	.stabn 224,0,0,.L_2558-_READFLOAT@8
	.stabn 192,0,0,.L_255B-_READFLOAT@8
	.stabn 224,0,0,.L_255C-_READFLOAT@8
	.stabn 192,0,0,.L_2560-_READFLOAT@8
	.stabn 224,0,0,.L_2561-_READFLOAT@8
	.stabn 192,0,0,.L_2565-_READFLOAT@8
	.stabn 192,0,0,.L_2568-_READFLOAT@8
	.stabn 224,0,0,.L_2569-_READFLOAT@8
	.stabn 224,0,0,.L_256A-_READFLOAT@8
	.stabn 192,0,0,.L_256D-_READFLOAT@8
	.stabn 192,0,0,.L_2572-_READFLOAT@8
	.stabn 224,0,0,.L_2573-_READFLOAT@8
	.stabn 192,0,0,.L_2574-_READFLOAT@8
	.stabn 224,0,0,.L_2575-_READFLOAT@8
	.stabn 224,0,0,.L_2576-_READFLOAT@8
	.stabs "IEXPOENT:1",128,0,0,-40
	.stabs "IEXTRA:1",128,0,0,-44
	.stabs "FTEMP:12",128,0,0,-52
	.stabn 192,0,0,.L_257C-_READFLOAT@8
	.stabn 192,0,0,.L_257F-_READFLOAT@8
	.stabn 224,0,0,.L_2580-_READFLOAT@8
	.stabn 192,0,0,.L_2583-_READFLOAT@8
	.stabn 192,0,0,.L_2586-_READFLOAT@8
	.stabn 224,0,0,.L_2587-_READFLOAT@8
	.stabs "N:1",128,0,0,-56
	.stabn 192,0,0,.L_2588-_READFLOAT@8
	.stabn 192,0,0,.L_258E-_READFLOAT@8
	.stabn 224,0,0,.L_258F-_READFLOAT@8
	.stabn 224,0,0,.L_2590-_READFLOAT@8
	.stabn 224,0,0,.L_2591-_READFLOAT@8
	.stabn 192,0,0,.L_2592-_READFLOAT@8
	.stabn 192,0,0,.L_2595-_READFLOAT@8
	.stabn 224,0,0,.L_2596-_READFLOAT@8
	.stabs "N:1",128,0,0,-56
	.stabn 192,0,0,.L_2597-_READFLOAT@8
	.stabn 192,0,0,.L_259D-_READFLOAT@8
	.stabn 224,0,0,.L_259E-_READFLOAT@8
	.stabn 224,0,0,.L_259F-_READFLOAT@8
	.stabn 224,0,0,.L_25A0-_READFLOAT@8
	.stabn 224,0,0,.L_25A1-_READFLOAT@8
	.stabn 192,0,0,.L_25A3-_READFLOAT@8
	.stabn 224,0,0,.L_25A4-_READFLOAT@8
	.stabn 224,0,0,.L_25A5-_READFLOAT@8
	.stabn 224,0,0,.L_25A6-_READFLOAT@8
	.stabn 192,0,0,.L_25A9-_READFLOAT@8
	.stabn 224,0,0,.L_25AA-_READFLOAT@8
	.stabn 224,0,0,.L_253E-_READFLOAT@8
.L_25D7:
	.stabs "",36,0,0,.L_25D7-_READFLOAT@8
	.stabs "READFILENAME:F1",36,0,115,_READFILENAME@8
	.stabs "PFILE:p93=*3",160,0,0,8
	.stabs "SSTRING:v13",160,0,0,12
.balign 16

.globl _READFILENAME@8
_READFILENAME@8:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,115,_READFILENAME@8-_READFILENAME@8
	mov dword ptr [ebp-4], 0
.L_25D8:
.L_25FC:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
.stabn 68,0,116,.L_25FC-_READFILENAME@8
.L_25FD:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-16], eax
.stabn 68,0,117,.L_25FD-_READFILENAME@8
.L_25FE:
.L_25DA:
.L_25DD:
.L_25DE:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-8]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-32], bl
.stabn 68,0,119,.L_25FE-_READFILENAME@8
.L_25FF:
	movzx ebx, byte ptr [ebp-32]
	cmp ebx, 32
	je .L_25E2
.L_25E3:
	movzx ebx, byte ptr [ebp-32]
	cmp ebx, 9
	jne .L_25E1
.L_25E2:
.L_25E4:
.stabn 68,0,120,.L_25FF-_READFILENAME@8
.L_2600:
	cmp dword ptr [ebp-12], 0
	jne .L_25E6
.L_25E7:
	dec dword ptr [ebp-12]
	inc dword ptr [ebp-16]
.L_25E6:
.L_25E8:
.stabn 68,0,121,.L_2600-_READFILENAME@8
.L_2601:
.L_25E9:
	jmp .L_25DF
.L_25E1:
	movzx ebx, byte ptr [ebp-32]
	cmp ebx, 13
	je .L_25EB
.L_25EC:
	movzx ebx, byte ptr [ebp-32]
	cmp ebx, 10
	je .L_25EB
.L_25ED:
	movzx ebx, byte ptr [ebp-32]
	test ebx, ebx
	jne .L_25EA
.L_25EB:
.L_25EE:
.stabn 68,0,122,.L_2601-_READFILENAME@8
.L_2602:
	jmp .L_25DB
.stabn 68,0,123,.L_2602-_READFILENAME@8
.L_2603:
.L_25EF:
.L_25EA:
.L_25DF:
.L_25F0:
	inc dword ptr [ebp-8]
	inc dword ptr [ebp-12]
.stabn 68,0,125,.L_2603-_READFILENAME@8
.L_2604:
.L_25F1:
.L_25DC:
	jmp .L_25DA
.L_25DB:
.stabn 68,0,126,.L_2604-_READFILENAME@8
.L_2605:
.L_25F2:
	cmp dword ptr [ebp-12], 0
	je .L_25F4
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	movzx eax, byte ptr [ebx-1]
	cmp eax, 32
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-20], ebx
	jmp .L_25FA
.L_25F4:
	mov dword ptr [ebp-20], 0
.L_25FA:
	cmp dword ptr [ebp-20], 0
	jne .L_25F6
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	movzx eax, byte ptr [ebx-1]
	cmp eax, 9
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-24], eax
	jmp .L_25FB
.L_25F6:
	mov dword ptr [ebp-24], -1
.L_25FB:
	cmp dword ptr [ebp-24], 0
	je .L_25F3
.L_25F8:
.stabn 68,0,128,.L_2605-_READFILENAME@8
.L_2608:
	dec dword ptr [ebp-12]
.stabn 68,0,129,.L_2608-_READFILENAME@8
.L_2609:
.L_25F9:
	jmp .L_25F2
.L_25F3:
.stabn 68,0,130,.L_2609-_READFILENAME@8
.L_260A:
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-28], bl
.stabn 68,0,131,.L_260A-_READFILENAME@8
.L_260B:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	mov byte ptr [ebx], 0
.stabn 68,0,132,.L_260B-_READFILENAME@8
.L_260C:
	push 0
	push 0
	push dword ptr [ebp-16]
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,133,.L_260C-_READFILENAME@8
.L_260D:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	mov al, byte ptr [ebp-28]
	mov byte ptr [ebx], al
.stabn 68,0,134,.L_260D-_READFILENAME@8
.L_260E:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,135,.L_260E-_READFILENAME@8
.L_260F:
.L_25D9:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,136,.L_25D9-_READFILENAME@8
	.stabs "IREAD:1",128,0,0,-8
	.stabs "ISIZE:1",128,0,0,-12
	.stabs "PZSTART:94=*4",128,0,0,-16
	.stabs "BPREVIOUS:3",128,0,0,-28
	.stabn 192,0,0,.L_25D8-_READFILENAME@8
	.stabn 192,0,0,.L_25DD-_READFILENAME@8
	.stabn 192,0,0,.L_25DE-_READFILENAME@8
	.stabn 192,0,0,.L_25E4-_READFILENAME@8
	.stabn 192,0,0,.L_25E7-_READFILENAME@8
	.stabn 224,0,0,.L_25E8-_READFILENAME@8
	.stabn 224,0,0,.L_25E9-_READFILENAME@8
	.stabn 192,0,0,.L_25EE-_READFILENAME@8
	.stabn 224,0,0,.L_25EF-_READFILENAME@8
	.stabn 224,0,0,.L_25F0-_READFILENAME@8
	.stabn 224,0,0,.L_25F1-_READFILENAME@8
	.stabn 192,0,0,.L_25F8-_READFILENAME@8
	.stabn 224,0,0,.L_25F9-_READFILENAME@8
	.stabn 224,0,0,.L_25D9-_READFILENAME@8
.L_2610:
	.stabs "",36,0,0,.L_2610-_READFILENAME@8
	.stabs "READTOKEN:F1",36,0,137,_READTOKEN@8
	.stabs "PFILE:p95=*3",160,0,0,8
	.stabs "SSTRING:v13",160,0,0,12
.balign 16

.globl _READTOKEN@8
_READTOKEN@8:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,137,_READTOKEN@8-_READTOKEN@8
	mov dword ptr [ebp-4], 0
.L_2611:
.L_262D:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
.stabn 68,0,138,.L_262D-_READTOKEN@8
.L_262E:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-16], eax
.stabn 68,0,139,.L_262E-_READTOKEN@8
.L_262F:
.L_2613:
.L_2616:
.L_2617:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-8]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-24], bl
.stabn 68,0,141,.L_262F-_READTOKEN@8
.L_2630:
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 32
	je .L_261B
.L_261C:
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 9
	jne .L_261A
.L_261B:
.L_261D:
.stabn 68,0,142,.L_2630-_READTOKEN@8
.L_2631:
	cmp dword ptr [ebp-12], 0
	jne .L_261F
.L_2620:
	dec dword ptr [ebp-12]
	inc dword ptr [ebp-16]
.L_2621:
	jmp .L_261E
.L_261F:
.L_2622:
	jmp .L_2614
.L_261E:
.L_2623:
.stabn 68,0,143,.L_2631-_READTOKEN@8
.L_2632:
.L_2624:
	jmp .L_2618
.L_261A:
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 13
	je .L_2626
.L_2627:
	movzx ebx, byte ptr [ebp-24]
	cmp ebx, 10
	je .L_2626
.L_2628:
	movzx ebx, byte ptr [ebp-24]
	test ebx, ebx
	jne .L_2625
.L_2626:
.L_2629:
.stabn 68,0,144,.L_2632-_READTOKEN@8
.L_2633:
	jmp .L_2614
.stabn 68,0,145,.L_2633-_READTOKEN@8
.L_2634:
.L_262A:
.L_2625:
.L_2618:
.L_262B:
	inc dword ptr [ebp-8]
	inc dword ptr [ebp-12]
.stabn 68,0,147,.L_2634-_READTOKEN@8
.L_2635:
.L_262C:
.L_2615:
	jmp .L_2613
.L_2614:
.stabn 68,0,148,.L_2635-_READTOKEN@8
.L_2636:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-20], al
.stabn 68,0,149,.L_2636-_READTOKEN@8
.L_2637:
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-12]
	mov byte ptr [eax], 0
.stabn 68,0,150,.L_2637-_READTOKEN@8
.L_2638:
	push 0
	push 0
	push dword ptr [ebp-16]
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,151,.L_2638-_READTOKEN@8
.L_2639:
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [ebp-20]
	mov byte ptr [eax], bl
.stabn 68,0,152,.L_2639-_READTOKEN@8
.L_263A:
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,153,.L_263A-_READTOKEN@8
.L_263B:
.L_2612:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,154,.L_2612-_READTOKEN@8
	.stabs "IREAD:1",128,0,0,-8
	.stabs "ISIZE:1",128,0,0,-12
	.stabs "PZSTART:96=*4",128,0,0,-16
	.stabs "BPREVIOUS:3",128,0,0,-20
	.stabn 192,0,0,.L_2611-_READTOKEN@8
	.stabn 192,0,0,.L_2616-_READTOKEN@8
	.stabn 192,0,0,.L_2617-_READTOKEN@8
	.stabn 192,0,0,.L_261D-_READTOKEN@8
	.stabn 192,0,0,.L_2620-_READTOKEN@8
	.stabn 224,0,0,.L_2621-_READTOKEN@8
	.stabn 192,0,0,.L_2622-_READTOKEN@8
	.stabn 224,0,0,.L_2623-_READTOKEN@8
	.stabn 224,0,0,.L_2624-_READTOKEN@8
	.stabn 192,0,0,.L_2629-_READTOKEN@8
	.stabn 224,0,0,.L_262A-_READTOKEN@8
	.stabn 224,0,0,.L_262B-_READTOKEN@8
	.stabn 224,0,0,.L_262C-_READTOKEN@8
	.stabn 224,0,0,.L_2612-_READTOKEN@8
.L_263C:
	.stabs "",36,0,0,.L_263C-_READTOKEN@8
	.stabs "LOADFILE:F16",36,0,155,_LOADFILE@12
	.stabs "SFILE:v13",160,0,0,8
	.stabs "SFILECONTENTS:v13",160,0,0,12
	.stabs "BADDPATHTOSEARCH:p16",160,0,0,16
.balign 16

.globl _LOADFILE@12
_LOADFILE@12:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,155,_LOADFILE@12-_LOADFILE@12
	mov byte ptr [ebp-4], 0
.L_263D:
.L_265D:
	cmp byte ptr [ebp+16], 0
	je .L_2640
.L_2641:
.stabn 68,0,163,.L_265D-_LOADFILE@12
.L_265E:
	push -1
	push 1
	push offset _Lt_2642
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-16], eax
	push -1
	push 1
	push offset _Lt_2643
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-20], eax
.stabn 68,0,164,.L_265E-_LOADFILE@12
.L_265F:
	mov eax, dword ptr [ebp-16]
	cmp dword ptr [ebp-20], eax
	jle .L_2645
.L_2646:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-16], eax
.L_2645:
.L_2647:
.stabn 68,0,165,.L_265F-_LOADFILE@12
.L_2660:
	cmp dword ptr [ebp-16], 0
	je .L_2649
.L_264A:
.stabn 68,0,166,.L_2660-_LOADFILE@12
.L_2661:
	push 0
	push -1
	mov eax, dword ptr [ebp-16]
	dec eax
	push eax
	push dword ptr [ebp+8]
	call _fb_LEFT@8
	push eax
	push -1
	push offset _G_SPATHLIST
	call _fb_StrAssign@20
.stabn 68,0,167,.L_2661-_LOADFILE@12
.L_2662:
.L_264B:
	jmp .L_2648
.L_2649:
.L_264C:
.stabn 68,0,168,.L_2662-_LOADFILE@12
.L_2663:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push offset _G_SPATHLIST
	call _fb_StrAssign@20
.stabn 68,0,169,.L_2663-_LOADFILE@12
.L_2664:
.L_264D:
.L_2648:
.L_264E:
.L_2640:
.L_263F:
	call _fb_FileFree@0
	mov dword ptr [ebp-8], eax
.stabn 68,0,173,.L_2664-_LOADFILE@12
.L_2665:
	push 0
	push dword ptr [ebp-8]
	push 0
	push 0
	push 2
	push dword ptr [ebp+8]
	call _fb_FileOpen@24
	test eax, eax
	je .L_2650
.L_2651:
.stabn 68,0,174,.L_2665-_LOADFILE@12
.L_2666:
	push 1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	push dword ptr [ebp+8]
	push 22
	push offset _Lt_2652
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	call _fb_PrintString@12
	push -1
	call _fb_Sleep@4
	push 0
	call _fb_End@4
.stabn 68,0,175,.L_2666-_LOADFILE@12
.L_2667:
	mov byte ptr [ebp-4], 0
	jmp .L_263E
.stabn 68,0,176,.L_2667-_LOADFILE@12
.L_2668:
.L_2656:
.L_2650:
.L_264F:
	push dword ptr [ebp-8]
	call _fb_FileSize@4
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,178,.L_2668-_LOADFILE@12
.L_2669:
	cmp dword ptr [ebp-12], 1048576
	jae .L_2658
.L_2659:
.stabn 68,0,179,.L_2669-_LOADFILE@12
.L_266A:
.L_265A:
.L_2658:
.L_265B:
.stabn 68,0,186,.L_266A-_LOADFILE@12
.L_266B:
.L_265C:
.L_2657:
	push 0
	push -1
	push 0
	push dword ptr [ebp-12]
	call _fb_StrFill1@8
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,194,.L_266B-_LOADFILE@12
.L_266C:
	push -1
	push dword ptr [ebp+12]
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGetStr@16
.stabn 68,0,195,.L_266C-_LOADFILE@12
.L_266D:
	push dword ptr [ebp-8]
	call _fb_FileClose@4
.stabn 68,0,196,.L_266D-_LOADFILE@12
.L_266E:
	mov byte ptr [ebp-4], 1
.stabn 68,0,197,.L_266E-_LOADFILE@12
.L_266F:
.L_263E:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,198,.L_263E-_LOADFILE@12
	.stabs "F:1",128,0,0,-8
	.stabs "UFILESIZE:8",128,0,0,-12
	.stabn 192,0,0,.L_263D-_LOADFILE@12
	.stabs "IPATHLEN:1",128,0,0,-16
	.stabs "IPATHLEN2:1",128,0,0,-20
	.stabn 192,0,0,.L_2641-_LOADFILE@12
	.stabn 192,0,0,.L_2646-_LOADFILE@12
	.stabn 224,0,0,.L_2647-_LOADFILE@12
	.stabn 192,0,0,.L_264A-_LOADFILE@12
	.stabn 224,0,0,.L_264B-_LOADFILE@12
	.stabn 192,0,0,.L_264C-_LOADFILE@12
	.stabn 224,0,0,.L_264D-_LOADFILE@12
	.stabn 224,0,0,.L_264E-_LOADFILE@12
	.stabn 192,0,0,.L_2651-_LOADFILE@12
	.stabn 224,0,0,.L_2656-_LOADFILE@12
	.stabn 192,0,0,.L_2659-_LOADFILE@12
	.stabn 224,0,0,.L_265A-_LOADFILE@12
	.stabn 192,0,0,.L_265B-_LOADFILE@12
	.stabn 224,0,0,.L_265C-_LOADFILE@12
	.stabn 224,0,0,.L_263E-_LOADFILE@12
.L_2670:
	.stabs "",36,0,0,.L_2670-_LOADFILE@12
	.stabs "FINDFILE:F1",36,0,199,_FINDFILE@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl _FINDFILE@4
_FINDFILE@4:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,199,_FINDFILE@4-_FINDFILE@4
	mov dword ptr [ebp-4], 0
.L_2671:
.L_2684:
.L_2673:
	mov dword ptr [ebp-8], 0
.L_2677:
.L_2678:
.stabn 68,0,200,.L_2684-_FINDFILE@4
.L_2685:
	push 0
	push -1
	mov eax, dword ptr [ebp-8]
	imul eax, 12
	lea ebx, [_G_SPATHLIST+eax]
	push ebx
	push -1
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,201,.L_2685-_FINDFILE@4
.L_2686:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 92
	je .L_267A
.L_267B:
	push 0
	push 2
	push offset _Lt_2642
	push -1
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrConcatAssign@20
.L_267A:
.L_267C:
.stabn 68,0,202,.L_2686-_FINDFILE@4
.L_2687:
	push 0
	push -1
	push -1
	push dword ptr [ebp+8]
	push -1
	lea ebx, [ebp-20]
	push ebx
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	lea ebx, [ebp-32]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,203,.L_2687-_FINDFILE@4
.L_2688:
	push dword ptr [ebp-20]
	call _fb_FileExists@4
	test eax, eax
	je .L_267F
.L_2680:
.stabn 68,0,205,.L_2688-_FINDFILE@4
.L_2689:
	push 0
	push -1
	push 0
	lea eax, [ebp-20]
	push eax
	call _fb_StrLcase2@8
	push eax
	push -1
	push dword ptr [ebp+8]
	call _fb_StrAssign@20
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
	jmp .L_2672
.stabn 68,0,206,.L_2689-_FINDFILE@4
.L_268A:
.L_2681:
.L_267F:
.L_267E:
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
.L_2682:
.L_2675:
	inc dword ptr [ebp-8]
.L_2674:
	cmp dword ptr [ebp-8], 8
	jle .L_2677
.L_2676:
.L_2683:
.stabn 68,0,208,.L_268A-_FINDFILE@4
.L_268B:
	mov dword ptr [ebp-4], 0
.stabn 68,0,209,.L_268B-_FINDFILE@4
.L_268C:
.L_2672:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,210,.L_2672-_FINDFILE@4
	.stabn 192,0,0,.L_2671-_FINDFILE@4
	.stabs "I:1",128,0,0,-8
	.stabn 192,0,0,.L_2673-_FINDFILE@4
	.stabs "SFULLPATHFILE:13",128,0,0,-20
	.stabn 192,0,0,.L_2678-_FINDFILE@4
	.stabn 192,0,0,.L_267B-_FINDFILE@4
	.stabn 224,0,0,.L_267C-_FINDFILE@4
	.stabn 192,0,0,.L_2680-_FINDFILE@4
	.stabn 224,0,0,.L_2681-_FINDFILE@4
	.stabn 224,0,0,.L_2682-_FINDFILE@4
	.stabn 224,0,0,.L_2683-_FINDFILE@4
	.stabn 224,0,0,.L_2672-_FINDFILE@4
.L_268D:
	.stabs "",36,0,0,.L_268D-_FINDFILE@4
	.stabs "FINDSHADOWFILE:F1",36,0,211,_FINDSHADOWFILE@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl _FINDSHADOWFILE@4
_FINDSHADOWFILE@4:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,211,_FINDSHADOWFILE@4-_FINDSHADOWFILE@4
	mov dword ptr [ebp-4], 0
.L_268E:
.L_26A1:
.L_2690:
	mov dword ptr [ebp-8], 0
.L_2694:
.L_2695:
.stabn 68,0,212,.L_26A1-_FINDSHADOWFILE@4
.L_26A2:
	push 0
	push -1
	mov eax, dword ptr [ebp-8]
	imul eax, 12
	lea ebx, [_G_SSHADOWPATHLIST+eax]
	push ebx
	push -1
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,213,.L_26A2-_FINDSHADOWFILE@4
.L_26A3:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 92
	je .L_2697
.L_2698:
	push 0
	push 2
	push offset _Lt_2642
	push -1
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrConcatAssign@20
.L_2697:
.L_2699:
.stabn 68,0,214,.L_26A3-_FINDSHADOWFILE@4
.L_26A4:
	push 0
	push -1
	push -1
	push dword ptr [ebp+8]
	push -1
	lea ebx, [ebp-20]
	push ebx
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	lea ebx, [ebp-32]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,215,.L_26A4-_FINDSHADOWFILE@4
.L_26A5:
	push dword ptr [ebp-20]
	call _fb_FileExists@4
	test eax, eax
	je .L_269C
.L_269D:
.stabn 68,0,217,.L_26A5-_FINDSHADOWFILE@4
.L_26A6:
	push 0
	push -1
	lea eax, [ebp-20]
	push eax
	push -1
	push dword ptr [ebp+8]
	call _fb_StrAssign@20
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
	jmp .L_268F
.stabn 68,0,218,.L_26A6-_FINDSHADOWFILE@4
.L_26A7:
.L_269E:
.L_269C:
.L_269B:
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
.L_269F:
.L_2692:
	inc dword ptr [ebp-8]
.L_2691:
	cmp dword ptr [ebp-8], 3
	jle .L_2694
.L_2693:
.L_26A0:
.stabn 68,0,220,.L_26A7-_FINDSHADOWFILE@4
.L_26A8:
	mov dword ptr [ebp-4], 0
.stabn 68,0,221,.L_26A8-_FINDSHADOWFILE@4
.L_26A9:
.L_268F:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,222,.L_268F-_FINDSHADOWFILE@4
	.stabn 192,0,0,.L_268E-_FINDSHADOWFILE@4
	.stabs "I:1",128,0,0,-8
	.stabn 192,0,0,.L_2690-_FINDSHADOWFILE@4
	.stabs "SFULLPATHFILE:13",128,0,0,-20
	.stabn 192,0,0,.L_2695-_FINDSHADOWFILE@4
	.stabn 192,0,0,.L_2698-_FINDSHADOWFILE@4
	.stabn 224,0,0,.L_2699-_FINDSHADOWFILE@4
	.stabn 192,0,0,.L_269D-_FINDSHADOWFILE@4
	.stabn 224,0,0,.L_269E-_FINDSHADOWFILE@4
	.stabn 224,0,0,.L_269F-_FINDSHADOWFILE@4
	.stabn 224,0,0,.L_26A0-_FINDSHADOWFILE@4
	.stabn 224,0,0,.L_268F-_FINDSHADOWFILE@4
.L_26AA:
	.stabs "",36,0,0,.L_26AA-_FINDSHADOWFILE@4
	.stabs "READBRACKETOPTION:F1",36,0,223,_READBRACKETOPTION@12
	.stabs "PFILE:p97=*3",160,0,0,8
	.stabs "SNAME:v13",160,0,0,12
	.stabs "SPARMS:v13",160,0,0,16
.balign 16

.globl _READBRACKETOPTION@12
_READBRACKETOPTION@12:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,223,_READBRACKETOPTION@12-_READBRACKETOPTION@12
	mov dword ptr [ebp-4], 0
.L_26AB:
.L_2709:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
.stabn 68,0,224,.L_2709-_READBRACKETOPTION@12
.L_270A:
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-20], 0
.stabn 68,0,225,.L_270A-_READBRACKETOPTION@12
.L_270B:
	mov byte ptr [ebp-24], 0
	mov byte ptr [ebp-28], 0
.stabn 68,0,226,.L_270B-_READBRACKETOPTION@12
.L_270C:
.L_26AD:
.L_26B0:
.L_26B1:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-8]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-36], bl
.stabn 68,0,229,.L_270C-_READBRACKETOPTION@12
.L_270D:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 32
	je .L_26B5
.L_26B6:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 9
	jne .L_26B4
.L_26B5:
.L_26B7:
.stabn 68,0,230,.L_270D-_READBRACKETOPTION@12
.L_270E:
	movsx ebx, byte ptr [ebp-24]
	test ebx, ebx
	je .L_26B9
.L_26BA:
.stabn 68,0,231,.L_270E-_READBRACKETOPTION@12
.L_270F:
	cmp dword ptr [ebp-12], 0
	jne .L_26BC
.L_26BD:
.stabn 68,0,232,.L_270F-_READBRACKETOPTION@12
.L_2710:
	dec dword ptr [ebp-12]
	cmp dword ptr [ebp-20], 0
	jne .L_26BF
.L_26C0:
	inc dword ptr [ebp-16]
.L_26C1:
	jmp .L_26BE
.L_26BF:
.L_26C2:
	inc dword ptr [ebp-20]
.L_26BE:
.L_26C3:
.stabn 68,0,233,.L_2710-_READBRACKETOPTION@12
.L_2711:
.L_26C4:
	jmp .L_26BB
.L_26BC:
.L_26C5:
.stabn 68,0,234,.L_2711-_READBRACKETOPTION@12
.L_2712:
	movsx ebx, byte ptr [ebp-28]
	inc ebx
	mov al, bl
	mov byte ptr [ebp-28], al
	dec dword ptr [ebp-12]
.stabn 68,0,235,.L_2712-_READBRACKETOPTION@12
.L_2713:
.L_26C6:
.L_26BB:
.L_26C7:
.L_26B9:
.L_26B8:
.L_26C8:
	jmp .L_26B2
.L_26B4:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 91
	jne .L_26C9
.L_26CB:
.L_26CC:
.stabn 68,0,238,.L_2713-_READBRACKETOPTION@12
.L_2714:
	movsx eax, byte ptr [ebp-24]
	test eax, eax
	je .L_26CE
.L_26CF:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26CE:
.L_26D0:
.stabn 68,0,239,.L_2714-_READBRACKETOPTION@12
.L_2715:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-8]
	inc eax
	mov dword ptr [ebp-16], eax
	mov byte ptr [ebp-24], 1
.stabn 68,0,240,.L_2715-_READBRACKETOPTION@12
.L_2716:
	mov dword ptr [ebp-12], -1
	mov byte ptr [ebp-28], 0
.stabn 68,0,241,.L_2716-_READBRACKETOPTION@12
.L_2717:
.L_26D1:
	jmp .L_26B2
.L_26C9:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 61
	jne .L_26D2
.L_26D4:
.L_26D5:
.stabn 68,0,242,.L_2717-_READBRACKETOPTION@12
.L_2718:
	movsx eax, byte ptr [ebp-24]
	test eax, eax
	jne .L_26D7
.L_26D8:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26D7:
.L_26D9:
.stabn 68,0,243,.L_2718-_READBRACKETOPTION@12
.L_2719:
	cmp dword ptr [ebp-20], 0
	je .L_26DB
.L_26DC:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26DB:
.L_26DD:
.stabn 68,0,244,.L_2719-_READBRACKETOPTION@12
.L_271A:
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-32], bl
.stabn 68,0,245,.L_271A-_READBRACKETOPTION@12
.L_271B:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	mov byte ptr [ebx], 0
.stabn 68,0,246,.L_271B-_READBRACKETOPTION@12
.L_271C:
	push 0
	push 0
	push dword ptr [ebp-16]
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,247,.L_271C-_READBRACKETOPTION@12
.L_271D:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-12]
	mov al, byte ptr [ebp-32]
	mov byte ptr [ebx], al
.stabn 68,0,248,.L_271D-_READBRACKETOPTION@12
.L_271E:
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-8]
	inc eax
	mov dword ptr [ebp-20], eax
.stabn 68,0,249,.L_271E-_READBRACKETOPTION@12
.L_271F:
	mov dword ptr [ebp-12], -1
	mov byte ptr [ebp-28], 0
.stabn 68,0,250,.L_271F-_READBRACKETOPTION@12
.L_2720:
.L_26DE:
	jmp .L_26B2
.L_26D2:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 93
	jne .L_26DF
.L_26E1:
.L_26E2:
.stabn 68,0,251,.L_2720-_READBRACKETOPTION@12
.L_2721:
	cmp dword ptr [ebp-16], 0
	sete al
	shr eax, 1
	sbb eax, eax
	cmp dword ptr [ebp-20], 0
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	or eax, ebx
	je .L_26E4
.L_26E5:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26E4:
.L_26E6:
.stabn 68,0,252,.L_2721-_READBRACKETOPTION@12
.L_2724:
	movsx ebx, byte ptr [ebp-24]
	test ebx, ebx
	jne .L_26E8
.L_26E9:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26E8:
.L_26EA:
.stabn 68,0,253,.L_2724-_READBRACKETOPTION@12
.L_2725:
	mov ebx, dword ptr [ebp-20]
	add ebx, dword ptr [ebp-12]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-32], al
.stabn 68,0,255,.L_2725-_READBRACKETOPTION@12
.L_2726:
	mov eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-12]
	mov byte ptr [eax], 0
.stabn 68,0,256,.L_2726-_READBRACKETOPTION@12
.L_2727:
	push 0
	push 0
	push dword ptr [ebp-20]
	push -1
	push dword ptr [ebp+16]
	call _fb_StrAssign@20
.stabn 68,0,257,.L_2727-_READBRACKETOPTION@12
.L_2728:
	mov eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-12]
	mov bl, byte ptr [ebp-32]
	mov byte ptr [eax], bl
.stabn 68,0,258,.L_2728-_READBRACKETOPTION@12
.L_2729:
	inc dword ptr [ebp-8]
	jmp .L_26AE
.stabn 68,0,259,.L_2729-_READBRACKETOPTION@12
.L_272A:
.L_26EB:
	jmp .L_26B2
.L_26DF:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 13
	je .L_26ED
.L_26EE:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 10
	je .L_26ED
.L_26EF:
	movzx ebx, byte ptr [ebp-36]
	test ebx, ebx
	jne .L_26EC
.L_26ED:
.L_26F0:
.stabn 68,0,260,.L_272A-_READBRACKETOPTION@12
.L_272B:
	movsx ebx, byte ptr [ebp-24]
	test ebx, ebx
	je .L_26F2
.L_26F3:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_26F2:
.L_26F4:
.stabn 68,0,261,.L_272B-_READBRACKETOPTION@12
.L_272C:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,262,.L_272C-_READBRACKETOPTION@12
.L_272D:
	jmp .L_26AE
.stabn 68,0,263,.L_272D-_READBRACKETOPTION@12
.L_272E:
.L_26F5:
	jmp .L_26B2
.L_26EC:
.L_26F7:
.stabn 68,0,264,.L_272E-_READBRACKETOPTION@12
.L_272F:
	movsx ebx, byte ptr [ebp-28]
	test ebx, ebx
	je .L_26F9
.L_26FA:
.stabn 68,0,265,.L_272F-_READBRACKETOPTION@12
.L_2730:
	cmp dword ptr [ebp-20], 0
	jne .L_26FC
.L_26FD:
.stabn 68,0,266,.L_2730-_READBRACKETOPTION@12
.L_2731:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.stabn 68,0,267,.L_2731-_READBRACKETOPTION@12
.L_2732:
.L_26FE:
	jmp .L_26FB
.L_26FC:
.L_26FF:
.stabn 68,0,268,.L_2732-_READBRACKETOPTION@12
.L_2733:
	movsx ebx, byte ptr [ebp-28]
	add dword ptr [ebp-12], ebx
.stabn 68,0,269,.L_2733-_READBRACKETOPTION@12
.L_2734:
.L_2700:
.L_26FB:
	mov byte ptr [ebp-28], 0
.stabn 68,0,271,.L_2734-_READBRACKETOPTION@12
.L_2735:
.L_2701:
.L_26F9:
.L_26F8:
	movsx ebx, byte ptr [ebp-24]
	test ebx, ebx
	jne .L_2703
.L_2704:
	mov dword ptr [ebp-4], -1
	jmp .L_26AC
.L_2703:
.L_2705:
.stabn 68,0,273,.L_2735-_READBRACKETOPTION@12
.L_2736:
.L_2706:
.L_26F6:
.L_26B2:
.L_2707:
	inc dword ptr [ebp-8]
	inc dword ptr [ebp-12]
.stabn 68,0,275,.L_2736-_READBRACKETOPTION@12
.L_2737:
.L_2708:
.L_26AF:
	jmp .L_26AD
.L_26AE:
.stabn 68,0,276,.L_2737-_READBRACKETOPTION@12
.L_2738:
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,278,.L_2738-_READBRACKETOPTION@12
.L_2739:
.L_26AC:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,279,.L_26AC-_READBRACKETOPTION@12
	.stabs "IREAD:1",128,0,0,-8
	.stabs "ISIZE:1",128,0,0,-12
	.stabs "PZNAME:98=*4",128,0,0,-16
	.stabs "PZPARMS:99=*4",128,0,0,-20
	.stabs "BOPEN:2",128,0,0,-24
	.stabs "BSPACE:2",128,0,0,-28
	.stabs "BPREVIOUS:3",128,0,0,-32
	.stabn 192,0,0,.L_26AB-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26B0-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26B1-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26B7-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26BA-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26BD-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26C0-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C1-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26C2-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C3-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C4-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26C5-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C6-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C7-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26C8-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26CC-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26CF-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26D0-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26D1-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26D5-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26D8-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26D9-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26DC-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26DD-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26DE-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26E2-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26E5-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26E6-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26E9-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26EA-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26EB-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26F0-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26F3-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26F4-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26F5-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26F7-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26FA-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26FD-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26FE-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_26FF-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2700-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2701-_READBRACKETOPTION@12
	.stabn 192,0,0,.L_2704-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2705-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2706-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2707-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_2708-_READBRACKETOPTION@12
	.stabn 224,0,0,.L_26AC-_READBRACKETOPTION@12
.L_273A:
	.stabs "",36,0,0,.L_273A-_READBRACKETOPTION@12
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\LOADLDR.BAS",132,0,0,.L_2B71
.L_2B71:
	.stabs "LOADSHADOW:F16",36,0,40,_LOADSHADOW@12
	.stabs "PARTSIZE:Tt102=s24XMIN:11,0,32;XMAX:11,32,32;YMIN:11,64,32;YMAX:11,96,32;ZMIN:11,128,32;ZMAX:11,160,32;;",128,0,0,0
	.stabs "SHADOWGRID:Tt106=s4XCNT:2,0,8;ZCNT:2,8,8;XSTEP:3,16,8;ZSTEP:3,24,8;;",128,0,0,0
	.stabs "SHADOWSEC:Tt108=s4BSHAPE:2,0,8;BLENGTH:2,8,8;WFIXRADIUS:5,16,16;;",128,0,0,0
	.stabs "SHADOWSTRUCT:Tt104=s88BTYPE:3,0,3;BSECCNT:3,3,3;BRECURSE:3,6,2;BFLAGS:3,8,8;BFLAGMIRROR:3,8,1;BFLAGMALE:3,9,1;BFLAGCENTER:3,10,1;BFLAGSLIDE:3,11,1;BFLAGHASGRID:3,12,1;BFLAGORIMAT:3,13,1;BSCALE:3,16,8;BCAPS:3,24,8;FPOSX:11,32,32;FPOSY:11,64,32;FPOSZ:11,96,32;FORI:105=ar1;0;8;11,128,288;TGRID:106,416,32;TSECS:107=ar1;0;7;108,448,256;;",128,0,0,0
	.stabs "LINETYPE1STRUCT:Tt112=s52FX:11,0,32;FY:11,32,32;FZ:11,64,32;FA:11,96,32;FB:11,128,32;FC:11,160,32;FD:11,192,32;FE:11,224,32;FF:11,256,32;FG:11,288,32;FH:11,320,32;FI:11,352,32;LMODELINDEX:8,384,32;;",128,0,0,0
	.stabs "LINETYPE2STRUCT:Tt113=s24FX1:11,0,32;FY1:11,32,32;FZ1:11,64,32;FX2:11,96,32;FY2:11,128,32;FZ2:11,160,32;;",128,0,0,0
	.stabs "LINETYPE3STRUCT:Tt114=s36FX1:11,0,32;FY1:11,32,32;FZ1:11,64,32;FX2:11,96,32;FY2:11,128,32;FZ2:11,160,32;FX3:11,192,32;FY3:11,224,32;FZ3:11,256,32;;",128,0,0,0
	.stabs "LINETYPE4STRUCT:Tt115=s48FX1:11,0,32;FY1:11,32,32;FZ1:11,64,32;FX2:11,96,32;FY2:11,128,32;FZ2:11,160,32;FX3:11,192,32;FY3:11,224,32;FZ3:11,256,32;FX4:11,288,32;FY4:11,320,32;FZ4:11,352,32;;",128,0,0,0
	.stabs "LINETYPE5STRUCT:Tt116=s48FX1:11,0,32;FY1:11,32,32;FZ1:11,64,32;FX2:11,96,32;FY2:11,128,32;FZ2:11,160,32;FX3:11,192,32;FY3:11,224,32;FZ3:11,256,32;FX4:11,288,32;FY4:11,320,32;FZ4:11,352,32;;",128,0,0,0
	.stabs "PARTSTRUCT:Tt111=s56BTYPE:3,0,8;BFLAGS:3,8,8;WCOLOUR:6,16,16;WDATA:6,16,16;_1:112,32,416;_2:113,32,192;_3:114,32,288;_4:115,32,384;_5:116,32,384;;",128,0,0,0
	.stabs "DATFILE:Tt101=s1879048236IMODELINDEX:1,0,32;IPARTCOUNT:1,32,32;TSIZE:102,64,192;ISHADOWCOUNT:1,256,32;PASHADOW:103=*104,288,32;PDATA:109=*7,320,32;TPARTS:110=ar1;0;33554431;111,352,15032385536;;",128,0,0,0
	.stabs "PPART:p100=*101",160,0,0,8
	.stabs "SFROMFILE:v13",160,0,0,12
	.stabs "BRECURSION:p1",160,0,0,16
.balign 16

.globl _LOADSHADOW@12
_LOADSHADOW@12:
	push ebp
	mov ebp, esp
	sub esp, 240
	push ebx
	.stabn 68,0,40,_LOADSHADOW@12-_LOADSHADOW@12
	mov byte ptr [ebp-4], 0
.L_273B:
.L_2B72:
	push -1
	push 1
	push offset _Lt_2642
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+12]
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-8], eax
	push -1
	push 1
	push offset _Lt_2643
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+12]
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-12], eax
.stabn 68,0,71,.L_2B72-_LOADSHADOW@12
.L_2B73:
	mov eax, dword ptr [ebp-8]
	cmp dword ptr [ebp-12], eax
	jle .L_273E
.L_273F:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-8], eax
.L_273E:
.L_2740:
.stabn 68,0,72,.L_2B73-_LOADSHADOW@12
.L_2B74:
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp-8]
	inc eax
	push eax
	push dword ptr [ebp+12]
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrInit@20
.stabn 68,0,73,.L_2B74-_LOADSHADOW@12
.L_2B75:
	lea eax, [ebp-24]
	push eax
	call _FINDSHADOWFILE@4
	test eax, eax
	je .L_2742
.L_2743:
.stabn 68,0,75,.L_2B75-_LOADSHADOW@12
.L_2B76:
.L_2744:
	jmp .L_2741
.L_2742:
.L_2745:
.stabn 68,0,83,.L_2B76-_LOADSHADOW@12
.L_2B77:
	cmp dword ptr [ebp+16], 0
	je .L_2747
.L_2748:
.stabn 68,0,84,.L_2B77-_LOADSHADOW@12
.L_2B78:
	push dword ptr [ebp-24]
	push offset _Lt_2749
	call _printf
	add esp, 8
.stabn 68,0,85,.L_2B78-_LOADSHADOW@12
.L_2B79:
.L_274A:
.L_2747:
.L_2746:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,88,.L_2B79-_LOADSHADOW@12
.L_2B7A:
.L_274B:
.L_2741:
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
.stabn 68,0,91,.L_2B7A-_LOADSHADOW@12
.L_2B7B:
	push 0
	lea eax, [ebp-36]
	push eax
	lea eax, [ebp-24]
	push eax
	call _LOADFILE@12
	test al, al
	je .L_274D
.L_274E:
.stabn 68,0,92,.L_2B7B-_LOADSHADOW@12
.L_2B7C:
	mov eax, dword ptr [ebp-36]
	mov dword ptr [ebp-40], eax
.stabn 68,0,93,.L_2B7C-_LOADSHADOW@12
.L_2B7D:
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-56], 1
.stabn 68,0,95,.L_2B7D-_LOADSHADOW@12
.L_2B7E:
.L_274F:
.L_2752:
	lea eax, [ebp-44]
	push eax
	push dword ptr [ebp-40]
	call _READINT@8
	mov dword ptr [ebp-48], eax
.stabn 68,0,98,.L_2B7E-_LOADSHADOW@12
.L_2B7F:
	cmp dword ptr [ebp-48], 0
	jne .L_2754
.L_2755:
.stabn 68,0,99,.L_2B7F-_LOADSHADOW@12
.L_2B80:
.L_2756:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2758
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_2B5D
.L_2758:
	mov dword ptr [ebp-88], 0
.L_2B5D:
	cmp dword ptr [ebp-88], 0
	je .L_2757
.L_275A:
	inc dword ptr [ebp-40]
.L_275B:
	jmp .L_2756
.L_2757:
.stabn 68,0,100,.L_2B80-_LOADSHADOW@12
.L_2B82:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_275D
.L_275E:
	jmp .L_2750
.L_275D:
.L_275F:
.stabn 68,0,100,.L_2B82-_LOADSHADOW@12
.L_2B83:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	jmp .L_2751
.stabn 68,0,100,.L_2B83-_LOADSHADOW@12
.L_2B84:
.L_2760:
.L_2754:
.L_2753:
	cmp dword ptr [ebp-48], 0
	jge .L_2762
.L_2763:
.stabn 68,0,102,.L_2B84-_LOADSHADOW@12
.L_2B85:
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 23
	push offset _Lt_2766
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	lea eax, [ebp-96]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	lea eax, [ebp-108]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-132]
	call _puts
	add esp, 4
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,102,.L_2B85-_LOADSHADOW@12
.L_2B86:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,102,.L_2B86-_LOADSHADOW@12
.L_2B87:
	mov dword ptr [ebp-52], 1
	jmp .L_2750
.stabn 68,0,102,.L_2B87-_LOADSHADOW@12
.L_2B88:
.L_276C:
.L_2762:
.L_2761:
	mov eax, dword ptr [ebp-48]
	add dword ptr [ebp-40], eax
.stabn 68,0,103,.L_2B88-_LOADSHADOW@12
.L_2B89:
	cmp dword ptr [ebp-44], 0
	je .L_276E
.L_276F:
.stabn 68,0,106,.L_2B89-_LOADSHADOW@12
.L_2B8A:
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_2770
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	lea eax, [ebp-96]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	lea eax, [ebp-108]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-132]
	call _puts
	add esp, 4
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,107,.L_2B8A-_LOADSHADOW@12
.L_2B8B:
.L_2775:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2777
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-136], eax
	jmp .L_2B5E
.L_2777:
	mov dword ptr [ebp-136], 0
.L_2B5E:
	cmp dword ptr [ebp-136], 0
	je .L_2776
.L_2779:
	inc dword ptr [ebp-40]
.L_277A:
	jmp .L_2775
.L_2776:
.stabn 68,0,108,.L_2B8B-_LOADSHADOW@12
.L_2B8D:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_277C
.L_277D:
	jmp .L_2750
.L_277C:
.L_277E:
.stabn 68,0,108,.L_2B8D-_LOADSHADOW@12
.L_2B8E:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	jmp .L_2751
.stabn 68,0,108,.L_2B8E-_LOADSHADOW@12
.L_2B8F:
.L_277F:
.L_276E:
.L_276D:
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
.stabn 68,0,125,.L_2B8F-_LOADSHADOW@12
.L_2B90:
	lea ebx, [ebp-68]
	push ebx
	push dword ptr [ebp-40]
	call _READTOKEN@8
	mov dword ptr [ebp-48], eax
.stabn 68,0,126,.L_2B90-_LOADSHADOW@12
.L_2B91:
	mov eax, dword ptr [ebp-48]
	add dword ptr [ebp-40], eax
.stabn 68,0,127,.L_2B91-_LOADSHADOW@12
.L_2B92:
	push 0
	push -1
	push 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrUcase2@8
	push eax
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrInit@20
.stabn 68,0,129,.L_2B92-_LOADSHADOW@12
.L_2B93:
	push 9
	push offset _Lt_2780
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_2782
.L_2783:
.stabn 68,0,130,.L_2B93-_LOADSHADOW@12
.L_2B94:
	push 0
	push 7
	push offset _Lt_2784
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,134,.L_2B94-_LOADSHADOW@12
.L_2B95:
.L_2785:
.L_2782:
.L_2781:
	push 7
	push offset _Lt_2784
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	je .L_2787
.L_2788:
.stabn 68,0,137,.L_2B95-_LOADSHADOW@12
.L_2B96:
.L_2789:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_278B
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_2B5F
.L_278B:
	mov dword ptr [ebp-88], 0
.L_2B5F:
	cmp dword ptr [ebp-88], 0
	je .L_278A
.L_278D:
	inc dword ptr [ebp-40]
.L_278E:
	jmp .L_2789
.L_278A:
.stabn 68,0,138,.L_2B96-_LOADSHADOW@12
.L_2B98:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2790
.L_2791:
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2750
.L_2790:
.L_2792:
.stabn 68,0,138,.L_2B98-_LOADSHADOW@12
.L_2B99:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2751
.stabn 68,0,138,.L_2B99-_LOADSHADOW@12
.L_2B9A:
.L_2793:
.L_2787:
.L_2786:
	lea ebx, [ebp-68]
	push ebx
	push dword ptr [ebp-40]
	call _READTOKEN@8
	mov dword ptr [ebp-48], eax
.stabn 68,0,140,.L_2B9A-_LOADSHADOW@12
.L_2B9B:
	mov eax, dword ptr [ebp-48]
	add dword ptr [ebp-40], eax
.stabn 68,0,141,.L_2B9B-_LOADSHADOW@12
.L_2B9C:
.L_2794:
	push 0
	push -1
	push 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrUcase2@8
	push eax
	push -1
	lea eax, [ebp-96]
	push eax
	call _fb_StrInit@20
.stabn 68,0,148,.L_2B9C-_LOADSHADOW@12
.L_2B9D:
	push 10
	push offset _Lt_2798
	push -1
	lea eax, [ebp-96]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_2797
.L_2799:
.L_279A:
.stabn 68,0,150,.L_2B9D-_LOADSHADOW@12
.L_2B9E:
	cmp dword ptr [ebp+16], 3
	jne .L_279C
.L_279D:
.stabn 68,0,152,.L_2B9E-_LOADSHADOW@12
.L_2B9F:
	mov dword ptr [ebp-48], -1
.stabn 68,0,153,.L_2B9F-_LOADSHADOW@12
.L_2BA0:
	cmp dword ptr [ebp-48], 0
	jge .L_279F
.L_27A0:
.stabn 68,0,154,.L_2BA0-_LOADSHADOW@12
.L_2BA1:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_27A2
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,154,.L_2BA1-_LOADSHADOW@12
.L_2BA2:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,154,.L_2BA2-_LOADSHADOW@12
.L_2BA3:
	mov dword ptr [ebp-52], 1
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	jmp .L_2750
.stabn 68,0,154,.L_2BA3-_LOADSHADOW@12
.L_2BA4:
.L_27A7:
.L_279F:
.L_279E:
.L_27A8:
.L_279C:
.L_279B:
	lea eax, [ebp-68]
	push eax
	push dword ptr [ebp-40]
	call _READFILENAME@8
.stabn 68,0,156,.L_2BA4-_LOADSHADOW@12
.L_2BA5:
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
.stabn 68,0,157,.L_2BA5-_LOADSHADOW@12
.L_2BA6:
	mov eax, dword ptr [ebp+8]
	inc dword ptr [eax+32]
.stabn 68,0,158,.L_2BA6-_LOADSHADOW@12
.L_2BA7:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+32]
	imul ebx, 88
	mov eax, ebx
	push eax
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax+36]
	call _realloc
	add esp, 8
	mov dword ptr [ebp-124], eax
.stabn 68,0,159,.L_2BA7-_LOADSHADOW@12
.L_2BA8:
	cmp dword ptr [ebp-124], 0
	jne .L_27AA
.L_27AB:
.stabn 68,0,160,.L_2BA8-_LOADSHADOW@12
.L_2BA9:
	mov dword ptr [ebp-48], -1
.stabn 68,0,161,.L_2BA9-_LOADSHADOW@12
.L_2BAA:
	cmp dword ptr [ebp-48], 0
	jge .L_27AD
.L_27AE:
.stabn 68,0,162,.L_2BAA-_LOADSHADOW@12
.L_2BAB:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 30
	push offset _Lt_27B0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,162,.L_2BAB-_LOADSHADOW@12
.L_2BAC:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,162,.L_2BAC-_LOADSHADOW@12
.L_2BAD:
	mov dword ptr [ebp-52], 1
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	jmp .L_2750
.stabn 68,0,162,.L_2BAD-_LOADSHADOW@12
.L_2BAE:
.L_27B5:
.L_27AD:
.L_27AC:
.L_27B6:
.L_27AA:
.L_27A9:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-124]
	mov dword ptr [eax+36], ebx
.stabn 68,0,164,.L_2BAE-_LOADSHADOW@12
.L_2BAF:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+32]
	imul eax, 88
	mov ebx, dword ptr [ebp-124]
	add ebx, eax
	add ebx, -88
	mov dword ptr [ebp-124], ebx
.stabn 68,0,165,.L_2BAF-_LOADSHADOW@12
.L_2BB0:
	push 88
	push 0
	push dword ptr [ebp-124]
	call _memset
	add esp, 12
.stabn 68,0,166,.L_2BB0-_LOADSHADOW@12
.L_2BB1:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx]
	and eax, 4294967288
	or eax, 1
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx], al
.stabn 68,0,167,.L_2BB1-_LOADSHADOW@12
.L_2BB2:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax]
	and ebx, 4294967103
	mov eax, dword ptr [ebp+16]
	and eax, 3
	shl eax, 6
	or ebx, eax
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax], bl
.stabn 68,0,168,.L_2BB2-_LOADSHADOW@12
.L_2BB3:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+52], 1
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+54], 0
.stabn 68,0,169,.L_2BB3-_LOADSHADOW@12
.L_2BB4:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+53], 1
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+55], 0
.stabn 68,0,170,.L_2BB4-_LOADSHADOW@12
.L_2BB5:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
.stabn 68,0,171,.L_2BB5-_LOADSHADOW@12
.L_2BB6:
.L_27B7:
.L_27BA:
	lea ebx, [ebp-120]
	push ebx
	lea ebx, [ebp-108]
	push ebx
	push dword ptr [ebp-40]
	call _READBRACKETOPTION@12
	mov dword ptr [ebp-144], eax
.stabn 68,0,175,.L_2BB6-_LOADSHADOW@12
.L_2BB7:
	cmp dword ptr [ebp-144], 0
	jge .L_27BC
.L_27BD:
.stabn 68,0,176,.L_2BB7-_LOADSHADOW@12
.L_2BB8:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 23
	push offset _Lt_2766
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,176,.L_2BB8-_LOADSHADOW@12
.L_2BB9:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,176,.L_2BB9-_LOADSHADOW@12
.L_2BBA:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,176,.L_2BBA-_LOADSHADOW@12
.L_2BBB:
.L_27C2:
.L_27BC:
.L_27BB:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-40], eax
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_27C4
.L_27C5:
	jmp .L_27B8
.L_27C4:
.L_27C6:
.stabn 68,0,177,.L_2BBB-_LOADSHADOW@12
.L_2BBC:
.L_27C7:
	mov eax, dword ptr [ebp-108]
	mov ebx, dword ptr [eax]
	or ebx, 538976288
	mov dword ptr [ebp-148], ebx
.stabn 68,0,181,.L_2BBC-_LOADSHADOW@12
.L_2BBD:
	cmp dword ptr [ebp-148], 543581554
	jne .L_27CA
.L_27CD:
.L_27CE:
.stabn 68,0,182,.L_2BBD-_LOADSHADOW@12
.L_2BBE:
	push -1
	lea ebx, [ebp-136]
	push ebx
	call _fb_StrLen@8
	test eax, eax
	je .L_27D0
.L_27D1:
.stabn 68,0,183,.L_2BBE-_LOADSHADOW@12
.L_2BBF:
	mov dword ptr [ebp-144], -1
.stabn 68,0,184,.L_2BBF-_LOADSHADOW@12
.L_2BC0:
	cmp dword ptr [ebp-144], 0
	jge .L_27D3
.L_27D4:
.stabn 68,0,185,.L_2BC0-_LOADSHADOW@12
.L_2BC1:
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 37
	push offset _Lt_27D6
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	lea eax, [ebp-188]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-200]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-200]
	call _puts
	add esp, 4
	lea eax, [ebp-200]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,185,.L_2BC1-_LOADSHADOW@12
.L_2BC2:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,185,.L_2BC2-_LOADSHADOW@12
.L_2BC3:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,185,.L_2BC3-_LOADSHADOW@12
.L_2BC4:
.L_27DB:
.L_27D3:
.L_27D2:
.L_27DC:
.L_27D0:
.L_27CF:
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-152], eax
.stabn 68,0,187,.L_2BC4-_LOADSHADOW@12
.L_2BC5:
	lea eax, [ebp-136]
	push eax
	push dword ptr [ebp-152]
	call _READTOKEN@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,188,.L_2BC5-_LOADSHADOW@12
.L_2BC6:
	cmp dword ptr [ebp-144], 0
	jg .L_27DE
.L_27DF:
.stabn 68,0,189,.L_2BC6-_LOADSHADOW@12
.L_2BC7:
	mov dword ptr [ebp-144], -1
.stabn 68,0,190,.L_2BC7-_LOADSHADOW@12
.L_2BC8:
	cmp dword ptr [ebp-144], 0
	jge .L_27E1
.L_27E2:
.stabn 68,0,191,.L_2BC8-_LOADSHADOW@12
.L_2BC9:
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 31
	push offset _Lt_27E4
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	lea eax, [ebp-188]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-200]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-200]
	call _puts
	add esp, 4
	lea eax, [ebp-200]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,191,.L_2BC9-_LOADSHADOW@12
.L_2BCA:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,191,.L_2BCA-_LOADSHADOW@12
.L_2BCB:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,191,.L_2BCB-_LOADSHADOW@12
.L_2BCC:
.L_27E9:
.L_27E1:
.L_27E0:
.L_27EA:
.L_27DE:
.L_27DD:
.L_27EB:
	jmp .L_27C8
.L_27CA:
	cmp dword ptr [ebp-148], 544436080
	jne .L_27EC
.L_27EF:
.L_27F0:
.stabn 68,0,193,.L_2BCC-_LOADSHADOW@12
.L_2BCD:
	mov eax, dword ptr [ebp-124]
	lea ebx, [eax+4]
	mov dword ptr [ebp-152], ebx
	mov ebx, dword ptr [ebp-120]
	mov dword ptr [ebp-156], ebx
.stabn 68,0,194,.L_2BCD-_LOADSHADOW@12
.L_2BCE:
.L_27F1:
	mov dword ptr [ebp-160], 0
.L_27F5:
.L_27F6:
.stabn 68,0,195,.L_2BCE-_LOADSHADOW@12
.L_2BCF:
	push dword ptr [ebp-152]
	push dword ptr [ebp-156]
	call _READFLOAT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,196,.L_2BCF-_LOADSHADOW@12
.L_2BD0:
	cmp dword ptr [ebp-144], 0
	jge .L_27F8
.L_27F9:
.stabn 68,0,196,.L_2BD0-_LOADSHADOW@12
.L_2BD1:
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 51
	push offset _Lt_27FF
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-208]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-208]
	call _puts
	add esp, 4
	lea eax, [ebp-208]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,196,.L_2BD1-_LOADSHADOW@12
.L_2BD2:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,196,.L_2BD2-_LOADSHADOW@12
.L_2BD3:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,196,.L_2BD3-_LOADSHADOW@12
.L_2BD4:
.L_2804:
.L_27F8:
.L_27F7:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-156], eax
.stabn 68,0,196,.L_2BD4-_LOADSHADOW@12
.L_2BD5:
	add dword ptr [ebp-152], 4
.stabn 68,0,200,.L_2BD5-_LOADSHADOW@12
.L_2BD6:
.L_2805:
.L_27F3:
	inc dword ptr [ebp-160]
.L_27F2:
	cmp dword ptr [ebp-160], 2
	jle .L_27F5
.L_27F4:
.L_2806:
.stabn 68,0,201,.L_2BD6-_LOADSHADOW@12
.L_2BD7:
.L_2807:
	jmp .L_27C8
.L_27EC:
	cmp dword ptr [ebp-148], 1684632167
	jne .L_2808
.L_280A:
.L_280B:
.stabn 68,0,203,.L_2BD7-_LOADSHADOW@12
.L_2BD8:
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-152], eax
.stabn 68,0,204,.L_2BD8-_LOADSHADOW@12
.L_2BD9:
.L_280C:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	je .L_280E
	mov ebx, dword ptr [ebp-152]
	movzx eax, byte ptr [ebx]
	cmp eax, 9
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-172], eax
	jmp .L_2B60
.L_280E:
	mov dword ptr [ebp-172], -1
.L_2B60:
	cmp dword ptr [ebp-172], 0
	je .L_280D
.L_2810:
	inc dword ptr [ebp-152]
.L_2811:
	jmp .L_280C
.L_280D:
.stabn 68,0,214,.L_2BD9-_LOADSHADOW@12
.L_2BDB:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	je .L_2815
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	cmp ebx, 48
	jb .L_2813
	mov ebx, dword ptr [ebp-152]
	movzx eax, byte ptr [ebx]
	cmp eax, 57
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-176], ebx
	jmp .L_2B62
.L_2813:
	mov dword ptr [ebp-176], -1
.L_2B62:
	mov ebx, dword ptr [ebp-176]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-180], ebx
	jmp .L_2B61
.L_2815:
	mov dword ptr [ebp-180], 0
.L_2B61:
	cmp dword ptr [ebp-180], 0
	je .L_2818
.L_2819:
.stabn 68,0,214,.L_2BDB-_LOADSHADOW@12
.L_2BDE:
	mov dword ptr [ebp-144], -1
.stabn 68,0,214,.L_2BDE-_LOADSHADOW@12
.L_2BDF:
	cmp dword ptr [ebp-144], 0
	jge .L_281B
.L_281C:
.stabn 68,0,214,.L_2BDF-_LOADSHADOW@12
.L_2BE0:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 28
	push offset _Lt_281E
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,214,.L_2BE0-_LOADSHADOW@12
.L_2BE1:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,214,.L_2BE1-_LOADSHADOW@12
.L_2BE2:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,214,.L_2BE2-_LOADSHADOW@12
.L_2BE3:
.L_2823:
.L_281B:
.L_281A:
.L_2824:
.L_2818:
.L_2817:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	jne .L_2826
.L_2827:
.stabn 68,0,215,.L_2BE3-_LOADSHADOW@12
.L_2BE4:
	inc dword ptr [ebp-152]
.stabn 68,0,216,.L_2BE4-_LOADSHADOW@12
.L_2BE5:
	lea eax, [ebp-156]
	push eax
	push dword ptr [ebp-152]
	call _READINT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,217,.L_2BE5-_LOADSHADOW@12
.L_2BE6:
	cmp dword ptr [ebp-144], 0
	jge .L_2829
.L_282A:
.stabn 68,0,217,.L_2BE6-_LOADSHADOW@12
.L_2BE7:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_282E
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,217,.L_2BE7-_LOADSHADOW@12
.L_2BE8:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,217,.L_2BE8-_LOADSHADOW@12
.L_2BE9:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,217,.L_2BE9-_LOADSHADOW@12
.L_2BEA:
.L_2833:
.L_2829:
.L_2828:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,217,.L_2BEA-_LOADSHADOW@12
.L_2BEB:
	neg dword ptr [ebp-156]
.stabn 68,0,218,.L_2BEB-_LOADSHADOW@12
.L_2BEC:
.L_2834:
	jmp .L_2825
.L_2826:
.L_2835:
.stabn 68,0,219,.L_2BEC-_LOADSHADOW@12
.L_2BED:
	lea eax, [ebp-156]
	push eax
	push dword ptr [ebp-152]
	call _READINT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,220,.L_2BED-_LOADSHADOW@12
.L_2BEE:
	cmp dword ptr [ebp-144], 0
	jge .L_2837
.L_2838:
.stabn 68,0,220,.L_2BEE-_LOADSHADOW@12
.L_2BEF:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_283C
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,220,.L_2BEF-_LOADSHADOW@12
.L_2BF0:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,220,.L_2BF0-_LOADSHADOW@12
.L_2BF1:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,220,.L_2BF1-_LOADSHADOW@12
.L_2BF2:
.L_2841:
.L_2837:
.L_2836:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,220,.L_2BF2-_LOADSHADOW@12
.L_2BF3:
.L_2842:
.L_2825:
	cmp dword ptr [ebp-156], 0
	jne .L_2844
.L_2845:
.stabn 68,0,222,.L_2BF3-_LOADSHADOW@12
.L_2BF4:
	mov dword ptr [ebp-144], -1
.stabn 68,0,223,.L_2BF4-_LOADSHADOW@12
.L_2BF5:
	cmp dword ptr [ebp-144], 0
	jge .L_2847
.L_2848:
.stabn 68,0,224,.L_2BF5-_LOADSHADOW@12
.L_2BF6:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 37
	push offset _Lt_284A
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,224,.L_2BF6-_LOADSHADOW@12
.L_2BF7:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,224,.L_2BF7-_LOADSHADOW@12
.L_2BF8:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,224,.L_2BF8-_LOADSHADOW@12
.L_2BF9:
.L_284F:
.L_2847:
.L_2846:
.L_2850:
.L_2844:
.L_2843:
.L_2851:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	je .L_2853
	mov ebx, dword ptr [ebp-152]
	movzx eax, byte ptr [ebx]
	cmp eax, 9
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-184], eax
	jmp .L_2B63
.L_2853:
	mov dword ptr [ebp-184], -1
.L_2B63:
	cmp dword ptr [ebp-184], 0
	je .L_2852
.L_2855:
	inc dword ptr [ebp-152]
.L_2856:
	jmp .L_2851
.L_2852:
.stabn 68,0,226,.L_2BF9-_LOADSHADOW@12
.L_2BFB:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	je .L_2859
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	cmp ebx, 48
	jb .L_2857
	mov ebx, dword ptr [ebp-152]
	movzx eax, byte ptr [ebx]
	cmp eax, 57
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-188], ebx
	jmp .L_2B65
.L_2857:
	mov dword ptr [ebp-188], -1
.L_2B65:
	mov ebx, dword ptr [ebp-188]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-192], ebx
	jmp .L_2B64
.L_2859:
	mov dword ptr [ebp-192], 0
.L_2B64:
	cmp dword ptr [ebp-192], 0
	je .L_285C
.L_285D:
.stabn 68,0,226,.L_2BFB-_LOADSHADOW@12
.L_2BFE:
	mov dword ptr [ebp-144], -1
.stabn 68,0,226,.L_2BFE-_LOADSHADOW@12
.L_2BFF:
	cmp dword ptr [ebp-144], 0
	jge .L_285F
.L_2860:
.stabn 68,0,226,.L_2BFF-_LOADSHADOW@12
.L_2C00:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 28
	push offset _Lt_281E
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,226,.L_2C00-_LOADSHADOW@12
.L_2C01:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,226,.L_2C01-_LOADSHADOW@12
.L_2C02:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,226,.L_2C02-_LOADSHADOW@12
.L_2C03:
.L_2865:
.L_285F:
.L_285E:
.L_2866:
.L_285C:
.L_285B:
	mov eax, dword ptr [ebp-152]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	jne .L_2868
.L_2869:
.stabn 68,0,227,.L_2C03-_LOADSHADOW@12
.L_2C04:
	inc dword ptr [ebp-152]
.stabn 68,0,228,.L_2C04-_LOADSHADOW@12
.L_2C05:
	lea eax, [ebp-160]
	push eax
	push dword ptr [ebp-152]
	call _READINT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,229,.L_2C05-_LOADSHADOW@12
.L_2C06:
	cmp dword ptr [ebp-144], 0
	jge .L_286B
.L_286C:
.stabn 68,0,229,.L_2C06-_LOADSHADOW@12
.L_2C07:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_2870
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,229,.L_2C07-_LOADSHADOW@12
.L_2C08:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,229,.L_2C08-_LOADSHADOW@12
.L_2C09:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,229,.L_2C09-_LOADSHADOW@12
.L_2C0A:
.L_2875:
.L_286B:
.L_286A:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,229,.L_2C0A-_LOADSHADOW@12
.L_2C0B:
	neg dword ptr [ebp-160]
.stabn 68,0,230,.L_2C0B-_LOADSHADOW@12
.L_2C0C:
.L_2876:
	jmp .L_2867
.L_2868:
.L_2877:
.stabn 68,0,231,.L_2C0C-_LOADSHADOW@12
.L_2C0D:
	lea eax, [ebp-160]
	push eax
	push dword ptr [ebp-152]
	call _READINT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,232,.L_2C0D-_LOADSHADOW@12
.L_2C0E:
	cmp dword ptr [ebp-144], 0
	jge .L_2879
.L_287A:
.stabn 68,0,232,.L_2C0E-_LOADSHADOW@12
.L_2C0F:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_2870
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,232,.L_2C0F-_LOADSHADOW@12
.L_2C10:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,232,.L_2C10-_LOADSHADOW@12
.L_2C11:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,232,.L_2C11-_LOADSHADOW@12
.L_2C12:
.L_287F:
.L_2879:
.L_2878:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,232,.L_2C12-_LOADSHADOW@12
.L_2C13:
.L_2880:
.L_2867:
	cmp dword ptr [ebp-156], 0
	jne .L_2882
.L_2883:
.stabn 68,0,234,.L_2C13-_LOADSHADOW@12
.L_2C14:
	mov dword ptr [ebp-144], -1
.stabn 68,0,235,.L_2C14-_LOADSHADOW@12
.L_2C15:
	cmp dword ptr [ebp-144], 0
	jge .L_2885
.L_2886:
.stabn 68,0,236,.L_2C15-_LOADSHADOW@12
.L_2C16:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 37
	push offset _Lt_2888
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,236,.L_2C16-_LOADSHADOW@12
.L_2C17:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,236,.L_2C17-_LOADSHADOW@12
.L_2C18:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,236,.L_2C18-_LOADSHADOW@12
.L_2C19:
.L_288D:
.L_2885:
.L_2884:
.L_288E:
.L_2882:
.L_2881:
	lea eax, [ebp-164]
	push eax
	push dword ptr [ebp-152]
	call _READFLOAT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,238,.L_2C19-_LOADSHADOW@12
.L_2C1A:
	cmp dword ptr [ebp-144], 0
	jge .L_2890
.L_2891:
.stabn 68,0,238,.L_2C1A-_LOADSHADOW@12
.L_2C1B:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_2895
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,238,.L_2C1B-_LOADSHADOW@12
.L_2C1C:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,238,.L_2C1C-_LOADSHADOW@12
.L_2C1D:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,238,.L_2C1D-_LOADSHADOW@12
.L_2C1E:
.L_289A:
.L_2890:
.L_288F:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,238,.L_2C1E-_LOADSHADOW@12
.L_2C1F:
	fld dword ptr [ebp-164]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-164]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_289C
.L_289D:
	fld dword ptr [ebp-164]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_289E
	call _printf
	add esp, 12
.L_289C:
.L_289F:
.stabn 68,0,240,.L_2C1F-_LOADSHADOW@12
.L_2C20:
	lea ebx, [ebp-168]
	push ebx
	push dword ptr [ebp-152]
	call _READFLOAT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,242,.L_2C20-_LOADSHADOW@12
.L_2C21:
	cmp dword ptr [ebp-144], 0
	jge .L_28A1
.L_28A2:
.stabn 68,0,242,.L_2C21-_LOADSHADOW@12
.L_2C22:
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	mov dword ptr [ebp-232], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_28A6
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	lea eax, [ebp-228]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-240]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-240]
	call _puts
	add esp, 4
	lea eax, [ebp-240]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,242,.L_2C22-_LOADSHADOW@12
.L_2C23:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,242,.L_2C23-_LOADSHADOW@12
.L_2C24:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,242,.L_2C24-_LOADSHADOW@12
.L_2C25:
.L_28AB:
.L_28A1:
.L_28A0:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-152], eax
.stabn 68,0,242,.L_2C25-_LOADSHADOW@12
.L_2C26:
	fld dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_28AD
.L_28AE:
	fld dword ptr [ebp-168]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_28AF
	call _printf
	add esp, 12
.L_28AD:
.L_28B0:
.stabn 68,0,244,.L_2C26-_LOADSHADOW@12
.L_2C27:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967279
	or eax, 16
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,249,.L_2C27-_LOADSHADOW@12
.L_2C28:
.L_28B1:
	mov eax, dword ptr [ebp-124]
	lea ebx, [eax+52]
	mov dword ptr [ebp-196], ebx
.stabn 68,0,250,.L_2C28-_LOADSHADOW@12
.L_2C29:
	mov bl, byte ptr [ebp-156]
	mov eax, dword ptr [ebp-196]
	mov byte ptr [eax], bl
	mov bl, byte ptr [ebp-160]
	mov eax, dword ptr [ebp-196]
	mov byte ptr [eax+1], bl
.stabn 68,0,251,.L_2C29-_LOADSHADOW@12
.L_2C2A:
	mov ebx, dword ptr [ebp-196]
	fld dword ptr [ebp-164]
	sub esp, 4
	fistp dword ptr [esp]
	mov al, byte ptr [esp]
	mov byte ptr [ebx+2], al
	add esp, 4
	mov ebx, dword ptr [ebp-196]
	fld dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	mov al, byte ptr [esp]
	mov byte ptr [ebx+3], al
	add esp, 4
.stabn 68,0,252,.L_2C2A-_LOADSHADOW@12
.L_2C2B:
.L_28B3:
.L_28B4:
	jmp .L_27C8
.L_2808:
	cmp dword ptr [ebp-148], 543781487
	jne .L_28B5
.L_28B8:
.L_28B9:
.stabn 68,0,254,.L_2C2B-_LOADSHADOW@12
.L_2C2C:
	mov ebx, dword ptr [ebp-124]
	lea eax, [ebx+16]
	mov dword ptr [ebp-152], eax
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-156], eax
.stabn 68,0,255,.L_2C2C-_LOADSHADOW@12
.L_2C2D:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967263
	or ebx, 32
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,256,.L_2C2D-_LOADSHADOW@12
.L_2C2E:
.L_28BA:
	mov dword ptr [ebp-160], 0
.L_28BE:
.L_28BF:
.stabn 68,0,257,.L_2C2E-_LOADSHADOW@12
.L_2C2F:
	push dword ptr [ebp-152]
	push dword ptr [ebp-156]
	call _READFLOAT@8
	mov dword ptr [ebp-144], eax
.stabn 68,0,258,.L_2C2F-_LOADSHADOW@12
.L_2C30:
	cmp dword ptr [ebp-144], 0
	jge .L_28C1
.L_28C2:
.stabn 68,0,258,.L_2C30-_LOADSHADOW@12
.L_2C31:
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_28C6
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-208]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-208]
	call _puts
	add esp, 4
	lea eax, [ebp-208]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,258,.L_2C31-_LOADSHADOW@12
.L_2C32:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,258,.L_2C32-_LOADSHADOW@12
.L_2C33:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,258,.L_2C33-_LOADSHADOW@12
.L_2C34:
.L_28CB:
.L_28C1:
.L_28C0:
	mov eax, dword ptr [ebp-144]
	add dword ptr [ebp-156], eax
.stabn 68,0,258,.L_2C34-_LOADSHADOW@12
.L_2C35:
	add dword ptr [ebp-152], 4
.stabn 68,0,262,.L_2C35-_LOADSHADOW@12
.L_2C36:
.L_28CC:
.L_28BC:
	inc dword ptr [ebp-160]
.L_28BB:
	cmp dword ptr [ebp-160], 8
	jle .L_28BE
.L_28BD:
.L_28CD:
.stabn 68,0,263,.L_2C36-_LOADSHADOW@12
.L_2C37:
.L_28CE:
	jmp .L_27C8
.L_28B5:
.L_28D0:
.stabn 68,0,266,.L_2C37-_LOADSHADOW@12
.L_2C38:
	mov dword ptr [ebp-144], -1
.stabn 68,0,267,.L_2C38-_LOADSHADOW@12
.L_2C39:
	cmp dword ptr [ebp-144], 0
	jge .L_28D2
.L_28D3:
.stabn 68,0,268,.L_2C39-_LOADSHADOW@12
.L_2C3A:
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 36
	push offset _Lt_28D5
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	lea eax, [ebp-160]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-196]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-196]
	call _puts
	add esp, 4
	lea eax, [ebp-196]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,268,.L_2C3A-_LOADSHADOW@12
.L_2C3B:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,268,.L_2C3B-_LOADSHADOW@12
.L_2C3C:
	mov dword ptr [ebp-52], 1
	jmp .L_27B8
.stabn 68,0,268,.L_2C3C-_LOADSHADOW@12
.L_2C3D:
.L_28DA:
.L_28D2:
.L_28D1:
.L_28DB:
.L_28CF:
.L_27C8:
.L_28DC:
.L_28DD:
.L_27B9:
	jmp .L_27B7
.L_27B8:
.stabn 68,0,270,.L_2C3D-_LOADSHADOW@12
.L_2C3E:
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_28DF
.L_28E0:
.stabn 68,0,271,.L_2C3E-_LOADSHADOW@12
.L_2C3F:
	mov dword ptr [ebp-48], -1
.stabn 68,0,272,.L_2C3F-_LOADSHADOW@12
.L_2C40:
	cmp dword ptr [ebp-48], 0
	jge .L_28E2
.L_28E3:
.stabn 68,0,273,.L_2C40-_LOADSHADOW@12
.L_2C41:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 42
	push offset _Lt_28E5
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,273,.L_2C41-_LOADSHADOW@12
.L_2C42:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,273,.L_2C42-_LOADSHADOW@12
.L_2C43:
	mov dword ptr [ebp-52], 1
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	jmp .L_2750
.stabn 68,0,273,.L_2C43-_LOADSHADOW@12
.L_2C44:
.L_28EA:
.L_28E2:
.L_28E1:
.L_28EB:
.L_28DF:
.L_28DE:
	mov eax, dword ptr [ebp+16]
	inc eax
	push eax
	lea eax, [ebp-136]
	push eax
	push dword ptr [ebp+8]
	call _LOADSHADOW@12
.stabn 68,0,275,.L_2C44-_LOADSHADOW@12
.L_2C45:
.L_28EC:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_28EE
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-140], eax
	jmp .L_2B67
.L_28EE:
	mov dword ptr [ebp-140], 0
.L_2B67:
	cmp dword ptr [ebp-140], 0
	je .L_28ED
.L_28F0:
	inc dword ptr [ebp-40]
.L_28F1:
	jmp .L_28EC
.L_28ED:
.stabn 68,0,276,.L_2C45-_LOADSHADOW@12
.L_2C47:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_28F3
.L_28F4:
	lea ebx, [ebp-136]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2750
.L_28F3:
.L_28F5:
.stabn 68,0,276,.L_2C47-_LOADSHADOW@12
.L_2C48:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	lea ebx, [ebp-136]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2751
.stabn 68,0,276,.L_2C48-_LOADSHADOW@12
.L_2C49:
	lea ebx, [ebp-136]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
.L_28F6:
	jmp .L_2795
.L_2797:
	push 9
	push offset _Lt_28F8
	push -1
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrCompare@16
	test eax, eax
	jne .L_28F7
.L_28F9:
.L_28FA:
.stabn 68,0,278,.L_2C49-_LOADSHADOW@12
.L_2C4A:
	lea eax, [ebp-68]
	push eax
	push dword ptr [ebp-40]
	call _READFILENAME@8
.stabn 68,0,315,.L_2C4A-_LOADSHADOW@12
.L_2C4B:
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
.stabn 68,0,319,.L_2C4B-_LOADSHADOW@12
.L_2C4C:
	mov eax, dword ptr [ebp+8]
	inc dword ptr [eax+32]
.stabn 68,0,320,.L_2C4C-_LOADSHADOW@12
.L_2C4D:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+32]
	imul ebx, 88
	mov eax, ebx
	push eax
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax+36]
	call _realloc
	add esp, 8
	mov dword ptr [ebp-124], eax
.stabn 68,0,321,.L_2C4D-_LOADSHADOW@12
.L_2C4E:
	cmp dword ptr [ebp-124], 0
	jne .L_28FC
.L_28FD:
.stabn 68,0,322,.L_2C4E-_LOADSHADOW@12
.L_2C4F:
	mov dword ptr [ebp-48], -1
.stabn 68,0,323,.L_2C4F-_LOADSHADOW@12
.L_2C50:
	cmp dword ptr [ebp-48], 0
	jge .L_28FF
.L_2900:
.stabn 68,0,324,.L_2C50-_LOADSHADOW@12
.L_2C51:
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 30
	push offset _Lt_27B0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	lea eax, [ebp-140]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-176]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-176]
	call _puts
	add esp, 4
	lea eax, [ebp-176]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,324,.L_2C51-_LOADSHADOW@12
.L_2C52:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,324,.L_2C52-_LOADSHADOW@12
.L_2C53:
	mov dword ptr [ebp-52], 1
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	jmp .L_2750
.stabn 68,0,324,.L_2C53-_LOADSHADOW@12
.L_2C54:
.L_2905:
.L_28FF:
.L_28FE:
.L_2906:
.L_28FC:
.L_28FB:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp-124]
	mov dword ptr [eax+36], ebx
.stabn 68,0,326,.L_2C54-_LOADSHADOW@12
.L_2C55:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+32]
	imul eax, 88
	mov ebx, dword ptr [ebp-124]
	add ebx, eax
	add ebx, -88
	mov dword ptr [ebp-124], ebx
.stabn 68,0,327,.L_2C55-_LOADSHADOW@12
.L_2C56:
	push 88
	push 0
	push dword ptr [ebp-124]
	call _memset
	add esp, 12
.stabn 68,0,328,.L_2C56-_LOADSHADOW@12
.L_2C57:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx]
	and eax, 4294967288
	or eax, 2
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx], al
.stabn 68,0,329,.L_2C57-_LOADSHADOW@12
.L_2C58:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax]
	and ebx, 4294967103
	mov eax, dword ptr [ebp+16]
	and eax, 3
	shl eax, 6
	or ebx, eax
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax], bl
.stabn 68,0,330,.L_2C58-_LOADSHADOW@12
.L_2C59:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967294
	or eax, 1
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,331,.L_2C59-_LOADSHADOW@12
.L_2C5A:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+52], 1
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+54], 0
.stabn 68,0,332,.L_2C5A-_LOADSHADOW@12
.L_2C5B:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+53], 1
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+55], 0
.stabn 68,0,333,.L_2C5B-_LOADSHADOW@12
.L_2C5C:
.L_2907:
.L_290A:
	lea eax, [ebp-120]
	push eax
	lea eax, [ebp-108]
	push eax
	push dword ptr [ebp-40]
	call _READBRACKETOPTION@12
	mov dword ptr [ebp-132], eax
.stabn 68,0,337,.L_2C5C-_LOADSHADOW@12
.L_2C5D:
	cmp dword ptr [ebp-132], 0
	jge .L_290C
.L_290D:
.stabn 68,0,338,.L_2C5D-_LOADSHADOW@12
.L_2C5E:
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 23
	push offset _Lt_2766
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	lea eax, [ebp-144]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-180]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-180]
	call _puts
	add esp, 4
	lea eax, [ebp-180]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,338,.L_2C5E-_LOADSHADOW@12
.L_2C5F:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,338,.L_2C5F-_LOADSHADOW@12
.L_2C60:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,338,.L_2C60-_LOADSHADOW@12
.L_2C61:
.L_2912:
.L_290C:
.L_290B:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-40], eax
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_2914
.L_2915:
	jmp .L_2908
.L_2914:
.L_2916:
.stabn 68,0,339,.L_2C61-_LOADSHADOW@12
.L_2C62:
.L_2917:
	mov eax, dword ptr [ebp-108]
	mov ebx, dword ptr [eax]
	or ebx, 538976288
	mov dword ptr [ebp-136], ebx
.stabn 68,0,343,.L_2C62-_LOADSHADOW@12
.L_2C63:
	cmp dword ptr [ebp-136], 1684956519
	jne .L_291A
.L_291C:
.L_291D:
.stabn 68,0,344,.L_2C63-_LOADSHADOW@12
.L_2C64:
.L_291E:
	mov ebx, dword ptr [ebp-120]
	movzx eax, byte ptr [ebx]
	or eax, 32
	mov dword ptr [ebp-140], eax
.stabn 68,0,345,.L_2C64-_LOADSHADOW@12
.L_2C65:
	cmp dword ptr [ebp-140], 102
	jne .L_2921
.L_2922:
.L_2923:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967293
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,346,.L_2C65-_LOADSHADOW@12
.L_2C66:
.L_2924:
	jmp .L_291F
.L_2921:
	cmp dword ptr [ebp-140], 109
	jne .L_2925
.L_2927:
.L_2928:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967293
	or eax, 2
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,347,.L_2C66-_LOADSHADOW@12
.L_2C67:
.L_2929:
	jmp .L_291F
.L_2925:
.L_292B:
.stabn 68,0,348,.L_2C67-_LOADSHADOW@12
.L_2C68:
	mov dword ptr [ebp-132], -1
.stabn 68,0,349,.L_2C68-_LOADSHADOW@12
.L_2C69:
	cmp dword ptr [ebp-132], 0
	jge .L_292D
.L_292E:
.stabn 68,0,350,.L_2C69-_LOADSHADOW@12
.L_2C6A:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 31
	push offset _Lt_2930
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,350,.L_2C6A-_LOADSHADOW@12
.L_2C6B:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,350,.L_2C6B-_LOADSHADOW@12
.L_2C6C:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,350,.L_2C6C-_LOADSHADOW@12
.L_2C6D:
.L_2935:
.L_292D:
.L_292C:
.L_2936:
.L_292A:
.L_291F:
.L_2937:
.L_2938:
	jmp .L_2918
.L_291A:
	cmp dword ptr [ebp-136], 1935893875
	jne .L_2939
.L_293B:
.L_293C:
.stabn 68,0,352,.L_2C6D-_LOADSHADOW@12
.L_2C6E:
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-140], eax
.stabn 68,0,367,.L_2C6E-_LOADSHADOW@12
.L_2C6F:
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
.stabn 68,0,368,.L_2C6F-_LOADSHADOW@12
.L_2C70:
	mov dword ptr [ebp-156], 0
.stabn 68,0,369,.L_2C70-_LOADSHADOW@12
.L_2C71:
.L_293D:
.L_2940:
	lea eax, [ebp-152]
	push eax
	push dword ptr [ebp-140]
	call _READTOKEN@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,372,.L_2C71-_LOADSHADOW@12
.L_2C72:
	cmp dword ptr [ebp-132], 0
	jg .L_2942
.L_2943:
	jmp .L_293E
.L_2942:
.L_2944:
.stabn 68,0,373,.L_2C72-_LOADSHADOW@12
.L_2C73:
	cmp dword ptr [ebp-156], 8
	jl .L_2946
.L_2947:
.stabn 68,0,374,.L_2C73-_LOADSHADOW@12
.L_2C74:
	mov dword ptr [ebp-132], -1
.stabn 68,0,375,.L_2C74-_LOADSHADOW@12
.L_2C75:
	cmp dword ptr [ebp-132], 0
	jge .L_2949
.L_294A:
.stabn 68,0,376,.L_2C75-_LOADSHADOW@12
.L_2C76:
	mov dword ptr [ebp-220], 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 30
	push offset _Lt_294C
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	lea eax, [ebp-208]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-220]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-220]
	call _puts
	add esp, 4
	lea eax, [ebp-220]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,376,.L_2C76-_LOADSHADOW@12
.L_2C77:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,376,.L_2C77-_LOADSHADOW@12
.L_2C78:
	mov dword ptr [ebp-52], 1
	jmp .L_293E
.stabn 68,0,376,.L_2C78-_LOADSHADOW@12
.L_2C79:
.L_2951:
.L_2949:
.L_2948:
.L_2952:
.L_2946:
.L_2945:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,378,.L_2C79-_LOADSHADOW@12
.L_2C7A:
	mov eax, dword ptr [ebp-152]
	movzx ebx, word ptr [eax]
	and ebx, -8225
	mov dword ptr [ebp-172], ebx
.stabn 68,0,379,.L_2C7A-_LOADSHADOW@12
.L_2C7B:
.L_2953:
	cmp dword ptr [ebp-172], 82
	jne .L_2955
.L_2957:
.L_2958:
	mov dword ptr [ebp-160], 1
.stabn 68,0,381,.L_2C7B-_LOADSHADOW@12
.L_2C7C:
.L_2959:
	jmp .L_2954
.L_2955:
	cmp dword ptr [ebp-172], 65
	jne .L_295A
.L_295B:
.L_295C:
	mov dword ptr [ebp-160], 2
.stabn 68,0,382,.L_2C7C-_LOADSHADOW@12
.L_2C7D:
.L_295D:
	jmp .L_2954
.L_295A:
	cmp dword ptr [ebp-172], 83
	jne .L_295E
.L_2960:
.L_2961:
	mov dword ptr [ebp-160], 3
.stabn 68,0,383,.L_2C7D-_LOADSHADOW@12
.L_2C7E:
.L_2962:
	jmp .L_2954
.L_295E:
	cmp dword ptr [ebp-172], 19551
	jne .L_2963
.L_2965:
.L_2966:
	mov dword ptr [ebp-160], 4
.stabn 68,0,384,.L_2C7E-_LOADSHADOW@12
.L_2C7F:
.L_2967:
	jmp .L_2954
.L_2963:
	cmp dword ptr [ebp-172], 24396
	jne .L_2968
.L_296A:
.L_296B:
	mov dword ptr [ebp-160], 5
.stabn 68,0,385,.L_2C7F-_LOADSHADOW@12
.L_2C80:
.L_296C:
	jmp .L_2954
.L_2968:
.L_296E:
.stabn 68,0,386,.L_2C80-_LOADSHADOW@12
.L_2C81:
	mov dword ptr [ebp-132], -1
.stabn 68,0,387,.L_2C81-_LOADSHADOW@12
.L_2C82:
	cmp dword ptr [ebp-132], 0
	jge .L_2970
.L_2971:
.stabn 68,0,388,.L_2C82-_LOADSHADOW@12
.L_2C83:
	mov dword ptr [ebp-220], 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 34
	push offset _Lt_2973
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	lea eax, [ebp-208]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-220]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-220]
	call _puts
	add esp, 4
	lea eax, [ebp-220]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,388,.L_2C83-_LOADSHADOW@12
.L_2C84:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,388,.L_2C84-_LOADSHADOW@12
.L_2C85:
	mov dword ptr [ebp-52], 1
	jmp .L_293E
.stabn 68,0,388,.L_2C85-_LOADSHADOW@12
.L_2C86:
.L_2978:
.L_2970:
.L_296F:
.L_2979:
.L_296D:
.L_2954:
.L_297A:
	lea eax, [ebp-164]
	push eax
	push dword ptr [ebp-140]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,390,.L_2C86-_LOADSHADOW@12
.L_2C87:
	cmp dword ptr [ebp-132], 0
	jge .L_297C
.L_297D:
.stabn 68,0,390,.L_2C87-_LOADSHADOW@12
.L_2C88:
	mov dword ptr [ebp-220], 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 49
	push offset _Lt_2981
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	lea eax, [ebp-208]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-220]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-220]
	call _puts
	add esp, 4
	lea eax, [ebp-220]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,390,.L_2C88-_LOADSHADOW@12
.L_2C89:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,390,.L_2C89-_LOADSHADOW@12
.L_2C8A:
	mov dword ptr [ebp-52], 1
	jmp .L_293E
.stabn 68,0,390,.L_2C8A-_LOADSHADOW@12
.L_2C8B:
.L_2986:
.L_297C:
.L_297B:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,390,.L_2C8B-_LOADSHADOW@12
.L_2C8C:
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-164]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B68]
	fmul dword ptr [ebp-164]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_2988
.L_2989:
	fld dword ptr [ebp-164]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_298A
	call _printf
	add esp, 12
.L_2988:
.L_298B:
.stabn 68,0,392,.L_2C8C-_LOADSHADOW@12
.L_2C8D:
	lea ebx, [ebp-168]
	push ebx
	push dword ptr [ebp-140]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,394,.L_2C8D-_LOADSHADOW@12
.L_2C8E:
	cmp dword ptr [ebp-132], 0
	jge .L_298D
.L_298E:
.stabn 68,0,394,.L_2C8E-_LOADSHADOW@12
.L_2C8F:
	mov dword ptr [ebp-220], 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 49
	push offset _Lt_2992
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	lea eax, [ebp-196]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	lea eax, [ebp-208]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-220]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-220]
	call _puts
	add esp, 4
	lea eax, [ebp-220]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,394,.L_2C8F-_LOADSHADOW@12
.L_2C90:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,394,.L_2C90-_LOADSHADOW@12
.L_2C91:
	mov dword ptr [ebp-52], 1
	jmp .L_293E
.stabn 68,0,394,.L_2C91-_LOADSHADOW@12
.L_2C92:
.L_2997:
.L_298D:
.L_298C:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,394,.L_2C92-_LOADSHADOW@12
.L_2C93:
	fld dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_2999
.L_299A:
	fld dword ptr [ebp-168]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_299B
	call _printf
	add esp, 12
.L_2999:
.L_299C:
.stabn 68,0,396,.L_2C93-_LOADSHADOW@12
.L_2C94:
.L_299D:
	mov ebx, dword ptr [ebp-156]
	sal ebx, 2
	mov eax, dword ptr [ebp-124]
	add eax, ebx
	lea ebx, [eax+56]
	mov dword ptr [ebp-176], ebx
.stabn 68,0,401,.L_2C94-_LOADSHADOW@12
.L_2C95:
	mov bl, byte ptr [ebp-160]
	mov eax, dword ptr [ebp-176]
	mov byte ptr [eax], bl
.stabn 68,0,402,.L_2C95-_LOADSHADOW@12
.L_2C96:
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-164]
	mov ebx, dword ptr [ebp-176]
	fistp word ptr [ebx+2]
.stabn 68,0,403,.L_2C96-_LOADSHADOW@12
.L_2C97:
	mov ebx, dword ptr [ebp-176]
	fld dword ptr [ebp-168]
	sub esp, 4
	fistp dword ptr [esp]
	mov al, byte ptr [esp]
	mov byte ptr [ebx+1], al
	add esp, 4
.stabn 68,0,404,.L_2C97-_LOADSHADOW@12
.L_2C98:
.L_299F:
	inc dword ptr [ebp-156]
.stabn 68,0,406,.L_2C98-_LOADSHADOW@12
.L_2C99:
.L_29A0:
.L_293F:
	jmp .L_293D
.L_293E:
.stabn 68,0,407,.L_2C99-_LOADSHADOW@12
.L_2C9A:
	cmp dword ptr [ebp-156], 0
	jne .L_29A2
.L_29A3:
.stabn 68,0,408,.L_2C9A-_LOADSHADOW@12
.L_2C9B:
	mov dword ptr [ebp-132], -1
.stabn 68,0,409,.L_2C9B-_LOADSHADOW@12
.L_2C9C:
	cmp dword ptr [ebp-132], 0
	jge .L_29A5
.L_29A6:
.stabn 68,0,410,.L_2C9C-_LOADSHADOW@12
.L_2C9D:
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 27
	push offset _Lt_29A8
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-216]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-216]
	call _puts
	add esp, 4
	lea eax, [ebp-216]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,410,.L_2C9D-_LOADSHADOW@12
.L_2C9E:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,410,.L_2C9E-_LOADSHADOW@12
.L_2C9F:
	mov dword ptr [ebp-52], 1
	lea eax, [ebp-152]
	push eax
	call _fb_StrDelete@4
	jmp .L_2908
.stabn 68,0,410,.L_2C9F-_LOADSHADOW@12
.L_2CA0:
.L_29AD:
.L_29A5:
.L_29A4:
.L_29AE:
.L_29A2:
.L_29A1:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax]
	and ebx, 4294967239
	mov eax, dword ptr [ebp-156]
	and eax, 7
	shl eax, 3
	or ebx, eax
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax], bl
.stabn 68,0,412,.L_2CA0-_LOADSHADOW@12
.L_2CA1:
	lea ebx, [ebp-152]
	push ebx
	call _fb_StrDelete@4
.L_29AF:
	jmp .L_2918
.L_2939:
	cmp dword ptr [ebp-136], 1936744803
	jne .L_29B0
.L_29B2:
.L_29B3:
.stabn 68,0,413,.L_2CA1-_LOADSHADOW@12
.L_2CA2:
.L_29B4:
	mov ebx, dword ptr [ebp-120]
	movzx eax, word ptr [ebx]
	or eax, 8224
	mov dword ptr [ebp-140], eax
.stabn 68,0,414,.L_2CA2-_LOADSHADOW@12
.L_2CA3:
	cmp dword ptr [ebp-140], 28526
	jne .L_29B7
.L_29B9:
.L_29BA:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+3], 0
.stabn 68,0,415,.L_2CA3-_LOADSHADOW@12
.L_2CA4:
.L_29BB:
	jmp .L_29B5
.L_29B7:
	cmp dword ptr [ebp-140], 28271
	jne .L_29BC
.L_29BE:
.L_29BF:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+3], 1
.stabn 68,0,416,.L_2CA4-_LOADSHADOW@12
.L_2CA5:
.L_29C0:
	jmp .L_29B5
.L_29BC:
	cmp dword ptr [ebp-140], 30580
	jne .L_29C1
.L_29C3:
.L_29C4:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+3], 2
.stabn 68,0,417,.L_2CA5-_LOADSHADOW@12
.L_2CA6:
.L_29C5:
	jmp .L_29B5
.L_29C1:
	cmp dword ptr [ebp-140], 8289
	jne .L_29C6
.L_29C8:
.L_29C9:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+3], 3
.stabn 68,0,418,.L_2CA6-_LOADSHADOW@12
.L_2CA7:
.L_29CA:
	jmp .L_29B5
.L_29C6:
	cmp dword ptr [ebp-140], 8290
	jne .L_29CB
.L_29CD:
.L_29CE:
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+3], 4
.stabn 68,0,419,.L_2CA7-_LOADSHADOW@12
.L_2CA8:
.L_29CF:
	jmp .L_29B5
.L_29CB:
.L_29D1:
.stabn 68,0,420,.L_2CA8-_LOADSHADOW@12
.L_2CA9:
	mov dword ptr [ebp-132], -1
.stabn 68,0,421,.L_2CA9-_LOADSHADOW@12
.L_2CAA:
	cmp dword ptr [ebp-132], 0
	jge .L_29D3
.L_29D4:
.stabn 68,0,422,.L_2CAA-_LOADSHADOW@12
.L_2CAB:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 29
	push offset _Lt_29D6
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,422,.L_2CAB-_LOADSHADOW@12
.L_2CAC:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,422,.L_2CAC-_LOADSHADOW@12
.L_2CAD:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,422,.L_2CAD-_LOADSHADOW@12
.L_2CAE:
.L_29DB:
.L_29D3:
.L_29D2:
.L_29DC:
.L_29D0:
.L_29B5:
.L_29DD:
.L_29DE:
	jmp .L_2918
.L_29B0:
	cmp dword ptr [ebp-136], 544436080
	jne .L_29DF
.L_29E0:
.L_29E1:
.stabn 68,0,424,.L_2CAE-_LOADSHADOW@12
.L_2CAF:
	mov eax, dword ptr [ebp-124]
	lea ebx, [eax+4]
	mov dword ptr [ebp-140], ebx
	mov ebx, dword ptr [ebp-120]
	mov dword ptr [ebp-144], ebx
.stabn 68,0,425,.L_2CAF-_LOADSHADOW@12
.L_2CB0:
.L_29E2:
	mov dword ptr [ebp-148], 0
.L_29E6:
.L_29E7:
.stabn 68,0,426,.L_2CB0-_LOADSHADOW@12
.L_2CB1:
	push dword ptr [ebp-140]
	push dword ptr [ebp-144]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,427,.L_2CB1-_LOADSHADOW@12
.L_2CB2:
	cmp dword ptr [ebp-132], 0
	jge .L_29E9
.L_29EA:
.stabn 68,0,427,.L_2CB2-_LOADSHADOW@12
.L_2CB3:
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 51
	push offset _Lt_27FF
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	lea eax, [ebp-160]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-196]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-196]
	call _puts
	add esp, 4
	lea eax, [ebp-196]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,427,.L_2CB3-_LOADSHADOW@12
.L_2CB4:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,427,.L_2CB4-_LOADSHADOW@12
.L_2CB5:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,427,.L_2CB5-_LOADSHADOW@12
.L_2CB6:
.L_29EF:
.L_29E9:
.L_29E8:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-144], eax
.stabn 68,0,427,.L_2CB6-_LOADSHADOW@12
.L_2CB7:
	add dword ptr [ebp-140], 4
.stabn 68,0,431,.L_2CB7-_LOADSHADOW@12
.L_2CB8:
.L_29F0:
.L_29E4:
	inc dword ptr [ebp-148]
.L_29E3:
	cmp dword ptr [ebp-148], 2
	jle .L_29E6
.L_29E5:
.L_29F1:
.stabn 68,0,432,.L_2CB8-_LOADSHADOW@12
.L_2CB9:
.L_29F2:
	jmp .L_2918
.L_29DF:
	cmp dword ptr [ebp-136], 1684632167
	jne .L_29F3
.L_29F4:
.L_29F5:
.stabn 68,0,436,.L_2CB9-_LOADSHADOW@12
.L_2CBA:
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-140], eax
.stabn 68,0,437,.L_2CBA-_LOADSHADOW@12
.L_2CBB:
.L_29F6:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	je .L_29F8
	mov ebx, dword ptr [ebp-140]
	movzx eax, byte ptr [ebx]
	cmp eax, 9
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-160], eax
	jmp .L_2B69
.L_29F8:
	mov dword ptr [ebp-160], -1
.L_2B69:
	cmp dword ptr [ebp-160], 0
	je .L_29F7
.L_29FA:
	inc dword ptr [ebp-140]
.L_29FB:
	jmp .L_29F6
.L_29F7:
.stabn 68,0,447,.L_2CBB-_LOADSHADOW@12
.L_2CBD:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	je .L_29FE
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	cmp ebx, 48
	jb .L_29FC
	mov ebx, dword ptr [ebp-140]
	movzx eax, byte ptr [ebx]
	cmp eax, 57
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-164], ebx
	jmp .L_2B6B
.L_29FC:
	mov dword ptr [ebp-164], -1
.L_2B6B:
	mov ebx, dword ptr [ebp-164]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-168], ebx
	jmp .L_2B6A
.L_29FE:
	mov dword ptr [ebp-168], 0
.L_2B6A:
	cmp dword ptr [ebp-168], 0
	je .L_2A01
.L_2A02:
.stabn 68,0,447,.L_2CBD-_LOADSHADOW@12
.L_2CC0:
	mov dword ptr [ebp-132], -1
.stabn 68,0,447,.L_2CC0-_LOADSHADOW@12
.L_2CC1:
	cmp dword ptr [ebp-132], 0
	jge .L_2A04
.L_2A05:
.stabn 68,0,447,.L_2CC1-_LOADSHADOW@12
.L_2CC2:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 28
	push offset _Lt_281E
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,447,.L_2CC2-_LOADSHADOW@12
.L_2CC3:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,447,.L_2CC3-_LOADSHADOW@12
.L_2CC4:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,447,.L_2CC4-_LOADSHADOW@12
.L_2CC5:
.L_2A0A:
.L_2A04:
.L_2A03:
.L_2A0B:
.L_2A01:
.L_2A00:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	jne .L_2A0D
.L_2A0E:
.stabn 68,0,448,.L_2CC5-_LOADSHADOW@12
.L_2CC6:
	inc dword ptr [ebp-140]
.stabn 68,0,449,.L_2CC6-_LOADSHADOW@12
.L_2CC7:
	lea eax, [ebp-144]
	push eax
	push dword ptr [ebp-140]
	call _READINT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,450,.L_2CC7-_LOADSHADOW@12
.L_2CC8:
	cmp dword ptr [ebp-132], 0
	jge .L_2A10
.L_2A11:
.stabn 68,0,450,.L_2CC8-_LOADSHADOW@12
.L_2CC9:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_282E
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,450,.L_2CC9-_LOADSHADOW@12
.L_2CCA:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,450,.L_2CCA-_LOADSHADOW@12
.L_2CCB:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,450,.L_2CCB-_LOADSHADOW@12
.L_2CCC:
.L_2A16:
.L_2A10:
.L_2A0F:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,450,.L_2CCC-_LOADSHADOW@12
.L_2CCD:
	neg dword ptr [ebp-144]
.stabn 68,0,451,.L_2CCD-_LOADSHADOW@12
.L_2CCE:
.L_2A17:
	jmp .L_2A0C
.L_2A0D:
.L_2A18:
.stabn 68,0,452,.L_2CCE-_LOADSHADOW@12
.L_2CCF:
	lea eax, [ebp-144]
	push eax
	push dword ptr [ebp-140]
	call _READINT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,453,.L_2CCF-_LOADSHADOW@12
.L_2CD0:
	cmp dword ptr [ebp-132], 0
	jge .L_2A1A
.L_2A1B:
.stabn 68,0,453,.L_2CD0-_LOADSHADOW@12
.L_2CD1:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_283C
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,453,.L_2CD1-_LOADSHADOW@12
.L_2CD2:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,453,.L_2CD2-_LOADSHADOW@12
.L_2CD3:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,453,.L_2CD3-_LOADSHADOW@12
.L_2CD4:
.L_2A20:
.L_2A1A:
.L_2A19:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,453,.L_2CD4-_LOADSHADOW@12
.L_2CD5:
.L_2A21:
.L_2A0C:
	cmp dword ptr [ebp-144], 0
	jne .L_2A23
.L_2A24:
.stabn 68,0,455,.L_2CD5-_LOADSHADOW@12
.L_2CD6:
	mov dword ptr [ebp-132], -1
.stabn 68,0,456,.L_2CD6-_LOADSHADOW@12
.L_2CD7:
	cmp dword ptr [ebp-132], 0
	jge .L_2A26
.L_2A27:
.stabn 68,0,457,.L_2CD7-_LOADSHADOW@12
.L_2CD8:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 37
	push offset _Lt_284A
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,457,.L_2CD8-_LOADSHADOW@12
.L_2CD9:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,457,.L_2CD9-_LOADSHADOW@12
.L_2CDA:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,457,.L_2CDA-_LOADSHADOW@12
.L_2CDB:
.L_2A2C:
.L_2A26:
.L_2A25:
.L_2A2D:
.L_2A23:
.L_2A22:
.L_2A2E:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	je .L_2A30
	mov ebx, dword ptr [ebp-140]
	movzx eax, byte ptr [ebx]
	cmp eax, 9
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-172], eax
	jmp .L_2B6C
.L_2A30:
	mov dword ptr [ebp-172], -1
.L_2B6C:
	cmp dword ptr [ebp-172], 0
	je .L_2A2F
.L_2A32:
	inc dword ptr [ebp-140]
.L_2A33:
	jmp .L_2A2E
.L_2A2F:
.stabn 68,0,459,.L_2CDB-_LOADSHADOW@12
.L_2CDD:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	je .L_2A36
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	cmp ebx, 48
	jb .L_2A34
	mov ebx, dword ptr [ebp-140]
	movzx eax, byte ptr [ebx]
	cmp eax, 57
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-176], ebx
	jmp .L_2B6E
.L_2A34:
	mov dword ptr [ebp-176], -1
.L_2B6E:
	mov ebx, dword ptr [ebp-176]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-180], ebx
	jmp .L_2B6D
.L_2A36:
	mov dword ptr [ebp-180], 0
.L_2B6D:
	cmp dword ptr [ebp-180], 0
	je .L_2A39
.L_2A3A:
.stabn 68,0,459,.L_2CDD-_LOADSHADOW@12
.L_2CE0:
	mov dword ptr [ebp-132], -1
.stabn 68,0,459,.L_2CE0-_LOADSHADOW@12
.L_2CE1:
	cmp dword ptr [ebp-132], 0
	jge .L_2A3C
.L_2A3D:
.stabn 68,0,459,.L_2CE1-_LOADSHADOW@12
.L_2CE2:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 28
	push offset _Lt_281E
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,459,.L_2CE2-_LOADSHADOW@12
.L_2CE3:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,459,.L_2CE3-_LOADSHADOW@12
.L_2CE4:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,459,.L_2CE4-_LOADSHADOW@12
.L_2CE5:
.L_2A42:
.L_2A3C:
.L_2A3B:
.L_2A43:
.L_2A39:
.L_2A38:
	mov eax, dword ptr [ebp-140]
	movzx ebx, byte ptr [eax]
	and ebx, -33
	mov eax, ebx
	cmp eax, 67
	jne .L_2A45
.L_2A46:
.stabn 68,0,460,.L_2CE5-_LOADSHADOW@12
.L_2CE6:
	inc dword ptr [ebp-140]
.stabn 68,0,461,.L_2CE6-_LOADSHADOW@12
.L_2CE7:
	lea eax, [ebp-148]
	push eax
	push dword ptr [ebp-140]
	call _READINT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,462,.L_2CE7-_LOADSHADOW@12
.L_2CE8:
	cmp dword ptr [ebp-132], 0
	jge .L_2A48
.L_2A49:
.stabn 68,0,462,.L_2CE8-_LOADSHADOW@12
.L_2CE9:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_2870
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,462,.L_2CE9-_LOADSHADOW@12
.L_2CEA:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,462,.L_2CEA-_LOADSHADOW@12
.L_2CEB:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,462,.L_2CEB-_LOADSHADOW@12
.L_2CEC:
.L_2A4E:
.L_2A48:
.L_2A47:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,462,.L_2CEC-_LOADSHADOW@12
.L_2CED:
	neg dword ptr [ebp-148]
.stabn 68,0,463,.L_2CED-_LOADSHADOW@12
.L_2CEE:
.L_2A4F:
	jmp .L_2A44
.L_2A45:
.L_2A50:
.stabn 68,0,464,.L_2CEE-_LOADSHADOW@12
.L_2CEF:
	lea eax, [ebp-148]
	push eax
	push dword ptr [ebp-140]
	call _READINT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,465,.L_2CEF-_LOADSHADOW@12
.L_2CF0:
	cmp dword ptr [ebp-132], 0
	jge .L_2A52
.L_2A53:
.stabn 68,0,465,.L_2CF0-_LOADSHADOW@12
.L_2CF1:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 55
	push offset _Lt_2870
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,465,.L_2CF1-_LOADSHADOW@12
.L_2CF2:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,465,.L_2CF2-_LOADSHADOW@12
.L_2CF3:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,465,.L_2CF3-_LOADSHADOW@12
.L_2CF4:
.L_2A58:
.L_2A52:
.L_2A51:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,465,.L_2CF4-_LOADSHADOW@12
.L_2CF5:
.L_2A59:
.L_2A44:
	cmp dword ptr [ebp-144], 0
	jne .L_2A5B
.L_2A5C:
.stabn 68,0,467,.L_2CF5-_LOADSHADOW@12
.L_2CF6:
	mov dword ptr [ebp-132], -1
.stabn 68,0,468,.L_2CF6-_LOADSHADOW@12
.L_2CF7:
	cmp dword ptr [ebp-132], 0
	jge .L_2A5E
.L_2A5F:
.stabn 68,0,469,.L_2CF7-_LOADSHADOW@12
.L_2CF8:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 37
	push offset _Lt_2888
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,469,.L_2CF8-_LOADSHADOW@12
.L_2CF9:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,469,.L_2CF9-_LOADSHADOW@12
.L_2CFA:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,469,.L_2CFA-_LOADSHADOW@12
.L_2CFB:
.L_2A64:
.L_2A5E:
.L_2A5D:
.L_2A65:
.L_2A5B:
.L_2A5A:
	lea eax, [ebp-152]
	push eax
	push dword ptr [ebp-140]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,471,.L_2CFB-_LOADSHADOW@12
.L_2CFC:
	cmp dword ptr [ebp-132], 0
	jge .L_2A67
.L_2A68:
.stabn 68,0,471,.L_2CFC-_LOADSHADOW@12
.L_2CFD:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_2895
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,471,.L_2CFD-_LOADSHADOW@12
.L_2CFE:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,471,.L_2CFE-_LOADSHADOW@12
.L_2CFF:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,471,.L_2CFF-_LOADSHADOW@12
.L_2D00:
.L_2A6D:
.L_2A67:
.L_2A66:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,471,.L_2D00-_LOADSHADOW@12
.L_2D01:
	fld dword ptr [ebp-152]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-152]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_2A6F
.L_2A70:
	fld dword ptr [ebp-152]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_289E
	call _printf
	add esp, 12
.L_2A6F:
.L_2A71:
.stabn 68,0,473,.L_2D01-_LOADSHADOW@12
.L_2D02:
	lea ebx, [ebp-156]
	push ebx
	push dword ptr [ebp-140]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,475,.L_2D02-_LOADSHADOW@12
.L_2D03:
	cmp dword ptr [ebp-132], 0
	jge .L_2A73
.L_2A74:
.stabn 68,0,475,.L_2D03-_LOADSHADOW@12
.L_2D04:
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_28A6
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-228]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-228]
	call _puts
	add esp, 4
	lea eax, [ebp-228]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,475,.L_2D04-_LOADSHADOW@12
.L_2D05:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,475,.L_2D05-_LOADSHADOW@12
.L_2D06:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,475,.L_2D06-_LOADSHADOW@12
.L_2D07:
.L_2A79:
.L_2A73:
.L_2A72:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-140], eax
.stabn 68,0,475,.L_2D07-_LOADSHADOW@12
.L_2D08:
	fld dword ptr [ebp-156]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	imul eax, 100
	fld dword ptr [_Lt_2B66]
	fmul dword ptr [ebp-156]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	cmp eax, ebx
	je .L_2A7B
.L_2A7C:
	fld dword ptr [ebp-156]
	sub esp,8
	fstp qword ptr [esp]
	push offset _Lt_28AF
	call _printf
	add esp, 12
.L_2A7B:
.L_2A7D:
.stabn 68,0,477,.L_2D08-_LOADSHADOW@12
.L_2D09:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967279
	or eax, 16
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,482,.L_2D09-_LOADSHADOW@12
.L_2D0A:
.L_2A7E:
	mov eax, dword ptr [ebp-124]
	lea ebx, [eax+52]
	mov dword ptr [ebp-184], ebx
.stabn 68,0,483,.L_2D0A-_LOADSHADOW@12
.L_2D0B:
	mov bl, byte ptr [ebp-144]
	mov eax, dword ptr [ebp-184]
	mov byte ptr [eax], bl
	mov bl, byte ptr [ebp-148]
	mov eax, dword ptr [ebp-184]
	mov byte ptr [eax+1], bl
.stabn 68,0,484,.L_2D0B-_LOADSHADOW@12
.L_2D0C:
	mov ebx, dword ptr [ebp-184]
	fld dword ptr [ebp-152]
	sub esp, 4
	fistp dword ptr [esp]
	mov al, byte ptr [esp]
	mov byte ptr [ebx+2], al
	add esp, 4
	mov ebx, dword ptr [ebp-184]
	fld dword ptr [ebp-156]
	sub esp, 4
	fistp dword ptr [esp]
	mov al, byte ptr [esp]
	mov byte ptr [ebx+3], al
	add esp, 4
.stabn 68,0,485,.L_2D0C-_LOADSHADOW@12
.L_2D0D:
.L_2A80:
.L_2A81:
	jmp .L_2918
.L_29F3:
	cmp dword ptr [ebp-136], 543781487
	jne .L_2A82
.L_2A83:
.L_2A84:
.stabn 68,0,487,.L_2D0D-_LOADSHADOW@12
.L_2D0E:
	mov ebx, dword ptr [ebp-124]
	lea eax, [ebx+16]
	mov dword ptr [ebp-140], eax
	mov eax, dword ptr [ebp-120]
	mov dword ptr [ebp-144], eax
.stabn 68,0,488,.L_2D0E-_LOADSHADOW@12
.L_2D0F:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967263
	or ebx, 32
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,489,.L_2D0F-_LOADSHADOW@12
.L_2D10:
.L_2A85:
	mov dword ptr [ebp-148], 0
.L_2A89:
.L_2A8A:
.stabn 68,0,490,.L_2D10-_LOADSHADOW@12
.L_2D11:
	push dword ptr [ebp-140]
	push dword ptr [ebp-144]
	call _READFLOAT@8
	mov dword ptr [ebp-132], eax
.stabn 68,0,491,.L_2D11-_LOADSHADOW@12
.L_2D12:
	cmp dword ptr [ebp-132], 0
	jge .L_2A8C
.L_2A8D:
.stabn 68,0,491,.L_2D12-_LOADSHADOW@12
.L_2D13:
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 54
	push offset _Lt_28C6
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	lea eax, [ebp-160]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-196]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-196]
	call _puts
	add esp, 4
	lea eax, [ebp-196]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,491,.L_2D13-_LOADSHADOW@12
.L_2D14:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,491,.L_2D14-_LOADSHADOW@12
.L_2D15:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,491,.L_2D15-_LOADSHADOW@12
.L_2D16:
.L_2A92:
.L_2A8C:
.L_2A8B:
	mov eax, dword ptr [ebp-132]
	add dword ptr [ebp-144], eax
.stabn 68,0,491,.L_2D16-_LOADSHADOW@12
.L_2D17:
	add dword ptr [ebp-140], 4
.stabn 68,0,495,.L_2D17-_LOADSHADOW@12
.L_2D18:
.L_2A93:
.L_2A87:
	inc dword ptr [ebp-148]
.L_2A86:
	cmp dword ptr [ebp-148], 8
	jle .L_2A89
.L_2A88:
.L_2A94:
.stabn 68,0,496,.L_2D18-_LOADSHADOW@12
.L_2D19:
.L_2A95:
	jmp .L_2918
.L_2A82:
	cmp dword ptr [ebp-136], 1953391971
	jne .L_2A96
.L_2A98:
.L_2A99:
.stabn 68,0,500,.L_2D19-_LOADSHADOW@12
.L_2D1A:
.L_2A9A:
	mov eax, dword ptr [ebp-120]
	movzx ebx, byte ptr [eax]
	or ebx, 32
	mov dword ptr [ebp-140], ebx
.stabn 68,0,501,.L_2D1A-_LOADSHADOW@12
.L_2D1B:
	cmp dword ptr [ebp-140], 102
	jne .L_2A9D
.L_2A9E:
.L_2A9F:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967291
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,502,.L_2D1B-_LOADSHADOW@12
.L_2D1C:
.L_2AA0:
	jmp .L_2A9B
.L_2A9D:
	cmp dword ptr [ebp-140], 116
	jne .L_2AA1
.L_2AA3:
.L_2AA4:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967291
	or ebx, 4
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,503,.L_2D1C-_LOADSHADOW@12
.L_2D1D:
.L_2AA5:
	jmp .L_2A9B
.L_2AA1:
.L_2AA7:
.stabn 68,0,504,.L_2D1D-_LOADSHADOW@12
.L_2D1E:
	mov dword ptr [ebp-132], -1
.stabn 68,0,505,.L_2D1E-_LOADSHADOW@12
.L_2D1F:
	cmp dword ptr [ebp-132], 0
	jge .L_2AA9
.L_2AAA:
.stabn 68,0,506,.L_2D1F-_LOADSHADOW@12
.L_2D20:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 31
	push offset _Lt_2AAC
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,506,.L_2D20-_LOADSHADOW@12
.L_2D21:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,506,.L_2D21-_LOADSHADOW@12
.L_2D22:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,506,.L_2D22-_LOADSHADOW@12
.L_2D23:
.L_2AB1:
.L_2AA9:
.L_2AA8:
.L_2AB2:
.L_2AA6:
.L_2A9B:
.L_2AB3:
.L_2AB4:
	jmp .L_2918
.L_2A96:
	cmp dword ptr [ebp-136], 1684630643
	jne .L_2AB5
.L_2AB7:
.L_2AB8:
.stabn 68,0,508,.L_2D23-_LOADSHADOW@12
.L_2D24:
.L_2AB9:
	mov eax, dword ptr [ebp-120]
	movzx ebx, byte ptr [eax]
	or ebx, 32
	mov dword ptr [ebp-140], ebx
.stabn 68,0,509,.L_2D24-_LOADSHADOW@12
.L_2D25:
	cmp dword ptr [ebp-140], 102
	jne .L_2ABC
.L_2ABD:
.L_2ABE:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967287
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,510,.L_2D25-_LOADSHADOW@12
.L_2D26:
.L_2ABF:
	jmp .L_2ABA
.L_2ABC:
	cmp dword ptr [ebp-140], 116
	jne .L_2AC0
.L_2AC1:
.L_2AC2:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967287
	or ebx, 8
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,511,.L_2D26-_LOADSHADOW@12
.L_2D27:
.L_2AC3:
	jmp .L_2ABA
.L_2AC0:
.L_2AC5:
.stabn 68,0,512,.L_2D27-_LOADSHADOW@12
.L_2D28:
	mov dword ptr [ebp-132], -1
.stabn 68,0,513,.L_2D28-_LOADSHADOW@12
.L_2D29:
	cmp dword ptr [ebp-132], 0
	jge .L_2AC7
.L_2AC8:
.stabn 68,0,514,.L_2D29-_LOADSHADOW@12
.L_2D2A:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 31
	push offset _Lt_2AAC
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,514,.L_2D2A-_LOADSHADOW@12
.L_2D2B:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,514,.L_2D2B-_LOADSHADOW@12
.L_2D2C:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,514,.L_2D2C-_LOADSHADOW@12
.L_2D2D:
.L_2ACD:
.L_2AC7:
.L_2AC6:
.L_2ACE:
.L_2AC4:
.L_2ABA:
.L_2ACF:
.L_2AD0:
	jmp .L_2918
.L_2AB5:
	cmp dword ptr [ebp-136], 1818321779
	jne .L_2AD1
.L_2AD3:
.L_2AD4:
.stabn 68,0,516,.L_2D2D-_LOADSHADOW@12
.L_2D2E:
.L_2AD5:
	mov eax, dword ptr [ebp-120]
	mov ebx, dword ptr [eax]
	or ebx, 538976288
	mov dword ptr [ebp-140], ebx
.stabn 68,0,517,.L_2D2E-_LOADSHADOW@12
.L_2D2F:
	cmp dword ptr [ebp-140], 1701736302
	jne .L_2AD8
.L_2AD9:
.L_2ADA:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+2], 0
.stabn 68,0,518,.L_2D2F-_LOADSHADOW@12
.L_2D30:
.L_2ADB:
	jmp .L_2AD6
.L_2AD8:
	cmp dword ptr [ebp-140], 1819176825
	jne .L_2ADC
.L_2ADE:
.L_2ADF:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+2], 1
.stabn 68,0,519,.L_2D30-_LOADSHADOW@12
.L_2D31:
.L_2AE0:
	jmp .L_2AD6
.L_2ADC:
	cmp dword ptr [ebp-140], 1819176818
	jne .L_2AE1
.L_2AE3:
.L_2AE4:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+2], 2
.stabn 68,0,520,.L_2D31-_LOADSHADOW@12
.L_2D32:
.L_2AE5:
	jmp .L_2AD6
.L_2AE1:
	cmp dword ptr [ebp-140], 1684955513
	jne .L_2AE6
.L_2AE8:
.L_2AE9:
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+2], 3
.stabn 68,0,521,.L_2D32-_LOADSHADOW@12
.L_2D33:
.L_2AEA:
	jmp .L_2AD6
.L_2AE6:
.L_2AEC:
.stabn 68,0,522,.L_2D33-_LOADSHADOW@12
.L_2D34:
	mov dword ptr [ebp-132], -1
.stabn 68,0,523,.L_2D34-_LOADSHADOW@12
.L_2D35:
	cmp dword ptr [ebp-132], 0
	jge .L_2AEE
.L_2AEF:
.stabn 68,0,524,.L_2D35-_LOADSHADOW@12
.L_2D36:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 30
	push offset _Lt_2AF1
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,524,.L_2D36-_LOADSHADOW@12
.L_2D37:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,524,.L_2D37-_LOADSHADOW@12
.L_2D38:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,524,.L_2D38-_LOADSHADOW@12
.L_2D39:
.L_2AF6:
.L_2AEE:
.L_2AED:
.L_2AF7:
.L_2AEB:
.L_2AD6:
.L_2AF8:
.L_2AF9:
	jmp .L_2918
.L_2AD1:
	cmp dword ptr [ebp-136], 1920100717
	jne .L_2AFA
.L_2AFC:
.L_2AFD:
.stabn 68,0,526,.L_2D39-_LOADSHADOW@12
.L_2D3A:
.L_2AFE:
	mov eax, dword ptr [ebp-120]
	mov ebx, dword ptr [eax]
	or ebx, 538976288
	mov dword ptr [ebp-140], ebx
.stabn 68,0,527,.L_2D3A-_LOADSHADOW@12
.L_2D3B:
	cmp dword ptr [ebp-140], 1701736302
	jne .L_2B01
.L_2B02:
.L_2B03:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+1]
	and eax, 4294967294
	mov ebx, dword ptr [ebp-124]
	mov byte ptr [ebx+1], al
.stabn 68,0,528,.L_2D3B-_LOADSHADOW@12
.L_2D3C:
.L_2B04:
	jmp .L_2AFF
.L_2B01:
	cmp dword ptr [ebp-140], 544370531
	jne .L_2B05
.L_2B08:
.L_2B09:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+1]
	and ebx, 4294967294
	or ebx, 1
	mov eax, dword ptr [ebp-124]
	mov byte ptr [eax+1], bl
.stabn 68,0,529,.L_2D3C-_LOADSHADOW@12
.L_2D3D:
.L_2B0A:
	jmp .L_2AFF
.L_2B05:
.L_2B0C:
.stabn 68,0,530,.L_2D3D-_LOADSHADOW@12
.L_2D3E:
	mov dword ptr [ebp-132], -1
.stabn 68,0,531,.L_2D3E-_LOADSHADOW@12
.L_2D3F:
	cmp dword ptr [ebp-132], 0
	jge .L_2B0E
.L_2B0F:
.stabn 68,0,532,.L_2D3F-_LOADSHADOW@12
.L_2D40:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 31
	push offset _Lt_2B11
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,532,.L_2D40-_LOADSHADOW@12
.L_2D41:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,532,.L_2D41-_LOADSHADOW@12
.L_2D42:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,532,.L_2D42-_LOADSHADOW@12
.L_2D43:
.L_2B16:
.L_2B0E:
.L_2B0D:
.L_2B17:
.L_2B0B:
.L_2AFF:
.L_2B18:
.L_2B19:
	jmp .L_2918
.L_2AFA:
	cmp dword ptr [ebp-136], 1970238055
	jne .L_2B1A
.L_2B1C:
.L_2B1D:
.stabn 68,0,534,.L_2D43-_LOADSHADOW@12
.L_2D44:
.L_2B1E:
	jmp .L_2918
.L_2B1A:
.L_2B20:
.stabn 68,0,535,.L_2D44-_LOADSHADOW@12
.L_2D45:
.L_2B21:
	mov eax, dword ptr [ebp-108]
	mov ebx, dword ptr [eax]
	or ebx, 538976288
	and ebx, 16777215
	mov dword ptr [ebp-140], ebx
.stabn 68,0,537,.L_2D45-_LOADSHADOW@12
.L_2D46:
	cmp dword ptr [ebp-140], 2122857
	jne .L_2B24
.L_2B28:
.L_2B29:
.stabn 68,0,538,.L_2D46-_LOADSHADOW@12
.L_2D47:
.L_2B2A:
	jmp .L_2B22
.L_2B24:
.L_2B2C:
.stabn 68,0,539,.L_2D47-_LOADSHADOW@12
.L_2D48:
	mov dword ptr [ebp-132], -1
.stabn 68,0,540,.L_2D48-_LOADSHADOW@12
.L_2D49:
	cmp dword ptr [ebp-132], 0
	jge .L_2B2E
.L_2B2F:
.stabn 68,0,541,.L_2D49-_LOADSHADOW@12
.L_2D4A:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-56]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	push 30
	push offset _Lt_2B31
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea eax, [ebp-152]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea eax, [ebp-176]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-188]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-188]
	call _puts
	add esp, 4
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,541,.L_2D4A-_LOADSHADOW@12
.L_2D4B:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,541,.L_2D4B-_LOADSHADOW@12
.L_2D4C:
	mov dword ptr [ebp-52], 1
	jmp .L_2908
.stabn 68,0,541,.L_2D4C-_LOADSHADOW@12
.L_2D4D:
.L_2B36:
.L_2B2E:
.L_2B2D:
.L_2B37:
.L_2B2B:
.L_2B22:
.L_2B38:
.L_2B39:
.L_2B1F:
.L_2918:
.L_2B3A:
.L_2B3B:
.L_2909:
	jmp .L_2907
.L_2908:
.stabn 68,0,544,.L_2D4D-_LOADSHADOW@12
.L_2D4E:
.L_2B3C:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2B3E
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-128], eax
	jmp .L_2B6F
.L_2B3E:
	mov dword ptr [ebp-128], 0
.L_2B6F:
	cmp dword ptr [ebp-128], 0
	je .L_2B3D
.L_2B40:
	inc dword ptr [ebp-40]
.L_2B41:
	jmp .L_2B3C
.L_2B3D:
.stabn 68,0,545,.L_2D4E-_LOADSHADOW@12
.L_2D50:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2B43
.L_2B44:
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2750
.L_2B43:
.L_2B45:
.stabn 68,0,545,.L_2D50-_LOADSHADOW@12
.L_2D51:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2751
.stabn 68,0,545,.L_2D51-_LOADSHADOW@12
.L_2D52:
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-108]
	push ebx
	call _fb_StrDelete@4
.L_2B46:
.L_28F7:
.L_2795:
	lea ebx, [ebp-96]
	push ebx
	call _fb_StrDelete@4
.L_2B47:
.stabn 68,0,550,.L_2D52-_LOADSHADOW@12
.L_2D53:
	lea ebx, [ebp-68]
	push ebx
	push dword ptr [ebp-40]
	call _READFILENAME@8
	add dword ptr [ebp-40], eax
.stabn 68,0,555,.L_2D53-_LOADSHADOW@12
.L_2D54:
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_2B49
.L_2B4A:
	push 0
	push 2
	push offset _Lt_2499
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrAssign@20
.L_2B49:
.L_2B4B:
.stabn 68,0,556,.L_2D54-_LOADSHADOW@12
.L_2D55:
.L_2B4C:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2B4E
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_2B70
.L_2B4E:
	mov dword ptr [ebp-84], 0
.L_2B70:
	cmp dword ptr [ebp-84], 0
	je .L_2B4D
.L_2B50:
	inc dword ptr [ebp-40]
.L_2B51:
	jmp .L_2B4C
.L_2B4D:
.stabn 68,0,560,.L_2D55-_LOADSHADOW@12
.L_2D57:
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2B53
.L_2B54:
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2750
.L_2B53:
.L_2B55:
.stabn 68,0,560,.L_2D57-_LOADSHADOW@12
.L_2D58:
	inc dword ptr [ebp-56]
	inc dword ptr [ebp-40]
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2751
.stabn 68,0,560,.L_2D58-_LOADSHADOW@12
.L_2D59:
	lea ebx, [ebp-80]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
.L_2B56:
.L_2751:
	jmp .L_274F
.L_2750:
.stabn 68,0,562,.L_2D59-_LOADSHADOW@12
.L_2D5A:
	cmp dword ptr [ebp-52], 0
	je .L_2B58
.L_2B59:
.stabn 68,0,563,.L_2D5A-_LOADSHADOW@12
.L_2D5B:
	push dword ptr [ebp-24]
	push offset _Lt_2B5A
	call _printf
	add esp, 8
.stabn 68,0,564,.L_2D5B-_LOADSHADOW@12
.L_2D5C:
.L_2B5B:
.L_2B58:
.L_2B57:
	mov ebx, dword ptr [ebp-52]
	test ebx, ebx
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	cmp ebx, 0
	setne al
	mov byte ptr [ebp-4], al
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,566,.L_2D5C-_LOADSHADOW@12
.L_2D5E:
.L_2B5C:
.L_274D:
.L_274C:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_273C
.stabn 68,0,568,.L_2D5E-_LOADSHADOW@12
.L_2D5F:
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
.L_273C:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,570,.L_273C-_LOADSHADOW@12
	.stabs "IPOS:1",128,0,0,-8
	.stabs "IPOS2:1",128,0,0,-12
	.stabs "SSHADOWFILE:13",128,0,0,-24
	.stabs "SCONTENT:13",128,0,0,-36
	.stabn 192,0,0,.L_273B-_LOADSHADOW@12
	.stabn 192,0,0,.L_273F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2740-_LOADSHADOW@12
	.stabn 192,0,0,.L_2743-_LOADSHADOW@12
	.stabn 224,0,0,.L_2744-_LOADSHADOW@12
	.stabn 192,0,0,.L_2745-_LOADSHADOW@12
	.stabn 192,0,0,.L_2748-_LOADSHADOW@12
	.stabn 224,0,0,.L_274A-_LOADSHADOW@12
	.stabn 224,0,0,.L_274B-_LOADSHADOW@12
	.stabs "PFILE:117=*3",128,0,0,-40
	.stabs "ITYPE:1",128,0,0,-44
	.stabs "IRESU:1",128,0,0,-48
	.stabs "IFAILED:1",128,0,0,-52
	.stabs "ILINENUM:1",128,0,0,-56
	.stabn 192,0,0,.L_274E-_LOADSHADOW@12
	.stabs "STYPE:13",128,0,0,-68
	.stabs "SUTYPE:13",128,0,0,-80
	.stabn 192,0,0,.L_2752-_LOADSHADOW@12
	.stabn 192,0,0,.L_2755-_LOADSHADOW@12
	.stabn 192,0,0,.L_275A-_LOADSHADOW@12
	.stabn 224,0,0,.L_275B-_LOADSHADOW@12
	.stabn 192,0,0,.L_275E-_LOADSHADOW@12
	.stabn 224,0,0,.L_275F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2760-_LOADSHADOW@12
	.stabn 192,0,0,.L_2763-_LOADSHADOW@12
	.stabn 224,0,0,.L_276C-_LOADSHADOW@12
	.stabn 192,0,0,.L_276F-_LOADSHADOW@12
	.stabn 192,0,0,.L_2779-_LOADSHADOW@12
	.stabn 224,0,0,.L_277A-_LOADSHADOW@12
	.stabn 192,0,0,.L_277D-_LOADSHADOW@12
	.stabn 224,0,0,.L_277E-_LOADSHADOW@12
	.stabn 224,0,0,.L_277F-_LOADSHADOW@12
	.stabn 192,0,0,.L_2783-_LOADSHADOW@12
	.stabn 224,0,0,.L_2785-_LOADSHADOW@12
	.stabn 192,0,0,.L_2788-_LOADSHADOW@12
	.stabn 192,0,0,.L_278D-_LOADSHADOW@12
	.stabn 224,0,0,.L_278E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2791-_LOADSHADOW@12
	.stabn 224,0,0,.L_2792-_LOADSHADOW@12
	.stabn 224,0,0,.L_2793-_LOADSHADOW@12
	.stabn 192,0,0,.L_2794-_LOADSHADOW@12
	.stabs "SNAME:13",128,0,0,-108
	.stabs "SPARMS:13",128,0,0,-120
	.stabs "PNEW:118=*104",128,0,0,-124
	.stabs "SREFFILE:13",128,0,0,-136
	.stabn 192,0,0,.L_279A-_LOADSHADOW@12
	.stabn 192,0,0,.L_279D-_LOADSHADOW@12
	.stabn 192,0,0,.L_27A0-_LOADSHADOW@12
	.stabn 224,0,0,.L_27A7-_LOADSHADOW@12
	.stabn 224,0,0,.L_27A8-_LOADSHADOW@12
	.stabn 192,0,0,.L_27AB-_LOADSHADOW@12
	.stabn 192,0,0,.L_27AE-_LOADSHADOW@12
	.stabn 224,0,0,.L_27B5-_LOADSHADOW@12
	.stabn 224,0,0,.L_27B6-_LOADSHADOW@12
	.stabs "IRESU:1",128,0,0,-144
	.stabn 192,0,0,.L_27BA-_LOADSHADOW@12
	.stabn 192,0,0,.L_27BD-_LOADSHADOW@12
	.stabn 224,0,0,.L_27C2-_LOADSHADOW@12
	.stabn 192,0,0,.L_27C5-_LOADSHADOW@12
	.stabn 224,0,0,.L_27C6-_LOADSHADOW@12
	.stabn 192,0,0,.L_27C7-_LOADSHADOW@12
	.stabs "PPARM:119=*3",128,0,0,-152
	.stabn 192,0,0,.L_27CE-_LOADSHADOW@12
	.stabn 192,0,0,.L_27D1-_LOADSHADOW@12
	.stabn 192,0,0,.L_27D4-_LOADSHADOW@12
	.stabn 224,0,0,.L_27DB-_LOADSHADOW@12
	.stabn 224,0,0,.L_27DC-_LOADSHADOW@12
	.stabn 192,0,0,.L_27DF-_LOADSHADOW@12
	.stabn 192,0,0,.L_27E2-_LOADSHADOW@12
	.stabn 224,0,0,.L_27E9-_LOADSHADOW@12
	.stabn 224,0,0,.L_27EA-_LOADSHADOW@12
	.stabn 224,0,0,.L_27EB-_LOADSHADOW@12
	.stabs "PPOS:120=*11",128,0,0,-152
	.stabs "PPARM:121=*3",128,0,0,-156
	.stabn 192,0,0,.L_27F0-_LOADSHADOW@12
	.stabs "N:1",128,0,0,-160
	.stabn 192,0,0,.L_27F1-_LOADSHADOW@12
	.stabn 192,0,0,.L_27F6-_LOADSHADOW@12
	.stabn 192,0,0,.L_27F9-_LOADSHADOW@12
	.stabn 224,0,0,.L_2804-_LOADSHADOW@12
	.stabn 224,0,0,.L_2805-_LOADSHADOW@12
	.stabn 224,0,0,.L_2806-_LOADSHADOW@12
	.stabn 224,0,0,.L_2807-_LOADSHADOW@12
	.stabs "PPARM:122=*3",128,0,0,-152
	.stabs "LCNTX:1",128,0,0,-156
	.stabs "LCNTZ:1",128,0,0,-160
	.stabs "FSTEPX:11",128,0,0,-164
	.stabs "FSTEPZ:11",128,0,0,-168
	.stabn 192,0,0,.L_280B-_LOADSHADOW@12
	.stabn 192,0,0,.L_2810-_LOADSHADOW@12
	.stabn 224,0,0,.L_2811-_LOADSHADOW@12
	.stabn 192,0,0,.L_2819-_LOADSHADOW@12
	.stabn 192,0,0,.L_281C-_LOADSHADOW@12
	.stabn 224,0,0,.L_2823-_LOADSHADOW@12
	.stabn 224,0,0,.L_2824-_LOADSHADOW@12
	.stabn 192,0,0,.L_2827-_LOADSHADOW@12
	.stabn 192,0,0,.L_282A-_LOADSHADOW@12
	.stabn 224,0,0,.L_2833-_LOADSHADOW@12
	.stabn 224,0,0,.L_2834-_LOADSHADOW@12
	.stabn 192,0,0,.L_2835-_LOADSHADOW@12
	.stabn 192,0,0,.L_2838-_LOADSHADOW@12
	.stabn 224,0,0,.L_2841-_LOADSHADOW@12
	.stabn 224,0,0,.L_2842-_LOADSHADOW@12
	.stabn 192,0,0,.L_2845-_LOADSHADOW@12
	.stabn 192,0,0,.L_2848-_LOADSHADOW@12
	.stabn 224,0,0,.L_284F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2850-_LOADSHADOW@12
	.stabn 192,0,0,.L_2855-_LOADSHADOW@12
	.stabn 224,0,0,.L_2856-_LOADSHADOW@12
	.stabn 192,0,0,.L_285D-_LOADSHADOW@12
	.stabn 192,0,0,.L_2860-_LOADSHADOW@12
	.stabn 224,0,0,.L_2865-_LOADSHADOW@12
	.stabn 224,0,0,.L_2866-_LOADSHADOW@12
	.stabn 192,0,0,.L_2869-_LOADSHADOW@12
	.stabn 192,0,0,.L_286C-_LOADSHADOW@12
	.stabn 224,0,0,.L_2875-_LOADSHADOW@12
	.stabn 224,0,0,.L_2876-_LOADSHADOW@12
	.stabn 192,0,0,.L_2877-_LOADSHADOW@12
	.stabn 192,0,0,.L_287A-_LOADSHADOW@12
	.stabn 224,0,0,.L_287F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2880-_LOADSHADOW@12
	.stabn 192,0,0,.L_2883-_LOADSHADOW@12
	.stabn 192,0,0,.L_2886-_LOADSHADOW@12
	.stabn 224,0,0,.L_288D-_LOADSHADOW@12
	.stabn 224,0,0,.L_288E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2891-_LOADSHADOW@12
	.stabn 224,0,0,.L_289A-_LOADSHADOW@12
	.stabn 192,0,0,.L_289D-_LOADSHADOW@12
	.stabn 224,0,0,.L_289F-_LOADSHADOW@12
	.stabn 192,0,0,.L_28A2-_LOADSHADOW@12
	.stabn 224,0,0,.L_28AB-_LOADSHADOW@12
	.stabn 192,0,0,.L_28AE-_LOADSHADOW@12
	.stabn 224,0,0,.L_28B0-_LOADSHADOW@12
	.stabn 192,0,0,.L_28B1-_LOADSHADOW@12
	.stabn 224,0,0,.L_28B3-_LOADSHADOW@12
	.stabn 224,0,0,.L_28B4-_LOADSHADOW@12
	.stabs "PORI:123=*11",128,0,0,-152
	.stabs "PPARM:124=*3",128,0,0,-156
	.stabn 192,0,0,.L_28B9-_LOADSHADOW@12
	.stabs "N:1",128,0,0,-160
	.stabn 192,0,0,.L_28BA-_LOADSHADOW@12
	.stabn 192,0,0,.L_28BF-_LOADSHADOW@12
	.stabn 192,0,0,.L_28C2-_LOADSHADOW@12
	.stabn 224,0,0,.L_28CB-_LOADSHADOW@12
	.stabn 224,0,0,.L_28CC-_LOADSHADOW@12
	.stabn 224,0,0,.L_28CD-_LOADSHADOW@12
	.stabn 224,0,0,.L_28CE-_LOADSHADOW@12
	.stabn 192,0,0,.L_28D0-_LOADSHADOW@12
	.stabn 192,0,0,.L_28D3-_LOADSHADOW@12
	.stabn 224,0,0,.L_28DA-_LOADSHADOW@12
	.stabn 224,0,0,.L_28DB-_LOADSHADOW@12
	.stabn 224,0,0,.L_28DC-_LOADSHADOW@12
	.stabn 224,0,0,.L_28DD-_LOADSHADOW@12
	.stabn 192,0,0,.L_28E0-_LOADSHADOW@12
	.stabn 192,0,0,.L_28E3-_LOADSHADOW@12
	.stabn 224,0,0,.L_28EA-_LOADSHADOW@12
	.stabn 224,0,0,.L_28EB-_LOADSHADOW@12
	.stabn 192,0,0,.L_28F0-_LOADSHADOW@12
	.stabn 224,0,0,.L_28F1-_LOADSHADOW@12
	.stabn 192,0,0,.L_28F4-_LOADSHADOW@12
	.stabn 224,0,0,.L_28F5-_LOADSHADOW@12
	.stabn 224,0,0,.L_28F6-_LOADSHADOW@12
	.stabs "SNAME:13",128,0,0,-108
	.stabs "SPARMS:13",128,0,0,-120
	.stabs "PNEW:125=*104",128,0,0,-124
	.stabn 192,0,0,.L_28FA-_LOADSHADOW@12
	.stabn 192,0,0,.L_28FD-_LOADSHADOW@12
	.stabn 192,0,0,.L_2900-_LOADSHADOW@12
	.stabn 224,0,0,.L_2905-_LOADSHADOW@12
	.stabn 224,0,0,.L_2906-_LOADSHADOW@12
	.stabs "IRESU:1",128,0,0,-132
	.stabn 192,0,0,.L_290A-_LOADSHADOW@12
	.stabn 192,0,0,.L_290D-_LOADSHADOW@12
	.stabn 224,0,0,.L_2912-_LOADSHADOW@12
	.stabn 192,0,0,.L_2915-_LOADSHADOW@12
	.stabn 224,0,0,.L_2916-_LOADSHADOW@12
	.stabn 192,0,0,.L_2917-_LOADSHADOW@12
	.stabn 192,0,0,.L_291D-_LOADSHADOW@12
	.stabn 192,0,0,.L_291E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2923-_LOADSHADOW@12
	.stabn 224,0,0,.L_2924-_LOADSHADOW@12
	.stabn 192,0,0,.L_2928-_LOADSHADOW@12
	.stabn 224,0,0,.L_2929-_LOADSHADOW@12
	.stabn 192,0,0,.L_292B-_LOADSHADOW@12
	.stabn 192,0,0,.L_292E-_LOADSHADOW@12
	.stabn 224,0,0,.L_2935-_LOADSHADOW@12
	.stabn 224,0,0,.L_2936-_LOADSHADOW@12
	.stabn 224,0,0,.L_2937-_LOADSHADOW@12
	.stabn 224,0,0,.L_2938-_LOADSHADOW@12
	.stabs "PPARM:126=*3",128,0,0,-140
	.stabs "SSHAPE:13",128,0,0,-152
	.stabs "ISECS:1",128,0,0,-156
	.stabs "ISHAPEID:1",128,0,0,-160
	.stabs "FRAD:11",128,0,0,-164
	.stabs "FLEN:11",128,0,0,-168
	.stabn 192,0,0,.L_293C-_LOADSHADOW@12
	.stabs "ISHAPE:1",128,0,0,-172
	.stabn 192,0,0,.L_2940-_LOADSHADOW@12
	.stabn 192,0,0,.L_2943-_LOADSHADOW@12
	.stabn 224,0,0,.L_2944-_LOADSHADOW@12
	.stabn 192,0,0,.L_2947-_LOADSHADOW@12
	.stabn 192,0,0,.L_294A-_LOADSHADOW@12
	.stabn 224,0,0,.L_2951-_LOADSHADOW@12
	.stabn 224,0,0,.L_2952-_LOADSHADOW@12
	.stabn 192,0,0,.L_2953-_LOADSHADOW@12
	.stabn 192,0,0,.L_2958-_LOADSHADOW@12
	.stabn 224,0,0,.L_2959-_LOADSHADOW@12
	.stabn 192,0,0,.L_295C-_LOADSHADOW@12
	.stabn 224,0,0,.L_295D-_LOADSHADOW@12
	.stabn 192,0,0,.L_2961-_LOADSHADOW@12
	.stabn 224,0,0,.L_2962-_LOADSHADOW@12
	.stabn 192,0,0,.L_2966-_LOADSHADOW@12
	.stabn 224,0,0,.L_2967-_LOADSHADOW@12
	.stabn 192,0,0,.L_296B-_LOADSHADOW@12
	.stabn 224,0,0,.L_296C-_LOADSHADOW@12
	.stabn 192,0,0,.L_296E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2971-_LOADSHADOW@12
	.stabn 224,0,0,.L_2978-_LOADSHADOW@12
	.stabn 224,0,0,.L_2979-_LOADSHADOW@12
	.stabn 224,0,0,.L_297A-_LOADSHADOW@12
	.stabn 192,0,0,.L_297D-_LOADSHADOW@12
	.stabn 224,0,0,.L_2986-_LOADSHADOW@12
	.stabn 192,0,0,.L_2989-_LOADSHADOW@12
	.stabn 224,0,0,.L_298B-_LOADSHADOW@12
	.stabn 192,0,0,.L_298E-_LOADSHADOW@12
	.stabn 224,0,0,.L_2997-_LOADSHADOW@12
	.stabn 192,0,0,.L_299A-_LOADSHADOW@12
	.stabn 224,0,0,.L_299C-_LOADSHADOW@12
	.stabn 192,0,0,.L_299D-_LOADSHADOW@12
	.stabn 224,0,0,.L_299F-_LOADSHADOW@12
	.stabn 224,0,0,.L_29A0-_LOADSHADOW@12
	.stabn 192,0,0,.L_29A3-_LOADSHADOW@12
	.stabn 192,0,0,.L_29A6-_LOADSHADOW@12
	.stabn 224,0,0,.L_29AD-_LOADSHADOW@12
	.stabn 224,0,0,.L_29AE-_LOADSHADOW@12
	.stabn 224,0,0,.L_29AF-_LOADSHADOW@12
	.stabn 192,0,0,.L_29B3-_LOADSHADOW@12
	.stabn 192,0,0,.L_29B4-_LOADSHADOW@12
	.stabn 192,0,0,.L_29BA-_LOADSHADOW@12
	.stabn 224,0,0,.L_29BB-_LOADSHADOW@12
	.stabn 192,0,0,.L_29BF-_LOADSHADOW@12
	.stabn 224,0,0,.L_29C0-_LOADSHADOW@12
	.stabn 192,0,0,.L_29C4-_LOADSHADOW@12
	.stabn 224,0,0,.L_29C5-_LOADSHADOW@12
	.stabn 192,0,0,.L_29C9-_LOADSHADOW@12
	.stabn 224,0,0,.L_29CA-_LOADSHADOW@12
	.stabn 192,0,0,.L_29CE-_LOADSHADOW@12
	.stabn 224,0,0,.L_29CF-_LOADSHADOW@12
	.stabn 192,0,0,.L_29D1-_LOADSHADOW@12
	.stabn 192,0,0,.L_29D4-_LOADSHADOW@12
	.stabn 224,0,0,.L_29DB-_LOADSHADOW@12
	.stabn 224,0,0,.L_29DC-_LOADSHADOW@12
	.stabn 224,0,0,.L_29DD-_LOADSHADOW@12
	.stabn 224,0,0,.L_29DE-_LOADSHADOW@12
	.stabs "PPOS:127=*11",128,0,0,-140
	.stabs "PPARM:128=*3",128,0,0,-144
	.stabn 192,0,0,.L_29E1-_LOADSHADOW@12
	.stabs "N:1",128,0,0,-148
	.stabn 192,0,0,.L_29E2-_LOADSHADOW@12
	.stabn 192,0,0,.L_29E7-_LOADSHADOW@12
	.stabn 192,0,0,.L_29EA-_LOADSHADOW@12
	.stabn 224,0,0,.L_29EF-_LOADSHADOW@12
	.stabn 224,0,0,.L_29F0-_LOADSHADOW@12
	.stabn 224,0,0,.L_29F1-_LOADSHADOW@12
	.stabn 224,0,0,.L_29F2-_LOADSHADOW@12
	.stabs "PPARM:129=*3",128,0,0,-140
	.stabs "LCNTX:1",128,0,0,-144
	.stabs "LCNTZ:1",128,0,0,-148
	.stabs "FSTEPX:11",128,0,0,-152
	.stabs "FSTEPZ:11",128,0,0,-156
	.stabn 192,0,0,.L_29F5-_LOADSHADOW@12
	.stabn 192,0,0,.L_29FA-_LOADSHADOW@12
	.stabn 224,0,0,.L_29FB-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A02-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A05-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A0A-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A0B-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A0E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A11-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A16-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A17-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A18-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A1B-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A20-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A21-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A24-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A27-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A2C-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A2D-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A32-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A33-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A3A-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A3D-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A42-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A43-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A46-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A49-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A4E-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A4F-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A50-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A53-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A58-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A59-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A5C-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A5F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A64-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A65-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A68-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A6D-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A70-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A71-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A74-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A79-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A7C-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A7D-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A7E-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A80-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A81-_LOADSHADOW@12
	.stabs "PORI:130=*11",128,0,0,-140
	.stabs "PPARM:131=*3",128,0,0,-144
	.stabn 192,0,0,.L_2A84-_LOADSHADOW@12
	.stabs "N:1",128,0,0,-148
	.stabn 192,0,0,.L_2A85-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A8A-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A8D-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A92-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A93-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A94-_LOADSHADOW@12
	.stabn 224,0,0,.L_2A95-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A99-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A9A-_LOADSHADOW@12
	.stabn 192,0,0,.L_2A9F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AA0-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AA4-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AA5-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AA7-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AAA-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AB1-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AB2-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AB3-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AB4-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AB8-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AB9-_LOADSHADOW@12
	.stabn 192,0,0,.L_2ABE-_LOADSHADOW@12
	.stabn 224,0,0,.L_2ABF-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AC2-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AC3-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AC5-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AC8-_LOADSHADOW@12
	.stabn 224,0,0,.L_2ACD-_LOADSHADOW@12
	.stabn 224,0,0,.L_2ACE-_LOADSHADOW@12
	.stabn 224,0,0,.L_2ACF-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AD0-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AD4-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AD5-_LOADSHADOW@12
	.stabn 192,0,0,.L_2ADA-_LOADSHADOW@12
	.stabn 224,0,0,.L_2ADB-_LOADSHADOW@12
	.stabn 192,0,0,.L_2ADF-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AE0-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AE4-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AE5-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AE9-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AEA-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AEC-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AEF-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AF6-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AF7-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AF8-_LOADSHADOW@12
	.stabn 224,0,0,.L_2AF9-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AFD-_LOADSHADOW@12
	.stabn 192,0,0,.L_2AFE-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B03-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B04-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B09-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B0A-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B0C-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B0F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B16-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B17-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B18-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B19-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B1D-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B1E-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B20-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B21-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B29-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B2A-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B2C-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B2F-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B36-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B37-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B38-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B39-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B3A-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B3B-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B40-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B41-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B44-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B45-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B46-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B47-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B4A-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B4B-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B50-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B51-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B54-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B55-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B56-_LOADSHADOW@12
	.stabn 192,0,0,.L_2B59-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B5B-_LOADSHADOW@12
	.stabn 224,0,0,.L_2B5C-_LOADSHADOW@12
	.stabn 224,0,0,.L_273C-_LOADSHADOW@12
.L_2D60:
	.stabs "",36,0,0,.L_2D60-_LOADSHADOW@12
	.stabs "LOADMODEL:F132=*101",36,0,572,_LOADMODEL@16
	.stabs "PFILE:p133=*3",160,0,0,8
	.stabs "SFILENAME:v13",160,0,0,12
	.stabs "IMODELINDEX:p1",160,0,0,16
	.stabs "ILOADDEPENDENCIES:p2",160,0,0,20
.balign 16

.globl _LOADMODEL@16
_LOADMODEL@16:
	push ebp
	mov ebp, esp
	sub esp, 196
	push ebx
	.stabn 68,0,572,_LOADMODEL@16-_LOADMODEL@16
	mov dword ptr [ebp-4], 0
.L_2D61:
.L_3228:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], -1
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-20], 1
.stabn 68,0,604,.L_3228-_LOADMODEL@16
.L_3229:
	mov dword ptr [ebp-36], 0
.stabn 68,0,606,.L_3229-_LOADMODEL@16
.L_322A:
	mov dword ptr [ebp-40], 0
.stabn 68,0,607,.L_322A-_LOADMODEL@16
.L_322B:
	mov dword ptr [_Lt_322C], 0
	mov dword ptr [_Lt_322D], 0
.stabn 68,0,609,.L_322B-_LOADMODEL@16
.L_322E:
	inc dword ptr [_Lt_322F]
.stabn 68,0,610,.L_322E-_LOADMODEL@16
.L_3230:
	cmp dword ptr [ebp+16], 0
	jge .L_2D64
.L_2D65:
.stabn 68,0,614,.L_3230-_LOADMODEL@16
.L_3231:
	mov eax, dword ptr [_G_MODELCOUNT]
	mov dword ptr [ebp+16], eax
.stabn 68,0,615,.L_3231-_LOADMODEL@16
.L_3232:
	push dword ptr [_G_MODELCOUNT]
	push 0
	push 1
	push 0
	push -1
	push 8
	push offset _G_TMODELS
	call _fb_ArrayRedimPresvEx
	add esp, 28
.stabn 68,0,616,.L_3232-_LOADMODEL@16
.L_3233:
	inc dword ptr [_G_MODELCOUNT]
.stabn 68,0,617,.L_3233-_LOADMODEL@16
.L_3234:
.L_2D66:
.L_2D64:
.L_2D63:
.L_2D67:
.L_2D6A:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_2D6C
.L_2D6D:
.stabn 68,0,621,.L_3234-_LOADMODEL@16
.L_3235:
	add dword ptr [ebp-12], 4096
.stabn 68,0,622,.L_3235-_LOADMODEL@16
.L_3236:
	mov eax, dword ptr [ebp-12]
	imul eax, 56
	add eax, 100
	mov ebx, eax
	push ebx
	push dword ptr [ebp-36]
	call _realloc
	add esp, 8
	mov dword ptr [ebp-44], eax
.stabn 68,0,623,.L_3236-_LOADMODEL@16
.L_3237:
	cmp dword ptr [ebp-44], 0
	jne .L_2D6F
.L_2D70:
.stabn 68,0,624,.L_3237-_LOADMODEL@16
.L_3238:
	push offset _Lt_2D71
	call _puts
	add esp, 4
.stabn 68,0,625,.L_3238-_LOADMODEL@16
.L_3239:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,626,.L_3239-_LOADMODEL@16
.L_323A:
.L_2D72:
.L_2D6F:
.L_2D6E:
	cmp dword ptr [ebp-36], 0
	jne .L_2D74
.L_2D75:
.stabn 68,0,628,.L_323A-_LOADMODEL@16
.L_323B:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-36], eax
.stabn 68,0,629,.L_323B-_LOADMODEL@16
.L_323C:
	push -1
	push offset _G_SFILENAMES
	call _fb_StrLen@8
	mov dword ptr [ebp-40], eax
.stabn 68,0,630,.L_323C-_LOADMODEL@16
.L_323D:
	push 0
	push -1
	push -1
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push -1
	push 0
	push dword ptr [ebp+12]
	call _fb_StrLcase2@8
	push eax
	push -1
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push -1
	push dword ptr [ebp+16]
	call _fb_MKL@4
	push eax
	push 2
	push offset _Lt_2D76
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	lea eax, [ebp-92]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push offset _G_SFILENAMES
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	lea eax, [ebp-104]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push offset _G_SFILENAMES
	call _fb_StrAssign@20
.stabn 68,0,631,.L_323D-_LOADMODEL@16
.L_323E:
	mov eax, dword ptr [ebp-44]
	mov ebx, dword ptr [ebp+16]
	mov dword ptr [eax], ebx
.stabn 68,0,632,.L_323E-_LOADMODEL@16
.L_323F:
	mov ebx, dword ptr [ebp-44]
	mov dword ptr [ebx+32], 0
.stabn 68,0,633,.L_323F-_LOADMODEL@16
.L_3240:
	mov ebx, dword ptr [ebp-44]
	mov dword ptr [ebx+40], 0
.stabn 68,0,634,.L_3240-_LOADMODEL@16
.L_3241:
	mov ebx, dword ptr [ebp-44]
	mov dword ptr [ebx+36], 0
.stabn 68,0,635,.L_3241-_LOADMODEL@16
.L_3242:
.L_2D7C:
	mov ebx, dword ptr [ebp-44]
	lea eax, [ebx+8]
	mov dword ptr [ebp-108], eax
.stabn 68,0,636,.L_3242-_LOADMODEL@16
.L_3243:
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+4]
.stabn 68,0,637,.L_3243-_LOADMODEL@16
.L_3244:
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+8]
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+12]
.stabn 68,0,638,.L_3244-_LOADMODEL@16
.L_3245:
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+16]
	mov eax, dword ptr [ebp-108]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+20]
.stabn 68,0,639,.L_3245-_LOADMODEL@16
.L_3246:
.L_2D7E:
.L_2D7F:
.L_2D74:
.L_2D73:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-36], eax
.stabn 68,0,643,.L_3246-_LOADMODEL@16
.L_3247:
.L_2D80:
.L_2D6C:
.L_2D6B:
	lea eax, [ebp-24]
	push eax
	push dword ptr [ebp+8]
	call _READINT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,646,.L_3247-_LOADMODEL@16
.L_3248:
	cmp dword ptr [ebp-32], 0
	jne .L_2D82
.L_2D83:
.stabn 68,0,647,.L_3248-_LOADMODEL@16
.L_3249:
.L_2D84:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2D86
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_31F2
.L_2D86:
	mov dword ptr [ebp-44], 0
.L_31F2:
	cmp dword ptr [ebp-44], 0
	je .L_2D85
.L_2D88:
	inc dword ptr [ebp+8]
.L_2D89:
	jmp .L_2D84
.L_2D85:
.stabn 68,0,648,.L_3249-_LOADMODEL@16
.L_324B:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2D8B
.L_2D8C:
	jmp .L_2D68
.L_2D8B:
.L_2D8D:
.stabn 68,0,648,.L_324B-_LOADMODEL@16
.L_324C:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	jmp .L_2D69
.stabn 68,0,648,.L_324C-_LOADMODEL@16
.L_324D:
.L_2D8E:
.L_2D82:
.L_2D81:
	cmp dword ptr [ebp-32], 0
	jg .L_2D90
.L_2D91:
.stabn 68,0,650,.L_324D-_LOADMODEL@16
.L_324E:
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 23
	push offset _Lt_2766
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	lea eax, [ebp-52]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	lea eax, [ebp-64]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-88]
	call _puts
	add esp, 4
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,650,.L_324E-_LOADMODEL@16
.L_324F:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,650,.L_324F-_LOADMODEL@16
.L_3250:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,650,.L_3250-_LOADMODEL@16
.L_3251:
.L_2D96:
.L_2D90:
.L_2D8F:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,651,.L_3251-_LOADMODEL@16
.L_3252:
	cmp dword ptr [ebp-24], 0
	je .L_2D98
.L_2D99:
.stabn 68,0,654,.L_3252-_LOADMODEL@16
.L_3253:
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp+8]
	call _READINT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,655,.L_3253-_LOADMODEL@16
.L_3254:
	cmp dword ptr [ebp-32], 0
	jle .L_2D9B
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_31F3
.L_2D9B:
	mov dword ptr [ebp-44], 0
.L_31F3:
	cmp dword ptr [ebp-44], 0
	je .L_2D9E
.L_2D9F:
	mov dword ptr [ebp-32], -1
.L_2D9E:
.L_2DA0:
.stabn 68,0,656,.L_3254-_LOADMODEL@16
.L_3256:
	cmp dword ptr [ebp-32], 0
	jg .L_2DA2
.L_2DA3:
.stabn 68,0,656,.L_3256-_LOADMODEL@16
.L_3257:
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 52
	push offset _Lt_2DA5
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-92]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-92]
	call _puts
	add esp, 4
	lea eax, [ebp-92]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,656,.L_3257-_LOADMODEL@16
.L_3258:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,656,.L_3258-_LOADMODEL@16
.L_3259:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,656,.L_3259-_LOADMODEL@16
.L_325A:
.L_2DAA:
.L_2DA2:
.L_2DA1:
	mov ax, word ptr [ebp-28]
	mov ebx, dword ptr [ebp-8]
	imul ebx, 56
	mov ecx, dword ptr [ebp-36]
	add ecx, ebx
	mov word ptr [ecx+46], ax
.stabn 68,0,657,.L_325A-_LOADMODEL@16
.L_325B:
	mov al, byte ptr [ebp-24]
	mov ecx, dword ptr [ebp-8]
	imul ecx, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, ecx
	mov byte ptr [ebx+44], al
.stabn 68,0,658,.L_325B-_LOADMODEL@16
.L_325C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,659,.L_325C-_LOADMODEL@16
.L_325D:
.L_2DAB:
.L_2D98:
.L_2D97:
.L_2DAC:
	cmp dword ptr [ebp-24], 0
	jne .L_2DAE
.L_2DAF:
.L_2DB0:
.stabn 68,0,670,.L_325D-_LOADMODEL@16
.L_325E:
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
.stabn 68,0,671,.L_325E-_LOADMODEL@16
.L_325F:
	lea eax, [ebp-52]
	push eax
	push dword ptr [ebp+8]
	call _READTOKEN@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,672,.L_325F-_LOADMODEL@16
.L_3260:
	push 4
	push offset _Lt_2DB1
	push -1
	push 0
	lea eax, [ebp-52]
	push eax
	call _fb_StrUcase2@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_2DB3
.L_2DB4:
.stabn 68,0,674,.L_3260-_LOADMODEL@16
.L_3261:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,675,.L_3261-_LOADMODEL@16
.L_3262:
	lea eax, [ebp-52]
	push eax
	push dword ptr [ebp+8]
	call _READTOKEN@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,676,.L_3262-_LOADMODEL@16
.L_3263:
.L_2DB5:
	jmp .L_2DB2
.L_2DB3:
	push 5
	push offset _Lt_2DB7
	push -1
	push 0
	lea eax, [ebp-52]
	push eax
	call _fb_StrUcase2@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_2DB6
.L_2DB8:
.stabn 68,0,678,.L_3263-_LOADMODEL@16
.L_3264:
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
.stabn 68,0,679,.L_3264-_LOADMODEL@16
.L_3265:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,680,.L_3265-_LOADMODEL@16
.L_3266:
	lea eax, [ebp-68]
	push eax
	push dword ptr [ebp+8]
	call _READFILENAME@8
.stabn 68,0,681,.L_3266-_LOADMODEL@16
.L_3267:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,683,.L_3267-_LOADMODEL@16
.L_3268:
.L_2DB9:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2DBB
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_31F4
.L_2DBB:
	mov dword ptr [ebp-72], 0
.L_31F4:
	cmp dword ptr [ebp-72], 0
	je .L_2DBA
.L_2DBD:
	inc dword ptr [ebp+8]
.L_2DBE:
	jmp .L_2DB9
.L_2DBA:
.stabn 68,0,685,.L_3268-_LOADMODEL@16
.L_326A:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2DC0
.L_2DC1:
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-52]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2D68
.L_2DC0:
.L_2DC2:
.stabn 68,0,685,.L_326A-_LOADMODEL@16
.L_326B:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
.stabn 68,0,685,.L_326B-_LOADMODEL@16
.L_326C:
	cmp dword ptr [ebp-8], 0
	jne .L_2DC3
	mov ebx, dword ptr [_Lt_322F]
	cmp ebx, 1
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-76], ebx
	jmp .L_31F5
.L_2DC3:
	mov dword ptr [ebp-76], 0
.L_31F5:
	cmp dword ptr [ebp-76], 0
	je .L_2DC6
.L_2DC7:
.stabn 68,0,688,.L_326C-_LOADMODEL@16
.L_326E:
.L_2DC8:
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	cmp eax, 10
	je .L_2DCA
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-124], ebx
	jmp .L_31F6
.L_2DCA:
	mov dword ptr [ebp-124], 0
.L_31F6:
	cmp dword ptr [ebp-124], 0
	je .L_2DC9
.L_2DCC:
	inc dword ptr [ebp+8]
.L_2DCD:
	jmp .L_2DC8
.L_2DC9:
.stabn 68,0,689,.L_326E-_LOADMODEL@16
.L_3270:
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	test eax, eax
	jne .L_2DCF
.L_2DD0:
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D68
.L_2DCF:
.L_2DD1:
.stabn 68,0,689,.L_3270-_LOADMODEL@16
.L_3271:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D69
.stabn 68,0,689,.L_3271-_LOADMODEL@16
.L_3272:
.L_2DD2:
.L_2DC6:
.L_2DC5:
	push 0
	push -1
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrLcase2@8
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrInit@20
	mov dword ptr [ebp-104], -1
.stabn 68,0,692,.L_3272-_LOADMODEL@16
.L_3273:
	push -1
	lea eax, [ebp-88]
	push eax
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	lea eax, [ebp-116]
	push eax
	call _fb_StrConcat@20
	push eax
	push offset _G_SFILENAMES
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-120], eax
.stabn 68,0,693,.L_3273-_LOADMODEL@16
.L_3274:
	cmp dword ptr [ebp-120], 4
	jle .L_2DD6
.L_2DD7:
.stabn 68,0,714,.L_3274-_LOADMODEL@16
.L_3275:
	mov eax, dword ptr [_G_SFILENAMES]
	add eax, dword ptr [ebp-120]
	add eax, -5
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-104], ebx
.stabn 68,0,716,.L_3275-_LOADMODEL@16
.L_3276:
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push -1
	push 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrLcase2@8
	push eax
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	lea eax, [ebp-132]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	lea eax, [ebp-144]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	push offset _G_SFILESTOLOAD
	call _fb_StrLcase2@8
	push eax
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-120], eax
.stabn 68,0,718,.L_3276-_LOADMODEL@16
.L_3277:
	cmp dword ptr [ebp-120], 0
	jne .L_2DDB
.L_2DDC:
	push 1
	push 71
	push offset _Lt_2DDD
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	call _fb_PrintString@12
.L_2DDB:
.L_2DDE:
.stabn 68,0,719,.L_3277-_LOADMODEL@16
.L_3278:
	push 0
	push -1
	push -1
	push -1
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrLen@8
	add eax, dword ptr [ebp-120]
	add eax, 2
	push eax
	push offset _G_SFILESTOLOAD
	call _fb_StrMid@12
	push eax
	push -1
	push dword ptr [ebp-120]
	push offset _G_SFILESTOLOAD
	call _fb_LEFT@8
	push eax
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push offset _G_SFILESTOLOAD
	call _fb_StrAssign@20
.stabn 68,0,720,.L_3278-_LOADMODEL@16
.L_3279:
.L_2DE0:
.L_2DD6:
.L_2DD5:
	push 1
	push dword ptr [ebp-104]
	lea eax, [ebp-68]
	push eax
	push dword ptr [ebp+8]
	call _LOADMODEL@16
.stabn 68,0,722,.L_3279-_LOADMODEL@16
.L_327A:
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D68
.stabn 68,0,723,.L_327A-_LOADMODEL@16
.L_327B:
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
.L_2DE1:
	jmp .L_2DB2
.L_2DB6:
.L_2DE2:
.stabn 68,0,724,.L_327B-_LOADMODEL@16
.L_327C:
	lea eax, [ebp-52]
	push eax
	push dword ptr [ebp+8]
	call _READFILENAME@8
.stabn 68,0,725,.L_327C-_LOADMODEL@16
.L_327D:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,727,.L_327D-_LOADMODEL@16
.L_327E:
.L_2DE3:
.L_2DB2:
.L_2DE4:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2DE6
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_31F7
.L_2DE6:
	mov dword ptr [ebp-56], 0
.L_31F7:
	cmp dword ptr [ebp-56], 0
	je .L_2DE5
.L_2DE8:
	inc dword ptr [ebp+8]
.L_2DE9:
	jmp .L_2DE4
.L_2DE5:
.stabn 68,0,729,.L_327E-_LOADMODEL@16
.L_3280:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_2DEB
.L_2DEC:
	lea ebx, [ebp-52]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2D68
.L_2DEB:
.L_2DED:
.stabn 68,0,729,.L_3280-_LOADMODEL@16
.L_3281:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	lea ebx, [ebp-52]
	push ebx
	call _fb_StrDelete@4
	jmp .L_2D69
.stabn 68,0,729,.L_3281-_LOADMODEL@16
.L_3282:
	lea ebx, [ebp-52]
	push ebx
	call _fb_StrDelete@4
.L_2DEE:
	jmp .L_2DAD
.L_2DAE:
	cmp dword ptr [ebp-24], 1
	jne .L_2DEF
.L_2DF0:
.L_2DF1:
.stabn 68,0,730,.L_3282-_LOADMODEL@16
.L_3283:
.L_2DF2:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 56
	mov eax, dword ptr [ebp-36]
	add eax, ebx
	lea ebx, [eax+48]
	mov dword ptr [ebp-44], ebx
.stabn 68,0,731,.L_3283-_LOADMODEL@16
.L_3284:
	mov ebx, dword ptr [ebp-44]
	lea eax, [ebx]
	push eax
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,732,.L_3284-_LOADMODEL@16
.L_3285:
	cmp dword ptr [ebp-32], 0
	jle .L_2DF4
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_31F8
.L_2DF4:
	mov dword ptr [ebp-48], 0
.L_31F8:
	cmp dword ptr [ebp-48], 0
	je .L_2DF7
.L_2DF8:
	mov dword ptr [ebp-32], -1
.L_2DF7:
.L_2DF9:
.stabn 68,0,732,.L_3285-_LOADMODEL@16
.L_3287:
	cmp dword ptr [ebp-32], 0
	jg .L_2DFB
.L_2DFC:
.stabn 68,0,732,.L_3287-_LOADMODEL@16
.L_3288:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2E01
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,732,.L_3288-_LOADMODEL@16
.L_3289:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,732,.L_3289-_LOADMODEL@16
.L_328A:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,732,.L_328A-_LOADMODEL@16
.L_328B:
.L_2E06:
.L_2DFB:
.L_2DFA:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,732,.L_328B-_LOADMODEL@16
.L_328C:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+4]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,733,.L_328C-_LOADMODEL@16
.L_328D:
	cmp dword ptr [ebp-32], 0
	jle .L_2E07
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-52], eax
	jmp .L_31F9
.L_2E07:
	mov dword ptr [ebp-52], 0
.L_31F9:
	cmp dword ptr [ebp-52], 0
	je .L_2E0A
.L_2E0B:
	mov dword ptr [ebp-32], -1
.L_2E0A:
.L_2E0C:
.stabn 68,0,733,.L_328D-_LOADMODEL@16
.L_328F:
	cmp dword ptr [ebp-32], 0
	jg .L_2E0E
.L_2E0F:
.stabn 68,0,733,.L_328F-_LOADMODEL@16
.L_3290:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 54
	push offset _Lt_2E13
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,733,.L_3290-_LOADMODEL@16
.L_3291:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,733,.L_3291-_LOADMODEL@16
.L_3292:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,733,.L_3292-_LOADMODEL@16
.L_3293:
.L_2E18:
.L_2E0E:
.L_2E0D:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,733,.L_3293-_LOADMODEL@16
.L_3294:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+8]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,734,.L_3294-_LOADMODEL@16
.L_3295:
	cmp dword ptr [ebp-32], 0
	jle .L_2E19
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_31FA
.L_2E19:
	mov dword ptr [ebp-56], 0
.L_31FA:
	cmp dword ptr [ebp-56], 0
	je .L_2E1C
.L_2E1D:
	mov dword ptr [ebp-32], -1
.L_2E1C:
.L_2E1E:
.stabn 68,0,734,.L_3295-_LOADMODEL@16
.L_3297:
	cmp dword ptr [ebp-32], 0
	jg .L_2E20
.L_2E21:
.stabn 68,0,734,.L_3297-_LOADMODEL@16
.L_3298:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2E25
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,734,.L_3298-_LOADMODEL@16
.L_3299:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,734,.L_3299-_LOADMODEL@16
.L_329A:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,734,.L_329A-_LOADMODEL@16
.L_329B:
.L_2E2A:
.L_2E20:
.L_2E1F:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,734,.L_329B-_LOADMODEL@16
.L_329C:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,735,.L_329C-_LOADMODEL@16
.L_329D:
	cmp dword ptr [ebp-32], 0
	jle .L_2E2B
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-60], eax
	jmp .L_31FB
.L_2E2B:
	mov dword ptr [ebp-60], 0
.L_31FB:
	cmp dword ptr [ebp-60], 0
	je .L_2E2E
.L_2E2F:
	mov dword ptr [ebp-32], -1
.L_2E2E:
.L_2E30:
.stabn 68,0,735,.L_329D-_LOADMODEL@16
.L_329F:
	cmp dword ptr [ebp-32], 0
	jg .L_2E32
.L_2E33:
.stabn 68,0,735,.L_329F-_LOADMODEL@16
.L_32A0:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 54
	push offset _Lt_2E37
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,735,.L_32A0-_LOADMODEL@16
.L_32A1:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,735,.L_32A1-_LOADMODEL@16
.L_32A2:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,735,.L_32A2-_LOADMODEL@16
.L_32A3:
.L_2E3C:
.L_2E32:
.L_2E31:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,735,.L_32A3-_LOADMODEL@16
.L_32A4:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+16]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,736,.L_32A4-_LOADMODEL@16
.L_32A5:
	cmp dword ptr [ebp-32], 0
	jle .L_2E3D
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_31FC
.L_2E3D:
	mov dword ptr [ebp-64], 0
.L_31FC:
	cmp dword ptr [ebp-64], 0
	je .L_2E40
.L_2E41:
	mov dword ptr [ebp-32], -1
.L_2E40:
.L_2E42:
.stabn 68,0,736,.L_32A5-_LOADMODEL@16
.L_32A7:
	cmp dword ptr [ebp-32], 0
	jg .L_2E44
.L_2E45:
.stabn 68,0,736,.L_32A7-_LOADMODEL@16
.L_32A8:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 54
	push offset _Lt_2E49
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,736,.L_32A8-_LOADMODEL@16
.L_32A9:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,736,.L_32A9-_LOADMODEL@16
.L_32AA:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,736,.L_32AA-_LOADMODEL@16
.L_32AB:
.L_2E4E:
.L_2E44:
.L_2E43:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,736,.L_32AB-_LOADMODEL@16
.L_32AC:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+20]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,737,.L_32AC-_LOADMODEL@16
.L_32AD:
	cmp dword ptr [ebp-32], 0
	jle .L_2E4F
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-68], eax
	jmp .L_31FD
.L_2E4F:
	mov dword ptr [ebp-68], 0
.L_31FD:
	cmp dword ptr [ebp-68], 0
	je .L_2E52
.L_2E53:
	mov dword ptr [ebp-32], -1
.L_2E52:
.L_2E54:
.stabn 68,0,737,.L_32AD-_LOADMODEL@16
.L_32AF:
	cmp dword ptr [ebp-32], 0
	jg .L_2E56
.L_2E57:
.stabn 68,0,737,.L_32AF-_LOADMODEL@16
.L_32B0:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2E5B
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,737,.L_32B0-_LOADMODEL@16
.L_32B1:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,737,.L_32B1-_LOADMODEL@16
.L_32B2:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,737,.L_32B2-_LOADMODEL@16
.L_32B3:
.L_2E60:
.L_2E56:
.L_2E55:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,737,.L_32B3-_LOADMODEL@16
.L_32B4:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+24]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,738,.L_32B4-_LOADMODEL@16
.L_32B5:
	cmp dword ptr [ebp-32], 0
	jle .L_2E61
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_31FE
.L_2E61:
	mov dword ptr [ebp-72], 0
.L_31FE:
	cmp dword ptr [ebp-72], 0
	je .L_2E64
.L_2E65:
	mov dword ptr [ebp-32], -1
.L_2E64:
.L_2E66:
.stabn 68,0,738,.L_32B5-_LOADMODEL@16
.L_32B7:
	cmp dword ptr [ebp-32], 0
	jg .L_2E68
.L_2E69:
.stabn 68,0,738,.L_32B7-_LOADMODEL@16
.L_32B8:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2E6D
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,738,.L_32B8-_LOADMODEL@16
.L_32B9:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,738,.L_32B9-_LOADMODEL@16
.L_32BA:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,738,.L_32BA-_LOADMODEL@16
.L_32BB:
.L_2E72:
.L_2E68:
.L_2E67:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,738,.L_32BB-_LOADMODEL@16
.L_32BC:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+28]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,739,.L_32BC-_LOADMODEL@16
.L_32BD:
	cmp dword ptr [ebp-32], 0
	jle .L_2E73
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-76], eax
	jmp .L_31FF
.L_2E73:
	mov dword ptr [ebp-76], 0
.L_31FF:
	cmp dword ptr [ebp-76], 0
	je .L_2E76
.L_2E77:
	mov dword ptr [ebp-32], -1
.L_2E76:
.L_2E78:
.stabn 68,0,739,.L_32BD-_LOADMODEL@16
.L_32BF:
	cmp dword ptr [ebp-32], 0
	jg .L_2E7A
.L_2E7B:
.stabn 68,0,739,.L_32BF-_LOADMODEL@16
.L_32C0:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 54
	push offset _Lt_2E7F
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,739,.L_32C0-_LOADMODEL@16
.L_32C1:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,739,.L_32C1-_LOADMODEL@16
.L_32C2:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,739,.L_32C2-_LOADMODEL@16
.L_32C3:
.L_2E84:
.L_2E7A:
.L_2E79:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,739,.L_32C3-_LOADMODEL@16
.L_32C4:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+32]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,740,.L_32C4-_LOADMODEL@16
.L_32C5:
	cmp dword ptr [ebp-32], 0
	jle .L_2E85
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_3200
.L_2E85:
	mov dword ptr [ebp-80], 0
.L_3200:
	cmp dword ptr [ebp-80], 0
	je .L_2E88
.L_2E89:
	mov dword ptr [ebp-32], -1
.L_2E88:
.L_2E8A:
.stabn 68,0,740,.L_32C5-_LOADMODEL@16
.L_32C7:
	cmp dword ptr [ebp-32], 0
	jg .L_2E8C
.L_2E8D:
.stabn 68,0,740,.L_32C7-_LOADMODEL@16
.L_32C8:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 54
	push offset _Lt_2E91
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,740,.L_32C8-_LOADMODEL@16
.L_32C9:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,740,.L_32C9-_LOADMODEL@16
.L_32CA:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,740,.L_32CA-_LOADMODEL@16
.L_32CB:
.L_2E96:
.L_2E8C:
.L_2E8B:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,740,.L_32CB-_LOADMODEL@16
.L_32CC:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+36]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,741,.L_32CC-_LOADMODEL@16
.L_32CD:
	cmp dword ptr [ebp-32], 0
	jle .L_2E97
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3201
.L_2E97:
	mov dword ptr [ebp-84], 0
.L_3201:
	cmp dword ptr [ebp-84], 0
	je .L_2E9A
.L_2E9B:
	mov dword ptr [ebp-32], -1
.L_2E9A:
.L_2E9C:
.stabn 68,0,741,.L_32CD-_LOADMODEL@16
.L_32CF:
	cmp dword ptr [ebp-32], 0
	jg .L_2E9E
.L_2E9F:
.stabn 68,0,741,.L_32CF-_LOADMODEL@16
.L_32D0:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 57
	push offset _Lt_2EA3
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,741,.L_32D0-_LOADMODEL@16
.L_32D1:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,741,.L_32D1-_LOADMODEL@16
.L_32D2:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,741,.L_32D2-_LOADMODEL@16
.L_32D3:
.L_2EA8:
.L_2E9E:
.L_2E9D:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,741,.L_32D3-_LOADMODEL@16
.L_32D4:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+40]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,742,.L_32D4-_LOADMODEL@16
.L_32D5:
	cmp dword ptr [ebp-32], 0
	jle .L_2EA9
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_3202
.L_2EA9:
	mov dword ptr [ebp-88], 0
.L_3202:
	cmp dword ptr [ebp-88], 0
	je .L_2EAC
.L_2EAD:
	mov dword ptr [ebp-32], -1
.L_2EAC:
.L_2EAE:
.stabn 68,0,742,.L_32D5-_LOADMODEL@16
.L_32D7:
	cmp dword ptr [ebp-32], 0
	jg .L_2EB0
.L_2EB1:
.stabn 68,0,742,.L_32D7-_LOADMODEL@16
.L_32D8:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2EB5
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,742,.L_32D8-_LOADMODEL@16
.L_32D9:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,742,.L_32D9-_LOADMODEL@16
.L_32DA:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,742,.L_32DA-_LOADMODEL@16
.L_32DB:
.L_2EBA:
.L_2EB0:
.L_2EAF:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,742,.L_32DB-_LOADMODEL@16
.L_32DC:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+44]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,743,.L_32DC-_LOADMODEL@16
.L_32DD:
	cmp dword ptr [ebp-32], 0
	jle .L_2EBB
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_3203
.L_2EBB:
	mov dword ptr [ebp-92], 0
.L_3203:
	cmp dword ptr [ebp-92], 0
	je .L_2EBE
.L_2EBF:
	mov dword ptr [ebp-32], -1
.L_2EBE:
.L_2EC0:
.stabn 68,0,743,.L_32DD-_LOADMODEL@16
.L_32DF:
	cmp dword ptr [ebp-32], 0
	jg .L_2EC2
.L_2EC3:
.stabn 68,0,743,.L_32DF-_LOADMODEL@16
.L_32E0:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 59
	push offset _Lt_2EC7
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,743,.L_32E0-_LOADMODEL@16
.L_32E1:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,743,.L_32E1-_LOADMODEL@16
.L_32E2:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,743,.L_32E2-_LOADMODEL@16
.L_32E3:
.L_2ECC:
.L_2EC2:
.L_2EC1:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,743,.L_32E3-_LOADMODEL@16
.L_32E4:
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
.stabn 68,0,745,.L_32E4-_LOADMODEL@16
.L_32E5:
	lea eax, [ebp-104]
	push eax
	push dword ptr [ebp+8]
	call _READFILENAME@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,746,.L_32E5-_LOADMODEL@16
.L_32E6:
	cmp dword ptr [ebp-32], 0
	jg .L_2ECE
.L_2ECF:
.stabn 68,0,747,.L_32E6-_LOADMODEL@16
.L_32E7:
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 58
	push offset _Lt_2ED1
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-192]
	call _puts
	add esp, 4
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,747,.L_32E7-_LOADMODEL@16
.L_32E8:
	mov dword ptr [ebp-4], 0
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D62
.stabn 68,0,747,.L_32E8-_LOADMODEL@16
.L_32E9:
	mov dword ptr [ebp-16], 1
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D68
.stabn 68,0,747,.L_32E9-_LOADMODEL@16
.L_32EA:
.L_2ED6:
.L_2ECE:
.L_2ECD:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,748,.L_32EA-_LOADMODEL@16
.L_32EB:
	push 0
	push -1
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push 0
	lea eax, [ebp-104]
	push eax
	call _fb_StrLcase2@8
	push eax
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	lea eax, [ebp-128]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-116]
	push eax
	call _fb_StrInit@20
.stabn 68,0,749,.L_32EB-_LOADMODEL@16
.L_32EC:
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	lea eax, [ebp-140]
	push eax
	call _fb_StrConcat@20
	push eax
	push offset _G_SFILENAMES
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-144], eax
.stabn 68,0,750,.L_32EC-_LOADMODEL@16
.L_32ED:
	cmp dword ptr [ebp-144], 0
	je .L_2EDA
.L_2EDB:
.stabn 68,0,751,.L_32ED-_LOADMODEL@16
.L_32EE:
	mov eax, dword ptr [_G_SFILENAMES]
	add eax, dword ptr [ebp-144]
	add eax, -5
	mov ebx, dword ptr [ebp-44]
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx+48], ecx
.stabn 68,0,753,.L_32EE-_LOADMODEL@16
.L_32EF:
.L_2EDC:
	jmp .L_2ED9
.L_2EDA:
.L_2EDD:
.stabn 68,0,754,.L_32EF-_LOADMODEL@16
.L_32F0:
	mov ecx, dword ptr [ebp-44]
	mov ebx, dword ptr [_G_MODELCOUNT]
	mov dword ptr [ecx+48], ebx
.stabn 68,0,755,.L_32F0-_LOADMODEL@16
.L_32F1:
	push 0
	push 2
	push offset _Lt_2D76
	push -1
	push offset _G_SFILENAMES
	call _fb_StrConcatAssign@20
	push 0
	push -1
	push dword ptr [_G_MODELCOUNT]
	call _fb_MKL@4
	push eax
	push -1
	push offset _G_SFILENAMES
	call _fb_StrConcatAssign@20
	push 0
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push offset _G_SFILENAMES
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	push offset _G_SFILENAMES
	call _fb_StrConcatAssign@20
.stabn 68,0,756,.L_32F1-_LOADMODEL@16
.L_32F2:
	push 0
	push -1
	lea eax, [ebp-104]
	push eax
	push -1
	push offset _G_SFILESTOLOAD
	call _fb_StrConcatAssign@20
	push 0
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push offset _G_SFILESTOLOAD
	call _fb_StrConcatAssign@20
.stabn 68,0,757,.L_32F2-_LOADMODEL@16
.L_32F3:
	push dword ptr [_G_MODELCOUNT]
	push 0
	push 1
	push 0
	push -1
	push 8
	push offset _G_TMODELS
	call _fb_ArrayRedimPresvEx
	add esp, 28
	inc dword ptr [_G_MODELCOUNT]
.stabn 68,0,759,.L_32F3-_LOADMODEL@16
.L_32F4:
.L_2EDE:
.L_2ED9:
	inc dword ptr [ebp-8]
.stabn 68,0,761,.L_32F4-_LOADMODEL@16
.L_32F5:
.L_2EDF:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2EE0
.L_2EE1:
.stabn 68,0,763,.L_32F5-_LOADMODEL@16
.L_32F6:
.L_2EE2:
	mov ebx, dword ptr [ebp+8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-148], al
.stabn 68,0,763,.L_32F6-_LOADMODEL@16
.L_32F7:
	movzx eax, byte ptr [ebp-148]
	test eax, eax
	jne .L_2EE5
.L_2EE6:
.L_2EE7:
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D68
.stabn 68,0,763,.L_32F7-_LOADMODEL@16
.L_32F8:
.L_2EE8:
	jmp .L_2EE3
.L_2EE5:
	movzx eax, byte ptr [ebp-148]
	cmp eax, 13
	je .L_2EEA
.L_2EEB:
	movzx eax, byte ptr [ebp-148]
	cmp eax, 9
	je .L_2EEA
.L_2EEC:
	movzx eax, byte ptr [ebp-148]
	cmp eax, 32
	jne .L_2EE9
.L_2EEA:
.L_2EED:
.stabn 68,0,763,.L_32F8-_LOADMODEL@16
.L_32F9:
.L_2EEE:
	jmp .L_2EE3
.L_2EE9:
.L_2EF0:
.stabn 68,0,763,.L_32F9-_LOADMODEL@16
.L_32FA:
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 25
	push offset _Lt_2EF1
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	lea eax, [ebp-160]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	lea eax, [ebp-184]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-196]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-196]
	call _puts
	add esp, 4
	lea eax, [ebp-196]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,763,.L_32FA-_LOADMODEL@16
.L_32FB:
	mov dword ptr [ebp-16], 1
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D68
.stabn 68,0,763,.L_32FB-_LOADMODEL@16
.L_32FC:
.L_2EF6:
.L_2EEF:
.L_2EE3:
.L_2EF7:
	inc dword ptr [ebp+8]
.stabn 68,0,763,.L_32FC-_LOADMODEL@16
.L_32FD:
.L_2EF8:
	jmp .L_2EDF
.L_2EE0:
.stabn 68,0,763,.L_32FD-_LOADMODEL@16
.L_32FE:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D69
.stabn 68,0,763,.L_32FE-_LOADMODEL@16
.L_32FF:
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
.L_2EF9:
.stabn 68,0,764,.L_32FF-_LOADMODEL@16
.L_3300:
.L_2EFA:
	jmp .L_2DAD
.L_2DEF:
	cmp dword ptr [ebp-24], 2
	jne .L_2EFB
.L_2EFC:
.L_2EFD:
.stabn 68,0,765,.L_3300-_LOADMODEL@16
.L_3301:
.L_2EFE:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, eax
	lea eax, [ebx+48]
	mov dword ptr [ebp-44], eax
.stabn 68,0,766,.L_3301-_LOADMODEL@16
.L_3302:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,767,.L_3302-_LOADMODEL@16
.L_3303:
	cmp dword ptr [ebp-32], 0
	jle .L_2F00
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_3204
.L_2F00:
	mov dword ptr [ebp-48], 0
.L_3204:
	cmp dword ptr [ebp-48], 0
	je .L_2F03
.L_2F04:
	mov dword ptr [ebp-32], -1
.L_2F03:
.L_2F05:
.stabn 68,0,767,.L_3303-_LOADMODEL@16
.L_3305:
	cmp dword ptr [ebp-32], 0
	jg .L_2F07
.L_2F08:
.stabn 68,0,767,.L_3305-_LOADMODEL@16
.L_3306:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F0C
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,767,.L_3306-_LOADMODEL@16
.L_3307:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,767,.L_3307-_LOADMODEL@16
.L_3308:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,767,.L_3308-_LOADMODEL@16
.L_3309:
.L_2F11:
.L_2F07:
.L_2F06:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,767,.L_3309-_LOADMODEL@16
.L_330A:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+4]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,768,.L_330A-_LOADMODEL@16
.L_330B:
	cmp dword ptr [ebp-32], 0
	jle .L_2F12
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-52], eax
	jmp .L_3205
.L_2F12:
	mov dword ptr [ebp-52], 0
.L_3205:
	cmp dword ptr [ebp-52], 0
	je .L_2F15
.L_2F16:
	mov dword ptr [ebp-32], -1
.L_2F15:
.L_2F17:
.stabn 68,0,768,.L_330B-_LOADMODEL@16
.L_330D:
	cmp dword ptr [ebp-32], 0
	jg .L_2F19
.L_2F1A:
.stabn 68,0,768,.L_330D-_LOADMODEL@16
.L_330E:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F1E
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,768,.L_330E-_LOADMODEL@16
.L_330F:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,768,.L_330F-_LOADMODEL@16
.L_3310:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,768,.L_3310-_LOADMODEL@16
.L_3311:
.L_2F23:
.L_2F19:
.L_2F18:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,768,.L_3311-_LOADMODEL@16
.L_3312:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+8]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,769,.L_3312-_LOADMODEL@16
.L_3313:
	cmp dword ptr [ebp-32], 0
	jle .L_2F24
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_3206
.L_2F24:
	mov dword ptr [ebp-56], 0
.L_3206:
	cmp dword ptr [ebp-56], 0
	je .L_2F27
.L_2F28:
	mov dword ptr [ebp-32], -1
.L_2F27:
.L_2F29:
.stabn 68,0,769,.L_3313-_LOADMODEL@16
.L_3315:
	cmp dword ptr [ebp-32], 0
	jg .L_2F2B
.L_2F2C:
.stabn 68,0,769,.L_3315-_LOADMODEL@16
.L_3316:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F30
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,769,.L_3316-_LOADMODEL@16
.L_3317:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,769,.L_3317-_LOADMODEL@16
.L_3318:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,769,.L_3318-_LOADMODEL@16
.L_3319:
.L_2F35:
.L_2F2B:
.L_2F2A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,769,.L_3319-_LOADMODEL@16
.L_331A:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,770,.L_331A-_LOADMODEL@16
.L_331B:
	cmp dword ptr [ebp-32], 0
	jle .L_2F36
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-60], eax
	jmp .L_3207
.L_2F36:
	mov dword ptr [ebp-60], 0
.L_3207:
	cmp dword ptr [ebp-60], 0
	je .L_2F39
.L_2F3A:
	mov dword ptr [ebp-32], -1
.L_2F39:
.L_2F3B:
.stabn 68,0,770,.L_331B-_LOADMODEL@16
.L_331D:
	cmp dword ptr [ebp-32], 0
	jg .L_2F3D
.L_2F3E:
.stabn 68,0,770,.L_331D-_LOADMODEL@16
.L_331E:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F42
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,770,.L_331E-_LOADMODEL@16
.L_331F:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,770,.L_331F-_LOADMODEL@16
.L_3320:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,770,.L_3320-_LOADMODEL@16
.L_3321:
.L_2F47:
.L_2F3D:
.L_2F3C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,770,.L_3321-_LOADMODEL@16
.L_3322:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+16]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,771,.L_3322-_LOADMODEL@16
.L_3323:
	cmp dword ptr [ebp-32], 0
	jle .L_2F48
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_3208
.L_2F48:
	mov dword ptr [ebp-64], 0
.L_3208:
	cmp dword ptr [ebp-64], 0
	je .L_2F4B
.L_2F4C:
	mov dword ptr [ebp-32], -1
.L_2F4B:
.L_2F4D:
.stabn 68,0,771,.L_3323-_LOADMODEL@16
.L_3325:
	cmp dword ptr [ebp-32], 0
	jg .L_2F4F
.L_2F50:
.stabn 68,0,771,.L_3325-_LOADMODEL@16
.L_3326:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F54
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,771,.L_3326-_LOADMODEL@16
.L_3327:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,771,.L_3327-_LOADMODEL@16
.L_3328:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,771,.L_3328-_LOADMODEL@16
.L_3329:
.L_2F59:
.L_2F4F:
.L_2F4E:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,771,.L_3329-_LOADMODEL@16
.L_332A:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+20]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,772,.L_332A-_LOADMODEL@16
.L_332B:
	cmp dword ptr [ebp-32], 0
	jg .L_2F5B
.L_2F5C:
.stabn 68,0,772,.L_332B-_LOADMODEL@16
.L_332C:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 57
	push offset _Lt_2F60
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-112]
	call _puts
	add esp, 4
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,772,.L_332C-_LOADMODEL@16
.L_332D:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,772,.L_332D-_LOADMODEL@16
.L_332E:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,772,.L_332E-_LOADMODEL@16
.L_332F:
.L_2F65:
.L_2F5B:
.L_2F5A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,772,.L_332F-_LOADMODEL@16
.L_3330:
.L_2F66:
	inc dword ptr [ebp-8]
.stabn 68,0,775,.L_3330-_LOADMODEL@16
.L_3331:
.L_2F67:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_2F68
.L_2F69:
.stabn 68,0,777,.L_3331-_LOADMODEL@16
.L_3332:
.L_2F6A:
	mov ebx, dword ptr [ebp+8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-44], al
.stabn 68,0,777,.L_3332-_LOADMODEL@16
.L_3333:
	movzx eax, byte ptr [ebp-44]
	test eax, eax
	jne .L_2F6D
.L_2F6E:
.L_2F6F:
	jmp .L_2D68
.stabn 68,0,777,.L_3333-_LOADMODEL@16
.L_3334:
.L_2F70:
	jmp .L_2F6B
.L_2F6D:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 13
	je .L_2F72
.L_2F73:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 9
	je .L_2F72
.L_2F74:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 32
	jne .L_2F71
.L_2F72:
.L_2F75:
.stabn 68,0,777,.L_3334-_LOADMODEL@16
.L_3335:
.L_2F76:
	jmp .L_2F6B
.L_2F71:
.L_2F78:
.stabn 68,0,777,.L_3335-_LOADMODEL@16
.L_3336:
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 25
	push offset _Lt_2EF1
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-92]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-92]
	call _puts
	add esp, 4
	lea eax, [ebp-92]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,777,.L_3336-_LOADMODEL@16
.L_3337:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,777,.L_3337-_LOADMODEL@16
.L_3338:
.L_2F7D:
.L_2F77:
.L_2F6B:
.L_2F7E:
	inc dword ptr [ebp+8]
.stabn 68,0,777,.L_3338-_LOADMODEL@16
.L_3339:
.L_2F7F:
	jmp .L_2F67
.L_2F68:
.stabn 68,0,777,.L_3339-_LOADMODEL@16
.L_333A:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	jmp .L_2D69
.stabn 68,0,777,.L_333A-_LOADMODEL@16
.L_333B:
.L_2F80:
	jmp .L_2DAD
.L_2EFB:
	cmp dword ptr [ebp-24], 3
	jne .L_2F81
.L_2F82:
.L_2F83:
.stabn 68,0,778,.L_333B-_LOADMODEL@16
.L_333C:
.L_2F84:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, eax
	lea eax, [ebx+48]
	mov dword ptr [ebp-44], eax
.stabn 68,0,779,.L_333C-_LOADMODEL@16
.L_333D:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,780,.L_333D-_LOADMODEL@16
.L_333E:
	cmp dword ptr [ebp-32], 0
	jle .L_2F86
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_3209
.L_2F86:
	mov dword ptr [ebp-48], 0
.L_3209:
	cmp dword ptr [ebp-48], 0
	je .L_2F89
.L_2F8A:
	mov dword ptr [ebp-32], -1
.L_2F89:
.L_2F8B:
.stabn 68,0,780,.L_333E-_LOADMODEL@16
.L_3340:
	cmp dword ptr [ebp-32], 0
	jg .L_2F8D
.L_2F8E:
.stabn 68,0,780,.L_3340-_LOADMODEL@16
.L_3341:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F0C
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,780,.L_3341-_LOADMODEL@16
.L_3342:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,780,.L_3342-_LOADMODEL@16
.L_3343:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,780,.L_3343-_LOADMODEL@16
.L_3344:
.L_2F93:
.L_2F8D:
.L_2F8C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,780,.L_3344-_LOADMODEL@16
.L_3345:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+4]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,781,.L_3345-_LOADMODEL@16
.L_3346:
	cmp dword ptr [ebp-32], 0
	jle .L_2F94
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-52], eax
	jmp .L_320A
.L_2F94:
	mov dword ptr [ebp-52], 0
.L_320A:
	cmp dword ptr [ebp-52], 0
	je .L_2F97
.L_2F98:
	mov dword ptr [ebp-32], -1
.L_2F97:
.L_2F99:
.stabn 68,0,781,.L_3346-_LOADMODEL@16
.L_3348:
	cmp dword ptr [ebp-32], 0
	jg .L_2F9B
.L_2F9C:
.stabn 68,0,781,.L_3348-_LOADMODEL@16
.L_3349:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F1E
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,781,.L_3349-_LOADMODEL@16
.L_334A:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,781,.L_334A-_LOADMODEL@16
.L_334B:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,781,.L_334B-_LOADMODEL@16
.L_334C:
.L_2FA1:
.L_2F9B:
.L_2F9A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,781,.L_334C-_LOADMODEL@16
.L_334D:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+8]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,782,.L_334D-_LOADMODEL@16
.L_334E:
	cmp dword ptr [ebp-32], 0
	jle .L_2FA2
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_320B
.L_2FA2:
	mov dword ptr [ebp-56], 0
.L_320B:
	cmp dword ptr [ebp-56], 0
	je .L_2FA5
.L_2FA6:
	mov dword ptr [ebp-32], -1
.L_2FA5:
.L_2FA7:
.stabn 68,0,782,.L_334E-_LOADMODEL@16
.L_3350:
	cmp dword ptr [ebp-32], 0
	jg .L_2FA9
.L_2FAA:
.stabn 68,0,782,.L_3350-_LOADMODEL@16
.L_3351:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F30
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,782,.L_3351-_LOADMODEL@16
.L_3352:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,782,.L_3352-_LOADMODEL@16
.L_3353:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,782,.L_3353-_LOADMODEL@16
.L_3354:
.L_2FAF:
.L_2FA9:
.L_2FA8:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,782,.L_3354-_LOADMODEL@16
.L_3355:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,783,.L_3355-_LOADMODEL@16
.L_3356:
	cmp dword ptr [ebp-32], 0
	jle .L_2FB0
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-60], eax
	jmp .L_320C
.L_2FB0:
	mov dword ptr [ebp-60], 0
.L_320C:
	cmp dword ptr [ebp-60], 0
	je .L_2FB3
.L_2FB4:
	mov dword ptr [ebp-32], -1
.L_2FB3:
.L_2FB5:
.stabn 68,0,783,.L_3356-_LOADMODEL@16
.L_3358:
	cmp dword ptr [ebp-32], 0
	jg .L_2FB7
.L_2FB8:
.stabn 68,0,783,.L_3358-_LOADMODEL@16
.L_3359:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F42
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,783,.L_3359-_LOADMODEL@16
.L_335A:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,783,.L_335A-_LOADMODEL@16
.L_335B:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,783,.L_335B-_LOADMODEL@16
.L_335C:
.L_2FBD:
.L_2FB7:
.L_2FB6:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,783,.L_335C-_LOADMODEL@16
.L_335D:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+16]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,784,.L_335D-_LOADMODEL@16
.L_335E:
	cmp dword ptr [ebp-32], 0
	jle .L_2FBE
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_320D
.L_2FBE:
	mov dword ptr [ebp-64], 0
.L_320D:
	cmp dword ptr [ebp-64], 0
	je .L_2FC1
.L_2FC2:
	mov dword ptr [ebp-32], -1
.L_2FC1:
.L_2FC3:
.stabn 68,0,784,.L_335E-_LOADMODEL@16
.L_3360:
	cmp dword ptr [ebp-32], 0
	jg .L_2FC5
.L_2FC6:
.stabn 68,0,784,.L_3360-_LOADMODEL@16
.L_3361:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F54
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,784,.L_3361-_LOADMODEL@16
.L_3362:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,784,.L_3362-_LOADMODEL@16
.L_3363:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,784,.L_3363-_LOADMODEL@16
.L_3364:
.L_2FCB:
.L_2FC5:
.L_2FC4:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,784,.L_3364-_LOADMODEL@16
.L_3365:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+20]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,785,.L_3365-_LOADMODEL@16
.L_3366:
	cmp dword ptr [ebp-32], 0
	jle .L_2FCC
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-68], eax
	jmp .L_320E
.L_2FCC:
	mov dword ptr [ebp-68], 0
.L_320E:
	cmp dword ptr [ebp-68], 0
	je .L_2FCF
.L_2FD0:
	mov dword ptr [ebp-32], -1
.L_2FCF:
.L_2FD1:
.stabn 68,0,785,.L_3366-_LOADMODEL@16
.L_3368:
	cmp dword ptr [ebp-32], 0
	jg .L_2FD3
.L_2FD4:
.stabn 68,0,785,.L_3368-_LOADMODEL@16
.L_3369:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 57
	push offset _Lt_2F60
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,785,.L_3369-_LOADMODEL@16
.L_336A:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,785,.L_336A-_LOADMODEL@16
.L_336B:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,785,.L_336B-_LOADMODEL@16
.L_336C:
.L_2FD9:
.L_2FD3:
.L_2FD2:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,785,.L_336C-_LOADMODEL@16
.L_336D:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+24]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,786,.L_336D-_LOADMODEL@16
.L_336E:
	cmp dword ptr [ebp-32], 0
	jle .L_2FDA
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_320F
.L_2FDA:
	mov dword ptr [ebp-72], 0
.L_320F:
	cmp dword ptr [ebp-72], 0
	je .L_2FDD
.L_2FDE:
	mov dword ptr [ebp-32], -1
.L_2FDD:
.L_2FDF:
.stabn 68,0,786,.L_336E-_LOADMODEL@16
.L_3370:
	cmp dword ptr [ebp-32], 0
	jg .L_2FE1
.L_2FE2:
.stabn 68,0,786,.L_3370-_LOADMODEL@16
.L_3371:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2FE6
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,786,.L_3371-_LOADMODEL@16
.L_3372:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,786,.L_3372-_LOADMODEL@16
.L_3373:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,786,.L_3373-_LOADMODEL@16
.L_3374:
.L_2FEB:
.L_2FE1:
.L_2FE0:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,786,.L_3374-_LOADMODEL@16
.L_3375:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+28]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,787,.L_3375-_LOADMODEL@16
.L_3376:
	cmp dword ptr [ebp-32], 0
	jle .L_2FEC
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-76], eax
	jmp .L_3210
.L_2FEC:
	mov dword ptr [ebp-76], 0
.L_3210:
	cmp dword ptr [ebp-76], 0
	je .L_2FEF
.L_2FF0:
	mov dword ptr [ebp-32], -1
.L_2FEF:
.L_2FF1:
.stabn 68,0,787,.L_3376-_LOADMODEL@16
.L_3378:
	cmp dword ptr [ebp-32], 0
	jg .L_2FF3
.L_2FF4:
.stabn 68,0,787,.L_3378-_LOADMODEL@16
.L_3379:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2FF8
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,787,.L_3379-_LOADMODEL@16
.L_337A:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,787,.L_337A-_LOADMODEL@16
.L_337B:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,787,.L_337B-_LOADMODEL@16
.L_337C:
.L_2FFD:
.L_2FF3:
.L_2FF2:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,787,.L_337C-_LOADMODEL@16
.L_337D:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+32]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,788,.L_337D-_LOADMODEL@16
.L_337E:
	cmp dword ptr [ebp-32], 0
	jg .L_2FFF
.L_3000:
.stabn 68,0,788,.L_337E-_LOADMODEL@16
.L_337F:
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_3004
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-124]
	call _puts
	add esp, 4
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,788,.L_337F-_LOADMODEL@16
.L_3380:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,788,.L_3380-_LOADMODEL@16
.L_3381:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,788,.L_3381-_LOADMODEL@16
.L_3382:
.L_3009:
.L_2FFF:
.L_2FFE:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,788,.L_3382-_LOADMODEL@16
.L_3383:
.L_300A:
	inc dword ptr [ebp-8]
.stabn 68,0,791,.L_3383-_LOADMODEL@16
.L_3384:
.L_300B:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_300C
.L_300D:
.stabn 68,0,793,.L_3384-_LOADMODEL@16
.L_3385:
.L_300E:
	mov ebx, dword ptr [ebp+8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-44], al
.stabn 68,0,793,.L_3385-_LOADMODEL@16
.L_3386:
	movzx eax, byte ptr [ebp-44]
	test eax, eax
	jne .L_3011
.L_3012:
.L_3013:
	jmp .L_2D68
.stabn 68,0,793,.L_3386-_LOADMODEL@16
.L_3387:
.L_3014:
	jmp .L_300F
.L_3011:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 13
	je .L_3016
.L_3017:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 9
	je .L_3016
.L_3018:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 32
	jne .L_3015
.L_3016:
.L_3019:
.stabn 68,0,793,.L_3387-_LOADMODEL@16
.L_3388:
.L_301A:
	jmp .L_300F
.L_3015:
.L_301C:
.stabn 68,0,793,.L_3388-_LOADMODEL@16
.L_3389:
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 25
	push offset _Lt_2EF1
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-92]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-92]
	call _puts
	add esp, 4
	lea eax, [ebp-92]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,793,.L_3389-_LOADMODEL@16
.L_338A:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,793,.L_338A-_LOADMODEL@16
.L_338B:
.L_3021:
.L_301B:
.L_300F:
.L_3022:
	inc dword ptr [ebp+8]
.stabn 68,0,793,.L_338B-_LOADMODEL@16
.L_338C:
.L_3023:
	jmp .L_300B
.L_300C:
.stabn 68,0,793,.L_338C-_LOADMODEL@16
.L_338D:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	jmp .L_2D69
.stabn 68,0,793,.L_338D-_LOADMODEL@16
.L_338E:
.L_3024:
	jmp .L_2DAD
.L_2F81:
	cmp dword ptr [ebp-24], 4
	jne .L_3025
.L_3026:
.L_3027:
.stabn 68,0,794,.L_338E-_LOADMODEL@16
.L_338F:
.L_3028:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, eax
	lea eax, [ebx+48]
	mov dword ptr [ebp-44], eax
.stabn 68,0,795,.L_338F-_LOADMODEL@16
.L_3390:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,796,.L_3390-_LOADMODEL@16
.L_3391:
	cmp dword ptr [ebp-32], 0
	jle .L_302A
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_3211
.L_302A:
	mov dword ptr [ebp-48], 0
.L_3211:
	cmp dword ptr [ebp-48], 0
	je .L_302D
.L_302E:
	mov dword ptr [ebp-32], -1
.L_302D:
.L_302F:
.stabn 68,0,796,.L_3391-_LOADMODEL@16
.L_3393:
	cmp dword ptr [ebp-32], 0
	jg .L_3031
.L_3032:
.stabn 68,0,796,.L_3393-_LOADMODEL@16
.L_3394:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F0C
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,796,.L_3394-_LOADMODEL@16
.L_3395:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,796,.L_3395-_LOADMODEL@16
.L_3396:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,796,.L_3396-_LOADMODEL@16
.L_3397:
.L_3037:
.L_3031:
.L_3030:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,796,.L_3397-_LOADMODEL@16
.L_3398:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+4]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,797,.L_3398-_LOADMODEL@16
.L_3399:
	cmp dword ptr [ebp-32], 0
	jle .L_3038
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-52], eax
	jmp .L_3212
.L_3038:
	mov dword ptr [ebp-52], 0
.L_3212:
	cmp dword ptr [ebp-52], 0
	je .L_303B
.L_303C:
	mov dword ptr [ebp-32], -1
.L_303B:
.L_303D:
.stabn 68,0,797,.L_3399-_LOADMODEL@16
.L_339B:
	cmp dword ptr [ebp-32], 0
	jg .L_303F
.L_3040:
.stabn 68,0,797,.L_339B-_LOADMODEL@16
.L_339C:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F1E
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,797,.L_339C-_LOADMODEL@16
.L_339D:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,797,.L_339D-_LOADMODEL@16
.L_339E:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,797,.L_339E-_LOADMODEL@16
.L_339F:
.L_3045:
.L_303F:
.L_303E:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,797,.L_339F-_LOADMODEL@16
.L_33A0:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+8]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,798,.L_33A0-_LOADMODEL@16
.L_33A1:
	cmp dword ptr [ebp-32], 0
	jle .L_3046
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_3213
.L_3046:
	mov dword ptr [ebp-56], 0
.L_3213:
	cmp dword ptr [ebp-56], 0
	je .L_3049
.L_304A:
	mov dword ptr [ebp-32], -1
.L_3049:
.L_304B:
.stabn 68,0,798,.L_33A1-_LOADMODEL@16
.L_33A3:
	cmp dword ptr [ebp-32], 0
	jg .L_304D
.L_304E:
.stabn 68,0,798,.L_33A3-_LOADMODEL@16
.L_33A4:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F30
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,798,.L_33A4-_LOADMODEL@16
.L_33A5:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,798,.L_33A5-_LOADMODEL@16
.L_33A6:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,798,.L_33A6-_LOADMODEL@16
.L_33A7:
.L_3053:
.L_304D:
.L_304C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,798,.L_33A7-_LOADMODEL@16
.L_33A8:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,799,.L_33A8-_LOADMODEL@16
.L_33A9:
	cmp dword ptr [ebp-32], 0
	jle .L_3054
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-60], eax
	jmp .L_3214
.L_3054:
	mov dword ptr [ebp-60], 0
.L_3214:
	cmp dword ptr [ebp-60], 0
	je .L_3057
.L_3058:
	mov dword ptr [ebp-32], -1
.L_3057:
.L_3059:
.stabn 68,0,799,.L_33A9-_LOADMODEL@16
.L_33AB:
	cmp dword ptr [ebp-32], 0
	jg .L_305B
.L_305C:
.stabn 68,0,799,.L_33AB-_LOADMODEL@16
.L_33AC:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F42
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,799,.L_33AC-_LOADMODEL@16
.L_33AD:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,799,.L_33AD-_LOADMODEL@16
.L_33AE:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,799,.L_33AE-_LOADMODEL@16
.L_33AF:
.L_3061:
.L_305B:
.L_305A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,799,.L_33AF-_LOADMODEL@16
.L_33B0:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+16]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,800,.L_33B0-_LOADMODEL@16
.L_33B1:
	cmp dword ptr [ebp-32], 0
	jle .L_3062
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_3215
.L_3062:
	mov dword ptr [ebp-64], 0
.L_3215:
	cmp dword ptr [ebp-64], 0
	je .L_3065
.L_3066:
	mov dword ptr [ebp-32], -1
.L_3065:
.L_3067:
.stabn 68,0,800,.L_33B1-_LOADMODEL@16
.L_33B3:
	cmp dword ptr [ebp-32], 0
	jg .L_3069
.L_306A:
.stabn 68,0,800,.L_33B3-_LOADMODEL@16
.L_33B4:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F54
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,800,.L_33B4-_LOADMODEL@16
.L_33B5:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,800,.L_33B5-_LOADMODEL@16
.L_33B6:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,800,.L_33B6-_LOADMODEL@16
.L_33B7:
.L_306F:
.L_3069:
.L_3068:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,800,.L_33B7-_LOADMODEL@16
.L_33B8:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+20]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,801,.L_33B8-_LOADMODEL@16
.L_33B9:
	cmp dword ptr [ebp-32], 0
	jle .L_3070
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-68], eax
	jmp .L_3216
.L_3070:
	mov dword ptr [ebp-68], 0
.L_3216:
	cmp dword ptr [ebp-68], 0
	je .L_3073
.L_3074:
	mov dword ptr [ebp-32], -1
.L_3073:
.L_3075:
.stabn 68,0,801,.L_33B9-_LOADMODEL@16
.L_33BB:
	cmp dword ptr [ebp-32], 0
	jg .L_3077
.L_3078:
.stabn 68,0,801,.L_33BB-_LOADMODEL@16
.L_33BC:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 57
	push offset _Lt_2F60
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,801,.L_33BC-_LOADMODEL@16
.L_33BD:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,801,.L_33BD-_LOADMODEL@16
.L_33BE:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,801,.L_33BE-_LOADMODEL@16
.L_33BF:
.L_307D:
.L_3077:
.L_3076:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,801,.L_33BF-_LOADMODEL@16
.L_33C0:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+24]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,802,.L_33C0-_LOADMODEL@16
.L_33C1:
	cmp dword ptr [ebp-32], 0
	jle .L_307E
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_3217
.L_307E:
	mov dword ptr [ebp-72], 0
.L_3217:
	cmp dword ptr [ebp-72], 0
	je .L_3081
.L_3082:
	mov dword ptr [ebp-32], -1
.L_3081:
.L_3083:
.stabn 68,0,802,.L_33C1-_LOADMODEL@16
.L_33C3:
	cmp dword ptr [ebp-32], 0
	jg .L_3085
.L_3086:
.stabn 68,0,802,.L_33C3-_LOADMODEL@16
.L_33C4:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2FE6
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,802,.L_33C4-_LOADMODEL@16
.L_33C5:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,802,.L_33C5-_LOADMODEL@16
.L_33C6:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,802,.L_33C6-_LOADMODEL@16
.L_33C7:
.L_308B:
.L_3085:
.L_3084:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,802,.L_33C7-_LOADMODEL@16
.L_33C8:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+28]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,803,.L_33C8-_LOADMODEL@16
.L_33C9:
	cmp dword ptr [ebp-32], 0
	jle .L_308C
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-76], eax
	jmp .L_3218
.L_308C:
	mov dword ptr [ebp-76], 0
.L_3218:
	cmp dword ptr [ebp-76], 0
	je .L_308F
.L_3090:
	mov dword ptr [ebp-32], -1
.L_308F:
.L_3091:
.stabn 68,0,803,.L_33C9-_LOADMODEL@16
.L_33CB:
	cmp dword ptr [ebp-32], 0
	jg .L_3093
.L_3094:
.stabn 68,0,803,.L_33CB-_LOADMODEL@16
.L_33CC:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2FF8
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,803,.L_33CC-_LOADMODEL@16
.L_33CD:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,803,.L_33CD-_LOADMODEL@16
.L_33CE:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,803,.L_33CE-_LOADMODEL@16
.L_33CF:
.L_3099:
.L_3093:
.L_3092:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,803,.L_33CF-_LOADMODEL@16
.L_33D0:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+32]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,804,.L_33D0-_LOADMODEL@16
.L_33D1:
	cmp dword ptr [ebp-32], 0
	jle .L_309A
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_3219
.L_309A:
	mov dword ptr [ebp-80], 0
.L_3219:
	cmp dword ptr [ebp-80], 0
	je .L_309D
.L_309E:
	mov dword ptr [ebp-32], -1
.L_309D:
.L_309F:
.stabn 68,0,804,.L_33D1-_LOADMODEL@16
.L_33D3:
	cmp dword ptr [ebp-32], 0
	jg .L_30A1
.L_30A2:
.stabn 68,0,804,.L_33D3-_LOADMODEL@16
.L_33D4:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_3004
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,804,.L_33D4-_LOADMODEL@16
.L_33D5:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,804,.L_33D5-_LOADMODEL@16
.L_33D6:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,804,.L_33D6-_LOADMODEL@16
.L_33D7:
.L_30A7:
.L_30A1:
.L_30A0:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,804,.L_33D7-_LOADMODEL@16
.L_33D8:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+36]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,805,.L_33D8-_LOADMODEL@16
.L_33D9:
	cmp dword ptr [ebp-32], 0
	jle .L_30A8
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_321A
.L_30A8:
	mov dword ptr [ebp-84], 0
.L_321A:
	cmp dword ptr [ebp-84], 0
	je .L_30AB
.L_30AC:
	mov dword ptr [ebp-32], -1
.L_30AB:
.L_30AD:
.stabn 68,0,805,.L_33D9-_LOADMODEL@16
.L_33DB:
	cmp dword ptr [ebp-32], 0
	jg .L_30AF
.L_30B0:
.stabn 68,0,805,.L_33DB-_LOADMODEL@16
.L_33DC:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 58
	push offset _Lt_30B4
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,805,.L_33DC-_LOADMODEL@16
.L_33DD:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,805,.L_33DD-_LOADMODEL@16
.L_33DE:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,805,.L_33DE-_LOADMODEL@16
.L_33DF:
.L_30B9:
.L_30AF:
.L_30AE:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,805,.L_33DF-_LOADMODEL@16
.L_33E0:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+40]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,806,.L_33E0-_LOADMODEL@16
.L_33E1:
	cmp dword ptr [ebp-32], 0
	jle .L_30BA
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_321B
.L_30BA:
	mov dword ptr [ebp-88], 0
.L_321B:
	cmp dword ptr [ebp-88], 0
	je .L_30BD
.L_30BE:
	mov dword ptr [ebp-32], -1
.L_30BD:
.L_30BF:
.stabn 68,0,806,.L_33E1-_LOADMODEL@16
.L_33E3:
	cmp dword ptr [ebp-32], 0
	jg .L_30C1
.L_30C2:
.stabn 68,0,806,.L_33E3-_LOADMODEL@16
.L_33E4:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_30C6
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,806,.L_33E4-_LOADMODEL@16
.L_33E5:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,806,.L_33E5-_LOADMODEL@16
.L_33E6:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,806,.L_33E6-_LOADMODEL@16
.L_33E7:
.L_30CB:
.L_30C1:
.L_30C0:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,806,.L_33E7-_LOADMODEL@16
.L_33E8:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+44]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,807,.L_33E8-_LOADMODEL@16
.L_33E9:
	cmp dword ptr [ebp-32], 0
	jg .L_30CD
.L_30CE:
.stabn 68,0,807,.L_33E9-_LOADMODEL@16
.L_33EA:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 60
	push offset _Lt_30D2
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,807,.L_33EA-_LOADMODEL@16
.L_33EB:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,807,.L_33EB-_LOADMODEL@16
.L_33EC:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,807,.L_33EC-_LOADMODEL@16
.L_33ED:
.L_30D7:
.L_30CD:
.L_30CC:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,807,.L_33ED-_LOADMODEL@16
.L_33EE:
.L_30D8:
	inc dword ptr [ebp-8]
.stabn 68,0,810,.L_33EE-_LOADMODEL@16
.L_33EF:
.L_30D9:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_30DA
.L_30DB:
.stabn 68,0,812,.L_33EF-_LOADMODEL@16
.L_33F0:
.L_30DC:
	mov ebx, dword ptr [ebp+8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-44], al
.stabn 68,0,812,.L_33F0-_LOADMODEL@16
.L_33F1:
	movzx eax, byte ptr [ebp-44]
	test eax, eax
	jne .L_30DF
.L_30E0:
.L_30E1:
	jmp .L_2D68
.stabn 68,0,812,.L_33F1-_LOADMODEL@16
.L_33F2:
.L_30E2:
	jmp .L_30DD
.L_30DF:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 13
	je .L_30E4
.L_30E5:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 9
	je .L_30E4
.L_30E6:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 32
	jne .L_30E3
.L_30E4:
.L_30E7:
.stabn 68,0,812,.L_33F2-_LOADMODEL@16
.L_33F3:
.L_30E8:
	jmp .L_30DD
.L_30E3:
.L_30EA:
.stabn 68,0,812,.L_33F3-_LOADMODEL@16
.L_33F4:
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 25
	push offset _Lt_2EF1
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-92]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-92]
	call _puts
	add esp, 4
	lea eax, [ebp-92]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,812,.L_33F4-_LOADMODEL@16
.L_33F5:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,812,.L_33F5-_LOADMODEL@16
.L_33F6:
.L_30EF:
.L_30E9:
.L_30DD:
.L_30F0:
	inc dword ptr [ebp+8]
.stabn 68,0,812,.L_33F6-_LOADMODEL@16
.L_33F7:
.L_30F1:
	jmp .L_30D9
.L_30DA:
.stabn 68,0,812,.L_33F7-_LOADMODEL@16
.L_33F8:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	jmp .L_2D69
.stabn 68,0,812,.L_33F8-_LOADMODEL@16
.L_33F9:
.L_30F2:
	jmp .L_2DAD
.L_3025:
	cmp dword ptr [ebp-24], 5
	jne .L_30F3
.L_30F4:
.L_30F5:
.stabn 68,0,813,.L_33F9-_LOADMODEL@16
.L_33FA:
.L_30F6:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, eax
	lea eax, [ebx+48]
	mov dword ptr [ebp-44], eax
.stabn 68,0,814,.L_33FA-_LOADMODEL@16
.L_33FB:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,815,.L_33FB-_LOADMODEL@16
.L_33FC:
	cmp dword ptr [ebp-32], 0
	jle .L_30F8
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_321C
.L_30F8:
	mov dword ptr [ebp-48], 0
.L_321C:
	cmp dword ptr [ebp-48], 0
	je .L_30FB
.L_30FC:
	mov dword ptr [ebp-32], -1
.L_30FB:
.L_30FD:
.stabn 68,0,815,.L_33FC-_LOADMODEL@16
.L_33FE:
	cmp dword ptr [ebp-32], 0
	jg .L_30FF
.L_3100:
.stabn 68,0,815,.L_33FE-_LOADMODEL@16
.L_33FF:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F0C
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,815,.L_33FF-_LOADMODEL@16
.L_3400:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,815,.L_3400-_LOADMODEL@16
.L_3401:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,815,.L_3401-_LOADMODEL@16
.L_3402:
.L_3105:
.L_30FF:
.L_30FE:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,815,.L_3402-_LOADMODEL@16
.L_3403:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+4]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,816,.L_3403-_LOADMODEL@16
.L_3404:
	cmp dword ptr [ebp-32], 0
	jle .L_3106
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-52], eax
	jmp .L_321D
.L_3106:
	mov dword ptr [ebp-52], 0
.L_321D:
	cmp dword ptr [ebp-52], 0
	je .L_3109
.L_310A:
	mov dword ptr [ebp-32], -1
.L_3109:
.L_310B:
.stabn 68,0,816,.L_3404-_LOADMODEL@16
.L_3406:
	cmp dword ptr [ebp-32], 0
	jg .L_310D
.L_310E:
.stabn 68,0,816,.L_3406-_LOADMODEL@16
.L_3407:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F1E
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,816,.L_3407-_LOADMODEL@16
.L_3408:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,816,.L_3408-_LOADMODEL@16
.L_3409:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,816,.L_3409-_LOADMODEL@16
.L_340A:
.L_3113:
.L_310D:
.L_310C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,816,.L_340A-_LOADMODEL@16
.L_340B:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+8]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,817,.L_340B-_LOADMODEL@16
.L_340C:
	cmp dword ptr [ebp-32], 0
	jle .L_3114
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_321E
.L_3114:
	mov dword ptr [ebp-56], 0
.L_321E:
	cmp dword ptr [ebp-56], 0
	je .L_3117
.L_3118:
	mov dword ptr [ebp-32], -1
.L_3117:
.L_3119:
.stabn 68,0,817,.L_340C-_LOADMODEL@16
.L_340E:
	cmp dword ptr [ebp-32], 0
	jg .L_311B
.L_311C:
.stabn 68,0,817,.L_340E-_LOADMODEL@16
.L_340F:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2F30
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,817,.L_340F-_LOADMODEL@16
.L_3410:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,817,.L_3410-_LOADMODEL@16
.L_3411:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,817,.L_3411-_LOADMODEL@16
.L_3412:
.L_3121:
.L_311B:
.L_311A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,817,.L_3412-_LOADMODEL@16
.L_3413:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,818,.L_3413-_LOADMODEL@16
.L_3414:
	cmp dword ptr [ebp-32], 0
	jle .L_3122
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-60], eax
	jmp .L_321F
.L_3122:
	mov dword ptr [ebp-60], 0
.L_321F:
	cmp dword ptr [ebp-60], 0
	je .L_3125
.L_3126:
	mov dword ptr [ebp-32], -1
.L_3125:
.L_3127:
.stabn 68,0,818,.L_3414-_LOADMODEL@16
.L_3416:
	cmp dword ptr [ebp-32], 0
	jg .L_3129
.L_312A:
.stabn 68,0,818,.L_3416-_LOADMODEL@16
.L_3417:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F42
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,818,.L_3417-_LOADMODEL@16
.L_3418:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,818,.L_3418-_LOADMODEL@16
.L_3419:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,818,.L_3419-_LOADMODEL@16
.L_341A:
.L_312F:
.L_3129:
.L_3128:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,818,.L_341A-_LOADMODEL@16
.L_341B:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+16]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,819,.L_341B-_LOADMODEL@16
.L_341C:
	cmp dword ptr [ebp-32], 0
	jle .L_3130
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_3220
.L_3130:
	mov dword ptr [ebp-64], 0
.L_3220:
	cmp dword ptr [ebp-64], 0
	je .L_3133
.L_3134:
	mov dword ptr [ebp-32], -1
.L_3133:
.L_3135:
.stabn 68,0,819,.L_341C-_LOADMODEL@16
.L_341E:
	cmp dword ptr [ebp-32], 0
	jg .L_3137
.L_3138:
.stabn 68,0,819,.L_341E-_LOADMODEL@16
.L_341F:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2F54
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,819,.L_341F-_LOADMODEL@16
.L_3420:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,819,.L_3420-_LOADMODEL@16
.L_3421:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,819,.L_3421-_LOADMODEL@16
.L_3422:
.L_313D:
.L_3137:
.L_3136:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,819,.L_3422-_LOADMODEL@16
.L_3423:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+20]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,820,.L_3423-_LOADMODEL@16
.L_3424:
	cmp dword ptr [ebp-32], 0
	jle .L_313E
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-68], eax
	jmp .L_3221
.L_313E:
	mov dword ptr [ebp-68], 0
.L_3221:
	cmp dword ptr [ebp-68], 0
	je .L_3141
.L_3142:
	mov dword ptr [ebp-32], -1
.L_3141:
.L_3143:
.stabn 68,0,820,.L_3424-_LOADMODEL@16
.L_3426:
	cmp dword ptr [ebp-32], 0
	jg .L_3145
.L_3146:
.stabn 68,0,820,.L_3426-_LOADMODEL@16
.L_3427:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 57
	push offset _Lt_2F60
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,820,.L_3427-_LOADMODEL@16
.L_3428:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,820,.L_3428-_LOADMODEL@16
.L_3429:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,820,.L_3429-_LOADMODEL@16
.L_342A:
.L_314B:
.L_3145:
.L_3144:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,820,.L_342A-_LOADMODEL@16
.L_342B:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+24]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,821,.L_342B-_LOADMODEL@16
.L_342C:
	cmp dword ptr [ebp-32], 0
	jle .L_314C
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_3222
.L_314C:
	mov dword ptr [ebp-72], 0
.L_3222:
	cmp dword ptr [ebp-72], 0
	je .L_314F
.L_3150:
	mov dword ptr [ebp-32], -1
.L_314F:
.L_3151:
.stabn 68,0,821,.L_342C-_LOADMODEL@16
.L_342E:
	cmp dword ptr [ebp-32], 0
	jg .L_3153
.L_3154:
.stabn 68,0,821,.L_342E-_LOADMODEL@16
.L_342F:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_2FE6
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,821,.L_342F-_LOADMODEL@16
.L_3430:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,821,.L_3430-_LOADMODEL@16
.L_3431:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,821,.L_3431-_LOADMODEL@16
.L_3432:
.L_3159:
.L_3153:
.L_3152:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,821,.L_3432-_LOADMODEL@16
.L_3433:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+28]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,822,.L_3433-_LOADMODEL@16
.L_3434:
	cmp dword ptr [ebp-32], 0
	jle .L_315A
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-76], eax
	jmp .L_3223
.L_315A:
	mov dword ptr [ebp-76], 0
.L_3223:
	cmp dword ptr [ebp-76], 0
	je .L_315D
.L_315E:
	mov dword ptr [ebp-32], -1
.L_315D:
.L_315F:
.stabn 68,0,822,.L_3434-_LOADMODEL@16
.L_3436:
	cmp dword ptr [ebp-32], 0
	jg .L_3161
.L_3162:
.stabn 68,0,822,.L_3436-_LOADMODEL@16
.L_3437:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_2FF8
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,822,.L_3437-_LOADMODEL@16
.L_3438:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,822,.L_3438-_LOADMODEL@16
.L_3439:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,822,.L_3439-_LOADMODEL@16
.L_343A:
.L_3167:
.L_3161:
.L_3160:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,822,.L_343A-_LOADMODEL@16
.L_343B:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+32]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,823,.L_343B-_LOADMODEL@16
.L_343C:
	cmp dword ptr [ebp-32], 0
	jle .L_3168
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_3224
.L_3168:
	mov dword ptr [ebp-80], 0
.L_3224:
	cmp dword ptr [ebp-80], 0
	je .L_316B
.L_316C:
	mov dword ptr [ebp-32], -1
.L_316B:
.L_316D:
.stabn 68,0,823,.L_343C-_LOADMODEL@16
.L_343E:
	cmp dword ptr [ebp-32], 0
	jg .L_316F
.L_3170:
.stabn 68,0,823,.L_343E-_LOADMODEL@16
.L_343F:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 55
	push offset _Lt_3004
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,823,.L_343F-_LOADMODEL@16
.L_3440:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,823,.L_3440-_LOADMODEL@16
.L_3441:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,823,.L_3441-_LOADMODEL@16
.L_3442:
.L_3175:
.L_316F:
.L_316E:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,823,.L_3442-_LOADMODEL@16
.L_3443:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+36]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,824,.L_3443-_LOADMODEL@16
.L_3444:
	cmp dword ptr [ebp-32], 0
	jle .L_3176
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3225
.L_3176:
	mov dword ptr [ebp-84], 0
.L_3225:
	cmp dword ptr [ebp-84], 0
	je .L_3179
.L_317A:
	mov dword ptr [ebp-32], -1
.L_3179:
.L_317B:
.stabn 68,0,824,.L_3444-_LOADMODEL@16
.L_3446:
	cmp dword ptr [ebp-32], 0
	jg .L_317D
.L_317E:
.stabn 68,0,824,.L_3446-_LOADMODEL@16
.L_3447:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 58
	push offset _Lt_30B4
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,824,.L_3447-_LOADMODEL@16
.L_3448:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,824,.L_3448-_LOADMODEL@16
.L_3449:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,824,.L_3449-_LOADMODEL@16
.L_344A:
.L_3183:
.L_317D:
.L_317C:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,824,.L_344A-_LOADMODEL@16
.L_344B:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+40]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,825,.L_344B-_LOADMODEL@16
.L_344C:
	cmp dword ptr [ebp-32], 0
	jle .L_3184
	mov eax, dword ptr [ebp+8]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 32
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_3226
.L_3184:
	mov dword ptr [ebp-88], 0
.L_3226:
	cmp dword ptr [ebp-88], 0
	je .L_3187
.L_3188:
	mov dword ptr [ebp-32], -1
.L_3187:
.L_3189:
.stabn 68,0,825,.L_344C-_LOADMODEL@16
.L_344E:
	cmp dword ptr [ebp-32], 0
	jg .L_318B
.L_318C:
.stabn 68,0,825,.L_344E-_LOADMODEL@16
.L_344F:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 56
	push offset _Lt_30C6
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,825,.L_344F-_LOADMODEL@16
.L_3450:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,825,.L_3450-_LOADMODEL@16
.L_3451:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,825,.L_3451-_LOADMODEL@16
.L_3452:
.L_3191:
.L_318B:
.L_318A:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,825,.L_3452-_LOADMODEL@16
.L_3453:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+44]
	push ebx
	push dword ptr [ebp+8]
	call _READFLOAT@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,826,.L_3453-_LOADMODEL@16
.L_3454:
	cmp dword ptr [ebp-32], 0
	jg .L_3193
.L_3194:
.stabn 68,0,826,.L_3454-_LOADMODEL@16
.L_3455:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 60
	push offset _Lt_30D2
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-136]
	call _puts
	add esp, 4
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,826,.L_3455-_LOADMODEL@16
.L_3456:
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,826,.L_3456-_LOADMODEL@16
.L_3457:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,826,.L_3457-_LOADMODEL@16
.L_3458:
.L_3199:
.L_3193:
.L_3192:
	mov eax, dword ptr [ebp-32]
	add dword ptr [ebp+8], eax
.stabn 68,0,826,.L_3458-_LOADMODEL@16
.L_3459:
.L_319A:
	inc dword ptr [ebp-8]
.stabn 68,0,829,.L_3459-_LOADMODEL@16
.L_345A:
.L_319B:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_319C
.L_319D:
.stabn 68,0,831,.L_345A-_LOADMODEL@16
.L_345B:
.L_319E:
	mov ebx, dword ptr [ebp+8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-44], al
.stabn 68,0,831,.L_345B-_LOADMODEL@16
.L_345C:
	movzx eax, byte ptr [ebp-44]
	test eax, eax
	jne .L_31A1
.L_31A2:
.L_31A3:
	jmp .L_2D68
.stabn 68,0,831,.L_345C-_LOADMODEL@16
.L_345D:
.L_31A4:
	jmp .L_319F
.L_31A1:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 13
	je .L_31A6
.L_31A7:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 9
	je .L_31A6
.L_31A8:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 32
	jne .L_31A5
.L_31A6:
.L_31A9:
.stabn 68,0,831,.L_345D-_LOADMODEL@16
.L_345E:
.L_31AA:
	jmp .L_319F
.L_31A5:
.L_31AC:
.stabn 68,0,831,.L_345E-_LOADMODEL@16
.L_345F:
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp-20]
	call _fb_IntToStr@4
	push eax
	push -1
	push 11
	push offset _Lt_2767
	push -1
	push -1
	push dword ptr [ebp+12]
	push 25
	push offset _Lt_2EF1
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-92]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-92]
	call _puts
	add esp, 4
	lea eax, [ebp-92]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,831,.L_345F-_LOADMODEL@16
.L_3460:
	mov dword ptr [ebp-16], 1
	jmp .L_2D68
.stabn 68,0,831,.L_3460-_LOADMODEL@16
.L_3461:
.L_31B1:
.L_31AB:
.L_319F:
.L_31B2:
	inc dword ptr [ebp+8]
.stabn 68,0,831,.L_3461-_LOADMODEL@16
.L_3462:
.L_31B3:
	jmp .L_319B
.L_319C:
.stabn 68,0,831,.L_3462-_LOADMODEL@16
.L_3463:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
	jmp .L_2D69
.stabn 68,0,831,.L_3463-_LOADMODEL@16
.L_3464:
.L_31B4:
	jmp .L_2DAD
.L_30F3:
.L_31B6:
.stabn 68,0,832,.L_3464-_LOADMODEL@16
.L_3465:
	push offset _Lt_31B7
	call _puts
	add esp, 4
.stabn 68,0,833,.L_3465-_LOADMODEL@16
.L_3466:
.L_31B8:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	je .L_31BA
	mov ebx, dword ptr [ebp+8]
	movzx eax, byte ptr [ebx]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_3227
.L_31BA:
	mov dword ptr [ebp-44], 0
.L_3227:
	cmp dword ptr [ebp-44], 0
	je .L_31B9
.L_31BC:
	inc dword ptr [ebp+8]
.L_31BD:
	jmp .L_31B8
.L_31B9:
.stabn 68,0,834,.L_3466-_LOADMODEL@16
.L_3468:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_31BF
.L_31C0:
	jmp .L_2D68
.L_31BF:
.L_31C1:
.stabn 68,0,834,.L_3468-_LOADMODEL@16
.L_3469:
	inc dword ptr [ebp-20]
	inc dword ptr [ebp+8]
.stabn 68,0,834,.L_3469-_LOADMODEL@16
.L_346A:
.L_31C2:
.L_31B5:
.L_2DAD:
.L_31C3:
.L_31C4:
.L_2D69:
	jmp .L_2D67
.L_2D68:
.stabn 68,0,836,.L_346A-_LOADMODEL@16
.L_346B:
	push 0
	push dword ptr [ebp+12]
	push dword ptr [ebp-36]
	call _LOADSHADOW@12
.stabn 68,0,839,.L_346B-_LOADMODEL@16
.L_346C:
	dec dword ptr [_Lt_322F]
.stabn 68,0,842,.L_346C-_LOADMODEL@16
.L_346D:
	cmp dword ptr [ebp-16], 0
	je .L_31C6
.L_31C7:
.stabn 68,0,844,.L_346D-_LOADMODEL@16
.L_346E:
	push offset _Lt_31C8
	call _puts
	add esp, 4
	mov dword ptr [ebp-4], 0
	jmp .L_2D62
.stabn 68,0,845,.L_346E-_LOADMODEL@16
.L_346F:
	cmp dword ptr [ebp-36], 0
	je .L_31CA
.L_31CB:
	push dword ptr [ebp-36]
	call _free
	add esp, 4
	mov dword ptr [ebp-36], 0
.L_31CA:
.L_31CC:
.stabn 68,0,846,.L_346F-_LOADMODEL@16
.L_3470:
.L_31CD:
	jmp .L_31C5
.L_31C6:
.L_31CE:
.stabn 68,0,847,.L_3470-_LOADMODEL@16
.L_3471:
	mov ebx, dword ptr [ebp+16]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ebp-36]
	mov dword ptr [ebx+4], eax
.stabn 68,0,849,.L_3471-_LOADMODEL@16
.L_3472:
	mov eax, dword ptr [ebp+16]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	mov ebx, dword ptr [ebp-40]
	mov dword ptr [eax], ebx
.stabn 68,0,850,.L_3472-_LOADMODEL@16
.L_3473:
	mov ebx, dword ptr [ebp-36]
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebx+4], eax
.stabn 68,0,851,.L_3473-_LOADMODEL@16
.L_3474:
	mov eax, dword ptr [ebp-36]
	mov ebx, dword ptr [eax+4]
	imul ebx, 56
	add ebx, 44
	mov eax, ebx
	push eax
	push dword ptr [ebp-36]
	call _realloc
	add esp, 8
	mov dword ptr [ebp-36], eax
.stabn 68,0,852,.L_3474-_LOADMODEL@16
.L_3475:
	mov eax, dword ptr [ebp-20]
	add dword ptr [_Lt_322C], eax
	mov eax, dword ptr [ebp-36]
	mov ebx, dword ptr [eax+4]
	add dword ptr [_Lt_322D], ebx
.stabn 68,0,853,.L_3475-_LOADMODEL@16
.L_3476:
	cmp dword ptr [_Lt_322F], 0
	jne .L_31D0
.L_31D1:
.stabn 68,0,854,.L_3476-_LOADMODEL@16
.L_3477:
	movsx ebx, byte ptr [ebp+20]
	test ebx, ebx
	je .L_31D3
.L_31D4:
.stabn 68,0,863,.L_3477-_LOADMODEL@16
.L_3478:
	mov dword ptr [ebp-44], 2
	push 0
	push -1
	push offset _G_SFILESTOLOAD
	push -1
	lea ebx, [ebp-56]
	push ebx
	call _fb_StrInit@20
	push 0
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push offset _G_SFILESTOLOAD
	call _fb_StrAssign@20
.stabn 68,0,864,.L_3478-_LOADMODEL@16
.L_3479:
.L_31D5:
.L_31D8:
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	lea eax, [ebp-56]
	push eax
	push dword ptr [ebp-44]
	call _fb_StrInstr@12
	mov dword ptr [ebp-60], eax
.stabn 68,0,866,.L_3479-_LOADMODEL@16
.L_347A:
	cmp dword ptr [ebp-60], 0
	jne .L_31DA
.L_31DB:
	jmp .L_31D6
.L_31DA:
.L_31DC:
.stabn 68,0,867,.L_347A-_LOADMODEL@16
.L_347B:
	push 0
	push -1
	mov eax, dword ptr [ebp-60]
	sub eax, dword ptr [ebp-44]
	push eax
	push dword ptr [ebp-44]
	lea eax, [ebp-56]
	push eax
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-72]
	push eax
	call _fb_StrInit@20
.stabn 68,0,868,.L_347B-_LOADMODEL@16
.L_347C:
	mov eax, dword ptr [ebp-60]
	inc eax
	mov dword ptr [ebp-44], eax
.stabn 68,0,869,.L_347C-_LOADMODEL@16
.L_347D:
	push 0
	push -1
	lea eax, [ebp-72]
	push eax
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrInit@20
.stabn 68,0,870,.L_347D-_LOADMODEL@16
.L_347E:
	lea eax, [ebp-84]
	push eax
	call _FINDFILE@4
	test eax, eax
	je .L_31DE
.L_31DF:
.stabn 68,0,872,.L_347E-_LOADMODEL@16
.L_347F:
	push 0
	push -1
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push 0
	lea eax, [ebp-72]
	push eax
	call _fb_StrLcase2@8
	push eax
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	lea eax, [ebp-156]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-144]
	push eax
	call _fb_StrInit@20
	mov dword ptr [ebp-160], -1
.stabn 68,0,873,.L_347F-_LOADMODEL@16
.L_3480:
	push -1
	lea eax, [ebp-144]
	push eax
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	lea eax, [ebp-172]
	push eax
	call _fb_StrConcat@20
	push eax
	push offset _G_SFILENAMES
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-176], eax
.stabn 68,0,874,.L_3480-_LOADMODEL@16
.L_3481:
	mov eax, dword ptr [_G_SFILENAMES]
	add eax, dword ptr [ebp-176]
	add eax, -5
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-160], ebx
.stabn 68,0,875,.L_3481-_LOADMODEL@16
.L_3482:
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
.stabn 68,0,876,.L_3482-_LOADMODEL@16
.L_3483:
	push 1
	lea ebx, [ebp-188]
	push ebx
	lea ebx, [ebp-84]
	push ebx
	call _LOADFILE@12
	test al, al
	je .L_31E3
.L_31E4:
.stabn 68,0,877,.L_3483-_LOADMODEL@16
.L_3484:
	push 1
	push dword ptr [ebp-160]
	lea eax, [ebp-72]
	push eax
	push dword ptr [ebp-188]
	call _LOADMODEL@16
.stabn 68,0,879,.L_3484-_LOADMODEL@16
.L_3485:
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-144]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
	jmp .L_31D7
.stabn 68,0,880,.L_3485-_LOADMODEL@16
.L_3486:
.L_31E5:
.L_31E3:
.L_31E2:
	lea eax, [ebp-188]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-144]
	push eax
	call _fb_StrDelete@4
.L_31E6:
.L_31DE:
.L_31DD:
.stabn 68,0,882,.L_3486-_LOADMODEL@16
.L_3487:
	push 1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea eax, [ebp-72]
	push eax
	push 31
	push offset _Lt_31E7
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	lea eax, [ebp-96]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	lea eax, [ebp-108]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,884,.L_3487-_LOADMODEL@16
.L_3488:
	push 1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	push offset _G_SPATHLIST
	push 14
	push offset _Lt_31EA
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	lea eax, [ebp-132]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,885,.L_3488-_LOADMODEL@16
.L_3489:
	mov dword ptr [ebp-4], 0
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-56]
	push eax
	call _fb_StrDelete@4
	jmp .L_2D62
.stabn 68,0,887,.L_3489-_LOADMODEL@16
.L_348A:
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
.L_31ED:
.L_31D7:
	jmp .L_31D5
.L_31D6:
.stabn 68,0,888,.L_348A-_LOADMODEL@16
.L_348B:
	lea eax, [ebp-56]
	push eax
	call _fb_StrDelete@4
.L_31EE:
.L_31D3:
.L_31D2:
.stabn 68,0,889,.L_348B-_LOADMODEL@16
.L_348C:
.L_31EF:
.L_31D0:
.L_31CF:
.L_31F0:
.L_31C5:
	mov eax, dword ptr [ebp-36]
	mov dword ptr [ebp-4], eax
.stabn 68,0,894,.L_348C-_LOADMODEL@16
.L_348D:
.L_2D62:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,896,.L_2D62-_LOADMODEL@16
	.stabs "ILASTPART:1",128,0,0,-8
	.stabs "ILIMITPARTS:1",128,0,0,-12
	.stabs "IFAILED:1",128,0,0,-16
	.stabs "ILINENUM:1",128,0,0,-20
	.stabs "ITYPE:1",128,0,0,-24
	.stabs "ICOLOUR:1",128,0,0,-28
	.stabs "IRESU:1",128,0,0,-32
	.stabs "PT:134=*101",128,0,0,-36
	.stabs "IFILENAMEOFFSET:1",128,0,0,-40
	.stabs "RECURSIONLEVEL:V1",40,0,0,_Lt_322F
	.stabs "ITOTALLINES:V1",40,0,0,_Lt_322C
	.stabs "ITOTALPARTS:V1",40,0,0,_Lt_322D
	.stabn 192,0,0,.L_2D61-_LOADMODEL@16
	.stabn 192,0,0,.L_2D65-_LOADMODEL@16
	.stabn 224,0,0,.L_2D66-_LOADMODEL@16
	.stabn 192,0,0,.L_2D6A-_LOADMODEL@16
	.stabs "PNEW:135=*101",128,0,0,-44
	.stabn 192,0,0,.L_2D6D-_LOADMODEL@16
	.stabn 192,0,0,.L_2D70-_LOADMODEL@16
	.stabn 224,0,0,.L_2D72-_LOADMODEL@16
	.stabn 192,0,0,.L_2D75-_LOADMODEL@16
	.stabn 192,0,0,.L_2D7C-_LOADMODEL@16
	.stabn 224,0,0,.L_2D7E-_LOADMODEL@16
	.stabn 224,0,0,.L_2D7F-_LOADMODEL@16
	.stabn 224,0,0,.L_2D80-_LOADMODEL@16
	.stabn 192,0,0,.L_2D83-_LOADMODEL@16
	.stabn 192,0,0,.L_2D88-_LOADMODEL@16
	.stabn 224,0,0,.L_2D89-_LOADMODEL@16
	.stabn 192,0,0,.L_2D8C-_LOADMODEL@16
	.stabn 224,0,0,.L_2D8D-_LOADMODEL@16
	.stabn 224,0,0,.L_2D8E-_LOADMODEL@16
	.stabn 192,0,0,.L_2D91-_LOADMODEL@16
	.stabn 224,0,0,.L_2D96-_LOADMODEL@16
	.stabn 192,0,0,.L_2D99-_LOADMODEL@16
	.stabn 192,0,0,.L_2D9F-_LOADMODEL@16
	.stabn 224,0,0,.L_2DA0-_LOADMODEL@16
	.stabn 192,0,0,.L_2DA3-_LOADMODEL@16
	.stabn 224,0,0,.L_2DAA-_LOADMODEL@16
	.stabn 224,0,0,.L_2DAB-_LOADMODEL@16
	.stabn 192,0,0,.L_2DAC-_LOADMODEL@16
	.stabs "SCOMMENT:13",128,0,0,-52
	.stabn 192,0,0,.L_2DB0-_LOADMODEL@16
	.stabn 192,0,0,.L_2DB4-_LOADMODEL@16
	.stabn 224,0,0,.L_2DB5-_LOADMODEL@16
	.stabs "SFILE:13",128,0,0,-68
	.stabs "SFILEL:13",128,0,0,-88
	.stabs "IINDEX:1",128,0,0,-104
	.stabs "IOFFSET:1",128,0,0,-120
	.stabn 192,0,0,.L_2DB8-_LOADMODEL@16
	.stabn 192,0,0,.L_2DBD-_LOADMODEL@16
	.stabn 224,0,0,.L_2DBE-_LOADMODEL@16
	.stabn 192,0,0,.L_2DC1-_LOADMODEL@16
	.stabn 224,0,0,.L_2DC2-_LOADMODEL@16
	.stabn 192,0,0,.L_2DC7-_LOADMODEL@16
	.stabn 192,0,0,.L_2DCC-_LOADMODEL@16
	.stabn 224,0,0,.L_2DCD-_LOADMODEL@16
	.stabn 192,0,0,.L_2DD0-_LOADMODEL@16
	.stabn 224,0,0,.L_2DD1-_LOADMODEL@16
	.stabn 224,0,0,.L_2DD2-_LOADMODEL@16
	.stabn 192,0,0,.L_2DD7-_LOADMODEL@16
	.stabn 192,0,0,.L_2DDC-_LOADMODEL@16
	.stabn 224,0,0,.L_2DDE-_LOADMODEL@16
	.stabn 224,0,0,.L_2DE0-_LOADMODEL@16
	.stabn 224,0,0,.L_2DE1-_LOADMODEL@16
	.stabn 192,0,0,.L_2DE2-_LOADMODEL@16
	.stabn 224,0,0,.L_2DE3-_LOADMODEL@16
	.stabn 192,0,0,.L_2DE8-_LOADMODEL@16
	.stabn 224,0,0,.L_2DE9-_LOADMODEL@16
	.stabn 192,0,0,.L_2DEC-_LOADMODEL@16
	.stabn 224,0,0,.L_2DED-_LOADMODEL@16
	.stabn 224,0,0,.L_2DEE-_LOADMODEL@16
	.stabn 192,0,0,.L_2DF1-_LOADMODEL@16
	.stabs "SFILE:13",128,0,0,-104
	.stabs "SFILEL:13",128,0,0,-116
	.stabs "IOFFSET:1",128,0,0,-144
	.stabn 192,0,0,.L_2DF2-_LOADMODEL@16
	.stabn 192,0,0,.L_2DF8-_LOADMODEL@16
	.stabn 224,0,0,.L_2DF9-_LOADMODEL@16
	.stabn 192,0,0,.L_2DFC-_LOADMODEL@16
	.stabn 224,0,0,.L_2E06-_LOADMODEL@16
	.stabn 192,0,0,.L_2E0B-_LOADMODEL@16
	.stabn 224,0,0,.L_2E0C-_LOADMODEL@16
	.stabn 192,0,0,.L_2E0F-_LOADMODEL@16
	.stabn 224,0,0,.L_2E18-_LOADMODEL@16
	.stabn 192,0,0,.L_2E1D-_LOADMODEL@16
	.stabn 224,0,0,.L_2E1E-_LOADMODEL@16
	.stabn 192,0,0,.L_2E21-_LOADMODEL@16
	.stabn 224,0,0,.L_2E2A-_LOADMODEL@16
	.stabn 192,0,0,.L_2E2F-_LOADMODEL@16
	.stabn 224,0,0,.L_2E30-_LOADMODEL@16
	.stabn 192,0,0,.L_2E33-_LOADMODEL@16
	.stabn 224,0,0,.L_2E3C-_LOADMODEL@16
	.stabn 192,0,0,.L_2E41-_LOADMODEL@16
	.stabn 224,0,0,.L_2E42-_LOADMODEL@16
	.stabn 192,0,0,.L_2E45-_LOADMODEL@16
	.stabn 224,0,0,.L_2E4E-_LOADMODEL@16
	.stabn 192,0,0,.L_2E53-_LOADMODEL@16
	.stabn 224,0,0,.L_2E54-_LOADMODEL@16
	.stabn 192,0,0,.L_2E57-_LOADMODEL@16
	.stabn 224,0,0,.L_2E60-_LOADMODEL@16
	.stabn 192,0,0,.L_2E65-_LOADMODEL@16
	.stabn 224,0,0,.L_2E66-_LOADMODEL@16
	.stabn 192,0,0,.L_2E69-_LOADMODEL@16
	.stabn 224,0,0,.L_2E72-_LOADMODEL@16
	.stabn 192,0,0,.L_2E77-_LOADMODEL@16
	.stabn 224,0,0,.L_2E78-_LOADMODEL@16
	.stabn 192,0,0,.L_2E7B-_LOADMODEL@16
	.stabn 224,0,0,.L_2E84-_LOADMODEL@16
	.stabn 192,0,0,.L_2E89-_LOADMODEL@16
	.stabn 224,0,0,.L_2E8A-_LOADMODEL@16
	.stabn 192,0,0,.L_2E8D-_LOADMODEL@16
	.stabn 224,0,0,.L_2E96-_LOADMODEL@16
	.stabn 192,0,0,.L_2E9B-_LOADMODEL@16
	.stabn 224,0,0,.L_2E9C-_LOADMODEL@16
	.stabn 192,0,0,.L_2E9F-_LOADMODEL@16
	.stabn 224,0,0,.L_2EA8-_LOADMODEL@16
	.stabn 192,0,0,.L_2EAD-_LOADMODEL@16
	.stabn 224,0,0,.L_2EAE-_LOADMODEL@16
	.stabn 192,0,0,.L_2EB1-_LOADMODEL@16
	.stabn 224,0,0,.L_2EBA-_LOADMODEL@16
	.stabn 192,0,0,.L_2EBF-_LOADMODEL@16
	.stabn 224,0,0,.L_2EC0-_LOADMODEL@16
	.stabn 192,0,0,.L_2EC3-_LOADMODEL@16
	.stabn 224,0,0,.L_2ECC-_LOADMODEL@16
	.stabn 192,0,0,.L_2ECF-_LOADMODEL@16
	.stabn 224,0,0,.L_2ED6-_LOADMODEL@16
	.stabn 192,0,0,.L_2EDB-_LOADMODEL@16
	.stabn 224,0,0,.L_2EDC-_LOADMODEL@16
	.stabn 192,0,0,.L_2EDD-_LOADMODEL@16
	.stabn 224,0,0,.L_2EDE-_LOADMODEL@16
	.stabn 192,0,0,.L_2EE1-_LOADMODEL@16
	.stabn 192,0,0,.L_2EE2-_LOADMODEL@16
	.stabn 192,0,0,.L_2EE7-_LOADMODEL@16
	.stabn 224,0,0,.L_2EE8-_LOADMODEL@16
	.stabn 192,0,0,.L_2EED-_LOADMODEL@16
	.stabn 224,0,0,.L_2EEE-_LOADMODEL@16
	.stabn 192,0,0,.L_2EF0-_LOADMODEL@16
	.stabn 224,0,0,.L_2EF6-_LOADMODEL@16
	.stabn 224,0,0,.L_2EF7-_LOADMODEL@16
	.stabn 224,0,0,.L_2EF8-_LOADMODEL@16
	.stabn 224,0,0,.L_2EF9-_LOADMODEL@16
	.stabn 224,0,0,.L_2EFA-_LOADMODEL@16
	.stabn 192,0,0,.L_2EFD-_LOADMODEL@16
	.stabn 192,0,0,.L_2EFE-_LOADMODEL@16
	.stabn 192,0,0,.L_2F04-_LOADMODEL@16
	.stabn 224,0,0,.L_2F05-_LOADMODEL@16
	.stabn 192,0,0,.L_2F08-_LOADMODEL@16
	.stabn 224,0,0,.L_2F11-_LOADMODEL@16
	.stabn 192,0,0,.L_2F16-_LOADMODEL@16
	.stabn 224,0,0,.L_2F17-_LOADMODEL@16
	.stabn 192,0,0,.L_2F1A-_LOADMODEL@16
	.stabn 224,0,0,.L_2F23-_LOADMODEL@16
	.stabn 192,0,0,.L_2F28-_LOADMODEL@16
	.stabn 224,0,0,.L_2F29-_LOADMODEL@16
	.stabn 192,0,0,.L_2F2C-_LOADMODEL@16
	.stabn 224,0,0,.L_2F35-_LOADMODEL@16
	.stabn 192,0,0,.L_2F3A-_LOADMODEL@16
	.stabn 224,0,0,.L_2F3B-_LOADMODEL@16
	.stabn 192,0,0,.L_2F3E-_LOADMODEL@16
	.stabn 224,0,0,.L_2F47-_LOADMODEL@16
	.stabn 192,0,0,.L_2F4C-_LOADMODEL@16
	.stabn 224,0,0,.L_2F4D-_LOADMODEL@16
	.stabn 192,0,0,.L_2F50-_LOADMODEL@16
	.stabn 224,0,0,.L_2F59-_LOADMODEL@16
	.stabn 192,0,0,.L_2F5C-_LOADMODEL@16
	.stabn 224,0,0,.L_2F65-_LOADMODEL@16
	.stabn 224,0,0,.L_2F66-_LOADMODEL@16
	.stabn 192,0,0,.L_2F69-_LOADMODEL@16
	.stabn 192,0,0,.L_2F6A-_LOADMODEL@16
	.stabn 192,0,0,.L_2F6F-_LOADMODEL@16
	.stabn 224,0,0,.L_2F70-_LOADMODEL@16
	.stabn 192,0,0,.L_2F75-_LOADMODEL@16
	.stabn 224,0,0,.L_2F76-_LOADMODEL@16
	.stabn 192,0,0,.L_2F78-_LOADMODEL@16
	.stabn 224,0,0,.L_2F7D-_LOADMODEL@16
	.stabn 224,0,0,.L_2F7E-_LOADMODEL@16
	.stabn 224,0,0,.L_2F7F-_LOADMODEL@16
	.stabn 224,0,0,.L_2F80-_LOADMODEL@16
	.stabn 192,0,0,.L_2F83-_LOADMODEL@16
	.stabn 192,0,0,.L_2F84-_LOADMODEL@16
	.stabn 192,0,0,.L_2F8A-_LOADMODEL@16
	.stabn 224,0,0,.L_2F8B-_LOADMODEL@16
	.stabn 192,0,0,.L_2F8E-_LOADMODEL@16
	.stabn 224,0,0,.L_2F93-_LOADMODEL@16
	.stabn 192,0,0,.L_2F98-_LOADMODEL@16
	.stabn 224,0,0,.L_2F99-_LOADMODEL@16
	.stabn 192,0,0,.L_2F9C-_LOADMODEL@16
	.stabn 224,0,0,.L_2FA1-_LOADMODEL@16
	.stabn 192,0,0,.L_2FA6-_LOADMODEL@16
	.stabn 224,0,0,.L_2FA7-_LOADMODEL@16
	.stabn 192,0,0,.L_2FAA-_LOADMODEL@16
	.stabn 224,0,0,.L_2FAF-_LOADMODEL@16
	.stabn 192,0,0,.L_2FB4-_LOADMODEL@16
	.stabn 224,0,0,.L_2FB5-_LOADMODEL@16
	.stabn 192,0,0,.L_2FB8-_LOADMODEL@16
	.stabn 224,0,0,.L_2FBD-_LOADMODEL@16
	.stabn 192,0,0,.L_2FC2-_LOADMODEL@16
	.stabn 224,0,0,.L_2FC3-_LOADMODEL@16
	.stabn 192,0,0,.L_2FC6-_LOADMODEL@16
	.stabn 224,0,0,.L_2FCB-_LOADMODEL@16
	.stabn 192,0,0,.L_2FD0-_LOADMODEL@16
	.stabn 224,0,0,.L_2FD1-_LOADMODEL@16
	.stabn 192,0,0,.L_2FD4-_LOADMODEL@16
	.stabn 224,0,0,.L_2FD9-_LOADMODEL@16
	.stabn 192,0,0,.L_2FDE-_LOADMODEL@16
	.stabn 224,0,0,.L_2FDF-_LOADMODEL@16
	.stabn 192,0,0,.L_2FE2-_LOADMODEL@16
	.stabn 224,0,0,.L_2FEB-_LOADMODEL@16
	.stabn 192,0,0,.L_2FF0-_LOADMODEL@16
	.stabn 224,0,0,.L_2FF1-_LOADMODEL@16
	.stabn 192,0,0,.L_2FF4-_LOADMODEL@16
	.stabn 224,0,0,.L_2FFD-_LOADMODEL@16
	.stabn 192,0,0,.L_3000-_LOADMODEL@16
	.stabn 224,0,0,.L_3009-_LOADMODEL@16
	.stabn 224,0,0,.L_300A-_LOADMODEL@16
	.stabn 192,0,0,.L_300D-_LOADMODEL@16
	.stabn 192,0,0,.L_300E-_LOADMODEL@16
	.stabn 192,0,0,.L_3013-_LOADMODEL@16
	.stabn 224,0,0,.L_3014-_LOADMODEL@16
	.stabn 192,0,0,.L_3019-_LOADMODEL@16
	.stabn 224,0,0,.L_301A-_LOADMODEL@16
	.stabn 192,0,0,.L_301C-_LOADMODEL@16
	.stabn 224,0,0,.L_3021-_LOADMODEL@16
	.stabn 224,0,0,.L_3022-_LOADMODEL@16
	.stabn 224,0,0,.L_3023-_LOADMODEL@16
	.stabn 224,0,0,.L_3024-_LOADMODEL@16
	.stabn 192,0,0,.L_3027-_LOADMODEL@16
	.stabn 192,0,0,.L_3028-_LOADMODEL@16
	.stabn 192,0,0,.L_302E-_LOADMODEL@16
	.stabn 224,0,0,.L_302F-_LOADMODEL@16
	.stabn 192,0,0,.L_3032-_LOADMODEL@16
	.stabn 224,0,0,.L_3037-_LOADMODEL@16
	.stabn 192,0,0,.L_303C-_LOADMODEL@16
	.stabn 224,0,0,.L_303D-_LOADMODEL@16
	.stabn 192,0,0,.L_3040-_LOADMODEL@16
	.stabn 224,0,0,.L_3045-_LOADMODEL@16
	.stabn 192,0,0,.L_304A-_LOADMODEL@16
	.stabn 224,0,0,.L_304B-_LOADMODEL@16
	.stabn 192,0,0,.L_304E-_LOADMODEL@16
	.stabn 224,0,0,.L_3053-_LOADMODEL@16
	.stabn 192,0,0,.L_3058-_LOADMODEL@16
	.stabn 224,0,0,.L_3059-_LOADMODEL@16
	.stabn 192,0,0,.L_305C-_LOADMODEL@16
	.stabn 224,0,0,.L_3061-_LOADMODEL@16
	.stabn 192,0,0,.L_3066-_LOADMODEL@16
	.stabn 224,0,0,.L_3067-_LOADMODEL@16
	.stabn 192,0,0,.L_306A-_LOADMODEL@16
	.stabn 224,0,0,.L_306F-_LOADMODEL@16
	.stabn 192,0,0,.L_3074-_LOADMODEL@16
	.stabn 224,0,0,.L_3075-_LOADMODEL@16
	.stabn 192,0,0,.L_3078-_LOADMODEL@16
	.stabn 224,0,0,.L_307D-_LOADMODEL@16
	.stabn 192,0,0,.L_3082-_LOADMODEL@16
	.stabn 224,0,0,.L_3083-_LOADMODEL@16
	.stabn 192,0,0,.L_3086-_LOADMODEL@16
	.stabn 224,0,0,.L_308B-_LOADMODEL@16
	.stabn 192,0,0,.L_3090-_LOADMODEL@16
	.stabn 224,0,0,.L_3091-_LOADMODEL@16
	.stabn 192,0,0,.L_3094-_LOADMODEL@16
	.stabn 224,0,0,.L_3099-_LOADMODEL@16
	.stabn 192,0,0,.L_309E-_LOADMODEL@16
	.stabn 224,0,0,.L_309F-_LOADMODEL@16
	.stabn 192,0,0,.L_30A2-_LOADMODEL@16
	.stabn 224,0,0,.L_30A7-_LOADMODEL@16
	.stabn 192,0,0,.L_30AC-_LOADMODEL@16
	.stabn 224,0,0,.L_30AD-_LOADMODEL@16
	.stabn 192,0,0,.L_30B0-_LOADMODEL@16
	.stabn 224,0,0,.L_30B9-_LOADMODEL@16
	.stabn 192,0,0,.L_30BE-_LOADMODEL@16
	.stabn 224,0,0,.L_30BF-_LOADMODEL@16
	.stabn 192,0,0,.L_30C2-_LOADMODEL@16
	.stabn 224,0,0,.L_30CB-_LOADMODEL@16
	.stabn 192,0,0,.L_30CE-_LOADMODEL@16
	.stabn 224,0,0,.L_30D7-_LOADMODEL@16
	.stabn 224,0,0,.L_30D8-_LOADMODEL@16
	.stabn 192,0,0,.L_30DB-_LOADMODEL@16
	.stabn 192,0,0,.L_30DC-_LOADMODEL@16
	.stabn 192,0,0,.L_30E1-_LOADMODEL@16
	.stabn 224,0,0,.L_30E2-_LOADMODEL@16
	.stabn 192,0,0,.L_30E7-_LOADMODEL@16
	.stabn 224,0,0,.L_30E8-_LOADMODEL@16
	.stabn 192,0,0,.L_30EA-_LOADMODEL@16
	.stabn 224,0,0,.L_30EF-_LOADMODEL@16
	.stabn 224,0,0,.L_30F0-_LOADMODEL@16
	.stabn 224,0,0,.L_30F1-_LOADMODEL@16
	.stabn 224,0,0,.L_30F2-_LOADMODEL@16
	.stabn 192,0,0,.L_30F5-_LOADMODEL@16
	.stabn 192,0,0,.L_30F6-_LOADMODEL@16
	.stabn 192,0,0,.L_30FC-_LOADMODEL@16
	.stabn 224,0,0,.L_30FD-_LOADMODEL@16
	.stabn 192,0,0,.L_3100-_LOADMODEL@16
	.stabn 224,0,0,.L_3105-_LOADMODEL@16
	.stabn 192,0,0,.L_310A-_LOADMODEL@16
	.stabn 224,0,0,.L_310B-_LOADMODEL@16
	.stabn 192,0,0,.L_310E-_LOADMODEL@16
	.stabn 224,0,0,.L_3113-_LOADMODEL@16
	.stabn 192,0,0,.L_3118-_LOADMODEL@16
	.stabn 224,0,0,.L_3119-_LOADMODEL@16
	.stabn 192,0,0,.L_311C-_LOADMODEL@16
	.stabn 224,0,0,.L_3121-_LOADMODEL@16
	.stabn 192,0,0,.L_3126-_LOADMODEL@16
	.stabn 224,0,0,.L_3127-_LOADMODEL@16
	.stabn 192,0,0,.L_312A-_LOADMODEL@16
	.stabn 224,0,0,.L_312F-_LOADMODEL@16
	.stabn 192,0,0,.L_3134-_LOADMODEL@16
	.stabn 224,0,0,.L_3135-_LOADMODEL@16
	.stabn 192,0,0,.L_3138-_LOADMODEL@16
	.stabn 224,0,0,.L_313D-_LOADMODEL@16
	.stabn 192,0,0,.L_3142-_LOADMODEL@16
	.stabn 224,0,0,.L_3143-_LOADMODEL@16
	.stabn 192,0,0,.L_3146-_LOADMODEL@16
	.stabn 224,0,0,.L_314B-_LOADMODEL@16
	.stabn 192,0,0,.L_3150-_LOADMODEL@16
	.stabn 224,0,0,.L_3151-_LOADMODEL@16
	.stabn 192,0,0,.L_3154-_LOADMODEL@16
	.stabn 224,0,0,.L_3159-_LOADMODEL@16
	.stabn 192,0,0,.L_315E-_LOADMODEL@16
	.stabn 224,0,0,.L_315F-_LOADMODEL@16
	.stabn 192,0,0,.L_3162-_LOADMODEL@16
	.stabn 224,0,0,.L_3167-_LOADMODEL@16
	.stabn 192,0,0,.L_316C-_LOADMODEL@16
	.stabn 224,0,0,.L_316D-_LOADMODEL@16
	.stabn 192,0,0,.L_3170-_LOADMODEL@16
	.stabn 224,0,0,.L_3175-_LOADMODEL@16
	.stabn 192,0,0,.L_317A-_LOADMODEL@16
	.stabn 224,0,0,.L_317B-_LOADMODEL@16
	.stabn 192,0,0,.L_317E-_LOADMODEL@16
	.stabn 224,0,0,.L_3183-_LOADMODEL@16
	.stabn 192,0,0,.L_3188-_LOADMODEL@16
	.stabn 224,0,0,.L_3189-_LOADMODEL@16
	.stabn 192,0,0,.L_318C-_LOADMODEL@16
	.stabn 224,0,0,.L_3191-_LOADMODEL@16
	.stabn 192,0,0,.L_3194-_LOADMODEL@16
	.stabn 224,0,0,.L_3199-_LOADMODEL@16
	.stabn 224,0,0,.L_319A-_LOADMODEL@16
	.stabn 192,0,0,.L_319D-_LOADMODEL@16
	.stabn 192,0,0,.L_319E-_LOADMODEL@16
	.stabn 192,0,0,.L_31A3-_LOADMODEL@16
	.stabn 224,0,0,.L_31A4-_LOADMODEL@16
	.stabn 192,0,0,.L_31A9-_LOADMODEL@16
	.stabn 224,0,0,.L_31AA-_LOADMODEL@16
	.stabn 192,0,0,.L_31AC-_LOADMODEL@16
	.stabn 224,0,0,.L_31B1-_LOADMODEL@16
	.stabn 224,0,0,.L_31B2-_LOADMODEL@16
	.stabn 224,0,0,.L_31B3-_LOADMODEL@16
	.stabn 224,0,0,.L_31B4-_LOADMODEL@16
	.stabn 192,0,0,.L_31B6-_LOADMODEL@16
	.stabn 192,0,0,.L_31BC-_LOADMODEL@16
	.stabn 224,0,0,.L_31BD-_LOADMODEL@16
	.stabn 192,0,0,.L_31C0-_LOADMODEL@16
	.stabn 224,0,0,.L_31C1-_LOADMODEL@16
	.stabn 224,0,0,.L_31C2-_LOADMODEL@16
	.stabn 224,0,0,.L_31C3-_LOADMODEL@16
	.stabn 224,0,0,.L_31C4-_LOADMODEL@16
	.stabn 192,0,0,.L_31C7-_LOADMODEL@16
	.stabn 192,0,0,.L_31CB-_LOADMODEL@16
	.stabn 224,0,0,.L_31CC-_LOADMODEL@16
	.stabn 224,0,0,.L_31CD-_LOADMODEL@16
	.stabn 192,0,0,.L_31CE-_LOADMODEL@16
	.stabn 192,0,0,.L_31D1-_LOADMODEL@16
	.stabs "ISTART:1",128,0,0,-44
	.stabs "SFILESTOLOAD:13",128,0,0,-56
	.stabn 192,0,0,.L_31D4-_LOADMODEL@16
	.stabs "IEND:1",128,0,0,-60
	.stabs "SFILE:13",128,0,0,-72
	.stabs "SFULLPATHFILE:13",128,0,0,-84
	.stabn 192,0,0,.L_31D8-_LOADMODEL@16
	.stabn 192,0,0,.L_31DB-_LOADMODEL@16
	.stabn 224,0,0,.L_31DC-_LOADMODEL@16
	.stabs "SFILEL:13",128,0,0,-144
	.stabs "IINDEX:1",128,0,0,-160
	.stabs "IOFFSET:1",128,0,0,-176
	.stabs "SMODEL:13",128,0,0,-188
	.stabn 192,0,0,.L_31DF-_LOADMODEL@16
	.stabn 192,0,0,.L_31E4-_LOADMODEL@16
	.stabn 224,0,0,.L_31E5-_LOADMODEL@16
	.stabn 224,0,0,.L_31E6-_LOADMODEL@16
	.stabn 224,0,0,.L_31ED-_LOADMODEL@16
	.stabn 224,0,0,.L_31EE-_LOADMODEL@16
	.stabn 224,0,0,.L_31EF-_LOADMODEL@16
	.stabn 224,0,0,.L_31F0-_LOADMODEL@16
	.stabn 224,0,0,.L_2D62-_LOADMODEL@16
.L_348E:
	.stabs "",36,0,0,.L_348E-_LOADMODEL@16

.section .bss
.balign 4
	.lcomm	_Lt_322F,4
.balign 4
	.lcomm	_Lt_322C,4
.balign 4
	.lcomm	_Lt_322D,4

.section .text
	.stabs "FREEMODEL:F7",36,0,898,_FREEMODEL@4
	.stabs "PPART:v136=*101",160,0,0,8
.balign 16

.globl _FREEMODEL@4
_FREEMODEL@4:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,898,_FREEMODEL@4-_FREEMODEL@4
.L_348F:
.L_34AD:
	mov eax, dword ptr [ebp+8]
	cmp dword ptr [eax], 0
	jne .L_3492
.L_3493:
	jmp .L_3490
.L_3492:
.L_3494:
.stabn 68,0,899,.L_34AD-_FREEMODEL@4
.L_34AE:
.L_3495:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,900,.L_34AE-_FREEMODEL@4
.L_34AF:
	mov ebx, dword ptr [ebp-4]
	cmp dword ptr [ebx], 0
	jge .L_3498
.L_3499:
	jmp .L_3490
.L_3498:
.L_349A:
.stabn 68,0,901,.L_34AF-_FREEMODEL@4
.L_34B0:
.L_349B:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebx]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	lea ebx, [eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,902,.L_34B0-_FREEMODEL@4
.L_34B1:
	push 1
	push offset _Lt_2D76
	call _fb_StrAllocTempDescZEx@8
	push eax
	push offset _G_SFILENAMES
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax]
	add ebx, 5
	push ebx
	call _fb_StrInstr@12
	mov dword ptr [ebp-12], eax
.stabn 68,0,903,.L_34B1-_FREEMODEL@4
.L_34B2:
	cmp dword ptr [ebp-12], 0
	jne .L_349E
.L_349F:
.stabn 68,0,904,.L_34B2-_FREEMODEL@4
.L_34B3:
	mov eax, dword ptr [ebp-8]
	mov ebx, offset _G_SFILENAMES
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx+4], ecx
.stabn 68,0,905,.L_34B3-_FREEMODEL@4
.L_34B4:
.L_34A0:
	jmp .L_349D
.L_349E:
.L_34A1:
.stabn 68,0,906,.L_34B4-_FREEMODEL@4
.L_34B5:
	mov ecx, dword ptr [ebp-8]
	mov ebx, dword ptr [ebp-12]
	sub ebx, dword ptr [ecx]
	add ebx, -2
	mov ecx, ebx
	push ecx
	push 0
	mov ecx, dword ptr [ebp-8]
	mov ebx, dword ptr [_G_SFILENAMES]
	add ebx, dword ptr [ecx]
	push ebx
	call _memset
	add esp, 12
.stabn 68,0,907,.L_34B5-_FREEMODEL@4
.L_34B6:
.L_34A2:
.L_349D:
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebx], -1
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebx+4], 0
.stabn 68,0,909,.L_34B6-_FREEMODEL@4
.L_34B7:
.L_34A3:
	mov ebx, dword ptr [ebp-4]
	cmp dword ptr [ebx+36], 0
	je .L_34A5
.L_34A6:
	mov ebx, dword ptr [ebp-4]
	push dword ptr [ebx+36]
	call _free
	add esp, 4
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx+36], 0
.L_34A5:
.L_34A7:
.stabn 68,0,911,.L_34B7-_FREEMODEL@4
.L_34B8:
	mov ebx, dword ptr [ebp-4]
	cmp dword ptr [ebx+40], 0
	je .L_34A9
.L_34AA:
	mov ebx, dword ptr [ebp-4]
	push dword ptr [ebx+40]
	call _free
	add esp, 4
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx+40], 0
.L_34A9:
.L_34AB:
.stabn 68,0,912,.L_34B8-_FREEMODEL@4
.L_34B9:
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx], -1
.stabn 68,0,913,.L_34B9-_FREEMODEL@4
.L_34BA:
.L_34AC:
	mov ebx, dword ptr [ebp+8]
	push dword ptr [ebx]
	call _free
	add esp, 4
	mov ebx, dword ptr [ebp+8]
	mov dword ptr [ebx], 0
.stabn 68,0,915,.L_34BA-_FREEMODEL@4
.L_34BB:
.L_3490:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,916,.L_3490-_FREEMODEL@4
	.stabn 192,0,0,.L_348F-_FREEMODEL@4
	.stabn 192,0,0,.L_3493-_FREEMODEL@4
	.stabn 224,0,0,.L_3494-_FREEMODEL@4
	.stabn 192,0,0,.L_3495-_FREEMODEL@4
	.stabn 192,0,0,.L_3499-_FREEMODEL@4
	.stabn 224,0,0,.L_349A-_FREEMODEL@4
	.stabs "IPOSEND:1",128,0,0,-12
	.stabn 192,0,0,.L_349B-_FREEMODEL@4
	.stabn 192,0,0,.L_349F-_FREEMODEL@4
	.stabn 224,0,0,.L_34A0-_FREEMODEL@4
	.stabn 192,0,0,.L_34A1-_FREEMODEL@4
	.stabn 224,0,0,.L_34A2-_FREEMODEL@4
	.stabn 224,0,0,.L_34A3-_FREEMODEL@4
	.stabn 192,0,0,.L_34A6-_FREEMODEL@4
	.stabn 224,0,0,.L_34A7-_FREEMODEL@4
	.stabn 192,0,0,.L_34AA-_FREEMODEL@4
	.stabn 224,0,0,.L_34AB-_FREEMODEL@4
	.stabn 224,0,0,.L_34AC-_FREEMODEL@4
	.stabn 224,0,0,.L_3490-_FREEMODEL@4
.L_34BC:
	.stabs "",36,0,0,.L_34BC-_FREEMODEL@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\CLIPBOARD.BAS",132,0,0,.L_34D8
.L_34D8:
	.stabs "SETCLIPBOARD:F1",36,0,11,_SETCLIPBOARD@4
	.stabs "MYSTRING:v13",160,0,0,8
.balign 16

.globl _SETCLIPBOARD@4
_SETCLIPBOARD@4:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,11,_SETCLIPBOARD@4-_SETCLIPBOARD@4
	mov dword ptr [ebp-4], 0
.L_34C1:
.L_34D9:
	mov dword ptr [ebp-4], 0
.stabn 68,0,12,.L_34D9-_SETCLIPBOARD@4
.L_34DA:
.L_34C3:
.L_34C6:
	push 0
	call _OpenClipboard@4
	test eax, eax
	jne .L_34C8
.L_34C9:
	mov dword ptr [ebp-4], 0
	jmp .L_34C2
.L_34C8:
.L_34CA:
.stabn 68,0,14,.L_34DA-_SETCLIPBOARD@4
.L_34DB:
	call _EmptyClipboard@0
	test eax, eax
	jne .L_34CC
.L_34CD:
	jmp .L_34C4
.L_34CC:
.L_34CE:
.stabn 68,0,15,.L_34DB-_SETCLIPBOARD@4
.L_34DC:
	mov dword ptr [ebp-8], 0
.stabn 68,0,16,.L_34DC-_SETCLIPBOARD@4
.L_34DD:
	mov dword ptr [ebp-12], 0
.stabn 68,0,17,.L_34DD-_SETCLIPBOARD@4
.L_34DE:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	inc eax
	mov ebx, eax
	push ebx
	push 8194
	call _GlobalAlloc@8
	mov dword ptr [ebp-12], eax
.stabn 68,0,18,.L_34DE-_SETCLIPBOARD@4
.L_34DF:
	push dword ptr [ebp-12]
	call _GlobalLock@4
	mov dword ptr [ebp-8], eax
.stabn 68,0,19,.L_34DF-_SETCLIPBOARD@4
.L_34E0:
	cmp dword ptr [ebp-12], 0
	sete al
	shr eax, 1
	sbb eax, eax
	cmp dword ptr [ebp-8], 0
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	or eax, ebx
	je .L_34D0
.L_34D1:
	jmp .L_34C4
.L_34D0:
.L_34D2:
.stabn 68,0,20,.L_34E0-_SETCLIPBOARD@4
.L_34E3:
	push 0
	push -1
	push dword ptr [ebp+8]
	push 0
	push dword ptr [ebp-8]
	call _fb_StrAssign@20
.stabn 68,0,21,.L_34E3-_SETCLIPBOARD@4
.L_34E4:
	push dword ptr [ebp-8]
	call _GlobalUnlock@4
.stabn 68,0,22,.L_34E4-_SETCLIPBOARD@4
.L_34E5:
	push dword ptr [ebp-12]
	push 1
	call _SetClipboardData@8
	test eax, eax
	jne .L_34D4
.L_34D5:
	jmp .L_34C4
.L_34D4:
.L_34D6:
.stabn 68,0,23,.L_34E5-_SETCLIPBOARD@4
.L_34E6:
	mov dword ptr [ebp-4], 1
	jmp .L_34C4
.stabn 68,0,24,.L_34E6-_SETCLIPBOARD@4
.L_34E7:
.L_34D7:
.L_34C5:
	jmp .L_34C3
.L_34C4:
.stabn 68,0,25,.L_34E7-_SETCLIPBOARD@4
.L_34E8:
	call _CloseClipboard@0
.stabn 68,0,26,.L_34E8-_SETCLIPBOARD@4
.L_34E9:
.L_34C2:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,27,.L_34C2-_SETCLIPBOARD@4
	.stabn 192,0,0,.L_34C1-_SETCLIPBOARD@4
	.stabs "MYCLIPPTR:137=*4",128,0,0,-8
	.stabs "MYCLIPHAN:138=*7",128,0,0,-12
	.stabn 192,0,0,.L_34C6-_SETCLIPBOARD@4
	.stabn 192,0,0,.L_34C9-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34CA-_SETCLIPBOARD@4
	.stabn 192,0,0,.L_34CD-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34CE-_SETCLIPBOARD@4
	.stabn 192,0,0,.L_34D1-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34D2-_SETCLIPBOARD@4
	.stabn 192,0,0,.L_34D5-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34D6-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34D7-_SETCLIPBOARD@4
	.stabn 224,0,0,.L_34C2-_SETCLIPBOARD@4
.L_34EA:
	.stabs "",36,0,0,.L_34EA-_SETCLIPBOARD@4
	.stabs "SETCLIPBOARDW:F1",36,0,28,_SETCLIPBOARDW@4
	.stabs "MYSTRING:p139=*6",160,0,0,8
.balign 16

.globl _SETCLIPBOARDW@4
_SETCLIPBOARDW@4:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,28,_SETCLIPBOARDW@4-_SETCLIPBOARDW@4
	mov dword ptr [ebp-4], 0
.L_34EB:
.L_3501:
	push 0
	call _OpenClipboard@4
	test eax, eax
	jne .L_34EE
.L_34EF:
	mov dword ptr [ebp-4], 0
	jmp .L_34EC
.L_34EE:
.L_34F0:
.stabn 68,0,29,.L_3501-_SETCLIPBOARDW@4
.L_3502:
	call _EmptyClipboard@0
	test eax, eax
	jne .L_34F2
.L_34F3:
	mov dword ptr [ebp-4], 0
	jmp .L_34EC
.L_34F2:
.L_34F4:
.stabn 68,0,30,.L_3502-_SETCLIPBOARDW@4
.L_3503:
	mov dword ptr [ebp-8], 0
.stabn 68,0,31,.L_3503-_SETCLIPBOARDW@4
.L_3504:
	mov dword ptr [ebp-12], 0
.stabn 68,0,32,.L_3504-_SETCLIPBOARDW@4
.L_3505:
	push dword ptr [ebp+8]
	call _fb_WstrLen@4
	sal eax, 1
	inc eax
	mov ebx, eax
	push ebx
	push 8194
	call _GlobalAlloc@8
	mov dword ptr [ebp-12], eax
.stabn 68,0,33,.L_3505-_SETCLIPBOARDW@4
.L_3506:
	push dword ptr [ebp-12]
	call _GlobalLock@4
	mov dword ptr [ebp-8], eax
.stabn 68,0,34,.L_3506-_SETCLIPBOARDW@4
.L_3507:
	cmp dword ptr [ebp-12], 0
	sete al
	shr eax, 1
	sbb eax, eax
	cmp dword ptr [ebp-8], 0
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	or eax, ebx
	je .L_34F6
.L_34F7:
	mov dword ptr [ebp-4], 0
	jmp .L_34EC
.L_34F6:
.L_34F8:
.stabn 68,0,35,.L_3507-_SETCLIPBOARDW@4
.L_350A:
	push dword ptr [ebp+8]
	push 0
	push dword ptr [ebp-8]
	call _fb_WstrAssign@12
.stabn 68,0,36,.L_350A-_SETCLIPBOARDW@4
.L_350B:
	push dword ptr [ebp-8]
	call _GlobalUnlock@4
.stabn 68,0,37,.L_350B-_SETCLIPBOARDW@4
.L_350C:
	push dword ptr [ebp-12]
	push 13
	call _SetClipboardData@8
	test eax, eax
	jne .L_34FA
.L_34FB:
	mov dword ptr [ebp-4], 0
	jmp .L_34EC
.L_34FA:
.L_34FC:
.stabn 68,0,38,.L_350C-_SETCLIPBOARDW@4
.L_350D:
	call _CloseClipboard@0
	test eax, eax
	jne .L_34FE
.L_34FF:
	mov dword ptr [ebp-4], 0
	jmp .L_34EC
.L_34FE:
.L_3500:
.stabn 68,0,39,.L_350D-_SETCLIPBOARDW@4
.L_350E:
	mov dword ptr [ebp-4], 1
.stabn 68,0,40,.L_350E-_SETCLIPBOARDW@4
.L_350F:
.L_34EC:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,41,.L_34EC-_SETCLIPBOARDW@4
	.stabs "MYCLIPPTR:140=*6",128,0,0,-8
	.stabs "MYCLIPHAN:141=*7",128,0,0,-12
	.stabn 192,0,0,.L_34EB-_SETCLIPBOARDW@4
	.stabn 192,0,0,.L_34EF-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_34F0-_SETCLIPBOARDW@4
	.stabn 192,0,0,.L_34F3-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_34F4-_SETCLIPBOARDW@4
	.stabn 192,0,0,.L_34F7-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_34F8-_SETCLIPBOARDW@4
	.stabn 192,0,0,.L_34FB-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_34FC-_SETCLIPBOARDW@4
	.stabn 192,0,0,.L_34FF-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_3500-_SETCLIPBOARDW@4
	.stabn 224,0,0,.L_34EC-_SETCLIPBOARDW@4
.L_3510:
	.stabs "",36,0,0,.L_3510-_SETCLIPBOARDW@4
	.stabs "GETCLIPBOARD:F13",36,0,43,_GETCLIPBOARD@0
.balign 16

.globl _GETCLIPBOARD@0
_GETCLIPBOARD@0:
	push ebp
	mov ebp, esp
	sub esp, 20
	.stabn 68,0,43,_GETCLIPBOARD@0-_GETCLIPBOARD@0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_3511:
.L_3513:
	push 0
	call _OpenClipboard@4
.stabn 68,0,44,.L_3513-_GETCLIPBOARD@0
.L_3514:
	mov dword ptr [ebp-16], 0
.stabn 68,0,45,.L_3514-_GETCLIPBOARD@0
.L_3515:
	mov dword ptr [ebp-20], 0
.stabn 68,0,46,.L_3515-_GETCLIPBOARD@0
.L_3516:
	push 1
	call _GetClipboardData@4
	mov dword ptr [ebp-20], eax
.stabn 68,0,47,.L_3516-_GETCLIPBOARD@0
.L_3517:
	push dword ptr [ebp-20]
	call _GlobalLock@4
	mov dword ptr [ebp-16], eax
.stabn 68,0,48,.L_3517-_GETCLIPBOARD@0
.L_3518:
	push 0
	push 0
	push dword ptr [ebp-16]
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,49,.L_3518-_GETCLIPBOARD@0
.L_3519:
	push dword ptr [ebp-16]
	call _GlobalUnlock@4
.stabn 68,0,50,.L_3519-_GETCLIPBOARD@0
.L_351A:
	call _CloseClipboard@0
.stabn 68,0,51,.L_351A-_GETCLIPBOARD@0
.L_351B:
.L_3512:
	lea eax, [ebp-12]
	push eax
	call _fb_StrAllocTempResult@4
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,52,.L_3512-_GETCLIPBOARD@0
	.stabs "MYCLIPPTR:142=*4",128,0,0,-16
	.stabs "MYCLIPHAN:143=*7",128,0,0,-20
	.stabn 192,0,0,.L_3511-_GETCLIPBOARD@0
	.stabn 224,0,0,.L_3512-_GETCLIPBOARD@0
.L_351C:
	.stabs "",36,0,0,.L_351C-_GETCLIPBOARD@0
	.stabs "GETBITMAPFROMCLIPBOARD:F144=*7",36,0,54,_GETBITMAPFROMCLIPBOARD@0
.balign 16

.globl _GETBITMAPFROMCLIPBOARD@0
_GETBITMAPFROMCLIPBOARD@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,54,_GETBITMAPFROMCLIPBOARD@0-_GETBITMAPFROMCLIPBOARD@0
	mov dword ptr [ebp-4], 0
.L_351D:
.L_3523:
	push 0
	call _OpenClipboard@4
	test eax, eax
	jne .L_3520
.L_3521:
	mov dword ptr [ebp-4], 0
	jmp .L_351E
.L_3520:
.L_3522:
.stabn 68,0,55,.L_3523-_GETBITMAPFROMCLIPBOARD@0
.L_3524:
	mov dword ptr [ebp-8], 0
.stabn 68,0,56,.L_3524-_GETBITMAPFROMCLIPBOARD@0
.L_3525:
	mov dword ptr [ebp-12], 0
.stabn 68,0,57,.L_3525-_GETBITMAPFROMCLIPBOARD@0
.L_3526:
	push 2
	call _GetClipboardData@4
	push eax
	call _DeleteObject@4
.stabn 68,0,72,.L_3526-_GETBITMAPFROMCLIPBOARD@0
.L_3527:
	call _CloseClipboard@0
.stabn 68,0,74,.L_3527-_GETBITMAPFROMCLIPBOARD@0
.L_3528:
.L_351E:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,75,.L_351E-_GETBITMAPFROMCLIPBOARD@0
	.stabs "TAGBITMAPINFOHEADER:Tt147=s40BISIZE:8,0,32;BIWIDTH:1,32,32;BIHEIGHT:1,64,32;BIPLANES:6,96,16;BIBITCOUNT:6,112,16;BICOMPRESSION:8,128,32;BISIZEIMAGE:8,160,32;BIXPELSPERMETER:1,192,32;BIYPELSPERMETER:1,224,32;BICLRUSED:8,256,32;BICLRIMPORTANT:8,288,32;;",128,0,0,0
	.stabs "TAGRGBQUAD:Tt149=s4RGBBLUE:3,0,8;RGBGREEN:3,8,8;RGBRED:3,16,8;RGBRESERVED:3,24,8;;",128,0,0,0
	.stabs "TAGBITMAPINFO:Tt146=s44BMIHEADER:147,0,320;BMICOLORS:148=ar1;0;0;149,320,32;;",128,0,0,0
	.stabs "MYDIB:145=*146",128,0,0,-8
	.stabs "MYCLIPHAN:150=*7",128,0,0,-12
	.stabn 192,0,0,.L_351D-_GETBITMAPFROMCLIPBOARD@0
	.stabn 192,0,0,.L_3521-_GETBITMAPFROMCLIPBOARD@0
	.stabn 224,0,0,.L_3522-_GETBITMAPFROMCLIPBOARD@0
	.stabn 224,0,0,.L_351E-_GETBITMAPFROMCLIPBOARD@0
.L_3529:
	.stabs "",36,0,0,.L_3529-_GETBITMAPFROMCLIPBOARD@0
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\RESIZABLEGL.BAS",132,0,0,.L_384A
.L_384A:
	.stabs "__ZN3GFX6RESIZEEllll@16:F7",36,0,136,__ZN3GFX6RESIZEEllll@16
	.stabs "IWID:p1",160,0,0,8
	.stabs "IHEI:p1",160,0,0,12
	.stabs "IASPECT:p1",160,0,0,16
	.stabs "IRESIZABLE:p1",160,0,0,20
.balign 16

.globl __ZN3GFX6RESIZEEllll@16
__ZN3GFX6RESIZEEllll@16:
	push ebp
	mov ebp, esp
	sub esp, 84
	.stabn 68,0,136,__ZN3GFX6RESIZEEllll@16-__ZN3GFX6RESIZEEllll@16
.L_380C:
.L_384B:
	mov dword ptr [ebp-4], 0
.stabn 68,0,139,.L_384B-__ZN3GFX6RESIZEEllll@16
.L_384C:
	mov dword ptr [ebp-16], -2147483648
	lea eax, [ebp-16]
	push eax
	mov dword ptr [ebp-12], -2147483648
	lea eax, [ebp-12]
	push eax
	mov dword ptr [ebp-8], -2147483648
	lea eax, [ebp-8]
	push eax
	lea eax, [ebp-4]
	push eax
	push 2
	call _fb_GfxControl_i32@20
.stabn 68,0,140,.L_384C-__ZN3GFX6RESIZEEllll@16
.L_384D:
	push 0
	push offset _Lt_0000
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-32]
	push eax
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-28]
	push eax
	mov dword ptr [ebp-24], 0
	lea eax, [ebp-24]
	push eax
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-20]
	push eax
	push offset __ZN3GFX9G_ISCRHEIE
	push offset __ZN3GFX9G_ISCRWIDE
	call _fb_GfxScreenInfo32@28
.stabn 68,0,141,.L_384D-__ZN3GFX6RESIZEEllll@16
.L_384E:
	mov eax, dword ptr [_Lt_384F]
	cmp dword ptr [ebp-4], eax
	je .L_3816
.L_3817:
.stabn 68,0,142,.L_384E-__ZN3GFX6RESIZEEllll@16
.L_3850:
	mov eax, dword ptr [ebp-4]
	mov dword ptr [_Lt_384F], eax
.stabn 68,0,143,.L_3850-__ZN3GFX6RESIZEEllll@16
.L_3851:
	push offset __ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	push -4
	push dword ptr [_Lt_384F]
	call _SetWindowLongA@12
	mov dword ptr [__ZN3GFX10LORGFBPROCE], eax
.stabn 68,0,144,.L_3851-__ZN3GFX6RESIZEEllll@16
.L_3852:
.L_3819:
.L_3816:
.L_3815:
	push -16
	push dword ptr [_Lt_384F]
	call _GetWindowLongA@8
	mov dword ptr [ebp-36], eax
.stabn 68,0,147,.L_3852-__ZN3GFX6RESIZEEllll@16
.L_3853:
	cmp dword ptr [ebp+20], 0
	je .L_381B
.L_381C:
	or dword ptr [ebp-36], 262144
.L_381D:
	jmp .L_381A
.L_381B:
.L_381E:
	and dword ptr [ebp-36], -262145
.L_381A:
.L_381F:
.stabn 68,0,148,.L_3853-__ZN3GFX6RESIZEEllll@16
.L_3854:
	mov byte ptr [__ZN3GFX6G_TEMPE], 1
.stabn 68,0,149,.L_3854-__ZN3GFX6RESIZEEllll@16
.L_3855:
	push dword ptr [ebp-36]
	push -16
	push dword ptr [_Lt_384F]
	call _SetWindowLongA@12
.stabn 68,0,150,.L_3855-__ZN3GFX6RESIZEEllll@16
.L_3856:
	push 39
	push 0
	push 0
	push 0
	push 0
	push 0
	push dword ptr [_Lt_384F]
	call _SetWindowPos@28
.stabn 68,0,151,.L_3856-__ZN3GFX6RESIZEEllll@16
.L_3857:
	mov byte ptr [__ZN3GFX6G_TEMPE], 0
.stabn 68,0,152,.L_3857-__ZN3GFX6RESIZEEllll@16
.L_3858:
	push 0
	call _GetSystemMetrics@4
	mov dword ptr [_Lt_3859], eax
.stabn 68,0,154,.L_3858-__ZN3GFX6RESIZEEllll@16
.L_385A:
	push 1
	call _GetSystemMetrics@4
	mov dword ptr [_Lt_385B], eax
.stabn 68,0,155,.L_385A-__ZN3GFX6RESIZEEllll@16
.L_385C:
	push offset _Lt_385D
	push dword ptr [_Lt_384F]
	call _GetWindowRect@8
.stabn 68,0,156,.L_385C-__ZN3GFX6RESIZEEllll@16
.L_385E:
	push offset _Lt_385F
	push dword ptr [_Lt_384F]
	call _GetClientRect@8
.stabn 68,0,157,.L_385E-__ZN3GFX6RESIZEEllll@16
.L_3860:
	mov eax, dword ptr [_Lt_385D+8]
	sub eax, dword ptr [_Lt_385D]
	sub eax, dword ptr [_Lt_385F+8]
	add eax, dword ptr [_Lt_385F]
	mov dword ptr [ebp-40], eax
.stabn 68,0,159,.L_3860-__ZN3GFX6RESIZEEllll@16
.L_3861:
	mov eax, dword ptr [_Lt_385D+12]
	sub eax, dword ptr [_Lt_385D+4]
	sub eax, dword ptr [_Lt_385F+12]
	add eax, dword ptr [_Lt_385F+4]
	mov dword ptr [ebp-44], eax
.stabn 68,0,160,.L_3861-__ZN3GFX6RESIZEEllll@16
.L_3862:
	mov eax, dword ptr [ebp-40]
	add eax, dword ptr [ebp+8]
	mov dword ptr [ebp-48], eax
	mov eax, dword ptr [ebp-44]
	add eax, dword ptr [ebp+12]
	mov dword ptr [ebp-52], eax
.stabn 68,0,161,.L_3862-__ZN3GFX6RESIZEEllll@16
.L_3863:
	mov dword ptr [ebp-56], 100
.stabn 68,0,162,.L_3863-__ZN3GFX6RESIZEEllll@16
.L_3864:
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-64], 0
.stabn 68,0,164,.L_3864-__ZN3GFX6RESIZEEllll@16
.L_3865:
	cmp dword ptr [ebp+8], 0
	jle .L_3820
	mov eax, dword ptr [ebp+12]
	test eax, eax
	setle al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-68], eax
	jmp .L_3845
.L_3820:
	mov dword ptr [ebp-68], -1
.L_3845:
	cmp dword ptr [ebp-68], 0
	je .L_3823
.L_3824:
.stabn 68,0,165,.L_3865-__ZN3GFX6RESIZEEllll@16
.L_3867:
	and dword ptr [ebp-56], -5
.stabn 68,0,166,.L_3867-__ZN3GFX6RESIZEEllll@16
.L_3868:
	cmp dword ptr [ebp+8], 0
	jne .L_3826
.L_3827:
	mov eax, dword ptr [_Lt_3859]
	mov dword ptr [ebp-48], eax
.L_3826:
.L_3828:
.stabn 68,0,167,.L_3868-__ZN3GFX6RESIZEEllll@16
.L_3869:
	cmp dword ptr [ebp+12], 0
	jne .L_382A
.L_382B:
	mov eax, dword ptr [_Lt_385B]
	mov dword ptr [ebp-52], eax
.L_382A:
.L_382C:
.stabn 68,0,168,.L_3869-__ZN3GFX6RESIZEEllll@16
.L_386A:
	cmp dword ptr [ebp+8], 0
	jge .L_382D
	mov eax, dword ptr [ebp+12]
	test eax, eax
	setge al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_3846
.L_382D:
	mov dword ptr [ebp-80], 0
.L_3846:
	cmp dword ptr [ebp-80], 0
	je .L_3830
.L_3831:
.stabn 68,0,169,.L_386A-__ZN3GFX6RESIZEEllll@16
.L_386C:
	mov eax, dword ptr [ebp-52]
	sub eax, dword ptr [ebp-44]
	imul eax, dword ptr [__ZN3GFX9G_ISCRWIDE]
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRHEIE]
	add eax, dword ptr [ebp-40]
	mov dword ptr [ebp-48], eax
.stabn 68,0,170,.L_386C-__ZN3GFX6RESIZEEllll@16
.L_386D:
.L_3832:
	jmp .L_382F
.L_3830:
	cmp dword ptr [ebp+12], 0
	jge .L_3834
	mov eax, dword ptr [ebp+8]
	test eax, eax
	setge al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3847
.L_3834:
	mov dword ptr [ebp-84], 0
.L_3847:
	cmp dword ptr [ebp-84], 0
	je .L_3833
.L_3836:
.stabn 68,0,171,.L_386D-__ZN3GFX6RESIZEEllll@16
.L_386F:
	mov eax, dword ptr [ebp-48]
	sub eax, dword ptr [ebp-40]
	imul eax, dword ptr [__ZN3GFX9G_ISCRHEIE]
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRWIDE]
	add eax, dword ptr [ebp-44]
	mov dword ptr [ebp-52], eax
.stabn 68,0,172,.L_386F-__ZN3GFX6RESIZEEllll@16
.L_3870:
.L_3837:
.L_3833:
.L_382F:
.L_3838:
.L_3823:
.L_3822:
.L_383B:
	mov eax, dword ptr [_Lt_3859]
	sub eax, dword ptr [ebp-48]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [ebp-60], eax
	mov eax, dword ptr [_Lt_385B]
	sub eax, dword ptr [ebp-52]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [ebp-64], eax
.L_383A:
.L_383C:
.stabn 68,0,176,.L_3870-__ZN3GFX6RESIZEEllll@16
.L_3871:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [__ZN3GFX9G_IASPECTE], eax
	mov dword ptr [__ZN3GFX10G_IOFFLEFTE], 0
	mov dword ptr [__ZN3GFX9G_IOFFTOPE], 0
	mov dword ptr [__ZN3GFX9LOLDSTYLEE], 0
.stabn 68,0,177,.L_3871-__ZN3GFX6RESIZEEllll@16
.L_3872:
	push dword ptr [ebp-56]
	push dword ptr [ebp-52]
	push dword ptr [ebp-48]
	push dword ptr [ebp-64]
	push dword ptr [ebp-60]
	push 4294967295
	push dword ptr [_Lt_384F]
	call _SetWindowPos@28
.stabn 68,0,179,.L_3872-__ZN3GFX6RESIZEEllll@16
.L_3873:
	movsx eax, byte ptr [__ZN3GFX12G_FULLSCREENE]
	test eax, eax
	jne .L_383D
	mov eax, dword ptr [__ZN3GFX12G_LFIRSTSIZEE]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_3848
.L_383D:
	mov dword ptr [ebp-72], 0
.L_3848:
	cmp dword ptr [ebp-72], 0
	je .L_383F
	mov eax, dword ptr [__ZN3GFX12LSCREENFLAGSE]
	and eax, 1
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-76], eax
	jmp .L_3849
.L_383F:
	mov dword ptr [ebp-76], 0
.L_3849:
	cmp dword ptr [ebp-76], 0
	je .L_3842
.L_3843:
.stabn 68,0,182,.L_3873-__ZN3GFX6RESIZEEllll@16
.L_3876:
	push 0
	push 0
	push 1114
	push dword ptr [_Lt_384F]
	call _SendMessageA@16
.stabn 68,0,183,.L_3876-__ZN3GFX6RESIZEEllll@16
.L_3877:
.L_3844:
.L_3842:
.L_3841:
.L_380D:
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,186,.L_380D-__ZN3GFX6RESIZEEllll@16
	.stabs "FBWND:V151=*21",40,0,0,_Lt_384F
	.stabs "FBRCT:V23",40,0,0,_Lt_385D
	.stabs "FBCLI:V23",40,0,0,_Lt_385F
	.stabs "IDESKWID:V1",40,0,0,_Lt_3859
	.stabs "IDESKHEI:V1",40,0,0,_Lt_385B
	.stabs "NEWWND:152=*21",128,0,0,-4
	.stabs "ISTYLE:1",128,0,0,-36
	.stabs "ISX:1",128,0,0,-40
	.stabs "ISY:1",128,0,0,-44
	.stabs "IWID2:1",128,0,0,-48
	.stabs "IHEI2:1",128,0,0,-52
	.stabs "IFLAGS:1",128,0,0,-56
	.stabs "ILEFT:1",128,0,0,-60
	.stabs "ITOP:1",128,0,0,-64
	.stabn 192,0,0,.L_380C-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3817-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3819-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_381C-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_381D-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_381E-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_381F-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3824-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3827-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3828-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_382B-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_382C-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3831-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3832-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3836-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3837-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3838-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_383B-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_383C-__ZN3GFX6RESIZEEllll@16
	.stabn 192,0,0,.L_3843-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_3844-__ZN3GFX6RESIZEEllll@16
	.stabn 224,0,0,.L_380D-__ZN3GFX6RESIZEEllll@16
.L_3878:
	.stabs "",36,0,0,.L_3878-__ZN3GFX6RESIZEEllll@16

.section .bss
.balign 4
	.lcomm	_Lt_384F,4
.balign 4
	.lcomm	_Lt_385D,16
.balign 4
	.lcomm	_Lt_385F,16
.balign 4
	.lcomm	_Lt_3859,4
.balign 4
	.lcomm	_Lt_385B,4

.section .text
	.stabs "_SCREENRES:F7",36,0,192,__SCREENRES@24
	.stabs "IWID:p1",160,0,0,8
	.stabs "IHEI:p1",160,0,0,12
	.stabs "DEPTH:p1",160,0,0,16
	.stabs "NUM_PAGES:p1",160,0,0,20
	.stabs "FLAGS:p1",160,0,0,24
	.stabs "REFRESH_RATE:p1",160,0,0,28
.balign 16

.globl __SCREENRES@24
__SCREENRES@24:
	push ebp
	mov ebp, esp
	.stabn 68,0,192,__SCREENRES@24-__SCREENRES@24
.L_3879:
.L_3884:
	mov eax, dword ptr [ebp+24]
	mov dword ptr [__ZN3GFX12LSCREENFLAGSE], eax
	mov dword ptr [__ZN3GFX12G_LFIRSTSIZEE], 1
	mov dword ptr [__ZN3GFX13G_BORDERCOLORE], 0
	mov byte ptr [__ZN3GFX12G_FULLSCREENE], 0
.stabn 68,0,194,.L_3884-__SCREENRES@24
.L_3885:
	mov eax, dword ptr [ebp+24]
	and eax, -2
	or eax, 4
	mov dword ptr [ebp+24], eax
.stabn 68,0,195,.L_3885-__SCREENRES@24
.L_3886:
	mov dword ptr [__ZN3GFX9G_ICLIWIDE], 0
	mov dword ptr [__ZN3GFX9G_ICLIHEIE], 0
.stabn 68,0,199,.L_3886-__SCREENRES@24
.L_3887:
	mov eax, dword ptr [ebp+24]
	and eax, 16
	je .L_387C
.L_387D:
	push 3
	push offset _Lt_387E
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 103
	call _fb_GfxControl_s@8
.L_387C:
.L_387F:
.stabn 68,0,200,.L_3887-__SCREENRES@24
.L_3888:
	push dword ptr [ebp+28]
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _fb_GfxScreenRes@24
.stabn 68,0,201,.L_3888-__SCREENRES@24
.L_3889:
	mov eax, dword ptr [ebp+24]
	and eax, 16
	je .L_3881
.L_3882:
	push 0
	push offset _Lt_0000
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 103
	call _fb_GfxControl_s@8
.L_3881:
.L_3883:
.stabn 68,0,202,.L_3889-__SCREENRES@24
.L_388A:
	push offset __ZN3GFX12G_SGFXDRIVERE
	push 9
	call _fb_GfxControl_s@8
.stabn 68,0,203,.L_388A-__SCREENRES@24
.L_388B:
.L_387A:
	mov esp, ebp
	pop ebp
	ret 24
	.stabn 68,0,204,.L_387A-__SCREENRES@24
	.stabn 192,0,0,.L_3879-__SCREENRES@24
	.stabn 192,0,0,.L_387D-__SCREENRES@24
	.stabn 224,0,0,.L_387F-__SCREENRES@24
	.stabn 192,0,0,.L_3882-__SCREENRES@24
	.stabn 224,0,0,.L_3883-__SCREENRES@24
	.stabn 224,0,0,.L_387A-__SCREENRES@24
.L_388C:
	.stabs "",36,0,0,.L_388C-__SCREENRES@24
	.stabs "_SETMOUSE:F1",36,0,209,__SETMOUSE@16
	.stabs "X:p1",160,0,0,8
	.stabs "Y:p1",160,0,0,12
	.stabs "VISIBILITY:p1",160,0,0,16
	.stabs "CLIP:p1",160,0,0,20
.balign 16

.globl __SETMOUSE@16
__SETMOUSE@16:
	push ebp
	mov ebp, esp
	sub esp, 52
	push ebx
	.stabn 68,0,209,__SETMOUSE@16-__SETMOUSE@16
	mov dword ptr [ebp-4], 0
.L_388D:
.L_38B2:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-20], -2147483648
	lea eax, [ebp-20]
	push eax
	mov dword ptr [ebp-16], -2147483648
	lea eax, [ebp-16]
	push eax
	mov dword ptr [ebp-12], -2147483648
	lea eax, [ebp-12]
	push eax
	lea eax, [ebp-8]
	push eax
	push 2
	call _fb_GfxControl_i32@20
.stabn 68,0,210,.L_38B2-__SETMOUSE@16
.L_38B3:
	cmp dword ptr [ebp-8], 0
	jne .L_3893
.L_3894:
	mov dword ptr [ebp-4], 1
	jmp .L_388E
.L_3893:
.L_3895:
.stabn 68,0,211,.L_38B3-__SETMOUSE@16
.L_38B4:
	lea eax, [ebp-36]
	push eax
	push dword ptr [ebp-8]
	call _GetClientRect@8
.stabn 68,0,212,.L_38B4-__SETMOUSE@16
.L_38B5:
	cmp dword ptr [ebp+8], -32768
	je .L_3896
	mov eax, dword ptr [ebp+12]
	cmp eax, -32768
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-40], eax
	jmp .L_38B0
.L_3896:
	mov dword ptr [ebp-40], 0
.L_38B0:
	cmp dword ptr [ebp-40], 0
	je .L_3899
.L_389A:
.stabn 68,0,213,.L_38B5-__SETMOUSE@16
.L_38B7:
	mov eax, dword ptr [__ZN3GFX9G_ISCRWIDE]
	cmp dword ptr [ebp+8], eax
	jae .L_389B
	mov eax, dword ptr [ebp+12]
	cmp eax, dword ptr [__ZN3GFX9G_ISCRHEIE]
	setae bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-44], ebx
	jmp .L_38B1
.L_389B:
	mov dword ptr [ebp-44], -1
.L_38B1:
	cmp dword ptr [ebp-44], 0
	je .L_389E
.L_389F:
	mov dword ptr [ebp-4], 1
	jmp .L_388E
.L_389E:
.L_38A0:
.stabn 68,0,214,.L_38B7-__SETMOUSE@16
.L_38B9:
	mov ebx, dword ptr [ebp-28]
	imul ebx, dword ptr [ebp+8]
	mov eax, ebx
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRWIDE]
	mov ebx, eax
	mov dword ptr [ebp-52], ebx
	mov ebx, dword ptr [ebp-24]
	imul ebx, dword ptr [ebp+12]
	mov eax, ebx
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRHEIE]
	mov ebx, eax
	mov dword ptr [ebp-48], ebx
.stabn 68,0,215,.L_38B9-__SETMOUSE@16
.L_38BA:
	lea ebx, [ebp-52]
	push ebx
	push dword ptr [ebp-8]
	call _ClientToScreen@8
	push dword ptr [ebp-48]
	push dword ptr [ebp-52]
	call _SetCursorPos@8
.stabn 68,0,216,.L_38BA-__SETMOUSE@16
.L_38BB:
.L_38A1:
.L_3899:
.L_3898:
	cmp dword ptr [ebp+16], -32768
	je .L_38A3
.L_38A4:
	push -1
	mov ebx, dword ptr [ebp+16]
	mov eax, ebx
	sar eax, 31
	xor ebx, eax
	sub ebx, eax
	push ebx
	push -2147483648
	push -2147483648
	call _fb_SetMouse@16
.L_38A3:
.L_38A5:
.stabn 68,0,218,.L_38BB-__SETMOUSE@16
.L_38BC:
	cmp dword ptr [ebp+20], -32768
	je .L_38A7
.L_38A8:
.stabn 68,0,219,.L_38BC-__SETMOUSE@16
.L_38BD:
	lea ebx, [ebp-36]
	push ebx
	push dword ptr [ebp-8]
	call _ClientToScreen@8
.stabn 68,0,220,.L_38BD-__SETMOUSE@16
.L_38BE:
	lea ebx, [ebp-36]
	add ebx, 8
	push ebx
	push dword ptr [ebp-8]
	call _ClientToScreen@8
.stabn 68,0,221,.L_38BE-__SETMOUSE@16
.L_38BF:
	cmp dword ptr [ebp+20], 0
	je .L_38AA
.L_38AB:
	lea ebx, [ebp-36]
	push ebx
	call _ClipCursor@4
.L_38AC:
	jmp .L_38A9
.L_38AA:
.L_38AD:
	push 0
	call _ClipCursor@4
.L_38A9:
.L_38AE:
.stabn 68,0,222,.L_38BF-__SETMOUSE@16
.L_38C0:
.L_38AF:
.L_38A7:
.L_38A6:
.L_388E:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,224,.L_388E-__SETMOUSE@16
	.stabs "GFXWND:153=*21",128,0,0,-8
	.stabs "TRC:23",128,0,0,-36
	.stabn 192,0,0,.L_388D-__SETMOUSE@16
	.stabn 192,0,0,.L_3894-__SETMOUSE@16
	.stabn 224,0,0,.L_3895-__SETMOUSE@16
	.stabs "TAGPOINT:Tt154=s8X:1,0,32;Y:1,32,32;;",128,0,0,0
	.stabs "TPT:154",128,0,0,-52
	.stabn 192,0,0,.L_389A-__SETMOUSE@16
	.stabn 192,0,0,.L_389F-__SETMOUSE@16
	.stabn 224,0,0,.L_38A0-__SETMOUSE@16
	.stabn 224,0,0,.L_38A1-__SETMOUSE@16
	.stabn 192,0,0,.L_38A4-__SETMOUSE@16
	.stabn 224,0,0,.L_38A5-__SETMOUSE@16
	.stabn 192,0,0,.L_38A8-__SETMOUSE@16
	.stabn 192,0,0,.L_38AB-__SETMOUSE@16
	.stabn 224,0,0,.L_38AC-__SETMOUSE@16
	.stabn 192,0,0,.L_38AD-__SETMOUSE@16
	.stabn 224,0,0,.L_38AE-__SETMOUSE@16
	.stabn 224,0,0,.L_38AF-__SETMOUSE@16
	.stabn 224,0,0,.L_388E-__SETMOUSE@16
.L_38C1:
	.stabs "",36,0,0,.L_38C1-__SETMOUSE@16
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\INITGL.BAS",132,0,0,.L_38D6
.L_38D6:
	.stabs "INITOPENGL:F155=*21",36,0,44,_INITOPENGL@8
	.stabs "SCRWID:p1",160,0,0,8
	.stabs "SCRHEI:p1",160,0,0,12
.balign 16

.globl _INITOPENGL@8
_INITOPENGL@8:
	push ebp
	mov ebp, esp
	sub esp, 184
	.stabn 68,0,44,_INITOPENGL@8-_INITOPENGL@8
	mov dword ptr [ebp-4], 0
.L_38C2:
.L_38D7:
	push 0
	push 2
	push 1
	push 32
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call __SCREENRES@24
.stabn 68,0,49,.L_38D7-_INITOPENGL@8
.L_38D8:
	push 0
	push 1
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call __ZN3GFX6RESIZEEllll@16
.stabn 68,0,50,.L_38D8-_INITOPENGL@8
.L_38D9:
	mov dword ptr [ebp-8], 0
.stabn 68,0,51,.L_38D9-_INITOPENGL@8
.L_38DA:
	mov dword ptr [ebp-20], -2147483648
	lea eax, [ebp-20]
	push eax
	mov dword ptr [ebp-16], -2147483648
	lea eax, [ebp-16]
	push eax
	mov dword ptr [ebp-12], -2147483648
	lea eax, [ebp-12]
	push eax
	lea eax, [ebp-8]
	push eax
	push 2
	call _fb_GfxControl_i32@20
.stabn 68,0,52,.L_38DA-_INITOPENGL@8
.L_38DB:
	push -16
	push dword ptr [ebp-8]
	call _GetWindowLongA@8
	or eax, 65536
	mov dword ptr [ebp-24], eax
.stabn 68,0,55,.L_38DB-_INITOPENGL@8
.L_38DC:
	push -20
	push dword ptr [ebp-8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-28], eax
.stabn 68,0,56,.L_38DC-_INITOPENGL@8
.L_38DD:
	mov eax, dword ptr [ebp-24]
	or eax, 262144
	push eax
	push -16
	push dword ptr [ebp-8]
	call _SetWindowLongA@12
.stabn 68,0,57,.L_38DD-_INITOPENGL@8
.L_38DE:
	push 39
	push 0
	push 0
	push 0
	push 0
	push 0
	push dword ptr [ebp-8]
	call _SetWindowPos@28
.stabn 68,0,59,.L_38DE-_INITOPENGL@8
.L_38DF:
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push 0
	push 0
	call _glViewport@16
.stabn 68,0,62,.L_38DF-_INITOPENGL@8
.L_38E0:
	push 5889
	call _glMatrixMode@4
.stabn 68,0,63,.L_38E0-_INITOPENGL@8
.L_38E1:
	call _glLoadIdentity@0
.stabn 68,0,64,.L_38E1-_INITOPENGL@8
.L_38E2:
	push dword ptr [_Lt_38CA+4]
	push dword ptr [_Lt_38CA]
	push dword ptr [_Lt_38CB+4]
	push dword ptr [_Lt_38CB]
	fild dword ptr [ebp+8]
	fild dword ptr [ebp+12]
	fxch st(1)
	fdivrp
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [_Lt_38CC+4]
	push dword ptr [_Lt_38CC]
	call _gluPerspective@32
.stabn 68,0,65,.L_38E2-_INITOPENGL@8
.L_38E3:
	push 5888
	call _glMatrixMode@4
.stabn 68,0,66,.L_38E3-_INITOPENGL@8
.L_38E4:
	call _glLoadIdentity@0
.stabn 68,0,67,.L_38E4-_INITOPENGL@8
.L_38E5:
	push 7425
	call _glShadeModel@4
.stabn 68,0,70,.L_38E5-_INITOPENGL@8
.L_38E6:
	push dword ptr [_Lt_38CD]
	push dword ptr [_Lt_38CE]
	push dword ptr [_Lt_38CF]
	push dword ptr [_Lt_38D0]
	call _glClearColor@16
.stabn 68,0,71,.L_38E6-_INITOPENGL@8
.L_38E7:
	push dword ptr [_Lt_38CB+4]
	push dword ptr [_Lt_38CB]
	call _glClearDepth@8
.stabn 68,0,72,.L_38E7-_INITOPENGL@8
.L_38E8:
	push 2929
	call _glEnable@4
.stabn 68,0,73,.L_38E8-_INITOPENGL@8
.L_38E9:
	push 515
	call _glDepthFunc@4
.stabn 68,0,75,.L_38E9-_INITOPENGL@8
.L_38EA:
	push 4354
	push 3152
	call _glHint@8
.stabn 68,0,76,.L_38EA-_INITOPENGL@8
.L_38EB:
	push 3042
	call _glEnable@4
.stabn 68,0,77,.L_38EB-_INITOPENGL@8
.L_38EC:
	push 771
	push 770
	call _glBlendFunc@8
.stabn 68,0,78,.L_38EC-_INITOPENGL@8
.L_38ED:
	push 2848
	call _glEnable@4
.stabn 68,0,83,.L_38ED-_INITOPENGL@8
.L_38EE:
	push dword ptr [_Lt_38D1]
	call _glLineWidth@4
.stabn 68,0,88,.L_38EE-_INITOPENGL@8
.L_38EF:
	push 2884
	call _glDisable@4
.stabn 68,0,91,.L_38EF-_INITOPENGL@8
.L_38F0:
	push 32823
	call _glEnable@4
.stabn 68,0,95,.L_38F0-_INITOPENGL@8
.L_38F1:
	push dword ptr [_Lt_38D2]
	push dword ptr [_Lt_38D3]
	call _glPolygonOffset@8
.stabn 68,0,96,.L_38F1-_INITOPENGL@8
.L_38F2:
	push 2896
	call _glEnable@4
.stabn 68,0,99,.L_38F2-_INITOPENGL@8
.L_38F3:
	push 16384
	call _glEnable@4
.stabn 68,0,101,.L_38F3-_INITOPENGL@8
.L_38F4:
	lea eax, [ebp-44]
	mov dword ptr [ebp-80], eax
	lea eax, [ebp-44]
	mov dword ptr [ebp-76], eax
	mov dword ptr [ebp-72], 16
	mov dword ptr [ebp-68], 4
	mov dword ptr [ebp-64], 1
	mov dword ptr [ebp-60], 49
	mov dword ptr [ebp-56], 4
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 3
	push dword ptr [_Lt_38D4]
	pop dword ptr [ebp-44]
	push dword ptr [_Lt_38D4]
	pop dword ptr [ebp-40]
	push dword ptr [_Lt_38D4]
	pop dword ptr [ebp-36]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-32]
.stabn 68,0,106,.L_38F4-_INITOPENGL@8
.L_38F5:
	lea eax, [ebp-44]
	push eax
	push 4608
	push 16384
	call _glLightfv@12
.stabn 68,0,107,.L_38F5-_INITOPENGL@8
.L_38F6:
	lea eax, [ebp-96]
	mov dword ptr [ebp-132], eax
	lea eax, [ebp-96]
	mov dword ptr [ebp-128], eax
	mov dword ptr [ebp-124], 16
	mov dword ptr [ebp-120], 4
	mov dword ptr [ebp-116], 1
	mov dword ptr [ebp-112], 49
	mov dword ptr [ebp-108], 4
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 3
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-96]
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-92]
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-88]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-84]
.stabn 68,0,110,.L_38F6-_INITOPENGL@8
.L_38F7:
	lea eax, [ebp-96]
	push eax
	push 4609
	push 16384
	call _glLightfv@12
.stabn 68,0,111,.L_38F7-_INITOPENGL@8
.L_38F8:
	lea eax, [ebp-148]
	mov dword ptr [ebp-184], eax
	lea eax, [ebp-148]
	mov dword ptr [ebp-180], eax
	mov dword ptr [ebp-176], 16
	mov dword ptr [ebp-172], 4
	mov dword ptr [ebp-168], 1
	mov dword ptr [ebp-164], 49
	mov dword ptr [ebp-160], 4
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 3
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-148]
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-144]
	push dword ptr [_Lt_38D5]
	pop dword ptr [ebp-140]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-136]
.stabn 68,0,114,.L_38F8-_INITOPENGL@8
.L_38F9:
	lea eax, [ebp-148]
	push eax
	push 4610
	push 16384
	call _glLightfv@12
.stabn 68,0,115,.L_38F9-_INITOPENGL@8
.L_38FA:
	push 2903
	call _glEnable@4
.stabn 68,0,117,.L_38FA-_INITOPENGL@8
.L_38FB:
	push 5634
	push 1028
	call _glColorMaterial@8
.stabn 68,0,118,.L_38FB-_INITOPENGL@8
.L_38FC:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,120,.L_38FC-_INITOPENGL@8
.L_38FD:
.L_38C3:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,122,.L_38C3-_INITOPENGL@8
	.stabs "HWNDGFX:156=*21",128,0,0,-8
	.stabs "LCURSTYLE:1",128,0,0,-24
	.stabs "LCURSTYLEEX:1",128,0,0,-28
	.stabs "AMBIENTLIGHT:157=ar1;0;3;11",128,0,0,-44
	.stabs "DIFFUSELIGHT:158=ar1;0;3;11",128,0,0,-96
	.stabs "SPECULARLIGHT:159=ar1;0;3;11",128,0,0,-148
	.stabn 192,0,0,.L_38C2-_INITOPENGL@8
	.stabn 224,0,0,.L_38C3-_INITOPENGL@8
.L_38FE:
	.stabs "",36,0,0,.L_38FE-_INITOPENGL@8
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MATH3D.BAS",132,0,0,.L_3901
.L_3901:
	.stabs "DOT_PRODUCT:F11",36,0,7,_DOT_PRODUCT@8
	.stabs "PU:p160=*11",160,0,0,8
	.stabs "PV:p161=*11",160,0,0,12
.balign 16

.globl _DOT_PRODUCT@8
_DOT_PRODUCT@8:
	push ebp
	mov ebp, esp
	sub esp, 4
	push ebx
	.stabn 68,0,7,_DOT_PRODUCT@8-_DOT_PRODUCT@8
	mov dword ptr [ebp-4], 0
.L_38FF:
.L_3902:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fmul dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fmul dword ptr [eax+4]
	fxch st(1)
	faddp
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+8]
	fxch st(1)
	faddp
	fstp dword ptr [ebp-4]
.stabn 68,0,8,.L_3902-_DOT_PRODUCT@8
.L_3903:
.L_3900:
	fld dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,9,.L_3900-_DOT_PRODUCT@8
	.stabn 192,0,0,.L_38FF-_DOT_PRODUCT@8
	.stabn 224,0,0,.L_3900-_DOT_PRODUCT@8
.L_3904:
	.stabs "",36,0,0,.L_3904-_DOT_PRODUCT@8
	.stabs "CROSSPRODUCT:F7",36,0,11,_CROSSPRODUCT@12
	.stabs "V1:p162=*11",160,0,0,8
	.stabs "V2:p163=*11",160,0,0,12
	.stabs "RESULT:p164=*11",160,0,0,16
.balign 16

.globl _CROSSPRODUCT@12
_CROSSPRODUCT@12:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,11,_CROSSPRODUCT@12-_CROSSPRODUCT@12
.L_3905:
.L_3907:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+4]
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fmul dword ptr [eax+8]
	fxch st(1)
	fsubrp
	mov eax, dword ptr [ebp+16]
	fstp dword ptr [eax]
.stabn 68,0,12,.L_3907-_CROSSPRODUCT@12
.L_3908:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fmul dword ptr [eax+8]
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fmul dword ptr [eax]
	fxch st(1)
	fsubrp
	mov eax, dword ptr [ebp+16]
	fstp dword ptr [eax+4]
.stabn 68,0,13,.L_3908-_CROSSPRODUCT@12
.L_3909:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fmul dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fmul dword ptr [eax+4]
	fxch st(1)
	fsubrp
	mov eax, dword ptr [ebp+16]
	fstp dword ptr [eax+8]
.stabn 68,0,14,.L_3909-_CROSSPRODUCT@12
.L_390A:
.L_3906:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,15,.L_3906-_CROSSPRODUCT@12
	.stabn 192,0,0,.L_3905-_CROSSPRODUCT@12
	.stabn 224,0,0,.L_3906-_CROSSPRODUCT@12
.L_390B:
	.stabs "",36,0,0,.L_390B-_CROSSPRODUCT@12
	.stabs "NORMALIZE:F7",36,0,18,_NORMALIZE@4
	.stabs "V:p165=*11",160,0,0,8
.balign 16

.globl _NORMALIZE@4
_NORMALIZE@4:
	push ebp
	mov ebp, esp
	sub esp, 4
	push ebx
	.stabn 68,0,18,_NORMALIZE@4-_NORMALIZE@4
.L_390C:
.L_3913:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+8]
	fld dword ptr [ebx]
	fmul dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+8]
	fld dword ptr [ebx+4]
	fmul dword ptr [eax+4]
	fxch st(1)
	faddp
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+8]
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+8]
	fxch st(1)
	faddp
	fsqrt
	fstp dword ptr [ebp-4]
.stabn 68,0,19,.L_3913-_NORMALIZE@4
.L_3914:
	fld dword ptr [ebp-4]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_390F
.L_3910:
.stabn 68,0,20,.L_3914-_NORMALIZE@4
.L_3915:
	mov eax, dword ptr [ebp+8]
	fld dword ptr [eax]
	fdiv dword ptr [ebp-4]
	mov eax, dword ptr [ebp+8]
	fstp dword ptr [eax]
.stabn 68,0,21,.L_3915-_NORMALIZE@4
.L_3916:
	mov eax, dword ptr [ebp+8]
	fld dword ptr [eax+4]
	fdiv dword ptr [ebp-4]
	mov eax, dword ptr [ebp+8]
	fstp dword ptr [eax+4]
.stabn 68,0,22,.L_3916-_NORMALIZE@4
.L_3917:
	mov eax, dword ptr [ebp+8]
	fld dword ptr [eax+8]
	fdiv dword ptr [ebp-4]
	mov eax, dword ptr [ebp+8]
	fstp dword ptr [eax+8]
.stabn 68,0,23,.L_3917-_NORMALIZE@4
.L_3918:
.L_3911:
.L_390F:
.L_390E:
.L_390D:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,25,.L_390D-_NORMALIZE@4
	.stabs "LENGTH:11",128,0,0,-4
	.stabn 192,0,0,.L_390C-_NORMALIZE@4
	.stabn 192,0,0,.L_3910-_NORMALIZE@4
	.stabn 224,0,0,.L_3911-_NORMALIZE@4
	.stabn 224,0,0,.L_390D-_NORMALIZE@4
.L_3919:
	.stabs "",36,0,0,.L_3919-_NORMALIZE@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\NORMALS.BAS",132,0,0,.L_3922
.L_3922:
	.stabs "SETLINENORMAL:F7",36,0,5,_SETLINENORMAL@4
	.stabs "TLINE:v113",160,0,0,8
.balign 16

.globl _SETLINENORMAL@4
_SETLINENORMAL@4:
	push ebp
	mov ebp, esp
	sub esp, 148
	push ebx
	.stabn 68,0,5,_SETLINENORMAL@4-_SETLINENORMAL@4
.L_391A:
.L_3923:
.L_391C:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,6,.L_3923-_SETLINENORMAL@4
.L_3924:
	lea eax, [ebp-16]
	mov dword ptr [ebp-52], eax
	lea eax, [ebp-16]
	mov dword ptr [ebp-48], eax
	mov dword ptr [ebp-44], 12
	mov dword ptr [ebp-40], 4
	mov dword ptr [ebp-36], 1
	mov dword ptr [ebp-32], 49
	mov dword ptr [ebp-28], 3
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 2
.stabn 68,0,8,.L_3924-_SETLINENORMAL@4
.L_3925:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+12]
	fsub dword ptr [ebx]
	fstp dword ptr [ebp-16]
.stabn 68,0,9,.L_3925-_SETLINENORMAL@4
.L_3926:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+16]
	fsub dword ptr [eax+4]
	fstp dword ptr [ebp-12]
.stabn 68,0,10,.L_3926-_SETLINENORMAL@4
.L_3927:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+20]
	fsub dword ptr [ebx+8]
	fstp dword ptr [ebp-8]
.stabn 68,0,11,.L_3927-_SETLINENORMAL@4
.L_3928:
	lea ebx, [ebp-64]
	mov dword ptr [ebp-100], ebx
	lea ebx, [ebp-64]
	mov dword ptr [ebp-96], ebx
	mov dword ptr [ebp-92], 12
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 3
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 2
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-64]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-60]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-56]
.stabn 68,0,14,.L_3928-_SETLINENORMAL@4
.L_3929:
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea ebx, [ebp-112]
	mov dword ptr [ebp-148], ebx
	lea ebx, [ebp-112]
	mov dword ptr [ebp-144], ebx
	mov dword ptr [ebp-140], 12
	mov dword ptr [ebp-136], 4
	mov dword ptr [ebp-132], 1
	mov dword ptr [ebp-128], 49
	mov dword ptr [ebp-124], 3
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 2
.stabn 68,0,17,.L_3929-_SETLINENORMAL@4
.L_392A:
	lea ebx, [ebp-112]
	push ebx
	lea ebx, [ebp-64]
	push ebx
	lea ebx, [ebp-16]
	push ebx
	call _CROSSPRODUCT@12
.stabn 68,0,18,.L_392A-_SETLINENORMAL@4
.L_392B:
	lea ebx, [ebp-112]
	push ebx
	call _NORMALIZE@4
.stabn 68,0,21,.L_392B-_SETLINENORMAL@4
.L_392C:
	fld dword ptr [_Lt_38CD]
	fmul dword ptr [ebp-112]
	fstp dword ptr [ebp-112]
.stabn 68,0,25,.L_392C-_SETLINENORMAL@4
.L_392D:
	fld dword ptr [_Lt_38CD]
	fmul dword ptr [ebp-108]
	fstp dword ptr [ebp-108]
.stabn 68,0,26,.L_392D-_SETLINENORMAL@4
.L_392E:
	fld dword ptr [_Lt_38CD]
	fmul dword ptr [ebp-104]
	fstp dword ptr [ebp-104]
.stabn 68,0,27,.L_392E-_SETLINENORMAL@4
.L_392F:
	lea ebx, [ebp-112]
	push ebx
	call _glNormal3fv@4
.stabn 68,0,29,.L_392F-_SETLINENORMAL@4
.L_3930:
.L_3921:
.L_391B:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,31,.L_391B-_SETLINENORMAL@4
	.stabn 192,0,0,.L_391A-_SETLINENORMAL@4
	.stabs "DIRECTION:166=ar1;0;2;11",128,0,0,-16
	.stabs "REF:167=ar1;0;2;11",128,0,0,-64
	.stabs "NORMAL:168=ar1;0;2;11",128,0,0,-112
	.stabn 192,0,0,.L_391C-_SETLINENORMAL@4
	.stabn 224,0,0,.L_3921-_SETLINENORMAL@4
	.stabn 224,0,0,.L_391B-_SETLINENORMAL@4
.L_3931:
	.stabs "",36,0,0,.L_3931-_SETLINENORMAL@4
	.stabs "SETTRIGNORMAL:F7",36,0,32,_SETTRIGNORMAL@4
	.stabs "TTRIG:v114",160,0,0,8
.balign 16

.globl _SETTRIGNORMAL@4
_SETTRIGNORMAL@4:
	push ebp
	mov ebp, esp
	sub esp, 148
	push ebx
	.stabn 68,0,32,_SETTRIGNORMAL@4-_SETTRIGNORMAL@4
.L_3932:
.L_393A:
.L_3934:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,33,.L_393A-_SETTRIGNORMAL@4
.L_393B:
	lea eax, [ebp-16]
	mov dword ptr [ebp-52], eax
	lea eax, [ebp-16]
	mov dword ptr [ebp-48], eax
	mov dword ptr [ebp-44], 12
	mov dword ptr [ebp-40], 4
	mov dword ptr [ebp-36], 1
	mov dword ptr [ebp-32], 49
	mov dword ptr [ebp-28], 3
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 2
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 12
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 3
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 2
	lea eax, [ebp-112]
	mov dword ptr [ebp-148], eax
	lea eax, [ebp-112]
	mov dword ptr [ebp-144], eax
	mov dword ptr [ebp-140], 12
	mov dword ptr [ebp-136], 4
	mov dword ptr [ebp-132], 1
	mov dword ptr [ebp-128], 49
	mov dword ptr [ebp-124], 3
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 2
.stabn 68,0,35,.L_393B-_SETTRIGNORMAL@4
.L_393C:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+12]
	fsub dword ptr [ebx]
	fstp dword ptr [ebp-16]
.stabn 68,0,38,.L_393C-_SETTRIGNORMAL@4
.L_393D:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+16]
	fsub dword ptr [eax+4]
	fstp dword ptr [ebp-12]
.stabn 68,0,39,.L_393D-_SETTRIGNORMAL@4
.L_393E:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+20]
	fsub dword ptr [ebx+8]
	fstp dword ptr [ebp-8]
.stabn 68,0,40,.L_393E-_SETTRIGNORMAL@4
.L_393F:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+24]
	fsub dword ptr [eax]
	fstp dword ptr [ebp-64]
.stabn 68,0,42,.L_393F-_SETTRIGNORMAL@4
.L_3940:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+28]
	fsub dword ptr [ebx+4]
	fstp dword ptr [ebp-60]
.stabn 68,0,43,.L_3940-_SETTRIGNORMAL@4
.L_3941:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+32]
	fsub dword ptr [eax+8]
	fstp dword ptr [ebp-56]
.stabn 68,0,44,.L_3941-_SETTRIGNORMAL@4
.L_3942:
	lea eax, [ebp-112]
	push eax
	lea eax, [ebp-64]
	push eax
	lea eax, [ebp-16]
	push eax
	call _CROSSPRODUCT@12
.stabn 68,0,47,.L_3942-_SETTRIGNORMAL@4
.L_3943:
	lea eax, [ebp-112]
	push eax
	call _NORMALIZE@4
.stabn 68,0,50,.L_3943-_SETTRIGNORMAL@4
.L_3944:
	lea eax, [ebp-112]
	push eax
	call _glNormal3fv@4
.stabn 68,0,54,.L_3944-_SETTRIGNORMAL@4
.L_3945:
.L_3939:
.L_3933:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,56,.L_3933-_SETTRIGNORMAL@4
	.stabn 192,0,0,.L_3932-_SETTRIGNORMAL@4
	.stabs "EDGE1:169=ar1;0;2;11",128,0,0,-16
	.stabs "EDGE2:170=ar1;0;2;11",128,0,0,-64
	.stabs "NORMAL:171=ar1;0;2;11",128,0,0,-112
	.stabn 192,0,0,.L_3934-_SETTRIGNORMAL@4
	.stabn 224,0,0,.L_3939-_SETTRIGNORMAL@4
	.stabn 224,0,0,.L_3933-_SETTRIGNORMAL@4
.L_3946:
	.stabs "",36,0,0,.L_3946-_SETTRIGNORMAL@4
	.stabs "SETQUADNORMAL:F7",36,0,57,_SETQUADNORMAL@4
	.stabs "TQUAD:v115",160,0,0,8
.balign 16

.globl _SETQUADNORMAL@4
_SETQUADNORMAL@4:
	push ebp
	mov ebp, esp
	sub esp, 200
	push ebx
	.stabn 68,0,57,_SETQUADNORMAL@4-_SETQUADNORMAL@4
.L_3947:
.L_3955:
.L_3949:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,58,.L_3955-_SETQUADNORMAL@4
.L_3956:
	lea eax, [ebp-16]
	mov dword ptr [ebp-52], eax
	lea eax, [ebp-16]
	mov dword ptr [ebp-48], eax
	mov dword ptr [ebp-44], 12
	mov dword ptr [ebp-40], 4
	mov dword ptr [ebp-36], 1
	mov dword ptr [ebp-32], 49
	mov dword ptr [ebp-28], 3
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 2
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 12
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 3
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 2
	lea eax, [ebp-112]
	mov dword ptr [ebp-148], eax
	lea eax, [ebp-112]
	mov dword ptr [ebp-144], eax
	mov dword ptr [ebp-140], 12
	mov dword ptr [ebp-136], 4
	mov dword ptr [ebp-132], 1
	mov dword ptr [ebp-128], 49
	mov dword ptr [ebp-124], 3
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 2
	lea eax, [ebp-160]
	mov dword ptr [ebp-196], eax
	lea eax, [ebp-160]
	mov dword ptr [ebp-192], eax
	mov dword ptr [ebp-188], 12
	mov dword ptr [ebp-184], 4
	mov dword ptr [ebp-180], 1
	mov dword ptr [ebp-176], 49
	mov dword ptr [ebp-172], 3
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 2
.stabn 68,0,59,.L_3956-_SETQUADNORMAL@4
.L_3957:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+24]
	fsub dword ptr [ebx+36]
	fstp dword ptr [ebp-16]
.stabn 68,0,63,.L_3957-_SETQUADNORMAL@4
.L_3958:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+28]
	fsub dword ptr [eax+40]
	fstp dword ptr [ebp-12]
.stabn 68,0,64,.L_3958-_SETQUADNORMAL@4
.L_3959:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+32]
	fsub dword ptr [ebx+44]
	fstp dword ptr [ebp-8]
.stabn 68,0,65,.L_3959-_SETQUADNORMAL@4
.L_395A:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+12]
	fsub dword ptr [eax+36]
	fstp dword ptr [ebp-64]
.stabn 68,0,67,.L_395A-_SETQUADNORMAL@4
.L_395B:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+16]
	fsub dword ptr [ebx+40]
	fstp dword ptr [ebp-60]
.stabn 68,0,68,.L_395B-_SETQUADNORMAL@4
.L_395C:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+20]
	fsub dword ptr [eax+44]
	fstp dword ptr [ebp-56]
.stabn 68,0,69,.L_395C-_SETQUADNORMAL@4
.L_395D:
	lea eax, [ebp-112]
	push eax
	lea eax, [ebp-64]
	push eax
	lea eax, [ebp-16]
	push eax
	call _CROSSPRODUCT@12
.stabn 68,0,72,.L_395D-_SETQUADNORMAL@4
.L_395E:
	lea eax, [ebp-112]
	push eax
	call _NORMALIZE@4
.stabn 68,0,75,.L_395E-_SETQUADNORMAL@4
.L_395F:
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax]
	pop dword ptr [ebp-16]
.stabn 68,0,80,.L_395F-_SETQUADNORMAL@4
.L_3960:
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax+4]
	pop dword ptr [ebp-12]
.stabn 68,0,81,.L_3960-_SETQUADNORMAL@4
.L_3961:
	mov eax, dword ptr [ebp-4]
	fld dword ptr [_Lt_3954]
	fadd dword ptr [eax+8]
	fstp dword ptr [ebp-8]
.stabn 68,0,82,.L_3961-_SETQUADNORMAL@4
.L_3962:
	lea eax, [ebp-16]
	push eax
	lea eax, [ebp-112]
	push eax
	call _DOT_PRODUCT@8
	fstp dword ptr [ebp-200]
.stabn 68,0,83,.L_3962-_SETQUADNORMAL@4
.L_3963:
	fld dword ptr [ebp-200]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_3950
.L_3951:
.stabn 68,0,86,.L_3963-_SETQUADNORMAL@4
.L_3964:
	push dword ptr [ebp+8]
	call _SETTRIGNORMAL@4
.stabn 68,0,89,.L_3964-_SETQUADNORMAL@4
.L_3965:
	jmp .L_3948
.stabn 68,0,90,.L_3965-_SETQUADNORMAL@4
.L_3966:
.L_3952:
.L_3950:
.L_394F:
	lea eax, [ebp-112]
	push eax
	call _glNormal3fv@4
.stabn 68,0,94,.L_3966-_SETQUADNORMAL@4
.L_3967:
.L_3953:
.L_3948:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,97,.L_3948-_SETQUADNORMAL@4
	.stabn 192,0,0,.L_3947-_SETQUADNORMAL@4
	.stabs "EDGE1:172=ar1;0;2;11",128,0,0,-16
	.stabs "EDGE2:173=ar1;0;2;11",128,0,0,-64
	.stabs "NORMAL:174=ar1;0;2;11",128,0,0,-112
	.stabs "CC:175=ar1;0;2;11",128,0,0,-160
	.stabs "DOT:11",128,0,0,-200
	.stabn 192,0,0,.L_3949-_SETQUADNORMAL@4
	.stabn 192,0,0,.L_3951-_SETQUADNORMAL@4
	.stabn 224,0,0,.L_3952-_SETQUADNORMAL@4
	.stabn 224,0,0,.L_3953-_SETQUADNORMAL@4
	.stabn 224,0,0,.L_3948-_SETQUADNORMAL@4
.L_3968:
	.stabs "",36,0,0,.L_3968-_SETQUADNORMAL@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MATRIX.BAS",132,0,0,.L_3983
.L_3983:
	.stabs "PUSHANDMULTMATRIX:F16",36,0,37,_PUSHANDMULTMATRIX@4
	.stabs "PIN:p176=*11",160,0,0,8
.balign 16

.globl _PUSHANDMULTMATRIX@4
_PUSHANDMULTMATRIX@4:
	push ebp
	mov ebp, esp
	sub esp, 20
	push ebx
	.stabn 68,0,37,_PUSHANDMULTMATRIX@4-_PUSHANDMULTMATRIX@4
	mov byte ptr [ebp-4], 0
.L_396C:
.L_3984:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,38,.L_3984-_PUSHANDMULTMATRIX@4
.L_3985:
	inc dword ptr [_G_CURRENTMATRIX]
.stabn 68,0,39,.L_3985-_PUSHANDMULTMATRIX@4
.L_3986:
	cmp dword ptr [_G_CURRENTMATRIX], 1023
	jle .L_396F
.L_3970:
.stabn 68,0,40,.L_3986-_PUSHANDMULTMATRIX@4
.L_3987:
	push offset _Lt_3971
	call _puts
	add esp, 4
.stabn 68,0,41,.L_3987-_PUSHANDMULTMATRIX@4
.L_3988:
	mov byte ptr [ebp-4], 0
	jmp .L_396D
.stabn 68,0,42,.L_3988-_PUSHANDMULTMATRIX@4
.L_3989:
.L_3972:
.L_396F:
.L_396E:
	mov ebx, dword ptr [_G_CURRENTMATRIX]
	sal ebx, 6
	lea eax, [_TMATRIXSTACK+ebx]
	mov dword ptr [ebp-12], eax
.stabn 68,0,48,.L_3989-_PUSHANDMULTMATRIX@4
.L_398A:
.L_3973:
	mov dword ptr [ebp-16], 0
.L_3977:
.L_3978:
.stabn 68,0,49,.L_398A-_PUSHANDMULTMATRIX@4
.L_398B:
.L_3979:
	mov dword ptr [ebp-20], 0
.L_397D:
.L_397E:
.stabn 68,0,50,.L_398B-_PUSHANDMULTMATRIX@4
.L_398C:
	mov eax, dword ptr [ebp-16]
	sal eax, 2
	mov ebx, dword ptr [ebp-8]
	add ebx, eax
	mov eax, dword ptr [ebp-20]
	sal eax, 4
	mov ecx, dword ptr [ebp+8]
	add ecx, eax
	fld dword ptr [ecx]
	fmul dword ptr [ebx]
	mov ebx, dword ptr [ebp-16]
	sal ebx, 2
	mov ecx, dword ptr [ebp-8]
	add ecx, ebx
	mov ebx, dword ptr [ebp-20]
	sal ebx, 4
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	fld dword ptr [eax+4]
	fmul dword ptr [ecx+16]
	fxch st(1)
	faddp
	mov ecx, dword ptr [ebp-16]
	sal ecx, 2
	mov eax, dword ptr [ebp-8]
	add eax, ecx
	mov ecx, dword ptr [ebp-20]
	sal ecx, 4
	mov ebx, dword ptr [ebp+8]
	add ebx, ecx
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+32]
	fxch st(1)
	faddp
	mov eax, dword ptr [ebp-16]
	sal eax, 2
	mov ebx, dword ptr [ebp-8]
	add ebx, eax
	mov eax, dword ptr [ebp-20]
	sal eax, 4
	mov ecx, dword ptr [ebp+8]
	add ecx, eax
	fld dword ptr [ecx+12]
	fmul dword ptr [ebx+48]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-20]
	sal ebx, 2
	add ebx, dword ptr [ebp-16]
	sal ebx, 2
	mov ecx, dword ptr [ebp-12]
	add ecx, ebx
	fstp dword ptr [ecx]
.stabn 68,0,51,.L_398C-_PUSHANDMULTMATRIX@4
.L_398D:
.L_397F:
.L_397B:
	inc dword ptr [ebp-20]
.L_397A:
	cmp dword ptr [ebp-20], 3
	jle .L_397D
.L_397C:
.L_3980:
.stabn 68,0,56,.L_398D-_PUSHANDMULTMATRIX@4
.L_398E:
.L_3981:
.L_3975:
	inc dword ptr [ebp-16]
.L_3974:
	cmp dword ptr [ebp-16], 3
	jle .L_3977
.L_3976:
.L_3982:
.stabn 68,0,57,.L_398E-_PUSHANDMULTMATRIX@4
.L_398F:
	mov byte ptr [ebp-4], 1
.stabn 68,0,58,.L_398F-_PUSHANDMULTMATRIX@4
.L_3990:
.L_396D:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,59,.L_396D-_PUSHANDMULTMATRIX@4
	.stabs "PCUR:177=*11",128,0,0,-8
	.stabs "POUT:178=*11",128,0,0,-12
	.stabn 192,0,0,.L_396C-_PUSHANDMULTMATRIX@4
	.stabn 192,0,0,.L_3970-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_3972-_PUSHANDMULTMATRIX@4
	.stabs "ROW:1",128,0,0,-16
	.stabn 192,0,0,.L_3973-_PUSHANDMULTMATRIX@4
	.stabn 192,0,0,.L_3978-_PUSHANDMULTMATRIX@4
	.stabs "COL:1",128,0,0,-20
	.stabn 192,0,0,.L_3979-_PUSHANDMULTMATRIX@4
	.stabn 192,0,0,.L_397E-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_397F-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_3980-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_3981-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_3982-_PUSHANDMULTMATRIX@4
	.stabn 224,0,0,.L_396D-_PUSHANDMULTMATRIX@4
.L_3991:
	.stabs "",36,0,0,.L_3991-_PUSHANDMULTMATRIX@4
	.stabs "MULTCURRENTMATRIX:F16",36,0,60,_MULTCURRENTMATRIX@4
	.stabs "PIN:p179=*11",160,0,0,8
.balign 16

.globl _MULTCURRENTMATRIX@4
_MULTCURRENTMATRIX@4:
	push ebp
	mov ebp, esp
	sub esp, 20
	push ebx
	.stabn 68,0,60,_MULTCURRENTMATRIX@4-_MULTCURRENTMATRIX@4
	mov byte ptr [ebp-4], 0
.L_3992:
.L_39A8:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,61,.L_39A8-_MULTCURRENTMATRIX@4
.L_39A9:
	cmp dword ptr [_G_CURRENTMATRIX], 1023
	jl .L_3995
.L_3996:
.stabn 68,0,62,.L_39A9-_MULTCURRENTMATRIX@4
.L_39AA:
	push offset _Lt_3971
	call _puts
	add esp, 4
.stabn 68,0,63,.L_39AA-_MULTCURRENTMATRIX@4
.L_39AB:
	mov byte ptr [ebp-4], 0
	jmp .L_3993
.stabn 68,0,64,.L_39AB-_MULTCURRENTMATRIX@4
.L_39AC:
.L_3997:
.L_3995:
.L_3994:
	mov ebx, dword ptr [_G_CURRENTMATRIX]
	sal ebx, 6
	lea eax, [_TMATRIXSTACK+ebx+64]
	mov dword ptr [ebp-12], eax
.stabn 68,0,70,.L_39AC-_MULTCURRENTMATRIX@4
.L_39AD:
.L_3998:
	mov dword ptr [ebp-16], 0
.L_399C:
.L_399D:
.stabn 68,0,71,.L_39AD-_MULTCURRENTMATRIX@4
.L_39AE:
.L_399E:
	mov dword ptr [ebp-20], 0
.L_39A2:
.L_39A3:
.stabn 68,0,72,.L_39AE-_MULTCURRENTMATRIX@4
.L_39AF:
	mov eax, dword ptr [ebp-16]
	sal eax, 2
	mov ebx, dword ptr [ebp-8]
	add ebx, eax
	mov eax, dword ptr [ebp-20]
	sal eax, 4
	mov ecx, dword ptr [ebp+8]
	add ecx, eax
	fld dword ptr [ecx]
	fmul dword ptr [ebx]
	mov ebx, dword ptr [ebp-16]
	sal ebx, 2
	mov ecx, dword ptr [ebp-8]
	add ecx, ebx
	mov ebx, dword ptr [ebp-20]
	sal ebx, 4
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	fld dword ptr [eax+4]
	fmul dword ptr [ecx+16]
	fxch st(1)
	faddp
	mov ecx, dword ptr [ebp-16]
	sal ecx, 2
	mov eax, dword ptr [ebp-8]
	add eax, ecx
	mov ecx, dword ptr [ebp-20]
	sal ecx, 4
	mov ebx, dword ptr [ebp+8]
	add ebx, ecx
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+32]
	fxch st(1)
	faddp
	mov eax, dword ptr [ebp-16]
	sal eax, 2
	mov ebx, dword ptr [ebp-8]
	add ebx, eax
	mov eax, dword ptr [ebp-20]
	sal eax, 4
	mov ecx, dword ptr [ebp+8]
	add ecx, eax
	fld dword ptr [ecx+12]
	fmul dword ptr [ebx+48]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-20]
	sal ebx, 2
	add ebx, dword ptr [ebp-16]
	sal ebx, 2
	mov ecx, dword ptr [ebp-12]
	add ecx, ebx
	fstp dword ptr [ecx]
.stabn 68,0,73,.L_39AF-_MULTCURRENTMATRIX@4
.L_39B0:
.L_39A4:
.L_39A0:
	inc dword ptr [ebp-20]
.L_399F:
	cmp dword ptr [ebp-20], 3
	jle .L_39A2
.L_39A1:
.L_39A5:
.stabn 68,0,78,.L_39B0-_MULTCURRENTMATRIX@4
.L_39B1:
.L_39A6:
.L_399A:
	inc dword ptr [ebp-16]
.L_3999:
	cmp dword ptr [ebp-16], 3
	jle .L_399C
.L_399B:
.L_39A7:
.stabn 68,0,79,.L_39B1-_MULTCURRENTMATRIX@4
.L_39B2:
	push 64
	push dword ptr [ebp-12]
	push dword ptr [ebp-8]
	call _memcpy
	add esp, 12
.stabn 68,0,81,.L_39B2-_MULTCURRENTMATRIX@4
.L_39B3:
	mov byte ptr [ebp-4], 1
.stabn 68,0,82,.L_39B3-_MULTCURRENTMATRIX@4
.L_39B4:
.L_3993:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,84,.L_3993-_MULTCURRENTMATRIX@4
	.stabs "PCUR:180=*11",128,0,0,-8
	.stabs "POUT:181=*11",128,0,0,-12
	.stabn 192,0,0,.L_3992-_MULTCURRENTMATRIX@4
	.stabn 192,0,0,.L_3996-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_3997-_MULTCURRENTMATRIX@4
	.stabs "ROW:1",128,0,0,-16
	.stabn 192,0,0,.L_3998-_MULTCURRENTMATRIX@4
	.stabn 192,0,0,.L_399D-_MULTCURRENTMATRIX@4
	.stabs "COL:1",128,0,0,-20
	.stabn 192,0,0,.L_399E-_MULTCURRENTMATRIX@4
	.stabn 192,0,0,.L_39A3-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_39A4-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_39A5-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_39A6-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_39A7-_MULTCURRENTMATRIX@4
	.stabn 224,0,0,.L_3993-_MULTCURRENTMATRIX@4
.L_39B5:
	.stabs "",36,0,0,.L_39B5-_MULTCURRENTMATRIX@4
	.stabs "PUSHIDENTITYMATRIX:F7",36,0,85,_PUSHIDENTITYMATRIX@0
.balign 16

.globl _PUSHIDENTITYMATRIX@0
_PUSHIDENTITYMATRIX@0:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,85,_PUSHIDENTITYMATRIX@0-_PUSHIDENTITYMATRIX@0
.L_39B6:
.L_39B8:
	inc dword ptr [_G_CURRENTMATRIX]
.stabn 68,0,86,.L_39B8-_PUSHIDENTITYMATRIX@0
.L_39B9:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	push edi
	push esi
	mov edi, ebx
	mov esi, offset _G_TIDENTITYMATRIX
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
.stabn 68,0,87,.L_39B9-_PUSHIDENTITYMATRIX@0
.L_39BA:
.L_39B7:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,88,.L_39B7-_PUSHIDENTITYMATRIX@0
	.stabn 192,0,0,.L_39B6-_PUSHIDENTITYMATRIX@0
	.stabn 224,0,0,.L_39B7-_PUSHIDENTITYMATRIX@0
.L_39BB:
	.stabs "",36,0,0,.L_39BB-_PUSHIDENTITYMATRIX@0
	.stabs "POPMATRIX:F7",36,0,89,_POPMATRIX@0
.balign 16

.globl _POPMATRIX@0
_POPMATRIX@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,89,_POPMATRIX@0-_POPMATRIX@0
.L_39BC:
.L_39C2:
	cmp dword ptr [_G_CURRENTMATRIX], 0
	jle .L_39BF
.L_39C0:
	dec dword ptr [_G_CURRENTMATRIX]
.L_39BF:
.L_39C1:
.stabn 68,0,90,.L_39C2-_POPMATRIX@0
.L_39C3:
.L_39BD:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,91,.L_39BD-_POPMATRIX@0
	.stabn 192,0,0,.L_39BC-_POPMATRIX@0
	.stabn 192,0,0,.L_39C0-_POPMATRIX@0
	.stabn 224,0,0,.L_39C1-_POPMATRIX@0
	.stabn 224,0,0,.L_39BD-_POPMATRIX@0
.L_39C4:
	.stabs "",36,0,0,.L_39C4-_POPMATRIX@0
	.stabs "MULTIPLYMATRIXVECTOR:F7",36,0,92,_MULTIPLYMATRIXVECTOR@8
	.stabs "PVEC:p182=*11",160,0,0,8
	.stabs "MATRIX4X4:Tt184=s64M:185=ar1;0;15;11,0,512;FSCALEX:11,0,32;F_1:11,32,32;F_2:11,64,32;F0_3:11,96,32;F_4:11,128,32;FSCALEY:11,160,32;F_6:11,192,32;F0_7:11,224,32;F_8:11,256,32;F_9:11,288,32;FSCALEZ:11,320,32;F0_11:11,352,32;FPOSX:11,384,32;FPOSY:11,416,32;FPOSZ:11,448,32;F1_15:11,480,32;;",128,0,0,0
	.stabs "PMATRIX:p183=*184",160,0,0,12
.balign 16

.globl _MULTIPLYMATRIXVECTOR@8
_MULTIPLYMATRIXVECTOR@8:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,92,_MULTIPLYMATRIXVECTOR@8-_MULTIPLYMATRIXVECTOR@8
.L_39C5:
.L_39CE:
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	pop dword ptr [ebp-4]
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax+4]
	pop dword ptr [ebp-8]
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax+8]
	pop dword ptr [ebp-12]
.stabn 68,0,93,.L_39CE-_MULTIPLYMATRIXVECTOR@8
.L_39CF:
	cmp dword ptr [ebp+12], 0
	jne .L_39C8
.L_39C9:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	mov dword ptr [ebp+12], ebx
.L_39C8:
.L_39CA:
.stabn 68,0,94,.L_39CF-_MULTIPLYMATRIXVECTOR@8
.L_39D0:
.L_39CB:
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,95,.L_39D0-_MULTIPLYMATRIXVECTOR@8
.L_39D1:
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-4]
	fmul dword ptr [ebx]
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-8]
	fmul dword ptr [ebx+16]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-12]
	fmul dword ptr [ebx+32]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fadd dword ptr [ebx+48]
	mov ebx, dword ptr [ebp+8]
	fstp dword ptr [ebx]
.stabn 68,0,96,.L_39D1-_MULTIPLYMATRIXVECTOR@8
.L_39D2:
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-4]
	fmul dword ptr [ebx+4]
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-8]
	fmul dword ptr [ebx+20]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-12]
	fmul dword ptr [ebx+36]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fadd dword ptr [ebx+52]
	mov ebx, dword ptr [ebp+8]
	fstp dword ptr [ebx+4]
.stabn 68,0,97,.L_39D2-_MULTIPLYMATRIXVECTOR@8
.L_39D3:
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-4]
	fmul dword ptr [ebx+8]
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-8]
	fmul dword ptr [ebx+24]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fld dword ptr [ebp-12]
	fmul dword ptr [ebx+40]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-16]
	fadd dword ptr [ebx+56]
	mov ebx, dword ptr [ebp+8]
	fstp dword ptr [ebx+8]
.stabn 68,0,98,.L_39D3-_MULTIPLYMATRIXVECTOR@8
.L_39D4:
.L_39CD:
.L_39C6:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,100,.L_39C6-_MULTIPLYMATRIXVECTOR@8
	.stabs "FX:11",128,0,0,-4
	.stabs "FY:11",128,0,0,-8
	.stabs "FZ:11",128,0,0,-12
	.stabn 192,0,0,.L_39C5-_MULTIPLYMATRIXVECTOR@8
	.stabn 192,0,0,.L_39C9-_MULTIPLYMATRIXVECTOR@8
	.stabn 224,0,0,.L_39CA-_MULTIPLYMATRIXVECTOR@8
	.stabn 192,0,0,.L_39CB-_MULTIPLYMATRIXVECTOR@8
	.stabn 224,0,0,.L_39CD-_MULTIPLYMATRIXVECTOR@8
	.stabn 224,0,0,.L_39C6-_MULTIPLYMATRIXVECTOR@8
.L_39D5:
	.stabs "",36,0,0,.L_39D5-_MULTIPLYMATRIXVECTOR@8
	.stabs "ISMATRIXIDENTITY:F16",36,0,101,_ISMATRIXIDENTITY@0
.balign 16

.globl _ISMATRIXIDENTITY@0
_ISMATRIXIDENTITY@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,101,_ISMATRIXIDENTITY@0-_ISMATRIXIDENTITY@0
	mov byte ptr [ebp-4], 0
.L_39D6:
.L_39E8:
.L_39D8:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,102,.L_39E8-_ISMATRIXIDENTITY@0
.L_39E9:
.L_39DA:
	mov dword ptr [ebp-12], 0
.L_39DE:
.L_39DF:
.stabn 68,0,103,.L_39E9-_ISMATRIXIDENTITY@0
.L_39EA:
	mov ebx, dword ptr [ebp-12]
	sal ebx, 2
	mov eax, dword ptr [ebp-8]
	add eax, ebx
	mov ebx, dword ptr [ebp-12]
	sal ebx, 2
	mov ecx, offset _G_TIDENTITYMATRIX
	add ecx, ebx
	fld dword ptr [eax]
	fsub dword ptr [ecx]
	fabs
	fld qword ptr [_Lt_39E7]
	fcomip st, st(1)
	fstp st(0)
	jae .L_39E1
.L_39E2:
	mov byte ptr [ebp-4], 0
	jmp .L_39D7
.L_39E1:
.L_39E3:
.stabn 68,0,104,.L_39EA-_ISMATRIXIDENTITY@0
.L_39EB:
.L_39E4:
.L_39DC:
	inc dword ptr [ebp-12]
.L_39DB:
	cmp dword ptr [ebp-12], 15
	jle .L_39DE
.L_39DD:
.L_39E5:
.stabn 68,0,105,.L_39EB-_ISMATRIXIDENTITY@0
.L_39EC:
.L_39E6:
	mov byte ptr [ebp-4], 1
.stabn 68,0,107,.L_39EC-_ISMATRIXIDENTITY@0
.L_39ED:
.L_39D7:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,108,.L_39D7-_ISMATRIXIDENTITY@0
	.stabn 192,0,0,.L_39D6-_ISMATRIXIDENTITY@0
	.stabn 192,0,0,.L_39D8-_ISMATRIXIDENTITY@0
	.stabs "N:1",128,0,0,-12
	.stabn 192,0,0,.L_39DA-_ISMATRIXIDENTITY@0
	.stabn 192,0,0,.L_39DF-_ISMATRIXIDENTITY@0
	.stabn 192,0,0,.L_39E2-_ISMATRIXIDENTITY@0
	.stabn 224,0,0,.L_39E3-_ISMATRIXIDENTITY@0
	.stabn 224,0,0,.L_39E4-_ISMATRIXIDENTITY@0
	.stabn 224,0,0,.L_39E5-_ISMATRIXIDENTITY@0
	.stabn 224,0,0,.L_39E6-_ISMATRIXIDENTITY@0
	.stabn 224,0,0,.L_39D7-_ISMATRIXIDENTITY@0
.L_39EE:
	.stabs "",36,0,0,.L_39EE-_ISMATRIXIDENTITY@0
	.stabs "MULTMATRIX4X4WITHVECTOR3X3:F7",36,0,110,_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabs "TMOUT:v184",160,0,0,8
	.stabs "TMIN:v184",160,0,0,12
	.stabs "PIN:p186=*11",160,0,0,16
.balign 16

.globl _MULTMATRIX4X4WITHVECTOR3X3@12
_MULTMATRIX4X4WITHVECTOR3X3@12:
	push ebp
	mov ebp, esp
	sub esp, 80
	push ebx
	.stabn 68,0,110,_MULTMATRIX4X4WITHVECTOR3X3@12-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_39EF:
.L_3A05:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-4], eax
.stabn 68,0,111,.L_3A05-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A06:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-8], eax
.stabn 68,0,112,.L_3A06-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A07:
	mov eax, dword ptr [ebp-4]
	cmp dword ptr [ebp-8], eax
	jne .L_39F2
.L_39F3:
	lea eax, [ebp-72]
	push edi
	push esi
	mov edi, eax
	mov esi, dword ptr [ebp+12]
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
	lea eax, [ebp-72]
	mov dword ptr [ebp-4], eax
.L_39F2:
.L_39F4:
.stabn 68,0,116,.L_3A07-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A08:
.L_39F5:
	mov dword ptr [ebp-76], 0
.L_39F9:
.L_39FA:
.stabn 68,0,118,.L_3A08-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A09:
.L_39FB:
	mov dword ptr [ebp-80], 0
.L_39FF:
.L_3A00:
.stabn 68,0,119,.L_3A09-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A0A:
	mov eax, dword ptr [ebp-76]
	sal eax, 2
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	mov eax, dword ptr [ebp-80]
	sal eax, 4
	mov ecx, dword ptr [ebp+16]
	add ecx, eax
	fld dword ptr [ecx]
	fmul dword ptr [ebx]
	mov ebx, dword ptr [ebp-76]
	sal ebx, 2
	mov ecx, dword ptr [ebp-4]
	add ecx, ebx
	mov ebx, dword ptr [ebp-80]
	sal ebx, 4
	mov eax, dword ptr [ebp+16]
	add eax, ebx
	fld dword ptr [eax+4]
	fmul dword ptr [ecx+16]
	fxch st(1)
	faddp
	mov ecx, dword ptr [ebp-76]
	sal ecx, 2
	mov eax, dword ptr [ebp-4]
	add eax, ecx
	mov ecx, dword ptr [ebp-80]
	sal ecx, 4
	mov ebx, dword ptr [ebp+16]
	add ebx, ecx
	fld dword ptr [ebx+8]
	fmul dword ptr [eax+32]
	fxch st(1)
	faddp
	mov eax, dword ptr [ebp-76]
	sal eax, 2
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	mov eax, dword ptr [ebp-80]
	sal eax, 4
	mov ecx, dword ptr [ebp+16]
	add ecx, eax
	fld dword ptr [ecx+12]
	fmul dword ptr [ebx+48]
	fxch st(1)
	faddp
	mov ebx, dword ptr [ebp-80]
	sal ebx, 2
	add ebx, dword ptr [ebp-76]
	sal ebx, 2
	mov ecx, dword ptr [ebp-8]
	add ecx, ebx
	fstp dword ptr [ecx]
.stabn 68,0,120,.L_3A0A-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A0B:
.L_3A01:
.L_39FD:
	inc dword ptr [ebp-80]
.L_39FC:
	cmp dword ptr [ebp-80], 3
	jle .L_39FF
.L_39FE:
.L_3A02:
.stabn 68,0,125,.L_3A0B-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A0C:
.L_3A03:
.L_39F7:
	inc dword ptr [ebp-76]
.L_39F6:
	cmp dword ptr [ebp-76], 3
	jle .L_39F9
.L_39F8:
.L_3A04:
.stabn 68,0,126,.L_3A0C-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A0D:
.L_39F0:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,128,.L_39F0-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabs "PCUR:187=*11",128,0,0,-4
	.stabs "POUT:188=*11",128,0,0,-8
	.stabs "TTEMPIN:184",128,0,0,-72
	.stabn 192,0,0,.L_39EF-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 192,0,0,.L_39F3-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_39F4-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabs "ROW:1",128,0,0,-76
	.stabn 192,0,0,.L_39F5-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 192,0,0,.L_39FA-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabs "COL:1",128,0,0,-80
	.stabn 192,0,0,.L_39FB-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 192,0,0,.L_3A00-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_3A01-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_3A02-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_3A03-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_3A04-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabn 224,0,0,.L_39F0-_MULTMATRIX4X4WITHVECTOR3X3@12
.L_3A0E:
	.stabs "",36,0,0,.L_3A0E-_MULTMATRIX4X4WITHVECTOR3X3@12
	.stabs "MATRIXROTATEX:F7",36,0,131,_MATRIXROTATEX@12
	.stabs "TMOUT:v184",160,0,0,8
	.stabs "TMIN:v184",160,0,0,12
	.stabs "FANGLE:p11",160,0,0,16
.balign 16

.globl _MATRIXROTATEX@12
_MATRIXROTATEX@12:
	push ebp
	mov ebp, esp
	sub esp, 100
	.stabn 68,0,131,_MATRIXROTATEX@12-_MATRIXROTATEX@12
.L_3A0F:
.L_3A12:
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 64
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 16
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 15
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-64]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-60]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-56]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-52]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-48]
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-44]
	fld dword ptr [ebp+16]
	fsin
	fstp dword ptr [ebp-40]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-36]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-32]
	fld dword ptr [ebp+16]
	fsin
	fchs
	fstp dword ptr [ebp-28]
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-24]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-20]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-16]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-12]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-8]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-4]
.stabn 68,0,132,.L_3A12-_MATRIXROTATEX@12
.L_3A13:
	lea eax, [ebp-64]
	push eax
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _MULTMATRIX4X4WITHVECTOR3X3@12
.stabn 68,0,138,.L_3A13-_MATRIXROTATEX@12
.L_3A14:
.L_3A10:
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,139,.L_3A10-_MATRIXROTATEX@12
	.stabs "SMAT:189=ar1;0;15;11",128,0,0,-64
	.stabn 192,0,0,.L_3A0F-_MATRIXROTATEX@12
	.stabn 224,0,0,.L_3A10-_MATRIXROTATEX@12
.L_3A15:
	.stabs "",36,0,0,.L_3A15-_MATRIXROTATEX@12
	.stabs "MATRIXROTATEY:F7",36,0,140,_MATRIXROTATEY@12
	.stabs "TMOUT:v184",160,0,0,8
	.stabs "TMIN:v184",160,0,0,12
	.stabs "FANGLE:p11",160,0,0,16
.balign 16

.globl _MATRIXROTATEY@12
_MATRIXROTATEY@12:
	push ebp
	mov ebp, esp
	sub esp, 100
	.stabn 68,0,140,_MATRIXROTATEY@12-_MATRIXROTATEY@12
.L_3A16:
.L_3A19:
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 64
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 16
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 15
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-64]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-60]
	fld dword ptr [ebp+16]
	fsin
	fchs
	fstp dword ptr [ebp-56]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-52]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-48]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-44]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-40]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-36]
	fld dword ptr [ebp+16]
	fsin
	fstp dword ptr [ebp-32]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-28]
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-24]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-20]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-16]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-12]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-8]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-4]
.stabn 68,0,141,.L_3A19-_MATRIXROTATEY@12
.L_3A1A:
	lea eax, [ebp-64]
	push eax
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _MULTMATRIX4X4WITHVECTOR3X3@12
.stabn 68,0,147,.L_3A1A-_MATRIXROTATEY@12
.L_3A1B:
.L_3A17:
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,148,.L_3A17-_MATRIXROTATEY@12
	.stabs "SMAT:190=ar1;0;15;11",128,0,0,-64
	.stabn 192,0,0,.L_3A16-_MATRIXROTATEY@12
	.stabn 224,0,0,.L_3A17-_MATRIXROTATEY@12
.L_3A1C:
	.stabs "",36,0,0,.L_3A1C-_MATRIXROTATEY@12
	.stabs "MATRIXROTATEZ:F7",36,0,149,_MATRIXROTATEZ@12
	.stabs "TMOUT:v184",160,0,0,8
	.stabs "TMIN:v184",160,0,0,12
	.stabs "FANGLE:p11",160,0,0,16
.balign 16

.globl _MATRIXROTATEZ@12
_MATRIXROTATEZ@12:
	push ebp
	mov ebp, esp
	sub esp, 100
	.stabn 68,0,149,_MATRIXROTATEZ@12-_MATRIXROTATEZ@12
.L_3A1D:
.L_3A20:
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 64
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 16
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 15
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-64]
	fld dword ptr [ebp+16]
	fsin
	fchs
	fstp dword ptr [ebp-60]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-56]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-52]
	fld dword ptr [ebp+16]
	fsin
	fstp dword ptr [ebp-48]
	fld dword ptr [ebp+16]
	fcos
	fstp dword ptr [ebp-44]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-40]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-36]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-32]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-28]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-24]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-20]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-16]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-12]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-8]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-4]
.stabn 68,0,150,.L_3A20-_MATRIXROTATEZ@12
.L_3A21:
	lea eax, [ebp-64]
	push eax
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _MULTMATRIX4X4WITHVECTOR3X3@12
.stabn 68,0,156,.L_3A21-_MATRIXROTATEZ@12
.L_3A22:
.L_3A1E:
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,157,.L_3A1E-_MATRIXROTATEZ@12
	.stabs "SMAT:191=ar1;0;15;11",128,0,0,-64
	.stabn 192,0,0,.L_3A1D-_MATRIXROTATEZ@12
	.stabn 224,0,0,.L_3A1E-_MATRIXROTATEZ@12
.L_3A23:
	.stabs "",36,0,0,.L_3A23-_MATRIXROTATEZ@12
	.stabs "PRINTCURRENTMATRIX:F7",36,0,159,_PRINTCURRENTMATRIX@0
.balign 16

.globl _PRINTCURRENTMATRIX@0
_PRINTCURRENTMATRIX@0:
	push ebp
	mov ebp, esp
	sub esp, 28
	push ebx
	.stabn 68,0,159,_PRINTCURRENTMATRIX@0-_PRINTCURRENTMATRIX@0
.L_3A24:
.L_3A3C:
.L_3A26:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,160,.L_3A3C-_PRINTCURRENTMATRIX@0
.L_3A3D:
	mov ebx, dword ptr [ebp-4]
	lea eax, [ebx]
	mov dword ptr [ebp-8], eax
.stabn 68,0,161,.L_3A3D-_PRINTCURRENTMATRIX@0
.L_3A3E:
.L_3A28:
	mov dword ptr [ebp-12], 0
.L_3A2C:
.L_3A2D:
.stabn 68,0,162,.L_3A3E-_PRINTCURRENTMATRIX@0
.L_3A3F:
.L_3A2E:
	mov dword ptr [ebp-16], 0
.L_3A32:
.L_3A33:
.stabn 68,0,163,.L_3A3F-_PRINTCURRENTMATRIX@0
.L_3A40:
	mov eax, dword ptr [ebp-8]
	fld dword ptr [eax]
	sub esp,8
	fstp qword ptr [esp]
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	push 0
	push -1
	mov eax, dword ptr [ebp-8]
	fld dword ptr [eax]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	setbe al
	shr eax, 1
	sbb eax, eax
	neg eax
	inc eax
	mov ebx, dword ptr [ebp-8]
	fld dword ptr [ebx]
	fabs
	fld dword ptr [_Lt_3A3B]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	sub eax, ebx
	push eax
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-28]
	push offset _Lt_3A34
	call _printf
	add esp, 16
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	add dword ptr [ebp-8], 4
.stabn 68,0,164,.L_3A40-_PRINTCURRENTMATRIX@0
.L_3A43:
.L_3A36:
.L_3A30:
	inc dword ptr [ebp-16]
.L_3A2F:
	cmp dword ptr [ebp-16], 3
	jle .L_3A32
.L_3A31:
.L_3A37:
.stabn 68,0,165,.L_3A43-_PRINTCURRENTMATRIX@0
.L_3A44:
	push offset _Lt_0000
	call _puts
	add esp, 4
.stabn 68,0,166,.L_3A44-_PRINTCURRENTMATRIX@0
.L_3A45:
.L_3A38:
.L_3A2A:
	inc dword ptr [ebp-12]
.L_3A29:
	cmp dword ptr [ebp-12], 3
	jle .L_3A2C
.L_3A2B:
.L_3A39:
.stabn 68,0,167,.L_3A45-_PRINTCURRENTMATRIX@0
.L_3A46:
.L_3A3A:
.L_3A25:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,169,.L_3A25-_PRINTCURRENTMATRIX@0
	.stabn 192,0,0,.L_3A24-_PRINTCURRENTMATRIX@0
	.stabs "PMAT:192=*11",128,0,0,-8
	.stabn 192,0,0,.L_3A26-_PRINTCURRENTMATRIX@0
	.stabs "Y:1",128,0,0,-12
	.stabn 192,0,0,.L_3A28-_PRINTCURRENTMATRIX@0
	.stabn 192,0,0,.L_3A2D-_PRINTCURRENTMATRIX@0
	.stabs "X:1",128,0,0,-16
	.stabn 192,0,0,.L_3A2E-_PRINTCURRENTMATRIX@0
	.stabn 192,0,0,.L_3A33-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A36-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A37-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A38-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A39-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A3A-_PRINTCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A25-_PRINTCURRENTMATRIX@0
.L_3A47:
	.stabs "",36,0,0,.L_3A47-_PRINTCURRENTMATRIX@0
	.stabs "GLLOADCURRENTMATRIX:F7",36,0,172,_GLLOADCURRENTMATRIX@0
.balign 16

.globl _GLLOADCURRENTMATRIX@0
_GLLOADCURRENTMATRIX@0:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,172,_GLLOADCURRENTMATRIX@0-_GLLOADCURRENTMATRIX@0
.L_3A48:
.L_3A4A:
	mov eax, dword ptr [_G_CURRENTMATRIX]
	sal eax, 6
	lea ebx, [_TMATRIXSTACK+eax]
	push ebx
	call _glMultMatrixf@4
.stabn 68,0,175,.L_3A4A-_GLLOADCURRENTMATRIX@0
.L_3A4B:
.L_3A49:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,176,.L_3A49-_GLLOADCURRENTMATRIX@0
	.stabn 192,0,0,.L_3A48-_GLLOADCURRENTMATRIX@0
	.stabn 224,0,0,.L_3A49-_GLLOADCURRENTMATRIX@0
.L_3A4C:
	.stabs "",36,0,0,.L_3A4C-_GLLOADCURRENTMATRIX@0
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MODEL.BAS",132,0,0,.L_3A88
.L_3A88:
	.stabs "GETSUBPARTTYPE:F1",36,0,14,_GETSUBPARTTYPE@8
	.stabs "SPARTNAME:v13",160,0,0,8
	.stabs "BDEBUG:p16",160,0,0,12
.balign 16

.globl _GETSUBPARTTYPE@8
_GETSUBPARTTYPE@8:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,14,_GETSUBPARTTYPE@8-_GETSUBPARTTYPE@8
	mov dword ptr [ebp-4], 0
.L_3A4D:
.L_3A89:
	push 0
	push -1
	push 0
	push dword ptr [ebp+8]
	call _fb_StrLcase2@8
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrInit@20
.stabn 68,0,16,.L_3A89-_GETSUBPARTTYPE@8
.L_3A8A:
	push 4
	push offset _Lt_3A4F
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-20], eax
.stabn 68,0,17,.L_3A8A-_GETSUBPARTTYPE@8
.L_3A8B:
	push 4
	push offset _Lt_3A4F
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_3A51
.L_3A52:
.stabn 68,0,18,.L_3A8B-_GETSUBPARTTYPE@8
.L_3A8C:
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-20]
	movzx ebx, byte ptr [eax+4]
	cmp ebx, 46
	jne .L_3A54
.L_3A55:
.stabn 68,0,19,.L_3A8C-_GETSUBPARTTYPE@8
.L_3A8D:
.L_3A56:
	mov ebx, dword ptr [ebp-16]
	add ebx, dword ptr [ebp-20]
	mov al, byte ptr [ebx+3]
	mov byte ptr [ebp-32], al
.stabn 68,0,21,.L_3A8D-_GETSUBPARTTYPE@8
.L_3A8E:
	movzx eax, byte ptr [ebp-32]
	cmp eax, 51
	je .L_3A5E
.L_3A5F:
	movzx eax, byte ptr [ebp-32]
	cmp eax, 52
	je .L_3A5E
.L_3A60:
	movzx eax, byte ptr [ebp-32]
	cmp eax, 53
	je .L_3A5E
.L_3A61:
	movzx eax, byte ptr [ebp-32]
	cmp eax, 56
	jne .L_3A59
.L_3A5E:
.L_3A62:
.stabn 68,0,22,.L_3A8E-_GETSUBPARTTYPE@8
.L_3A8F:
	cmp byte ptr [ebp+12], 0
	je .L_3A64
.L_3A65:
	push offset _Lt_3A67
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	push offset _Lt_3A66
	call _printf
	add esp, 12
.L_3A64:
.L_3A68:
.stabn 68,0,23,.L_3A8F-_GETSUBPARTTYPE@8
.L_3A90:
	mov dword ptr [ebp-4], 2
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_3A4E
.stabn 68,0,24,.L_3A90-_GETSUBPARTTYPE@8
.L_3A91:
.L_3A69:
.L_3A59:
.L_3A57:
.L_3A6A:
.L_3A6B:
.L_3A54:
.L_3A53:
	push 4
	push offset _Lt_3A6C
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	jne .L_3A6E
	push 3
	push offset _Lt_3A6D
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-24], eax
	jmp .L_3A86
.L_3A6E:
	mov dword ptr [ebp-24], -1
.L_3A86:
	cmp dword ptr [ebp-24], 0
	jne .L_3A71
	push 3
	push offset _Lt_3A70
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-28], eax
	jmp .L_3A87
.L_3A71:
	mov dword ptr [ebp-28], -1
.L_3A87:
	cmp dword ptr [ebp-28], 0
	je .L_3A74
.L_3A75:
.stabn 68,0,27,.L_3A91-_GETSUBPARTTYPE@8
.L_3A94:
	cmp byte ptr [ebp+12], 0
	je .L_3A77
.L_3A78:
	push offset _Lt_3A67
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	push offset _Lt_3A66
	call _printf
	add esp, 12
.L_3A77:
.L_3A79:
.stabn 68,0,29,.L_3A94-_GETSUBPARTTYPE@8
.L_3A95:
	mov dword ptr [ebp-4], 2
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_3A4E
.stabn 68,0,30,.L_3A95-_GETSUBPARTTYPE@8
.L_3A96:
.L_3A7A:
.L_3A74:
.L_3A73:
	cmp byte ptr [ebp+12], 0
	je .L_3A7C
.L_3A7D:
	push offset _Lt_3A7E
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	push offset _Lt_3A66
	call _printf
	add esp, 12
.L_3A7C:
.L_3A7F:
.stabn 68,0,33,.L_3A96-_GETSUBPARTTYPE@8
.L_3A97:
	mov dword ptr [ebp-4], 1
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_3A4E
.stabn 68,0,34,.L_3A97-_GETSUBPARTTYPE@8
.L_3A98:
.L_3A80:
.L_3A51:
.L_3A50:
	push 5
	push offset _Lt_3A81
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-16]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_3A83
.L_3A84:
.stabn 68,0,36,.L_3A98-_GETSUBPARTTYPE@8
.L_3A99:
	mov dword ptr [ebp-4], 3
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_3A4E
.stabn 68,0,37,.L_3A99-_GETSUBPARTTYPE@8
.L_3A9A:
.L_3A85:
.L_3A83:
.L_3A82:
	mov dword ptr [ebp-4], 0
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_3A4E
.stabn 68,0,39,.L_3A9A-_GETSUBPARTTYPE@8
.L_3A9B:
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
.L_3A4E:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,40,.L_3A4E-_GETSUBPARTTYPE@8
	.stabs "SL:13",128,0,0,-16
	.stabs "IPOS:1",128,0,0,-20
	.stabn 192,0,0,.L_3A4D-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A52-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A55-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A56-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A62-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A65-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A68-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A69-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A6A-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A6B-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A75-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A78-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A79-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A7A-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A7D-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A7F-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A80-_GETSUBPARTTYPE@8
	.stabn 192,0,0,.L_3A84-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A85-_GETSUBPARTTYPE@8
	.stabn 224,0,0,.L_3A4E-_GETSUBPARTTYPE@8
.L_3A9C:
	.stabs "",36,0,0,.L_3A9C-_GETSUBPARTTYPE@8
	.stabs "GETPARTNAMEBYINDEX:F13",36,0,41,_GETPARTNAMEBYINDEX@4
	.stabs "IINDEX:p1",160,0,0,8
.balign 16

.globl _GETPARTNAMEBYINDEX@4
_GETPARTNAMEBYINDEX@4:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,41,_GETPARTNAMEBYINDEX@4-_GETPARTNAMEBYINDEX@4
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_3A9D:
.L_3AA6:
	mov eax, dword ptr [ebp+8]
	test eax, eax
	setl al
	shr eax, 1
	sbb eax, eax
	mov ebx, dword ptr [ebp+8]
	cmp ebx, dword ptr [_G_MODELCOUNT]
	setge bl
	shr ebx, 1
	sbb ebx, ebx
	or eax, ebx
	je .L_3AA0
.L_3AA1:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrInit@20
	jmp .L_3A9E
.L_3AA0:
.L_3AA2:
.stabn 68,0,42,.L_3AA6-_GETPARTNAMEBYINDEX@4
.L_3AA9:
.L_3AA3:
	mov ebx, dword ptr [ebp+8]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	lea eax, [ebx]
	mov dword ptr [ebp-16], eax
.stabn 68,0,43,.L_3AA9-_GETPARTNAMEBYINDEX@4
.L_3AAA:
	push 0
	push 0
	mov eax, dword ptr [ebp-16]
	mov ebx, dword ptr [_G_SFILENAMES]
	add ebx, dword ptr [eax]
	add ebx, 6
	push ebx
	push -1
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,44,.L_3AAA-_GETPARTNAMEBYINDEX@4
.L_3AAB:
.L_3AA5:
.L_3A9E:
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrAllocTempResult@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,46,.L_3A9E-_GETPARTNAMEBYINDEX@4
	.stabn 192,0,0,.L_3A9D-_GETPARTNAMEBYINDEX@4
	.stabn 192,0,0,.L_3AA1-_GETPARTNAMEBYINDEX@4
	.stabn 224,0,0,.L_3AA2-_GETPARTNAMEBYINDEX@4
	.stabn 192,0,0,.L_3AA3-_GETPARTNAMEBYINDEX@4
	.stabn 224,0,0,.L_3AA5-_GETPARTNAMEBYINDEX@4
	.stabn 224,0,0,.L_3A9E-_GETPARTNAMEBYINDEX@4
.L_3AAC:
	.stabs "",36,0,0,.L_3AAC-_GETPARTNAMEBYINDEX@4
	.stabs "GETPARTNAME:F13",36,0,47,_GETPARTNAME@4
	.stabs "PPART:p193=*101",160,0,0,8
.balign 16

.globl _GETPARTNAME@4
_GETPARTNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,47,_GETPARTNAME@4-_GETPARTNAME@4
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_3AAD:
.L_3ABF:
.L_3AAF:
	mov dword ptr [ebp-16], 0
	mov eax, dword ptr [_G_MODELCOUNT]
	dec eax
	mov dword ptr [ebp-20], eax
	jmp .L_3AB1
.L_3AB4:
.L_3AB5:
.stabn 68,0,48,.L_3ABF-_GETPARTNAME@4
.L_3AC0:
.L_3AB6:
	mov eax, dword ptr [ebp-16]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	lea ebx, [eax]
	mov dword ptr [ebp-24], ebx
.stabn 68,0,49,.L_3AC0-_GETPARTNAME@4
.L_3AC1:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebp+8]
	cmp dword ptr [ebx+4], eax
	jne .L_3AB9
.L_3ABA:
.stabn 68,0,50,.L_3AC1-_GETPARTNAME@4
.L_3AC2:
	push 0
	push 0
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [_G_SFILENAMES]
	add ebx, dword ptr [eax]
	add ebx, 6
	push ebx
	push -1
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrInit@20
	jmp .L_3AAE
.stabn 68,0,51,.L_3AC2-_GETPARTNAME@4
.L_3AC3:
.L_3ABB:
.L_3AB9:
.L_3AB8:
.L_3ABC:
.L_3ABD:
.L_3AB2:
	inc dword ptr [ebp-16]
.L_3AB1:
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [ebp-16], ebx
	jle .L_3AB4
.L_3AB3:
.L_3ABE:
.stabn 68,0,54,.L_3AC3-_GETPARTNAME@4
.L_3AC4:
.L_3AAE:
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrAllocTempResult@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,55,.L_3AAE-_GETPARTNAME@4
	.stabn 192,0,0,.L_3AAD-_GETPARTNAME@4
	.stabs "I:1",128,0,0,-16
	.stabn 192,0,0,.L_3AAF-_GETPARTNAME@4
	.stabn 192,0,0,.L_3AB5-_GETPARTNAME@4
	.stabn 192,0,0,.L_3AB6-_GETPARTNAME@4
	.stabn 192,0,0,.L_3ABA-_GETPARTNAME@4
	.stabn 224,0,0,.L_3ABB-_GETPARTNAME@4
	.stabn 224,0,0,.L_3ABC-_GETPARTNAME@4
	.stabn 224,0,0,.L_3ABD-_GETPARTNAME@4
	.stabn 224,0,0,.L_3ABE-_GETPARTNAME@4
	.stabn 224,0,0,.L_3AAE-_GETPARTNAME@4
.L_3AC5:
	.stabs "",36,0,0,.L_3AC5-_GETPARTNAME@4
	.stabs "RENDERMODEL:F7",36,0,58,_RENDERMODEL@20
	.stabs "PPART:p194=*101",160,0,0,8
	.stabs "IBORDERS:p1",160,0,0,12
	.stabs "UCURRENTCOLOR:p8",160,0,0,16
	.stabs "LDRAWPART:p1",160,0,0,20
	.stabs "UCURRENTEDGE:p8",160,0,0,24
.balign 16

.globl _RENDERMODEL@20
_RENDERMODEL@20:
	push ebp
	mov ebp, esp
	sub esp, 208
	push ebx
	.stabn 68,0,58,_RENDERMODEL@20-_RENDERMODEL@20
.L_3AC6:
.L_3B3C:
	cmp dword ptr [ebp+16], 1885360192
	jne .L_3AC9
.L_3ACA:
	mov eax, dword ptr [_G_COLOURS+4]
	mov dword ptr [ebp+16], eax
	mov eax, dword ptr [_G_EDGECOLOURS+4]
	mov dword ptr [ebp+24], eax
.L_3AC9:
.L_3ACB:
.stabn 68,0,59,.L_3B3C-_RENDERMODEL@20
.L_3B3D:
	mov eax, dword ptr [ebp+24]
	mov dword ptr [ebp-4], eax
.stabn 68,0,61,.L_3B3D-_RENDERMODEL@20
.L_3B3E:
.L_3ACC:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-8], eax
.stabn 68,0,65,.L_3B3E-_RENDERMODEL@20
.L_3B3F:
.L_3ACE:
	mov dword ptr [ebp-12], 0
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax+4]
	dec ebx
	mov dword ptr [ebp-16], ebx
	jmp .L_3AD0
.L_3AD3:
.L_3AD4:
.stabn 68,0,67,.L_3B3F-_RENDERMODEL@20
.L_3B40:
	mov byte ptr [ebp-20], 0
.stabn 68,0,68,.L_3B40-_RENDERMODEL@20
.L_3B41:
	cmp dword ptr [ebp+20], 0
	jl .L_3AD5
	mov ebx, dword ptr [ebp-12]
	cmp ebx, dword ptr [ebp+20]
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-24], ebx
	jmp .L_3B36
.L_3AD5:
	mov dword ptr [ebp-24], -1
.L_3B36:
	cmp dword ptr [ebp-24], 0
	je .L_3AD8
.L_3AD9:
	mov byte ptr [ebp-20], 1
.L_3AD8:
.L_3ADA:
.stabn 68,0,69,.L_3B41-_RENDERMODEL@20
.L_3B43:
.L_3ADB:
	mov ebx, dword ptr [ebp-12]
	imul ebx, 56
	mov eax, dword ptr [ebp-8]
	add eax, ebx
	lea ebx, [eax+44]
	mov dword ptr [ebp-32], ebx
.stabn 68,0,71,.L_3B43-_RENDERMODEL@20
.L_3B44:
	mov ebx, dword ptr [ebp-32]
	movzx eax, word ptr [ebx+2]
	cmp eax, 16
	jne .L_3ADE
.L_3ADF:
.stabn 68,0,77,.L_3B44-_RENDERMODEL@20
.L_3B45:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-28], eax
.stabn 68,0,78,.L_3B45-_RENDERMODEL@20
.L_3B46:
.L_3AE0:
	jmp .L_3ADD
.L_3ADE:
	mov eax, dword ptr [ebp-32]
	movzx ebx, word ptr [eax+2]
	cmp ebx, 24
	je .L_3AE1
.L_3AE2:
.stabn 68,0,79,.L_3B46-_RENDERMODEL@20
.L_3B47:
	mov ebx, dword ptr [ebp-32]
	movzx eax, word ptr [ebx+2]
	cmp eax, 11000
	jle .L_3AE4
.L_3AE5:
.stabn 68,0,80,.L_3B47-_RENDERMODEL@20
.L_3B48:
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp-32]
	movzx ebx, word ptr [eax+2]
	push ebx
	call _fb_UIntToStr@4
	push eax
	push 12
	push offset _Lt_3AE6
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	lea eax, [ebp-44]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-56]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-56]
	call _puts
	add esp, 4
	lea eax, [ebp-56]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,81,.L_3B48-_RENDERMODEL@20
.L_3B49:
.L_3AE9:
.L_3AE4:
.L_3AE3:
	mov eax, dword ptr [ebp-32]
	movzx ebx, word ptr [eax+2]
	mov eax, dword ptr [_G_COLOURS+ebx*4]
	mov dword ptr [ebp-28], eax
.stabn 68,0,83,.L_3B49-_RENDERMODEL@20
.L_3B4A:
.L_3AEA:
.L_3AE1:
.L_3ADD:
.L_3AEB:
	mov eax, dword ptr [ebp-32]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-36], bl
.stabn 68,0,97,.L_3B4A-_RENDERMODEL@20
.L_3B4B:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 1
	jne .L_3AEE
.L_3AEF:
.L_3AF0:
.stabn 68,0,98,.L_3B4B-_RENDERMODEL@20
.L_3B4C:
	mov ebx, dword ptr [ebp-28]
	and ebx, 16711422
	shr ebx, 1
	mov eax, dword ptr [ebp-28]
	and eax, 4278190080
	or ebx, eax
	mov dword ptr [ebp-4], ebx
.stabn 68,0,101,.L_3B4C-_RENDERMODEL@20
.L_3B4D:
	lea ebx, [ebp-88]
	mov eax, dword ptr [ebp-32]
	lea ecx, [eax+4]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 13
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,103,.L_3B4D-_RENDERMODEL@20
.L_3B4E:
.L_3AF1:
	movsx ecx, byte ptr [ebp-20]
	test ecx, ecx
	je .L_3AF3
.L_3AF4:
.stabn 68,0,105,.L_3B4E-_RENDERMODEL@20
.L_3B4F:
	mov ecx, dword ptr [ebp-40]
	sal ecx, 3
	add ecx, dword ptr [_G_TMODELS]
	mov ebx, dword ptr [ecx+4]
	mov dword ptr [ebp-92], ebx
.stabn 68,0,106,.L_3B4F-_RENDERMODEL@20
.L_3B50:
	push 0
	push 0
	mov ebx, dword ptr [ebp-40]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov ecx, dword ptr [_G_SFILENAMES]
	add ecx, dword ptr [ebx]
	add ecx, 6
	push ecx
	push -1
	lea ecx, [ebp-104]
	push ecx
	call _fb_StrInit@20
.stabn 68,0,107,.L_3B50-_RENDERMODEL@20
.L_3B51:
	lea ecx, [ebp-168]
	mov dword ptr [ebp-204], ecx
	lea ecx, [ebp-168]
	mov dword ptr [ebp-200], ecx
	mov dword ptr [ebp-196], 64
	mov dword ptr [ebp-192], 4
	mov dword ptr [ebp-188], 1
	mov dword ptr [ebp-184], 49
	mov dword ptr [ebp-180], 16
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 15
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-76]
	fstp dword ptr [ebp-168]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-64]
	fstp dword ptr [ebp-164]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-52]
	fstp dword ptr [ebp-160]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-156]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-72]
	fstp dword ptr [ebp-152]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-60]
	fstp dword ptr [ebp-148]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-48]
	fstp dword ptr [ebp-144]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-140]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-68]
	fstp dword ptr [ebp-136]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-56]
	fstp dword ptr [ebp-132]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-44]
	fstp dword ptr [ebp-128]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-124]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-88]
	fstp dword ptr [ebp-120]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-84]
	fstp dword ptr [ebp-116]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-80]
	fstp dword ptr [ebp-112]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-108]
.stabn 68,0,121,.L_3B51-_RENDERMODEL@20
.L_3B52:
	lea ecx, [ebp-168]
	push ecx
	call _PUSHANDMULTMATRIX@4
.stabn 68,0,128,.L_3B52-_RENDERMODEL@20
.L_3B53:
	push dword ptr [ebp-4]
	cmp dword ptr [ebp+20], -2
	jne .L_3AF6
	mov dword ptr [ebp-208], -2
	jmp .L_3B37
.L_3AF6:
	mov dword ptr [ebp-208], -1
.L_3B37:
	push dword ptr [ebp-208]
	push dword ptr [ebp-28]
	push dword ptr [ebp+12]
	push dword ptr [ebp-92]
	call _RENDERMODEL@20
.stabn 68,0,140,.L_3B53-_RENDERMODEL@20
.L_3B54:
	call _POPMATRIX@0
.stabn 68,0,141,.L_3B54-_RENDERMODEL@20
.L_3B55:
	lea ecx, [ebp-104]
	push ecx
	call _fb_StrDelete@4
.L_3AF8:
.L_3AF3:
.L_3AF2:
.stabn 68,0,142,.L_3B55-_RENDERMODEL@20
.L_3B56:
.L_3AF9:
.L_3AFA:
	jmp .L_3AEC
.L_3AEE:
	movzx ecx, byte ptr [ebp-36]
	cmp ecx, 2
	jne .L_3AFB
.L_3AFC:
.L_3AFD:
.stabn 68,0,144,.L_3B56-_RENDERMODEL@20
.L_3B57:
	cmp dword ptr [ebp+12], 0
	jne .L_3AFE
	mov ecx, dword ptr [ebp-12]
	cmp ecx, dword ptr [ebp+20]
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-40], ecx
	jmp .L_3B38
.L_3AFE:
	mov dword ptr [ebp-40], 0
.L_3B38:
	cmp dword ptr [ebp-40], 0
	je .L_3B01
.L_3B02:
	jmp .L_3AD1
.L_3B01:
.L_3B03:
.stabn 68,0,145,.L_3B57-_RENDERMODEL@20
.L_3B59:
	lea ecx, [ebp-64]
	mov ebx, dword ptr [ebp-32]
	lea eax, [ebx+4]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, eax
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,148,.L_3B59-_RENDERMODEL@20
.L_3B5A:
	push 0
	lea eax, [ebp-64]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,149,.L_3B5A-_RENDERMODEL@20
.L_3B5B:
	push 0
	lea eax, [ebp-52]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,150,.L_3B5B-_RENDERMODEL@20
.L_3B5C:
	lea eax, [ebp-64]
	push eax
	call _SETLINENORMAL@4
.stabn 68,0,151,.L_3B5C-_RENDERMODEL@20
.L_3B5D:
.L_3B04:
	cmp dword ptr [ebp+20], -2
	jne .L_3B06
.L_3B07:
.stabn 68,0,160,.L_3B5D-_RENDERMODEL@20
.L_3B5E:
	mov eax, dword ptr [ebp-4]
	mov dword ptr [ebp-68], eax
.stabn 68,0,161,.L_3B5E-_RENDERMODEL@20
.L_3B5F:
	lea eax, [ebp-68]
	movzx ecx, byte ptr [eax+3]
	sar ecx, 2
	mov al, cl
	lea ecx, [ebp-68]
	mov byte ptr [ecx+3], al
.stabn 68,0,162,.L_3B5F-_RENDERMODEL@20
.L_3B60:
	lea eax, [ebp-68]
	push eax
	call _glColor4ubv@4
.stabn 68,0,163,.L_3B60-_RENDERMODEL@20
.L_3B61:
.L_3B08:
	jmp .L_3B05
.L_3B06:
.L_3B09:
.stabn 68,0,164,.L_3B61-_RENDERMODEL@20
.L_3B62:
	lea eax, [ebp-4]
	push eax
	call _glColor4ubv@4
.stabn 68,0,165,.L_3B62-_RENDERMODEL@20
.L_3B63:
.L_3B0A:
.L_3B05:
	push 1
	call _glBegin@4
.stabn 68,0,168,.L_3B63-_RENDERMODEL@20
.L_3B64:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-56]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-60]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-64]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,169,.L_3B64-_RENDERMODEL@20
.L_3B65:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-44]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-48]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-52]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,170,.L_3B65-_RENDERMODEL@20
.L_3B66:
	call _glEnd@0
.stabn 68,0,171,.L_3B66-_RENDERMODEL@20
.L_3B67:
.L_3B0B:
.L_3B0C:
	jmp .L_3AEC
.L_3AFB:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 3
	jne .L_3B0D
.L_3B0E:
.L_3B0F:
.stabn 68,0,173,.L_3B67-_RENDERMODEL@20
.L_3B68:
	cmp dword ptr [ebp+12], 0
	jne .L_3B10
	movsx eax, byte ptr [ebp-20]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-40], eax
	jmp .L_3B39
.L_3B10:
	mov dword ptr [ebp-40], -1
.L_3B39:
	cmp dword ptr [ebp-40], 0
	je .L_3B13
.L_3B14:
	jmp .L_3AD1
.L_3B13:
.L_3B15:
.stabn 68,0,174,.L_3B68-_RENDERMODEL@20
.L_3B6A:
	lea eax, [ebp-76]
	mov ecx, dword ptr [ebp-32]
	lea ebx, [ecx+4]
	push edi
	push esi
	mov edi, eax
	mov esi, ebx
	mov ecx, 9
	rep movsd
	pop esi
	pop edi
.stabn 68,0,175,.L_3B6A-_RENDERMODEL@20
.L_3B6B:
	push 0
	lea ebx, [ebp-76]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,176,.L_3B6B-_RENDERMODEL@20
.L_3B6C:
	push 0
	lea ebx, [ebp-64]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,177,.L_3B6C-_RENDERMODEL@20
.L_3B6D:
	push 0
	lea ebx, [ebp-52]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,178,.L_3B6D-_RENDERMODEL@20
.L_3B6E:
	lea ebx, [ebp-76]
	push ebx
	call _SETTRIGNORMAL@4
.stabn 68,0,179,.L_3B6E-_RENDERMODEL@20
.L_3B6F:
.L_3B16:
	lea ebx, [ebp-28]
	push ebx
	call _glColor4ubv@4
.stabn 68,0,188,.L_3B6F-_RENDERMODEL@20
.L_3B70:
	push 4
	call _glBegin@4
.stabn 68,0,190,.L_3B70-_RENDERMODEL@20
.L_3B71:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-68]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-72]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-76]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,192,.L_3B71-_RENDERMODEL@20
.L_3B72:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-56]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-60]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-64]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,194,.L_3B72-_RENDERMODEL@20
.L_3B73:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-44]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-48]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-52]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,196,.L_3B73-_RENDERMODEL@20
.L_3B74:
	call _glEnd@0
.stabn 68,0,197,.L_3B74-_RENDERMODEL@20
.L_3B75:
.L_3B17:
.L_3B18:
	jmp .L_3AEC
.L_3B0D:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 4
	jne .L_3B19
.L_3B1A:
.L_3B1B:
.stabn 68,0,199,.L_3B75-_RENDERMODEL@20
.L_3B76:
	cmp dword ptr [ebp+12], 0
	jne .L_3B1C
	movsx ebx, byte ptr [ebp-20]
	test ebx, ebx
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-40], ebx
	jmp .L_3B3A
.L_3B1C:
	mov dword ptr [ebp-40], -1
.L_3B3A:
	cmp dword ptr [ebp-40], 0
	je .L_3B1F
.L_3B20:
	jmp .L_3AD1
.L_3B1F:
.L_3B21:
.stabn 68,0,200,.L_3B76-_RENDERMODEL@20
.L_3B78:
	lea ebx, [ebp-88]
	mov eax, dword ptr [ebp-32]
	lea ecx, [eax+4]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 12
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,201,.L_3B78-_RENDERMODEL@20
.L_3B79:
	push 0
	lea ecx, [ebp-88]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,202,.L_3B79-_RENDERMODEL@20
.L_3B7A:
	push 0
	lea ecx, [ebp-76]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,203,.L_3B7A-_RENDERMODEL@20
.L_3B7B:
	push 0
	lea ecx, [ebp-64]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,204,.L_3B7B-_RENDERMODEL@20
.L_3B7C:
	push 0
	lea ecx, [ebp-52]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,205,.L_3B7C-_RENDERMODEL@20
.L_3B7D:
	lea ecx, [ebp-88]
	push ecx
	call _SETQUADNORMAL@4
.stabn 68,0,206,.L_3B7D-_RENDERMODEL@20
.L_3B7E:
.L_3B22:
	lea ecx, [ebp-28]
	push ecx
	call _glColor4ubv@4
.stabn 68,0,217,.L_3B7E-_RENDERMODEL@20
.L_3B7F:
	push 7
	call _glBegin@4
.stabn 68,0,218,.L_3B7F-_RENDERMODEL@20
.L_3B80:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-80]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-84]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-88]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,219,.L_3B80-_RENDERMODEL@20
.L_3B81:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-68]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-72]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-76]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,220,.L_3B81-_RENDERMODEL@20
.L_3B82:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-56]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-60]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-64]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,221,.L_3B82-_RENDERMODEL@20
.L_3B83:
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-44]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-48]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebp-52]
	sub esp,4
	fstp dword ptr [esp]
	call _glVertex3f@12
.stabn 68,0,222,.L_3B83-_RENDERMODEL@20
.L_3B84:
	call _glEnd@0
.stabn 68,0,223,.L_3B84-_RENDERMODEL@20
.L_3B85:
.L_3B23:
.L_3B24:
	jmp .L_3AEC
.L_3B19:
	movzx ecx, byte ptr [ebp-36]
	cmp ecx, 5
	jne .L_3B25
.L_3B26:
.L_3B27:
.stabn 68,0,225,.L_3B85-_RENDERMODEL@20
.L_3B86:
	cmp dword ptr [ebp+12], 0
	je .L_3B28
	movsx ecx, byte ptr [ebp-20]
	test ecx, ecx
	sete cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-40], ecx
	jmp .L_3B3B
.L_3B28:
	mov dword ptr [ebp-40], -1
.L_3B3B:
	cmp dword ptr [ebp-40], 0
	je .L_3B2B
.L_3B2C:
	jmp .L_3AD1
.L_3B2B:
.L_3B2D:
.stabn 68,0,227,.L_3B86-_RENDERMODEL@20
.L_3B88:
	lea ecx, [ebp-88]
	mov ebx, dword ptr [ebp-32]
	lea eax, [ebx+4]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, eax
	mov ecx, 12
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,228,.L_3B88-_RENDERMODEL@20
.L_3B89:
	push 0
	lea eax, [ebp-88]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,229,.L_3B89-_RENDERMODEL@20
.L_3B8A:
	push 0
	lea eax, [ebp-76]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,230,.L_3B8A-_RENDERMODEL@20
.L_3B8B:
	lea eax, [ebp-88]
	push eax
	call _SETLINENORMAL@4
.stabn 68,0,231,.L_3B8B-_RENDERMODEL@20
.L_3B8C:
.L_3B2E:
.L_3B2F:
.L_3B30:
.L_3B25:
.L_3AEC:
.L_3B31:
.L_3B32:
.L_3B33:
.L_3AD1:
	inc dword ptr [ebp-12]
.L_3AD0:
	mov eax, dword ptr [ebp-16]
	cmp dword ptr [ebp-12], eax
	jle .L_3AD3
.L_3AD2:
.L_3B34:
.stabn 68,0,252,.L_3B8C-_RENDERMODEL@20
.L_3B8D:
	mov dword ptr [_Lt_3B8E], 1
.stabn 68,0,254,.L_3B8D-_RENDERMODEL@20
.L_3B8F:
.L_3B35:
.L_3AC7:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,256,.L_3AC7-_RENDERMODEL@20
	.stabs "UEDGE:8",128,0,0,-4
	.stabs "IONCE:V1",40,0,0,_Lt_3B8E
	.stabn 192,0,0,.L_3AC6-_RENDERMODEL@20
	.stabn 192,0,0,.L_3ACA-_RENDERMODEL@20
	.stabn 224,0,0,.L_3ACB-_RENDERMODEL@20
	.stabn 192,0,0,.L_3ACC-_RENDERMODEL@20
	.stabs "N:1",128,0,0,-12
	.stabn 192,0,0,.L_3ACE-_RENDERMODEL@20
	.stabs "BDODRAW:2",128,0,0,-20
	.stabs "UCOLOR:8",128,0,0,-28
	.stabn 192,0,0,.L_3AD4-_RENDERMODEL@20
	.stabn 192,0,0,.L_3AD9-_RENDERMODEL@20
	.stabn 224,0,0,.L_3ADA-_RENDERMODEL@20
	.stabn 192,0,0,.L_3ADB-_RENDERMODEL@20
	.stabn 192,0,0,.L_3ADF-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AE0-_RENDERMODEL@20
	.stabn 192,0,0,.L_3AE2-_RENDERMODEL@20
	.stabn 192,0,0,.L_3AE5-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AE9-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AEA-_RENDERMODEL@20
	.stabn 192,0,0,.L_3AEB-_RENDERMODEL@20
	.stabs "T1:112",128,0,0,-88
	.stabn 192,0,0,.L_3AF0-_RENDERMODEL@20
	.stabn 192,0,0,.L_3AF1-_RENDERMODEL@20
	.stabs "PSUBPART:195=*101",128,0,0,-92
	.stabs "SNAME:13",128,0,0,-104
	.stabs "FMATRIX:196=ar1;0;15;11",128,0,0,-168
	.stabn 192,0,0,.L_3AF4-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AF8-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AF9-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AFA-_RENDERMODEL@20
	.stabs "T2:113",128,0,0,-64
	.stabn 192,0,0,.L_3AFD-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B02-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B03-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B04-_RENDERMODEL@20
	.stabs "UEDGE2:8",128,0,0,-68
	.stabn 192,0,0,.L_3B07-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B08-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B09-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B0A-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B0B-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B0C-_RENDERMODEL@20
	.stabs "T3:114",128,0,0,-76
	.stabn 192,0,0,.L_3B0F-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B14-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B15-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B16-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B17-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B18-_RENDERMODEL@20
	.stabs "T4:115",128,0,0,-88
	.stabn 192,0,0,.L_3B1B-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B20-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B21-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B22-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B23-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B24-_RENDERMODEL@20
	.stabs "T5:116",128,0,0,-88
	.stabn 192,0,0,.L_3B27-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B2C-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B2D-_RENDERMODEL@20
	.stabn 192,0,0,.L_3B2E-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B2F-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B30-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B31-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B32-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B33-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B34-_RENDERMODEL@20
	.stabn 224,0,0,.L_3B35-_RENDERMODEL@20
	.stabn 224,0,0,.L_3AC7-_RENDERMODEL@20
.L_3B90:
	.stabs "",36,0,0,.L_3B90-_RENDERMODEL@20

.section .bss
.balign 4
	.lcomm	_Lt_3B8E,4

.section .text
	.stabs "SIZEMODEL:F7",36,0,260,_SIZEMODEL@20
	.stabs "PPART:p197=*101",160,0,0,8
	.stabs "TSIZE:v102",160,0,0,12
	.stabs "IPARTWANTED:p1",160,0,0,16
	.stabs "IPARTNUM:v1",160,0,0,20
	.stabs "PROOT:p198=*101",160,0,0,24
.balign 16

.globl _SIZEMODEL@20
_SIZEMODEL@20:
	push ebp
	mov ebp, esp
	sub esp, 148
	push ebx
	.stabn 68,0,260,_SIZEMODEL@20-_SIZEMODEL@20
.L_3B91:
.L_3D75:
	cmp dword ptr [ebp+24], 0
	jne .L_3B94
.L_3B95:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp+24], eax
.L_3B94:
.L_3B96:
.stabn 68,0,262,.L_3D75-_SIZEMODEL@20
.L_3D76:
	mov eax, dword ptr [ebp+8]
	cmp dword ptr [ebp+24], eax
	jne .L_3B98
.L_3B99:
	call _PUSHIDENTITYMATRIX@0
.L_3B98:
.L_3B9A:
.stabn 68,0,277,.L_3D76-_SIZEMODEL@20
.L_3D77:
.L_3B9B:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,279,.L_3D77-_SIZEMODEL@20
.L_3D78:
.L_3B9D:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax+4]
	dec ebx
	mov dword ptr [ebp-12], ebx
	jmp .L_3B9F
.L_3BA2:
.L_3BA3:
.stabn 68,0,281,.L_3D78-_SIZEMODEL@20
.L_3D79:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebp+24], ebx
	jne .L_3BA5
.L_3BA6:
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.L_3BA5:
.L_3BA7:
.stabn 68,0,282,.L_3D79-_SIZEMODEL@20
.L_3D7A:
	cmp dword ptr [ebp+16], 0
	jl .L_3BA8
	mov ebx, dword ptr [ebp+20]
	mov eax, dword ptr [ebx]
	cmp eax, dword ptr [ebp+16]
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-16], eax
	jmp .L_3D3E
.L_3BA8:
	mov dword ptr [ebp-16], -1
.L_3D3E:
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-20], eax
.stabn 68,0,283,.L_3D7A-_SIZEMODEL@20
.L_3D7C:
.L_3BAA:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	lea eax, [ebx+44]
	mov dword ptr [ebp-24], eax
.stabn 68,0,284,.L_3D7C-_SIZEMODEL@20
.L_3D7D:
.L_3BAC:
	mov eax, dword ptr [ebp-24]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-28], bl
.stabn 68,0,285,.L_3D7D-_SIZEMODEL@20
.L_3D7E:
	movzx ebx, byte ptr [ebp-28]
	cmp ebx, 1
	jne .L_3BAF
.L_3BB0:
.L_3BB1:
.stabn 68,0,286,.L_3D7E-_SIZEMODEL@20
.L_3D7F:
.L_3BB2:
	mov ebx, dword ptr [ebp-24]
	lea eax, [ebx+4]
	mov dword ptr [ebp-32], eax
.stabn 68,0,288,.L_3D7F-_SIZEMODEL@20
.L_3D80:
	mov eax, dword ptr [ebp-32]
	mov ebx, dword ptr [eax+48]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ebx+4]
	mov dword ptr [ebp-36], eax
.stabn 68,0,289,.L_3D80-_SIZEMODEL@20
.L_3D81:
	push 0
	push 0
	mov eax, dword ptr [ebp-32]
	mov ebx, dword ptr [eax+48]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [_G_SFILENAMES]
	add eax, dword ptr [ebx]
	add eax, 6
	push eax
	push -1
	lea eax, [ebp-48]
	push eax
	call _fb_StrInit@20
.stabn 68,0,290,.L_3D81-_SIZEMODEL@20
.L_3D82:
	lea eax, [ebp-112]
	mov dword ptr [ebp-148], eax
	lea eax, [ebp-112]
	mov dword ptr [ebp-144], eax
	mov dword ptr [ebp-140], 64
	mov dword ptr [ebp-136], 4
	mov dword ptr [ebp-132], 1
	mov dword ptr [ebp-128], 49
	mov dword ptr [ebp-124], 16
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 15
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+12]
	fstp dword ptr [ebp-112]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+24]
	fstp dword ptr [ebp-108]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+36]
	fstp dword ptr [ebp-104]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-100]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+16]
	fstp dword ptr [ebp-96]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+28]
	fstp dword ptr [ebp-92]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+40]
	fstp dword ptr [ebp-88]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-84]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+20]
	fstp dword ptr [ebp-80]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+32]
	fstp dword ptr [ebp-76]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+44]
	fstp dword ptr [ebp-72]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-68]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax]
	fstp dword ptr [ebp-64]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+4]
	fstp dword ptr [ebp-60]
	mov eax, dword ptr [ebp-32]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [eax+8]
	fstp dword ptr [ebp-56]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-52]
.stabn 68,0,291,.L_3D82-_SIZEMODEL@20
.L_3D83:
	lea eax, [ebp-112]
	push eax
	call _PUSHANDMULTMATRIX@4
.stabn 68,0,296,.L_3D83-_SIZEMODEL@20
.L_3D84:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp-36]
	call _SIZEMODEL@20
.stabn 68,0,309,.L_3D84-_SIZEMODEL@20
.L_3D85:
	call _POPMATRIX@0
.stabn 68,0,310,.L_3D85-_SIZEMODEL@20
.L_3D86:
	lea eax, [ebp-48]
	push eax
	call _fb_StrDelete@4
.L_3BB5:
.stabn 68,0,311,.L_3D86-_SIZEMODEL@20
.L_3D87:
.L_3BB6:
	jmp .L_3BAD
.L_3BAF:
	movzx eax, byte ptr [ebp-28]
	cmp eax, 2
	jne .L_3BB7
.L_3BB8:
.L_3BB9:
.stabn 68,0,312,.L_3D87-_SIZEMODEL@20
.L_3D88:
	lea eax, [ebp-52]
	mov ebx, dword ptr [ebp-24]
	lea ecx, [ebx+4]
	push ecx
	push edi
	push esi
	mov edi, eax
	mov esi, ecx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,313,.L_3D88-_SIZEMODEL@20
.L_3D89:
	push 0
	lea ecx, [ebp-52]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,315,.L_3D89-_SIZEMODEL@20
.L_3D8A:
	push 0
	lea ecx, [ebp-40]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,316,.L_3D8A-_SIZEMODEL@20
.L_3D8B:
	inc dword ptr [_G_TOTALLINES]
.stabn 68,0,318,.L_3D8B-_SIZEMODEL@20
.L_3D8C:
.L_3BBA:
	cmp dword ptr [ebp-20], 0
	je .L_3BBC
.L_3BBD:
.stabn 68,0,321,.L_3D8C-_SIZEMODEL@20
.L_3D8D:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BBE
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [ecx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_3D3F
.L_3BBE:
	mov dword ptr [ebp-56], -1
.L_3D3F:
	cmp dword ptr [ebp-56], 0
	je .L_3BC1
.L_3BC2:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [eax+4]
.L_3BC1:
.L_3BC3:
.stabn 68,0,321,.L_3D8D-_SIZEMODEL@20
.L_3D8F:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BC4
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-60], ecx
	jmp .L_3D40
.L_3BC4:
	mov dword ptr [ebp-60], -1
.L_3D40:
	cmp dword ptr [ebp-60], 0
	je .L_3BC7
.L_3BC8:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [ecx]
.L_3BC7:
.L_3BC9:
.stabn 68,0,321,.L_3D8F-_SIZEMODEL@20
.L_3D91:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BCA
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [ecx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_3D41
.L_3BCA:
	mov dword ptr [ebp-64], -1
.L_3D41:
	cmp dword ptr [ebp-64], 0
	je .L_3BCD
.L_3BCE:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [eax+12]
.L_3BCD:
.L_3BCF:
.stabn 68,0,321,.L_3D91-_SIZEMODEL@20
.L_3D93:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BD0
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_3D42
.L_3BD0:
	mov dword ptr [ebp-68], -1
.L_3D42:
	cmp dword ptr [ebp-68], 0
	je .L_3BD3
.L_3BD4:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [ecx+8]
.L_3BD3:
.L_3BD5:
.stabn 68,0,321,.L_3D93-_SIZEMODEL@20
.L_3D95:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BD6
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [ecx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_3D43
.L_3BD6:
	mov dword ptr [ebp-72], -1
.L_3D43:
	cmp dword ptr [ebp-72], 0
	je .L_3BD9
.L_3BDA:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [eax+20]
.L_3BD9:
.L_3BDB:
.stabn 68,0,321,.L_3D95-_SIZEMODEL@20
.L_3D97:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BDC
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_3D44
.L_3BDC:
	mov dword ptr [ebp-76], -1
.L_3D44:
	cmp dword ptr [ebp-76], 0
	je .L_3BDF
.L_3BE0:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [ecx+16]
.L_3BDF:
.L_3BE1:
.stabn 68,0,321,.L_3D97-_SIZEMODEL@20
.L_3D99:
.L_3BE2:
.L_3BBC:
.L_3BBB:
	cmp dword ptr [ebp-20], 0
	je .L_3BE4
.L_3BE5:
.stabn 68,0,322,.L_3D99-_SIZEMODEL@20
.L_3D9A:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BE6
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [ecx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_3D45
.L_3BE6:
	mov dword ptr [ebp-56], -1
.L_3D45:
	cmp dword ptr [ebp-56], 0
	je .L_3BE9
.L_3BEA:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [eax+4]
.L_3BE9:
.L_3BEB:
.stabn 68,0,322,.L_3D9A-_SIZEMODEL@20
.L_3D9C:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BEC
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-60], ecx
	jmp .L_3D46
.L_3BEC:
	mov dword ptr [ebp-60], -1
.L_3D46:
	cmp dword ptr [ebp-60], 0
	je .L_3BEF
.L_3BF0:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [ecx]
.L_3BEF:
.L_3BF1:
.stabn 68,0,322,.L_3D9C-_SIZEMODEL@20
.L_3D9E:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BF2
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [ecx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_3D47
.L_3BF2:
	mov dword ptr [ebp-64], -1
.L_3D47:
	cmp dword ptr [ebp-64], 0
	je .L_3BF5
.L_3BF6:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [eax+12]
.L_3BF5:
.L_3BF7:
.stabn 68,0,322,.L_3D9E-_SIZEMODEL@20
.L_3DA0:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BF8
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_3D48
.L_3BF8:
	mov dword ptr [ebp-68], -1
.L_3D48:
	cmp dword ptr [ebp-68], 0
	je .L_3BFB
.L_3BFC:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [ecx+8]
.L_3BFB:
.L_3BFD:
.stabn 68,0,322,.L_3DA0-_SIZEMODEL@20
.L_3DA2:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3BFE
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [ecx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_3D49
.L_3BFE:
	mov dword ptr [ebp-72], -1
.L_3D49:
	cmp dword ptr [ebp-72], 0
	je .L_3C01
.L_3C02:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [eax+20]
.L_3C01:
.L_3C03:
.stabn 68,0,322,.L_3DA2-_SIZEMODEL@20
.L_3DA4:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C04
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_3D4A
.L_3C04:
	mov dword ptr [ebp-76], -1
.L_3D4A:
	cmp dword ptr [ebp-76], 0
	je .L_3C07
.L_3C08:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [ecx+16]
.L_3C07:
.L_3C09:
.stabn 68,0,322,.L_3DA4-_SIZEMODEL@20
.L_3DA6:
.L_3C0A:
.L_3BE4:
.L_3BE3:
.L_3C0B:
.L_3C0C:
	jmp .L_3BAD
.L_3BB7:
	movzx ecx, byte ptr [ebp-28]
	cmp ecx, 3
	jne .L_3C0D
.L_3C0E:
.L_3C0F:
.stabn 68,0,324,.L_3DA6-_SIZEMODEL@20
.L_3DA7:
	lea ecx, [ebp-64]
	mov eax, dword ptr [ebp-24]
	lea ebx, [eax+4]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, ebx
	mov ecx, 9
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,325,.L_3DA7-_SIZEMODEL@20
.L_3DA8:
	push 0
	lea ebx, [ebp-64]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,327,.L_3DA8-_SIZEMODEL@20
.L_3DA9:
	push 0
	lea ebx, [ebp-52]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,328,.L_3DA9-_SIZEMODEL@20
.L_3DAA:
	push 0
	lea ebx, [ebp-40]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,329,.L_3DAA-_SIZEMODEL@20
.L_3DAB:
	inc dword ptr [_G_TOTALTRIGS]
.stabn 68,0,331,.L_3DAB-_SIZEMODEL@20
.L_3DAC:
.L_3C10:
	cmp dword ptr [ebp-20], 0
	je .L_3C12
.L_3C13:
.stabn 68,0,334,.L_3DAC-_SIZEMODEL@20
.L_3DAD:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C14
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-64]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_3D4B
.L_3C14:
	mov dword ptr [ebp-68], -1
.L_3D4B:
	cmp dword ptr [ebp-68], 0
	je .L_3C17
.L_3C18:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-64]
	pop dword ptr [ecx+4]
.L_3C17:
.L_3C19:
.stabn 68,0,334,.L_3DAD-_SIZEMODEL@20
.L_3DAF:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C1A
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-64]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-72], ebx
	jmp .L_3D4C
.L_3C1A:
	mov dword ptr [ebp-72], -1
.L_3D4C:
	cmp dword ptr [ebp-72], 0
	je .L_3C1D
.L_3C1E:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-64]
	pop dword ptr [ebx]
.L_3C1D:
.L_3C1F:
.stabn 68,0,334,.L_3DAF-_SIZEMODEL@20
.L_3DB1:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C20
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-60]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_3D4D
.L_3C20:
	mov dword ptr [ebp-76], -1
.L_3D4D:
	cmp dword ptr [ebp-76], 0
	je .L_3C23
.L_3C24:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-60]
	pop dword ptr [ecx+12]
.L_3C23:
.L_3C25:
.stabn 68,0,334,.L_3DB1-_SIZEMODEL@20
.L_3DB3:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C26
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-60]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D4E
.L_3C26:
	mov dword ptr [ebp-80], -1
.L_3D4E:
	cmp dword ptr [ebp-80], 0
	je .L_3C29
.L_3C2A:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-60]
	pop dword ptr [ebx+8]
.L_3C29:
.L_3C2B:
.stabn 68,0,334,.L_3DB3-_SIZEMODEL@20
.L_3DB5:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C2C
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-56]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-84], ecx
	jmp .L_3D4F
.L_3C2C:
	mov dword ptr [ebp-84], -1
.L_3D4F:
	cmp dword ptr [ebp-84], 0
	je .L_3C2F
.L_3C30:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-56]
	pop dword ptr [ecx+20]
.L_3C2F:
.L_3C31:
.stabn 68,0,334,.L_3DB5-_SIZEMODEL@20
.L_3DB7:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C32
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-56]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D50
.L_3C32:
	mov dword ptr [ebp-88], -1
.L_3D50:
	cmp dword ptr [ebp-88], 0
	je .L_3C35
.L_3C36:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-56]
	pop dword ptr [ebx+16]
.L_3C35:
.L_3C37:
.stabn 68,0,334,.L_3DB7-_SIZEMODEL@20
.L_3DB9:
.L_3C38:
.L_3C12:
.L_3C11:
	cmp dword ptr [ebp-20], 0
	je .L_3C3A
.L_3C3B:
.stabn 68,0,335,.L_3DB9-_SIZEMODEL@20
.L_3DBA:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C3C
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_3D51
.L_3C3C:
	mov dword ptr [ebp-68], -1
.L_3D51:
	cmp dword ptr [ebp-68], 0
	je .L_3C3F
.L_3C40:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [ecx+4]
.L_3C3F:
.L_3C41:
.stabn 68,0,335,.L_3DBA-_SIZEMODEL@20
.L_3DBC:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C42
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-72], ebx
	jmp .L_3D52
.L_3C42:
	mov dword ptr [ebp-72], -1
.L_3D52:
	cmp dword ptr [ebp-72], 0
	je .L_3C45
.L_3C46:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [ebx]
.L_3C45:
.L_3C47:
.stabn 68,0,335,.L_3DBC-_SIZEMODEL@20
.L_3DBE:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C48
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_3D53
.L_3C48:
	mov dword ptr [ebp-76], -1
.L_3D53:
	cmp dword ptr [ebp-76], 0
	je .L_3C4B
.L_3C4C:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [ecx+12]
.L_3C4B:
.L_3C4D:
.stabn 68,0,335,.L_3DBE-_SIZEMODEL@20
.L_3DC0:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C4E
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D54
.L_3C4E:
	mov dword ptr [ebp-80], -1
.L_3D54:
	cmp dword ptr [ebp-80], 0
	je .L_3C51
.L_3C52:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [ebx+8]
.L_3C51:
.L_3C53:
.stabn 68,0,335,.L_3DC0-_SIZEMODEL@20
.L_3DC2:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C54
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-84], ecx
	jmp .L_3D55
.L_3C54:
	mov dword ptr [ebp-84], -1
.L_3D55:
	cmp dword ptr [ebp-84], 0
	je .L_3C57
.L_3C58:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [ecx+20]
.L_3C57:
.L_3C59:
.stabn 68,0,335,.L_3DC2-_SIZEMODEL@20
.L_3DC4:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C5A
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D56
.L_3C5A:
	mov dword ptr [ebp-88], -1
.L_3D56:
	cmp dword ptr [ebp-88], 0
	je .L_3C5D
.L_3C5E:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [ebx+16]
.L_3C5D:
.L_3C5F:
.stabn 68,0,335,.L_3DC4-_SIZEMODEL@20
.L_3DC6:
.L_3C60:
.L_3C3A:
.L_3C39:
	cmp dword ptr [ebp-20], 0
	je .L_3C62
.L_3C63:
.stabn 68,0,336,.L_3DC6-_SIZEMODEL@20
.L_3DC7:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C64
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_3D57
.L_3C64:
	mov dword ptr [ebp-68], -1
.L_3D57:
	cmp dword ptr [ebp-68], 0
	je .L_3C67
.L_3C68:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [ecx+4]
.L_3C67:
.L_3C69:
.stabn 68,0,336,.L_3DC7-_SIZEMODEL@20
.L_3DC9:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C6A
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-72], ebx
	jmp .L_3D58
.L_3C6A:
	mov dword ptr [ebp-72], -1
.L_3D58:
	cmp dword ptr [ebp-72], 0
	je .L_3C6D
.L_3C6E:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [ebx]
.L_3C6D:
.L_3C6F:
.stabn 68,0,336,.L_3DC9-_SIZEMODEL@20
.L_3DCB:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C70
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_3D59
.L_3C70:
	mov dword ptr [ebp-76], -1
.L_3D59:
	cmp dword ptr [ebp-76], 0
	je .L_3C73
.L_3C74:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [ecx+12]
.L_3C73:
.L_3C75:
.stabn 68,0,336,.L_3DCB-_SIZEMODEL@20
.L_3DCD:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C76
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D5A
.L_3C76:
	mov dword ptr [ebp-80], -1
.L_3D5A:
	cmp dword ptr [ebp-80], 0
	je .L_3C79
.L_3C7A:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [ebx+8]
.L_3C79:
.L_3C7B:
.stabn 68,0,336,.L_3DCD-_SIZEMODEL@20
.L_3DCF:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C7C
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-84], ecx
	jmp .L_3D5B
.L_3C7C:
	mov dword ptr [ebp-84], -1
.L_3D5B:
	cmp dword ptr [ebp-84], 0
	je .L_3C7F
.L_3C80:
	mov ecx, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [ecx+20]
.L_3C7F:
.L_3C81:
.stabn 68,0,336,.L_3DCF-_SIZEMODEL@20
.L_3DD1:
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C82
	mov ecx, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D5C
.L_3C82:
	mov dword ptr [ebp-88], -1
.L_3D5C:
	cmp dword ptr [ebp-88], 0
	je .L_3C85
.L_3C86:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [ebx+16]
.L_3C85:
.L_3C87:
.stabn 68,0,336,.L_3DD1-_SIZEMODEL@20
.L_3DD3:
.L_3C88:
.L_3C62:
.L_3C61:
.L_3C89:
.L_3C8A:
	jmp .L_3BAD
.L_3C0D:
	movzx ebx, byte ptr [ebp-28]
	cmp ebx, 4
	jne .L_3C8B
.L_3C8C:
.L_3C8D:
.stabn 68,0,338,.L_3DD3-_SIZEMODEL@20
.L_3DD4:
	lea ebx, [ebp-76]
	mov ecx, dword ptr [ebp-24]
	lea eax, [ecx+4]
	push edi
	push esi
	mov edi, ebx
	mov esi, eax
	mov ecx, 12
	rep movsd
	pop esi
	pop edi
.stabn 68,0,339,.L_3DD4-_SIZEMODEL@20
.L_3DD5:
	push 0
	lea eax, [ebp-76]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,341,.L_3DD5-_SIZEMODEL@20
.L_3DD6:
	push 0
	lea eax, [ebp-64]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,342,.L_3DD6-_SIZEMODEL@20
.L_3DD7:
	push 0
	lea eax, [ebp-52]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,343,.L_3DD7-_SIZEMODEL@20
.L_3DD8:
	push 0
	lea eax, [ebp-40]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,344,.L_3DD8-_SIZEMODEL@20
.L_3DD9:
	inc dword ptr [_G_TOTALQUADS]
.stabn 68,0,346,.L_3DD9-_SIZEMODEL@20
.L_3DDA:
.L_3C8E:
	cmp dword ptr [ebp-20], 0
	je .L_3C90
.L_3C91:
.stabn 68,0,349,.L_3DDA-_SIZEMODEL@20
.L_3DDB:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C92
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-76]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D5D
.L_3C92:
	mov dword ptr [ebp-80], -1
.L_3D5D:
	cmp dword ptr [ebp-80], 0
	je .L_3C95
.L_3C96:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-76]
	pop dword ptr [ebx+4]
.L_3C95:
.L_3C97:
.stabn 68,0,349,.L_3DDB-_SIZEMODEL@20
.L_3DDD:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C98
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-76]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3D5E
.L_3C98:
	mov dword ptr [ebp-84], -1
.L_3D5E:
	cmp dword ptr [ebp-84], 0
	je .L_3C9B
.L_3C9C:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-76]
	pop dword ptr [eax]
.L_3C9B:
.L_3C9D:
.stabn 68,0,349,.L_3DDD-_SIZEMODEL@20
.L_3DDF:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3C9E
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-72]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D5F
.L_3C9E:
	mov dword ptr [ebp-88], -1
.L_3D5F:
	cmp dword ptr [ebp-88], 0
	je .L_3CA1
.L_3CA2:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-72]
	pop dword ptr [ebx+12]
.L_3CA1:
.L_3CA3:
.stabn 68,0,349,.L_3DDF-_SIZEMODEL@20
.L_3DE1:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CA4
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-72]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_3D60
.L_3CA4:
	mov dword ptr [ebp-92], -1
.L_3D60:
	cmp dword ptr [ebp-92], 0
	je .L_3CA7
.L_3CA8:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-72]
	pop dword ptr [eax+8]
.L_3CA7:
.L_3CA9:
.stabn 68,0,349,.L_3DE1-_SIZEMODEL@20
.L_3DE3:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CAA
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-68]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-96], ebx
	jmp .L_3D61
.L_3CAA:
	mov dword ptr [ebp-96], -1
.L_3D61:
	cmp dword ptr [ebp-96], 0
	je .L_3CAD
.L_3CAE:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-68]
	pop dword ptr [ebx+20]
.L_3CAD:
.L_3CAF:
.stabn 68,0,349,.L_3DE3-_SIZEMODEL@20
.L_3DE5:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CB0
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-68]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-100], eax
	jmp .L_3D62
.L_3CB0:
	mov dword ptr [ebp-100], -1
.L_3D62:
	cmp dword ptr [ebp-100], 0
	je .L_3CB3
.L_3CB4:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-68]
	pop dword ptr [eax+16]
.L_3CB3:
.L_3CB5:
.stabn 68,0,349,.L_3DE5-_SIZEMODEL@20
.L_3DE7:
.L_3CB6:
.L_3C90:
.L_3C8F:
	cmp dword ptr [ebp-20], 0
	je .L_3CB8
.L_3CB9:
.stabn 68,0,350,.L_3DE7-_SIZEMODEL@20
.L_3DE8:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CBA
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-64]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D63
.L_3CBA:
	mov dword ptr [ebp-80], -1
.L_3D63:
	cmp dword ptr [ebp-80], 0
	je .L_3CBD
.L_3CBE:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-64]
	pop dword ptr [ebx+4]
.L_3CBD:
.L_3CBF:
.stabn 68,0,350,.L_3DE8-_SIZEMODEL@20
.L_3DEA:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CC0
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-64]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3D64
.L_3CC0:
	mov dword ptr [ebp-84], -1
.L_3D64:
	cmp dword ptr [ebp-84], 0
	je .L_3CC3
.L_3CC4:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-64]
	pop dword ptr [eax]
.L_3CC3:
.L_3CC5:
.stabn 68,0,350,.L_3DEA-_SIZEMODEL@20
.L_3DEC:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CC6
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-60]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D65
.L_3CC6:
	mov dword ptr [ebp-88], -1
.L_3D65:
	cmp dword ptr [ebp-88], 0
	je .L_3CC9
.L_3CCA:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-60]
	pop dword ptr [ebx+12]
.L_3CC9:
.L_3CCB:
.stabn 68,0,350,.L_3DEC-_SIZEMODEL@20
.L_3DEE:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CCC
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-60]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_3D66
.L_3CCC:
	mov dword ptr [ebp-92], -1
.L_3D66:
	cmp dword ptr [ebp-92], 0
	je .L_3CCF
.L_3CD0:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-60]
	pop dword ptr [eax+8]
.L_3CCF:
.L_3CD1:
.stabn 68,0,350,.L_3DEE-_SIZEMODEL@20
.L_3DF0:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CD2
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-56]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-96], ebx
	jmp .L_3D67
.L_3CD2:
	mov dword ptr [ebp-96], -1
.L_3D67:
	cmp dword ptr [ebp-96], 0
	je .L_3CD5
.L_3CD6:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-56]
	pop dword ptr [ebx+20]
.L_3CD5:
.L_3CD7:
.stabn 68,0,350,.L_3DF0-_SIZEMODEL@20
.L_3DF2:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CD8
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-56]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-100], eax
	jmp .L_3D68
.L_3CD8:
	mov dword ptr [ebp-100], -1
.L_3D68:
	cmp dword ptr [ebp-100], 0
	je .L_3CDB
.L_3CDC:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-56]
	pop dword ptr [eax+16]
.L_3CDB:
.L_3CDD:
.stabn 68,0,350,.L_3DF2-_SIZEMODEL@20
.L_3DF4:
.L_3CDE:
.L_3CB8:
.L_3CB7:
	cmp dword ptr [ebp-20], 0
	je .L_3CE0
.L_3CE1:
.stabn 68,0,351,.L_3DF4-_SIZEMODEL@20
.L_3DF5:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CE2
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D69
.L_3CE2:
	mov dword ptr [ebp-80], -1
.L_3D69:
	cmp dword ptr [ebp-80], 0
	je .L_3CE5
.L_3CE6:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [ebx+4]
.L_3CE5:
.L_3CE7:
.stabn 68,0,351,.L_3DF5-_SIZEMODEL@20
.L_3DF7:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CE8
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-52]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3D6A
.L_3CE8:
	mov dword ptr [ebp-84], -1
.L_3D6A:
	cmp dword ptr [ebp-84], 0
	je .L_3CEB
.L_3CEC:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-52]
	pop dword ptr [eax]
.L_3CEB:
.L_3CED:
.stabn 68,0,351,.L_3DF7-_SIZEMODEL@20
.L_3DF9:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CEE
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D6B
.L_3CEE:
	mov dword ptr [ebp-88], -1
.L_3D6B:
	cmp dword ptr [ebp-88], 0
	je .L_3CF1
.L_3CF2:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [ebx+12]
.L_3CF1:
.L_3CF3:
.stabn 68,0,351,.L_3DF9-_SIZEMODEL@20
.L_3DFB:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CF4
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-48]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_3D6C
.L_3CF4:
	mov dword ptr [ebp-92], -1
.L_3D6C:
	cmp dword ptr [ebp-92], 0
	je .L_3CF7
.L_3CF8:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-48]
	pop dword ptr [eax+8]
.L_3CF7:
.L_3CF9:
.stabn 68,0,351,.L_3DFB-_SIZEMODEL@20
.L_3DFD:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3CFA
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-96], ebx
	jmp .L_3D6D
.L_3CFA:
	mov dword ptr [ebp-96], -1
.L_3D6D:
	cmp dword ptr [ebp-96], 0
	je .L_3CFD
.L_3CFE:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [ebx+20]
.L_3CFD:
.L_3CFF:
.stabn 68,0,351,.L_3DFD-_SIZEMODEL@20
.L_3DFF:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D00
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-44]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-100], eax
	jmp .L_3D6E
.L_3D00:
	mov dword ptr [ebp-100], -1
.L_3D6E:
	cmp dword ptr [ebp-100], 0
	je .L_3D03
.L_3D04:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-44]
	pop dword ptr [eax+16]
.L_3D03:
.L_3D05:
.stabn 68,0,351,.L_3DFF-_SIZEMODEL@20
.L_3E01:
.L_3D06:
.L_3CE0:
.L_3CDF:
	cmp dword ptr [ebp-20], 0
	je .L_3D08
.L_3D09:
.stabn 68,0,352,.L_3E01-_SIZEMODEL@20
.L_3E02:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D0A
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_3D6F
.L_3D0A:
	mov dword ptr [ebp-80], -1
.L_3D6F:
	cmp dword ptr [ebp-80], 0
	je .L_3D0D
.L_3D0E:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [ebx+4]
.L_3D0D:
.L_3D0F:
.stabn 68,0,352,.L_3E02-_SIZEMODEL@20
.L_3E04:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D10
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-40]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_3D70
.L_3D10:
	mov dword ptr [ebp-84], -1
.L_3D70:
	cmp dword ptr [ebp-84], 0
	je .L_3D13
.L_3D14:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-40]
	pop dword ptr [eax]
.L_3D13:
.L_3D15:
.stabn 68,0,352,.L_3E04-_SIZEMODEL@20
.L_3E06:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D16
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_3D71
.L_3D16:
	mov dword ptr [ebp-88], -1
.L_3D71:
	cmp dword ptr [ebp-88], 0
	je .L_3D19
.L_3D1A:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [ebx+12]
.L_3D19:
.L_3D1B:
.stabn 68,0,352,.L_3E06-_SIZEMODEL@20
.L_3E08:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D1C
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-36]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_3D72
.L_3D1C:
	mov dword ptr [ebp-92], -1
.L_3D72:
	cmp dword ptr [ebp-92], 0
	je .L_3D1F
.L_3D20:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-36]
	pop dword ptr [eax+8]
.L_3D1F:
.L_3D21:
.stabn 68,0,352,.L_3E08-_SIZEMODEL@20
.L_3E0A:
	mov eax, dword ptr [ebp+12]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D22
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-96], ebx
	jmp .L_3D73
.L_3D22:
	mov dword ptr [ebp-96], -1
.L_3D73:
	cmp dword ptr [ebp-96], 0
	je .L_3D25
.L_3D26:
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [ebx+20]
.L_3D25:
.L_3D27:
.stabn 68,0,352,.L_3E0A-_SIZEMODEL@20
.L_3E0C:
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3D28
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [ebp-32]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-100], eax
	jmp .L_3D74
.L_3D28:
	mov dword ptr [ebp-100], -1
.L_3D74:
	cmp dword ptr [ebp-100], 0
	je .L_3D2B
.L_3D2C:
	mov eax, dword ptr [ebp+12]
	push dword ptr [ebp-32]
	pop dword ptr [eax+16]
.L_3D2B:
.L_3D2D:
.stabn 68,0,352,.L_3E0C-_SIZEMODEL@20
.L_3E0E:
.L_3D2E:
.L_3D08:
.L_3D07:
.L_3D2F:
.L_3D30:
	jmp .L_3BAD
.L_3C8B:
	movzx eax, byte ptr [ebp-28]
	cmp eax, 5
	jne .L_3D31
.L_3D32:
.L_3D33:
.stabn 68,0,354,.L_3E0E-_SIZEMODEL@20
.L_3E0F:
	inc dword ptr [_G_TOTALOPTIS]
.stabn 68,0,355,.L_3E0F-_SIZEMODEL@20
.L_3E10:
.L_3D34:
.L_3D31:
.L_3BAD:
.L_3D35:
.L_3D36:
.L_3D37:
.L_3BA0:
	inc dword ptr [ebp-8]
.L_3B9F:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_3BA2
.L_3BA1:
.L_3D38:
.stabn 68,0,358,.L_3E10-_SIZEMODEL@20
.L_3E11:
.L_3D39:
	mov eax, dword ptr [ebp+8]
	cmp dword ptr [ebp+24], eax
	jne .L_3D3B
.L_3D3C:
	call _POPMATRIX@0
.L_3D3B:
.L_3D3D:
.stabn 68,0,361,.L_3E11-_SIZEMODEL@20
.L_3E12:
.L_3B92:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,363,.L_3B92-_SIZEMODEL@20
	.stabn 192,0,0,.L_3B91-_SIZEMODEL@20
	.stabn 192,0,0,.L_3B95-_SIZEMODEL@20
	.stabn 224,0,0,.L_3B96-_SIZEMODEL@20
	.stabn 192,0,0,.L_3B99-_SIZEMODEL@20
	.stabn 224,0,0,.L_3B9A-_SIZEMODEL@20
	.stabn 192,0,0,.L_3B9B-_SIZEMODEL@20
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_3B9D-_SIZEMODEL@20
	.stabs "BWANTSIZE:1",128,0,0,-20
	.stabn 192,0,0,.L_3BA3-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BA6-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BA7-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BAA-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BAC-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BB1-_SIZEMODEL@20
	.stabs "PSUBPART:199=*101",128,0,0,-36
	.stabs "SNAME:13",128,0,0,-48
	.stabs "FMATRIX:200=ar1;0;15;11",128,0,0,-112
	.stabn 192,0,0,.L_3BB2-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BB5-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BB6-_SIZEMODEL@20
	.stabs "T2:113",128,0,0,-52
	.stabn 192,0,0,.L_3BB9-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BBA-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BBD-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BC2-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BC3-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BC8-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BC9-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BCE-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BCF-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BD4-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BD5-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BDA-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BDB-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BE0-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BE1-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BE2-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BE5-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BEA-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BEB-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BF0-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BF1-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BF6-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BF7-_SIZEMODEL@20
	.stabn 192,0,0,.L_3BFC-_SIZEMODEL@20
	.stabn 224,0,0,.L_3BFD-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C02-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C03-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C08-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C09-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C0A-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C0B-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C0C-_SIZEMODEL@20
	.stabs "T3:114",128,0,0,-64
	.stabn 192,0,0,.L_3C0F-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C10-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C13-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C18-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C19-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C1E-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C1F-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C24-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C25-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C2A-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C2B-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C30-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C31-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C36-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C37-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C38-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C3B-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C40-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C41-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C46-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C47-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C4C-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C4D-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C52-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C53-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C58-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C59-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C5E-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C5F-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C60-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C63-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C68-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C69-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C6E-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C6F-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C74-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C75-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C7A-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C7B-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C80-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C81-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C86-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C87-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C88-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C89-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C8A-_SIZEMODEL@20
	.stabs "T4:115",128,0,0,-76
	.stabn 192,0,0,.L_3C8D-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C8E-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C91-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C96-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C97-_SIZEMODEL@20
	.stabn 192,0,0,.L_3C9C-_SIZEMODEL@20
	.stabn 224,0,0,.L_3C9D-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CA2-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CA3-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CA8-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CA9-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CAE-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CAF-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CB4-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CB5-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CB6-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CB9-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CBE-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CBF-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CC4-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CC5-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CCA-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CCB-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CD0-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CD1-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CD6-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CD7-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CDC-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CDD-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CDE-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CE1-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CE6-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CE7-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CEC-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CED-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CF2-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CF3-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CF8-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CF9-_SIZEMODEL@20
	.stabn 192,0,0,.L_3CFE-_SIZEMODEL@20
	.stabn 224,0,0,.L_3CFF-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D04-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D05-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D06-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D09-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D0E-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D0F-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D14-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D15-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D1A-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D1B-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D20-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D21-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D26-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D27-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D2C-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D2D-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D2E-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D2F-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D30-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D33-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D34-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D35-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D36-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D37-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D38-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D39-_SIZEMODEL@20
	.stabn 192,0,0,.L_3D3C-_SIZEMODEL@20
	.stabn 224,0,0,.L_3D3D-_SIZEMODEL@20
	.stabn 224,0,0,.L_3B92-_SIZEMODEL@20
.L_3E13:
	.stabs "",36,0,0,.L_3E13-_SIZEMODEL@20
	.stabs "GETCOLLISIONBOUNDARIES:F7",36,0,367,_GETCOLLISIONBOUNDARIES@12
	.stabs "TRESULT:v102",160,0,0,8
	.stabs "TA:v102",160,0,0,12
	.stabs "TB:v102",160,0,0,16
.balign 16

.globl _GETCOLLISIONBOUNDARIES@12
_GETCOLLISIONBOUNDARIES@12:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,367,_GETCOLLISIONBOUNDARIES@12-_GETCOLLISIONBOUNDARIES@12
.L_3E14:
.L_3E28:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+16]
	fld dword ptr [eax]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	jae .L_3E16
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebx]
	pop dword ptr [ebp-4]
	jmp .L_3E22
.L_3E16:
	mov ebx, dword ptr [ebp+16]
	push dword ptr [ebx]
	pop dword ptr [ebp-4]
.L_3E22:
	mov ebx, dword ptr [ebp+8]
	push dword ptr [ebp-4]
	pop dword ptr [ebx]
.stabn 68,0,368,.L_3E28-_GETCOLLISIONBOUNDARIES@12
.L_3E29:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp+16]
	fld dword ptr [ebx+4]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_3E18
	mov eax, dword ptr [ebp+12]
	push dword ptr [eax+4]
	pop dword ptr [ebp-8]
	jmp .L_3E23
.L_3E18:
	mov eax, dword ptr [ebp+16]
	push dword ptr [eax+4]
	pop dword ptr [ebp-8]
.L_3E23:
	mov eax, dword ptr [ebp+8]
	push dword ptr [ebp-8]
	pop dword ptr [eax+4]
.stabn 68,0,369,.L_3E29-_GETCOLLISIONBOUNDARIES@12
.L_3E2A:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+16]
	fld dword ptr [eax+8]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	jae .L_3E1A
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebx+8]
	pop dword ptr [ebp-12]
	jmp .L_3E24
.L_3E1A:
	mov ebx, dword ptr [ebp+16]
	push dword ptr [ebx+8]
	pop dword ptr [ebp-12]
.L_3E24:
	mov ebx, dword ptr [ebp+8]
	push dword ptr [ebp-12]
	pop dword ptr [ebx+8]
.stabn 68,0,370,.L_3E2A-_GETCOLLISIONBOUNDARIES@12
.L_3E2B:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp+16]
	fld dword ptr [ebx+12]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_3E1C
	mov eax, dword ptr [ebp+12]
	push dword ptr [eax+12]
	pop dword ptr [ebp-16]
	jmp .L_3E25
.L_3E1C:
	mov eax, dword ptr [ebp+16]
	push dword ptr [eax+12]
	pop dword ptr [ebp-16]
.L_3E25:
	mov eax, dword ptr [ebp+8]
	push dword ptr [ebp-16]
	pop dword ptr [eax+12]
.stabn 68,0,371,.L_3E2B-_GETCOLLISIONBOUNDARIES@12
.L_3E2C:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+16]
	fld dword ptr [eax+16]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	jae .L_3E1E
	mov ebx, dword ptr [ebp+12]
	push dword ptr [ebx+16]
	pop dword ptr [ebp-20]
	jmp .L_3E26
.L_3E1E:
	mov ebx, dword ptr [ebp+16]
	push dword ptr [ebx+16]
	pop dword ptr [ebp-20]
.L_3E26:
	mov ebx, dword ptr [ebp+8]
	push dword ptr [ebp-20]
	pop dword ptr [ebx+16]
.stabn 68,0,372,.L_3E2C-_GETCOLLISIONBOUNDARIES@12
.L_3E2D:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp+16]
	fld dword ptr [ebx+20]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_3E20
	mov eax, dword ptr [ebp+12]
	push dword ptr [eax+20]
	pop dword ptr [ebp-24]
	jmp .L_3E27
.L_3E20:
	mov eax, dword ptr [ebp+16]
	push dword ptr [eax+20]
	pop dword ptr [ebp-24]
.L_3E27:
	mov eax, dword ptr [ebp+8]
	push dword ptr [ebp-24]
	pop dword ptr [eax+20]
.stabn 68,0,373,.L_3E2D-_GETCOLLISIONBOUNDARIES@12
.L_3E2E:
.L_3E15:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,374,.L_3E15-_GETCOLLISIONBOUNDARIES@12
	.stabn 192,0,0,.L_3E14-_GETCOLLISIONBOUNDARIES@12
	.stabn 224,0,0,.L_3E15-_GETCOLLISIONBOUNDARIES@12
.L_3E2F:
	.stabs "",36,0,0,.L_3E2F-_GETCOLLISIONBOUNDARIES@12
	.stabs "CHECKCOLLISION:F2",36,0,375,_CHECKCOLLISION@8
	.stabs "TA:v102",160,0,0,8
	.stabs "TB:v102",160,0,0,12
.balign 16

.globl _CHECKCOLLISION@8
_CHECKCOLLISION@8:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,375,_CHECKCOLLISION@8-_CHECKCOLLISION@8
	mov byte ptr [ebp-4], 0
.L_3E30:
.L_3E47:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [eax+4]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	ja .L_3E32
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebx]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-8], ebx
	jmp .L_3E44
.L_3E32:
	mov dword ptr [ebp-8], -1
.L_3E44:
	cmp dword ptr [ebp-8], 0
	je .L_3E35
.L_3E36:
	mov byte ptr [ebp-4], 0
	jmp .L_3E31
.L_3E35:
.L_3E37:
.stabn 68,0,377,.L_3E47-_CHECKCOLLISION@8
.L_3E49:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebx+12]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	ja .L_3E38
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [eax+8]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-12], eax
	jmp .L_3E45
.L_3E38:
	mov dword ptr [ebp-12], -1
.L_3E45:
	cmp dword ptr [ebp-12], 0
	je .L_3E3B
.L_3E3C:
	mov byte ptr [ebp-4], 0
	jmp .L_3E31
.L_3E3B:
.L_3E3D:
.stabn 68,0,379,.L_3E49-_CHECKCOLLISION@8
.L_3E4B:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [ebp+12]
	fld dword ptr [eax+20]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	ja .L_3E3E
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebp+12]
	fld dword ptr [ebx+16]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-16], ebx
	jmp .L_3E46
.L_3E3E:
	mov dword ptr [ebp-16], -1
.L_3E46:
	cmp dword ptr [ebp-16], 0
	je .L_3E41
.L_3E42:
	mov byte ptr [ebp-4], 0
	jmp .L_3E31
.L_3E41:
.L_3E43:
.stabn 68,0,381,.L_3E4B-_CHECKCOLLISION@8
.L_3E4D:
	mov byte ptr [ebp-4], -1
.stabn 68,0,383,.L_3E4D-_CHECKCOLLISION@8
.L_3E4E:
.L_3E31:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,384,.L_3E31-_CHECKCOLLISION@8
	.stabn 192,0,0,.L_3E30-_CHECKCOLLISION@8
	.stabn 192,0,0,.L_3E36-_CHECKCOLLISION@8
	.stabn 224,0,0,.L_3E37-_CHECKCOLLISION@8
	.stabn 192,0,0,.L_3E3C-_CHECKCOLLISION@8
	.stabn 224,0,0,.L_3E3D-_CHECKCOLLISION@8
	.stabn 192,0,0,.L_3E42-_CHECKCOLLISION@8
	.stabn 224,0,0,.L_3E43-_CHECKCOLLISION@8
	.stabn 224,0,0,.L_3E31-_CHECKCOLLISION@8
.L_3E4F:
	.stabs "",36,0,0,.L_3E4F-_CHECKCOLLISION@8
	.stabs "CHECKCOLLISIONMODEL:F7",36,0,386,_CHECKCOLLISIONMODEL@12
	.stabs "PPART:p201=*101",160,0,0,8
	.stabs "FBARRAY:Tt202=s120DATA:203=*102,0,32;PTR:204=*102,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:205=ar1;0;0;70,192,768;;",128,0,0,0
	.stabs "ATCOLLISION:v202",160,0,0,12
	.stabs "PROOT:p206=*101",160,0,0,16
.balign 16

.globl _CHECKCOLLISIONMODEL@12
_CHECKCOLLISIONMODEL@12:
	push ebp
	mov ebp, esp
	sub esp, 164
	push ebx
	.stabn 68,0,386,_CHECKCOLLISIONMODEL@12-_CHECKCOLLISIONMODEL@12
.L_3E50:
.L_4048:
	cmp dword ptr [ebp+16], 0
	jne .L_3E53
.L_3E54:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp+16], eax
.L_3E53:
.L_3E55:
.stabn 68,0,388,.L_4048-_CHECKCOLLISIONMODEL@12
.L_4049:
	mov eax, dword ptr [ebp+16]
	cmp dword ptr [ebp+8], eax
	jne .L_3E57
.L_3E58:
.stabn 68,0,404,.L_4049-_CHECKCOLLISIONMODEL@12
.L_404A:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+4]
	dec ebx
	push ebx
	push 0
	push 1
	push 0
	push offset __ZN8PARTSIZEC1Ev
	push 24
	push offset _Lt_404B
	call _fb_ArrayRedimObj
	add esp, 28
.stabn 68,0,405,.L_404A-_CHECKCOLLISIONMODEL@12
.L_404C:
	push 0
	push 0
	push 1
	push 0
	push offset __ZN8PARTSIZEC1Ev
	push 24
	push dword ptr [ebp+12]
	call _fb_ArrayRedimObj
	add esp, 28
.stabn 68,0,406,.L_404C-_CHECKCOLLISIONMODEL@12
.L_404D:
.L_3E5A:
.L_3E57:
.L_3E56:
.L_3E5B:
	mov ebx, dword ptr [ebp+8]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,410,.L_404D-_CHECKCOLLISIONMODEL@12
.L_404E:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-4]
	fld dword ptr [ebx+28]
	fld dword ptr [eax+24]
	fcomip st, st(1)
	fstp st(0)
	jnz .L_3E5E
.L_3E5F:
.stabn 68,0,411,.L_404E-_CHECKCOLLISIONMODEL@12
.L_404F:
	lea eax, [ebp-28]
	push eax
	call __ZN8PARTSIZEC1Ev
	add esp, 4
	push 0
	mov dword ptr [ebp-32], -1
	lea eax, [ebp-32]
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp+8]
	call _SIZEMODEL@20
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+8]
	lea eax, [ebp-28]
	push edi
	push esi
	mov edi, ebx
	mov esi, eax
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
.stabn 68,0,412,.L_404F-_CHECKCOLLISIONMODEL@12
.L_4050:
.L_3E61:
.L_3E5E:
.L_3E5D:
.L_3E62:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax+4]
	dec ebx
	mov dword ptr [ebp-12], ebx
	jmp .L_3E64
.L_3E67:
.L_3E68:
.stabn 68,0,414,.L_4050-_CHECKCOLLISIONMODEL@12
.L_4051:
	mov ebx, dword ptr [ebp+16]
	cmp dword ptr [ebp+8], ebx
	jne .L_3E6A
.L_3E6B:
.stabn 68,0,415,.L_4051-_CHECKCOLLISIONMODEL@12
.L_4052:
.L_3E6C:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	lea eax, [ebx]
	mov dword ptr [ebp-16], eax
.stabn 68,0,417,.L_4052-_CHECKCOLLISIONMODEL@12
.L_4053:
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+4]
.stabn 68,0,418,.L_4053-_CHECKCOLLISIONMODEL@12
.L_4054:
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+8]
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+12]
.stabn 68,0,419,.L_4054-_CHECKCOLLISIONMODEL@12
.L_4055:
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+16]
	mov eax, dword ptr [ebp-16]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax+20]
.stabn 68,0,420,.L_4055-_CHECKCOLLISIONMODEL@12
.L_4056:
.L_3E6E:
	mov eax, dword ptr [ebp-8]
	imul eax, 24
	add eax, dword ptr [_Lt_404B]
	lea ebx, [eax]
	mov dword ptr [_Lt_4057], ebx
.stabn 68,0,422,.L_4056-_CHECKCOLLISIONMODEL@12
.L_4058:
.L_3E6F:
.L_3E6A:
.L_3E69:
.L_3E70:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 56
	mov eax, dword ptr [ebp-4]
	add eax, ebx
	lea ebx, [eax+44]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,427,.L_4058-_CHECKCOLLISIONMODEL@12
.L_4059:
.L_3E72:
	mov ebx, dword ptr [ebp-16]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-20], al
.stabn 68,0,428,.L_4059-_CHECKCOLLISIONMODEL@12
.L_405A:
	movzx eax, byte ptr [ebp-20]
	cmp eax, 1
	jne .L_3E75
.L_3E76:
.L_3E77:
.stabn 68,0,429,.L_405A-_CHECKCOLLISIONMODEL@12
.L_405B:
.L_3E78:
	mov eax, dword ptr [ebp-16]
	lea ebx, [eax+4]
	mov dword ptr [ebp-24], ebx
.stabn 68,0,431,.L_405B-_CHECKCOLLISIONMODEL@12
.L_405C:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx+48]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-28], ebx
.stabn 68,0,432,.L_405C-_CHECKCOLLISIONMODEL@12
.L_405D:
	push 0
	push 0
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx+48]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	mov ebx, dword ptr [_G_SFILENAMES]
	add ebx, dword ptr [eax]
	add ebx, 6
	push ebx
	push -1
	lea ebx, [ebp-40]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,433,.L_405D-_CHECKCOLLISIONMODEL@12
.L_405E:
	lea ebx, [ebp-104]
	mov dword ptr [ebp-140], ebx
	lea ebx, [ebp-104]
	mov dword ptr [ebp-136], ebx
	mov dword ptr [ebp-132], 64
	mov dword ptr [ebp-128], 4
	mov dword ptr [ebp-124], 1
	mov dword ptr [ebp-120], 49
	mov dword ptr [ebp-116], 16
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 15
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+12]
	fstp dword ptr [ebp-104]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+24]
	fstp dword ptr [ebp-100]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+36]
	fstp dword ptr [ebp-96]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-92]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+16]
	fstp dword ptr [ebp-88]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+28]
	fstp dword ptr [ebp-84]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+40]
	fstp dword ptr [ebp-80]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-76]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+20]
	fstp dword ptr [ebp-72]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+32]
	fstp dword ptr [ebp-68]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+44]
	fstp dword ptr [ebp-64]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-60]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx]
	fstp dword ptr [ebp-56]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+4]
	fstp dword ptr [ebp-52]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [_Lt_38D3]
	fmul dword ptr [ebx+8]
	fstp dword ptr [ebp-48]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-44]
.stabn 68,0,434,.L_405E-_CHECKCOLLISIONMODEL@12
.L_405F:
	lea ebx, [ebp-104]
	push ebx
	call _PUSHANDMULTMATRIX@4
.stabn 68,0,439,.L_405F-_CHECKCOLLISIONMODEL@12
.L_4060:
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp-28]
	call _CHECKCOLLISIONMODEL@12
.stabn 68,0,442,.L_4060-_CHECKCOLLISIONMODEL@12
.L_4061:
	call _POPMATRIX@0
.stabn 68,0,443,.L_4061-_CHECKCOLLISIONMODEL@12
.L_4062:
	lea ebx, [ebp-40]
	push ebx
	call _fb_StrDelete@4
.L_3E7B:
.stabn 68,0,444,.L_4062-_CHECKCOLLISIONMODEL@12
.L_4063:
.L_3E7C:
	jmp .L_3E73
.L_3E75:
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 2
	jne .L_3E7D
.L_3E7E:
.L_3E7F:
.stabn 68,0,445,.L_4063-_CHECKCOLLISIONMODEL@12
.L_4064:
	lea ebx, [ebp-44]
	mov eax, dword ptr [ebp-16]
	lea ecx, [eax+4]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,446,.L_4064-_CHECKCOLLISIONMODEL@12
.L_4065:
	push 0
	lea ecx, [ebp-44]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,447,.L_4065-_CHECKCOLLISIONMODEL@12
.L_4066:
	push 0
	lea ecx, [ebp-32]
	push ecx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,448,.L_4066-_CHECKCOLLISIONMODEL@12
.L_4067:
.L_3E80:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E81
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [ecx+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-48], ebx
	jmp .L_400F
.L_3E81:
	mov dword ptr [ebp-48], -1
.L_400F:
	cmp dword ptr [ebp-48], 0
	je .L_3E84
.L_3E85:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [ebx+4]
.L_3E84:
.L_3E86:
.stabn 68,0,450,.L_4067-_CHECKCOLLISIONMODEL@12
.L_4069:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E87
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-52], ecx
	jmp .L_4010
.L_3E87:
	mov dword ptr [ebp-52], -1
.L_4010:
	cmp dword ptr [ebp-52], 0
	je .L_3E8A
.L_3E8B:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [ecx]
.L_3E8A:
.L_3E8C:
.stabn 68,0,450,.L_4069-_CHECKCOLLISIONMODEL@12
.L_406B:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E8D
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [ecx+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-56], ebx
	jmp .L_4011
.L_3E8D:
	mov dword ptr [ebp-56], -1
.L_4011:
	cmp dword ptr [ebp-56], 0
	je .L_3E90
.L_3E91:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [ebx+12]
.L_3E90:
.L_3E92:
.stabn 68,0,450,.L_406B-_CHECKCOLLISIONMODEL@12
.L_406D:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E93
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-60], ecx
	jmp .L_4012
.L_3E93:
	mov dword ptr [ebp-60], -1
.L_4012:
	cmp dword ptr [ebp-60], 0
	je .L_3E96
.L_3E97:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [ecx+8]
.L_3E96:
.L_3E98:
.stabn 68,0,450,.L_406D-_CHECKCOLLISIONMODEL@12
.L_406F:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E99
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [ecx+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-64], ebx
	jmp .L_4013
.L_3E99:
	mov dword ptr [ebp-64], -1
.L_4013:
	cmp dword ptr [ebp-64], 0
	je .L_3E9C
.L_3E9D:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [ebx+20]
.L_3E9C:
.L_3E9E:
.stabn 68,0,450,.L_406F-_CHECKCOLLISIONMODEL@12
.L_4071:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3E9F
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_4014
.L_3E9F:
	mov dword ptr [ebp-68], -1
.L_4014:
	cmp dword ptr [ebp-68], 0
	je .L_3EA2
.L_3EA3:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [ecx+16]
.L_3EA2:
.L_3EA4:
.stabn 68,0,450,.L_4071-_CHECKCOLLISIONMODEL@12
.L_4073:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EA5
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [ecx+4]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-72], ebx
	jmp .L_4015
.L_3EA5:
	mov dword ptr [ebp-72], -1
.L_4015:
	cmp dword ptr [ebp-72], 0
	je .L_3EA8
.L_3EA9:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [ebx+4]
.L_3EA8:
.L_3EAA:
.stabn 68,0,451,.L_4073-_CHECKCOLLISIONMODEL@12
.L_4075:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EAB
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [ebx]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_4016
.L_3EAB:
	mov dword ptr [ebp-76], -1
.L_4016:
	cmp dword ptr [ebp-76], 0
	je .L_3EAE
.L_3EAF:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [ecx]
.L_3EAE:
.L_3EB0:
.stabn 68,0,451,.L_4075-_CHECKCOLLISIONMODEL@12
.L_4077:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EB1
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [ecx+12]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-80], ebx
	jmp .L_4017
.L_3EB1:
	mov dword ptr [ebp-80], -1
.L_4017:
	cmp dword ptr [ebp-80], 0
	je .L_3EB4
.L_3EB5:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [ebx+12]
.L_3EB4:
.L_3EB6:
.stabn 68,0,451,.L_4077-_CHECKCOLLISIONMODEL@12
.L_4079:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EB7
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [ebx+8]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-84], ecx
	jmp .L_4018
.L_3EB7:
	mov dword ptr [ebp-84], -1
.L_4018:
	cmp dword ptr [ebp-84], 0
	je .L_3EBA
.L_3EBB:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [ecx+8]
.L_3EBA:
.L_3EBC:
.stabn 68,0,451,.L_4079-_CHECKCOLLISIONMODEL@12
.L_407B:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EBD
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [ecx+20]
	fcomip st, st(1)
	fstp st(0)
	setb bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_4019
.L_3EBD:
	mov dword ptr [ebp-88], -1
.L_4019:
	cmp dword ptr [ebp-88], 0
	je .L_3EC0
.L_3EC1:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [ebx+20]
.L_3EC0:
.L_3EC2:
.stabn 68,0,451,.L_407B-_CHECKCOLLISIONMODEL@12
.L_407D:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EC3
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [ebx+16]
	fcomip st, st(1)
	fstp st(0)
	seta cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-92], ecx
	jmp .L_401A
.L_3EC3:
	mov dword ptr [ebp-92], -1
.L_401A:
	cmp dword ptr [ebp-92], 0
	je .L_3EC6
.L_3EC7:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [ecx+16]
.L_3EC6:
.L_3EC8:
.stabn 68,0,451,.L_407D-_CHECKCOLLISIONMODEL@12
.L_407F:
.L_3EC9:
.L_3ECA:
	jmp .L_3E73
.L_3E7D:
	movzx ecx, byte ptr [ebp-20]
	cmp ecx, 3
	jne .L_3ECB
.L_3ECC:
.L_3ECD:
.stabn 68,0,453,.L_407F-_CHECKCOLLISIONMODEL@12
.L_4080:
	lea ecx, [ebp-56]
	mov ebx, dword ptr [ebp-16]
	lea eax, [ebx+4]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, eax
	mov ecx, 9
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,454,.L_4080-_CHECKCOLLISIONMODEL@12
.L_4081:
	push 0
	lea eax, [ebp-56]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,455,.L_4081-_CHECKCOLLISIONMODEL@12
.L_4082:
	push 0
	lea eax, [ebp-44]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,456,.L_4082-_CHECKCOLLISIONMODEL@12
.L_4083:
	push 0
	lea eax, [ebp-32]
	push eax
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,457,.L_4083-_CHECKCOLLISIONMODEL@12
.L_4084:
.L_3ECE:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3ECF
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-56]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-60], ecx
	jmp .L_401B
.L_3ECF:
	mov dword ptr [ebp-60], -1
.L_401B:
	cmp dword ptr [ebp-60], 0
	je .L_3ED2
.L_3ED3:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-56]
	pop dword ptr [ecx+4]
.L_3ED2:
.L_3ED4:
.stabn 68,0,459,.L_4084-_CHECKCOLLISIONMODEL@12
.L_4086:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3ED5
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-56]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-64], eax
	jmp .L_401C
.L_3ED5:
	mov dword ptr [ebp-64], -1
.L_401C:
	cmp dword ptr [ebp-64], 0
	je .L_3ED8
.L_3ED9:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-56]
	pop dword ptr [eax]
.L_3ED8:
.L_3EDA:
.stabn 68,0,459,.L_4086-_CHECKCOLLISIONMODEL@12
.L_4088:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EDB
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-52]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-68], ecx
	jmp .L_401D
.L_3EDB:
	mov dword ptr [ebp-68], -1
.L_401D:
	cmp dword ptr [ebp-68], 0
	je .L_3EDE
.L_3EDF:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-52]
	pop dword ptr [ecx+12]
.L_3EDE:
.L_3EE0:
.stabn 68,0,459,.L_4088-_CHECKCOLLISIONMODEL@12
.L_408A:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EE1
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-52]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_401E
.L_3EE1:
	mov dword ptr [ebp-72], -1
.L_401E:
	cmp dword ptr [ebp-72], 0
	je .L_3EE4
.L_3EE5:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-52]
	pop dword ptr [eax+8]
.L_3EE4:
.L_3EE6:
.stabn 68,0,459,.L_408A-_CHECKCOLLISIONMODEL@12
.L_408C:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EE7
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-48]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-76], ecx
	jmp .L_401F
.L_3EE7:
	mov dword ptr [ebp-76], -1
.L_401F:
	cmp dword ptr [ebp-76], 0
	je .L_3EEA
.L_3EEB:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-48]
	pop dword ptr [ecx+20]
.L_3EEA:
.L_3EEC:
.stabn 68,0,459,.L_408C-_CHECKCOLLISIONMODEL@12
.L_408E:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EED
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-48]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_4020
.L_3EED:
	mov dword ptr [ebp-80], -1
.L_4020:
	cmp dword ptr [ebp-80], 0
	je .L_3EF0
.L_3EF1:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-48]
	pop dword ptr [eax+16]
.L_3EF0:
.L_3EF2:
.stabn 68,0,459,.L_408E-_CHECKCOLLISIONMODEL@12
.L_4090:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EF3
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-84], ecx
	jmp .L_4021
.L_3EF3:
	mov dword ptr [ebp-84], -1
.L_4021:
	cmp dword ptr [ebp-84], 0
	je .L_3EF6
.L_3EF7:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [ecx+4]
.L_3EF6:
.L_3EF8:
.stabn 68,0,460,.L_4090-_CHECKCOLLISIONMODEL@12
.L_4092:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EF9
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_4022
.L_3EF9:
	mov dword ptr [ebp-88], -1
.L_4022:
	cmp dword ptr [ebp-88], 0
	je .L_3EFC
.L_3EFD:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [eax]
.L_3EFC:
.L_3EFE:
.stabn 68,0,460,.L_4092-_CHECKCOLLISIONMODEL@12
.L_4094:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3EFF
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-92], ecx
	jmp .L_4023
.L_3EFF:
	mov dword ptr [ebp-92], -1
.L_4023:
	cmp dword ptr [ebp-92], 0
	je .L_3F02
.L_3F03:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [ecx+12]
.L_3F02:
.L_3F04:
.stabn 68,0,460,.L_4094-_CHECKCOLLISIONMODEL@12
.L_4096:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F05
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-96], eax
	jmp .L_4024
.L_3F05:
	mov dword ptr [ebp-96], -1
.L_4024:
	cmp dword ptr [ebp-96], 0
	je .L_3F08
.L_3F09:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [eax+8]
.L_3F08:
.L_3F0A:
.stabn 68,0,460,.L_4096-_CHECKCOLLISIONMODEL@12
.L_4098:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F0B
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-100], ecx
	jmp .L_4025
.L_3F0B:
	mov dword ptr [ebp-100], -1
.L_4025:
	cmp dword ptr [ebp-100], 0
	je .L_3F0E
.L_3F0F:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [ecx+20]
.L_3F0E:
.L_3F10:
.stabn 68,0,460,.L_4098-_CHECKCOLLISIONMODEL@12
.L_409A:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F11
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-104], eax
	jmp .L_4026
.L_3F11:
	mov dword ptr [ebp-104], -1
.L_4026:
	cmp dword ptr [ebp-104], 0
	je .L_3F14
.L_3F15:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [eax+16]
.L_3F14:
.L_3F16:
.stabn 68,0,460,.L_409A-_CHECKCOLLISIONMODEL@12
.L_409C:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F17
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [eax+4]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-108], ecx
	jmp .L_4027
.L_3F17:
	mov dword ptr [ebp-108], -1
.L_4027:
	cmp dword ptr [ebp-108], 0
	je .L_3F1A
.L_3F1B:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [ecx+4]
.L_3F1A:
.L_3F1C:
.stabn 68,0,461,.L_409C-_CHECKCOLLISIONMODEL@12
.L_409E:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F1D
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [ecx]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-112], eax
	jmp .L_4028
.L_3F1D:
	mov dword ptr [ebp-112], -1
.L_4028:
	cmp dword ptr [ebp-112], 0
	je .L_3F20
.L_3F21:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [eax]
.L_3F20:
.L_3F22:
.stabn 68,0,461,.L_409E-_CHECKCOLLISIONMODEL@12
.L_40A0:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F23
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [eax+12]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-116], ecx
	jmp .L_4029
.L_3F23:
	mov dword ptr [ebp-116], -1
.L_4029:
	cmp dword ptr [ebp-116], 0
	je .L_3F26
.L_3F27:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [ecx+12]
.L_3F26:
.L_3F28:
.stabn 68,0,461,.L_40A0-_CHECKCOLLISIONMODEL@12
.L_40A2:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F29
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [ecx+8]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-120], eax
	jmp .L_402A
.L_3F29:
	mov dword ptr [ebp-120], -1
.L_402A:
	cmp dword ptr [ebp-120], 0
	je .L_3F2C
.L_3F2D:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [eax+8]
.L_3F2C:
.L_3F2E:
.stabn 68,0,461,.L_40A2-_CHECKCOLLISIONMODEL@12
.L_40A4:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F2F
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [eax+20]
	fcomip st, st(1)
	fstp st(0)
	setb cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-124], ecx
	jmp .L_402B
.L_3F2F:
	mov dword ptr [ebp-124], -1
.L_402B:
	cmp dword ptr [ebp-124], 0
	je .L_3F32
.L_3F33:
	mov ecx, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [ecx+20]
.L_3F32:
.L_3F34:
.stabn 68,0,461,.L_40A4-_CHECKCOLLISIONMODEL@12
.L_40A6:
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F35
	mov ecx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [ecx+16]
	fcomip st, st(1)
	fstp st(0)
	seta al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-128], eax
	jmp .L_402C
.L_3F35:
	mov dword ptr [ebp-128], -1
.L_402C:
	cmp dword ptr [ebp-128], 0
	je .L_3F38
.L_3F39:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [eax+16]
.L_3F38:
.L_3F3A:
.stabn 68,0,461,.L_40A6-_CHECKCOLLISIONMODEL@12
.L_40A8:
.L_3F3B:
.L_3F3C:
	jmp .L_3E73
.L_3ECB:
	movzx eax, byte ptr [ebp-20]
	cmp eax, 4
	jne .L_3F3D
.L_3F3E:
.L_3F3F:
.stabn 68,0,463,.L_40A8-_CHECKCOLLISIONMODEL@12
.L_40A9:
	lea eax, [ebp-68]
	mov ecx, dword ptr [ebp-16]
	lea ebx, [ecx+4]
	push edi
	push esi
	mov edi, eax
	mov esi, ebx
	mov ecx, 12
	rep movsd
	pop esi
	pop edi
.stabn 68,0,464,.L_40A9-_CHECKCOLLISIONMODEL@12
.L_40AA:
	push 0
	lea ebx, [ebp-68]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,466,.L_40AA-_CHECKCOLLISIONMODEL@12
.L_40AB:
	push 0
	lea ebx, [ebp-56]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,467,.L_40AB-_CHECKCOLLISIONMODEL@12
.L_40AC:
	push 0
	lea ebx, [ebp-44]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,468,.L_40AC-_CHECKCOLLISIONMODEL@12
.L_40AD:
	push 0
	lea ebx, [ebp-32]
	push ebx
	call _MULTIPLYMATRIXVECTOR@8
.stabn 68,0,469,.L_40AD-_CHECKCOLLISIONMODEL@12
.L_40AE:
.L_3F40:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F41
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-68]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_402D
.L_3F41:
	mov dword ptr [ebp-72], -1
.L_402D:
	cmp dword ptr [ebp-72], 0
	je .L_3F44
.L_3F45:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-68]
	pop dword ptr [eax+4]
.L_3F44:
.L_3F46:
.stabn 68,0,471,.L_40AE-_CHECKCOLLISIONMODEL@12
.L_40B0:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F47
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-68]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-76], ebx
	jmp .L_402E
.L_3F47:
	mov dword ptr [ebp-76], -1
.L_402E:
	cmp dword ptr [ebp-76], 0
	je .L_3F4A
.L_3F4B:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-68]
	pop dword ptr [ebx]
.L_3F4A:
.L_3F4C:
.stabn 68,0,471,.L_40B0-_CHECKCOLLISIONMODEL@12
.L_40B2:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F4D
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-64]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_402F
.L_3F4D:
	mov dword ptr [ebp-80], -1
.L_402F:
	cmp dword ptr [ebp-80], 0
	je .L_3F50
.L_3F51:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-64]
	pop dword ptr [eax+12]
.L_3F50:
.L_3F52:
.stabn 68,0,471,.L_40B2-_CHECKCOLLISIONMODEL@12
.L_40B4:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F53
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-64]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-84], ebx
	jmp .L_4030
.L_3F53:
	mov dword ptr [ebp-84], -1
.L_4030:
	cmp dword ptr [ebp-84], 0
	je .L_3F56
.L_3F57:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-64]
	pop dword ptr [ebx+8]
.L_3F56:
.L_3F58:
.stabn 68,0,471,.L_40B4-_CHECKCOLLISIONMODEL@12
.L_40B6:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F59
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-60]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_4031
.L_3F59:
	mov dword ptr [ebp-88], -1
.L_4031:
	cmp dword ptr [ebp-88], 0
	je .L_3F5C
.L_3F5D:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-60]
	pop dword ptr [eax+20]
.L_3F5C:
.L_3F5E:
.stabn 68,0,471,.L_40B6-_CHECKCOLLISIONMODEL@12
.L_40B8:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F5F
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-60]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-92], ebx
	jmp .L_4032
.L_3F5F:
	mov dword ptr [ebp-92], -1
.L_4032:
	cmp dword ptr [ebp-92], 0
	je .L_3F62
.L_3F63:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-60]
	pop dword ptr [ebx+16]
.L_3F62:
.L_3F64:
.stabn 68,0,471,.L_40B8-_CHECKCOLLISIONMODEL@12
.L_40BA:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F65
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-56]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-96], eax
	jmp .L_4033
.L_3F65:
	mov dword ptr [ebp-96], -1
.L_4033:
	cmp dword ptr [ebp-96], 0
	je .L_3F68
.L_3F69:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-56]
	pop dword ptr [eax+4]
.L_3F68:
.L_3F6A:
.stabn 68,0,472,.L_40BA-_CHECKCOLLISIONMODEL@12
.L_40BC:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F6B
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-56]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-100], ebx
	jmp .L_4034
.L_3F6B:
	mov dword ptr [ebp-100], -1
.L_4034:
	cmp dword ptr [ebp-100], 0
	je .L_3F6E
.L_3F6F:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-56]
	pop dword ptr [ebx]
.L_3F6E:
.L_3F70:
.stabn 68,0,472,.L_40BC-_CHECKCOLLISIONMODEL@12
.L_40BE:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F71
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-52]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-104], eax
	jmp .L_4035
.L_3F71:
	mov dword ptr [ebp-104], -1
.L_4035:
	cmp dword ptr [ebp-104], 0
	je .L_3F74
.L_3F75:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-52]
	pop dword ptr [eax+12]
.L_3F74:
.L_3F76:
.stabn 68,0,472,.L_40BE-_CHECKCOLLISIONMODEL@12
.L_40C0:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F77
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-52]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-108], ebx
	jmp .L_4036
.L_3F77:
	mov dword ptr [ebp-108], -1
.L_4036:
	cmp dword ptr [ebp-108], 0
	je .L_3F7A
.L_3F7B:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-52]
	pop dword ptr [ebx+8]
.L_3F7A:
.L_3F7C:
.stabn 68,0,472,.L_40C0-_CHECKCOLLISIONMODEL@12
.L_40C2:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F7D
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-48]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-112], eax
	jmp .L_4037
.L_3F7D:
	mov dword ptr [ebp-112], -1
.L_4037:
	cmp dword ptr [ebp-112], 0
	je .L_3F80
.L_3F81:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-48]
	pop dword ptr [eax+20]
.L_3F80:
.L_3F82:
.stabn 68,0,472,.L_40C2-_CHECKCOLLISIONMODEL@12
.L_40C4:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F83
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-48]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-116], ebx
	jmp .L_4038
.L_3F83:
	mov dword ptr [ebp-116], -1
.L_4038:
	cmp dword ptr [ebp-116], 0
	je .L_3F86
.L_3F87:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-48]
	pop dword ptr [ebx+16]
.L_3F86:
.L_3F88:
.stabn 68,0,472,.L_40C4-_CHECKCOLLISIONMODEL@12
.L_40C6:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F89
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-120], eax
	jmp .L_4039
.L_3F89:
	mov dword ptr [ebp-120], -1
.L_4039:
	cmp dword ptr [ebp-120], 0
	je .L_3F8C
.L_3F8D:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [eax+4]
.L_3F8C:
.L_3F8E:
.stabn 68,0,473,.L_40C6-_CHECKCOLLISIONMODEL@12
.L_40C8:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F8F
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-44]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-124], ebx
	jmp .L_403A
.L_3F8F:
	mov dword ptr [ebp-124], -1
.L_403A:
	cmp dword ptr [ebp-124], 0
	je .L_3F92
.L_3F93:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-44]
	pop dword ptr [ebx]
.L_3F92:
.L_3F94:
.stabn 68,0,473,.L_40C8-_CHECKCOLLISIONMODEL@12
.L_40CA:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F95
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-128], eax
	jmp .L_403B
.L_3F95:
	mov dword ptr [ebp-128], -1
.L_403B:
	cmp dword ptr [ebp-128], 0
	je .L_3F98
.L_3F99:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [eax+12]
.L_3F98:
.L_3F9A:
.stabn 68,0,473,.L_40CA-_CHECKCOLLISIONMODEL@12
.L_40CC:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3F9B
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-40]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-132], ebx
	jmp .L_403C
.L_3F9B:
	mov dword ptr [ebp-132], -1
.L_403C:
	cmp dword ptr [ebp-132], 0
	je .L_3F9E
.L_3F9F:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-40]
	pop dword ptr [ebx+8]
.L_3F9E:
.L_3FA0:
.stabn 68,0,473,.L_40CC-_CHECKCOLLISIONMODEL@12
.L_40CE:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FA1
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-136], eax
	jmp .L_403D
.L_3FA1:
	mov dword ptr [ebp-136], -1
.L_403D:
	cmp dword ptr [ebp-136], 0
	je .L_3FA4
.L_3FA5:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [eax+20]
.L_3FA4:
.L_3FA6:
.stabn 68,0,473,.L_40CE-_CHECKCOLLISIONMODEL@12
.L_40D0:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FA7
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-36]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-140], ebx
	jmp .L_403E
.L_3FA7:
	mov dword ptr [ebp-140], -1
.L_403E:
	cmp dword ptr [ebp-140], 0
	je .L_3FAA
.L_3FAB:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-36]
	pop dword ptr [ebx+16]
.L_3FAA:
.L_3FAC:
.stabn 68,0,473,.L_40D0-_CHECKCOLLISIONMODEL@12
.L_40D2:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+4]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FAD
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [ebx+4]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-144], eax
	jmp .L_403F
.L_3FAD:
	mov dword ptr [ebp-144], -1
.L_403F:
	cmp dword ptr [ebp-144], 0
	je .L_3FB0
.L_3FB1:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [eax+4]
.L_3FB0:
.L_3FB2:
.stabn 68,0,474,.L_40D2-_CHECKCOLLISIONMODEL@12
.L_40D4:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FB3
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-32]
	fld dword ptr [eax]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-148], ebx
	jmp .L_4040
.L_3FB3:
	mov dword ptr [ebp-148], -1
.L_4040:
	cmp dword ptr [ebp-148], 0
	je .L_3FB6
.L_3FB7:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-32]
	pop dword ptr [ebx]
.L_3FB6:
.L_3FB8:
.stabn 68,0,474,.L_40D4-_CHECKCOLLISIONMODEL@12
.L_40D6:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+12]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FB9
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [ebx+12]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-152], eax
	jmp .L_4041
.L_3FB9:
	mov dword ptr [ebp-152], -1
.L_4041:
	cmp dword ptr [ebp-152], 0
	je .L_3FBC
.L_3FBD:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [eax+12]
.L_3FBC:
.L_3FBE:
.stabn 68,0,474,.L_40D6-_CHECKCOLLISIONMODEL@12
.L_40D8:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+8]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FBF
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-28]
	fld dword ptr [eax+8]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-156], ebx
	jmp .L_4042
.L_3FBF:
	mov dword ptr [ebp-156], -1
.L_4042:
	cmp dword ptr [ebp-156], 0
	je .L_3FC2
.L_3FC3:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-28]
	pop dword ptr [ebx+8]
.L_3FC2:
.L_3FC4:
.stabn 68,0,474,.L_40D8-_CHECKCOLLISIONMODEL@12
.L_40DA:
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebx+20]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FC5
	mov ebx, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [ebx+20]
	fcomip st, st(1)
	fstp st(0)
	setb al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-160], eax
	jmp .L_4043
.L_3FC5:
	mov dword ptr [ebp-160], -1
.L_4043:
	cmp dword ptr [ebp-160], 0
	je .L_3FC8
.L_3FC9:
	mov eax, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [eax+20]
.L_3FC8:
.L_3FCA:
.stabn 68,0,474,.L_40DA-_CHECKCOLLISIONMODEL@12
.L_40DC:
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [eax+16]
	fld dword ptr [_Lt_31F1]
	fcomip st, st(1)
	fstp st(0)
	jz .L_3FCB
	mov eax, dword ptr [_Lt_4057]
	fld dword ptr [ebp-24]
	fld dword ptr [eax+16]
	fcomip st, st(1)
	fstp st(0)
	seta bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-164], ebx
	jmp .L_4044
.L_3FCB:
	mov dword ptr [ebp-164], -1
.L_4044:
	cmp dword ptr [ebp-164], 0
	je .L_3FCE
.L_3FCF:
	mov ebx, dword ptr [_Lt_4057]
	push dword ptr [ebp-24]
	pop dword ptr [ebx+16]
.L_3FCE:
.L_3FD0:
.stabn 68,0,474,.L_40DC-_CHECKCOLLISIONMODEL@12
.L_40DE:
.L_3FD1:
.L_3FD2:
	jmp .L_3E73
.L_3F3D:
	movzx ebx, byte ptr [ebp-20]
	cmp ebx, 5
	jne .L_3FD3
.L_3FD4:
.L_3FD5:
.stabn 68,0,476,.L_40DE-_CHECKCOLLISIONMODEL@12
.L_40DF:
.L_3FD6:
.L_3FD3:
.L_3E73:
.L_3FD7:
.L_3FD8:
.L_3FD9:
.L_3E65:
	inc dword ptr [ebp-8]
.L_3E64:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ebx
	jle .L_3E67
.L_3E66:
.L_3FDA:
.stabn 68,0,480,.L_40DF-_CHECKCOLLISIONMODEL@12
.L_40E0:
.L_3FDB:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebp+16], ebx
	jne .L_3FDD
.L_3FDE:
.stabn 68,0,484,.L_40E0-_CHECKCOLLISIONMODEL@12
.L_40E1:
.L_3FDF:
	mov dword ptr [ebp-4], 0
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+4]
	dec eax
	mov dword ptr [ebp-8], eax
	jmp .L_3FE1
.L_3FE4:
.L_3FE5:
.stabn 68,0,485,.L_40E1-_CHECKCOLLISIONMODEL@12
.L_40E2:
	mov eax, dword ptr [ebp-4]
	imul eax, 56
	mov ebx, dword ptr [ebp+8]
	add ebx, eax
	movzx eax, byte ptr [ebx+44]
	cmp eax, 1
	je .L_3FE7
.L_3FE8:
	jmp .L_3FE2
.L_3FE7:
.L_3FE9:
.stabn 68,0,486,.L_40E2-_CHECKCOLLISIONMODEL@12
.L_40E3:
	mov eax, dword ptr [ebp-4]
	imul eax, 56
	mov ebx, dword ptr [ebp+8]
	add ebx, eax
	mov eax, dword ptr [ebx+96]
	sal eax, 3
	add eax, dword ptr [_G_TMODELS]
	mov ebx, dword ptr [eax+4]
	push dword ptr [ebx+16]
	pop dword ptr [ebp-12]
.stabn 68,0,488,.L_40E3-_CHECKCOLLISIONMODEL@12
.L_40E4:
	fld dword ptr [_Lt_4045]
	fadd dword ptr [ebp-12]
	fld qword ptr [_Lt_39E7]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_3FEB
.L_3FEC:
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+8]
	fsub dword ptr [ebp-12]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+8]
.L_3FEB:
.L_3FED:
.stabn 68,0,489,.L_40E4-_CHECKCOLLISIONMODEL@12
.L_40E5:
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx]
	fadd qword ptr [_Lt_4046]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+4]
	fadd qword ptr [_Lt_4047]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+4]
.stabn 68,0,490,.L_40E5-_CHECKCOLLISIONMODEL@12
.L_40E6:
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+8]
	fadd qword ptr [_Lt_4046]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+8]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+12]
	fadd qword ptr [_Lt_4047]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+12]
.stabn 68,0,491,.L_40E6-_CHECKCOLLISIONMODEL@12
.L_40E7:
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+16]
	fadd qword ptr [_Lt_4046]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+16]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fld dword ptr [ebx+20]
	fadd qword ptr [_Lt_4047]
	mov ebx, dword ptr [ebp-4]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	fstp dword ptr [ebx+20]
.stabn 68,0,492,.L_40E7-_CHECKCOLLISIONMODEL@12
.L_40E8:
.L_3FEE:
.L_3FE2:
	inc dword ptr [ebp-4]
.L_3FE1:
	mov ebx, dword ptr [ebp-8]
	cmp dword ptr [ebp-4], ebx
	jle .L_3FE4
.L_3FE3:
.L_3FEF:
.stabn 68,0,493,.L_40E8-_CHECKCOLLISIONMODEL@12
.L_40E9:
.L_3FF0:
	mov dword ptr [ebp-4], 0
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx+4]
	dec eax
	mov dword ptr [ebp-8], eax
	jmp .L_3FF2
.L_3FF5:
.L_3FF6:
.stabn 68,0,494,.L_40E9-_CHECKCOLLISIONMODEL@12
.L_40EA:
	mov eax, dword ptr [ebp-4]
	imul eax, 56
	mov ebx, dword ptr [ebp+8]
	add ebx, eax
	movzx eax, byte ptr [ebx+44]
	cmp eax, 1
	je .L_3FF8
.L_3FF9:
	jmp .L_3FF3
.L_3FF8:
.L_3FFA:
.stabn 68,0,495,.L_40EA-_CHECKCOLLISIONMODEL@12
.L_40EB:
.L_3FFB:
	mov eax, dword ptr [ebp-4]
	inc eax
	mov dword ptr [ebp-12], eax
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+4]
	dec ebx
	mov dword ptr [ebp-16], ebx
	jmp .L_3FFD
.L_4000:
.L_4001:
.stabn 68,0,496,.L_40EB-_CHECKCOLLISIONMODEL@12
.L_40EC:
	mov ebx, dword ptr [ebp-12]
	imul ebx, 56
	mov eax, dword ptr [ebp+8]
	add eax, ebx
	movzx ebx, byte ptr [eax+44]
	cmp ebx, 1
	je .L_4003
.L_4004:
	jmp .L_3FFE
.L_4003:
.L_4005:
.stabn 68,0,497,.L_40EC-_CHECKCOLLISIONMODEL@12
.L_40ED:
	mov ebx, dword ptr [ebp-12]
	imul ebx, 24
	add ebx, dword ptr [_Lt_404B]
	lea eax, [ebx]
	push eax
	mov eax, dword ptr [ebp-4]
	imul eax, 24
	add eax, dword ptr [_Lt_404B]
	lea ebx, [eax]
	push ebx
	call _CHECKCOLLISION@8
	movsx ebx, al
	test ebx, ebx
	je .L_4007
.L_4008:
.stabn 68,0,498,.L_40ED-_CHECKCOLLISIONMODEL@12
.L_40EE:
	push 1
	push dword ptr [ebp+12]
	call _fb_ArrayUBound@8
	mov dword ptr [ebp-20], eax
	mov eax, dword ptr [ebp-20]
	add eax, 2
	push eax
	push 0
	push 1
	push 0
	push offset __ZN8PARTSIZEC1Ev
	push 24
	push dword ptr [ebp+12]
	call _fb_ArrayRedimPresvObj
	add esp, 28
.stabn 68,0,503,.L_40EE-_CHECKCOLLISIONMODEL@12
.L_40EF:
	mov eax, dword ptr [ebp-20]
	imul eax, 24
	mov ebx, dword ptr [ebp+12]
	add eax, dword ptr [ebx]
	lea ebx, [eax]
	mov eax, dword ptr [ebp-4]
	imul eax, 24
	add eax, dword ptr [_Lt_404B]
	lea ecx, [eax]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,504,.L_40EF-_CHECKCOLLISIONMODEL@12
.L_40F0:
	mov ecx, dword ptr [ebp-20]
	imul ecx, 24
	mov ebx, dword ptr [ebp+12]
	add ecx, dword ptr [ebx]
	lea ebx, [ecx+24]
	mov ecx, dword ptr [ebp-12]
	imul ecx, 24
	add ecx, dword ptr [_Lt_404B]
	lea eax, [ecx]
	push edi
	push esi
	mov edi, ebx
	mov esi, eax
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
.stabn 68,0,505,.L_40F0-_CHECKCOLLISIONMODEL@12
.L_40F1:
.L_4009:
.L_4007:
.L_4006:
.L_400A:
.L_3FFE:
	inc dword ptr [ebp-12]
.L_3FFD:
	mov eax, dword ptr [ebp-16]
	cmp dword ptr [ebp-12], eax
	jle .L_4000
.L_3FFF:
.L_400B:
.stabn 68,0,508,.L_40F1-_CHECKCOLLISIONMODEL@12
.L_40F2:
.L_400C:
.L_3FF3:
	inc dword ptr [ebp-4]
.L_3FF2:
	mov eax, dword ptr [ebp-8]
	cmp dword ptr [ebp-4], eax
	jle .L_3FF5
.L_3FF4:
.L_400D:
.stabn 68,0,509,.L_40F2-_CHECKCOLLISIONMODEL@12
.L_40F3:
	push 0
	push offset __ZN8PARTSIZEC1Ev
	push offset _Lt_404B
	call _fb_ArrayEraseObj@12
.stabn 68,0,510,.L_40F3-_CHECKCOLLISIONMODEL@12
.L_40F4:
.L_400E:
.L_3FDD:
.L_3FDC:
.L_3E51:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,513,.L_3E51-_CHECKCOLLISIONMODEL@12
	.stabs "ATPARTBOUND:V202",38,0,0,_Lt_404B
	.stabs "PTSIZE:V207=*102",40,0,0,_Lt_4057
	.stabn 192,0,0,.L_3E50-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E54-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E55-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E58-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E5A-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E5B-_CHECKCOLLISIONMODEL@12
	.stabs "TSZ:102",128,0,0,-28
	.stabn 192,0,0,.L_3E5F-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E61-_CHECKCOLLISIONMODEL@12
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_3E62-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E68-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E6B-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E6C-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E6E-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E6F-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E70-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E72-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E77-_CHECKCOLLISIONMODEL@12
	.stabs "PSUBPART:208=*101",128,0,0,-28
	.stabs "SNAME:13",128,0,0,-40
	.stabs "FMATRIX:209=ar1;0;15;11",128,0,0,-104
	.stabn 192,0,0,.L_3E78-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E7B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E7C-_CHECKCOLLISIONMODEL@12
	.stabs "T2:113",128,0,0,-44
	.stabn 192,0,0,.L_3E7F-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E80-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E85-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E86-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E8B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E8C-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E91-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E92-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E97-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E98-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3E9D-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E9E-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EA3-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EA4-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EA9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EAA-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EAF-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EB0-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EB5-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EB6-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EBB-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EBC-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EC1-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EC2-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EC7-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EC8-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EC9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3ECA-_CHECKCOLLISIONMODEL@12
	.stabs "T3:114",128,0,0,-56
	.stabn 192,0,0,.L_3ECD-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3ECE-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3ED3-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3ED4-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3ED9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EDA-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EDF-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EE0-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EE5-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EE6-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EEB-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EEC-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EF1-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EF2-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EF7-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EF8-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3EFD-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3EFE-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F03-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F04-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F09-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F0A-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F0F-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F10-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F15-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F16-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F1B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F1C-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F21-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F22-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F27-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F28-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F2D-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F2E-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F33-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F34-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F39-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F3A-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F3B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F3C-_CHECKCOLLISIONMODEL@12
	.stabs "T4:115",128,0,0,-68
	.stabn 192,0,0,.L_3F3F-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F40-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F45-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F46-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F4B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F4C-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F51-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F52-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F57-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F58-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F5D-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F5E-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F63-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F64-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F69-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F6A-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F6F-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F70-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F75-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F76-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F7B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F7C-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F81-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F82-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F87-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F88-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F8D-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F8E-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F93-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F94-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F99-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3F9A-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3F9F-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FA0-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FA5-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FA6-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FAB-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FAC-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FB1-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FB2-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FB7-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FB8-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FBD-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FBE-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FC3-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FC4-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FC9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FCA-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FCF-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD0-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD1-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD2-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FD5-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD6-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD7-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD8-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FD9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FDA-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FDB-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FDE-_CHECKCOLLISIONMODEL@12
	.stabs "N:1",128,0,0,-4
	.stabn 192,0,0,.L_3FDF-_CHECKCOLLISIONMODEL@12
	.stabs "FYMIN:11",128,0,0,-12
	.stabn 192,0,0,.L_3FE5-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FE8-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FE9-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FEC-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FED-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FEE-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FEF-_CHECKCOLLISIONMODEL@12
	.stabs "N:1",128,0,0,-4
	.stabn 192,0,0,.L_3FF0-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FF6-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_3FF9-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3FFA-_CHECKCOLLISIONMODEL@12
	.stabs "M:1",128,0,0,-12
	.stabn 192,0,0,.L_3FFB-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_4001-_CHECKCOLLISIONMODEL@12
	.stabn 192,0,0,.L_4004-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_4005-_CHECKCOLLISIONMODEL@12
	.stabs "II:1",128,0,0,-20
	.stabn 192,0,0,.L_4008-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_4009-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_400A-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_400B-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_400C-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_400D-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_400E-_CHECKCOLLISIONMODEL@12
	.stabn 224,0,0,.L_3E51-_CHECKCOLLISIONMODEL@12
.L_40F5:
	.stabs "",36,0,0,.L_40F5-_CHECKCOLLISIONMODEL@12

.section .data
.balign 4
_Lt_404B:
.long 0
.long 0
.int 0
.int 24
.int 0
.int 8
.skip 96,0

.section .bss
.balign 4
	.lcomm	_Lt_4057,4

.section .text
	.stabs "SNAPADDSTUD:F7",36,0,576,_SNAPADDSTUD@36
	.stabs "SNAPPV:Tt212=s28FPX:11,0,32;FPY:11,32,32;FPZ:11,64,32;FAX:11,96,32;FAY:11,128,32;FAZ:11,160,32;PMATORG:213=*184,192,32;;",128,0,0,0
	.stabs "PARTSNAP:Tt210=s44LSTUDCNT:1,0,32;LCLUTCHCNT:1,32,32;LALIASCNT:1,64,32;LAXLECNT:1,96,32;LAXLEHOLECNT:1,128,32;LBARCNT:1,160,32;LBARHOLECNT:1,192,32;LPINCNT:1,224,32;LPINHOLECNT:1,256,32;PSTUD:211=*212,288,32;PCLUTCH:214=*212,320,32;;",128,0,0,0
	.stabs "TSNAP:v210",160,0,0,8
	.stabs "ICNT:p1",160,0,0,12
	.stabs "TPV:p212",160,0,0,16
.balign 16

.globl _SNAPADDSTUD@36
_SNAPADDSTUD@36:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,576,_SNAPADDSTUD@36-_SNAPADDSTUD@36
.L_40F6:
.L_4104:
.L_40F8:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,577,.L_4104-_SNAPADDSTUD@36
.L_4105:
.L_40FA:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [ebp+12]
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_40FC
.L_40FF:
.L_4100:
.stabn 68,0,578,.L_4105-_SNAPADDSTUD@36
.L_4106:
	mov eax, dword ptr [ebp-4]
	inc dword ptr [eax]
.stabn 68,0,579,.L_4106-_SNAPADDSTUD@36
.L_4107:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax]
	imul ebx, 28
	mov eax, ebx
	push eax
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax+36]
	call _realloc
	add esp, 8
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx+36], eax
.stabn 68,0,580,.L_4107-_SNAPADDSTUD@36
.L_4108:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	mov ecx, dword ptr [ebx]
	imul ecx, 28
	mov ebx, dword ptr [eax+36]
	add ebx, ecx
	add ebx, -28
	lea ecx, [ebp+16]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 7
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,581,.L_4108-_SNAPADDSTUD@36
.L_4109:
	mov ecx, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebx]
	imul eax, 28
	mov ebx, dword ptr [ecx+36]
	add ebx, eax
	mov dword ptr [ebx-4], 0
.stabn 68,0,582,.L_4109-_SNAPADDSTUD@36
.L_410A:
.L_4101:
.L_40FD:
	inc dword ptr [ebp-8]
.L_40FC:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ebx
	jle .L_40FF
.L_40FE:
.L_4102:
.stabn 68,0,583,.L_410A-_SNAPADDSTUD@36
.L_410B:
.L_4103:
.L_40F7:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 36
	.stabn 68,0,585,.L_40F7-_SNAPADDSTUD@36
	.stabn 192,0,0,.L_40F6-_SNAPADDSTUD@36
	.stabn 192,0,0,.L_40F8-_SNAPADDSTUD@36
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_40FA-_SNAPADDSTUD@36
	.stabn 192,0,0,.L_4100-_SNAPADDSTUD@36
	.stabn 224,0,0,.L_4101-_SNAPADDSTUD@36
	.stabn 224,0,0,.L_4102-_SNAPADDSTUD@36
	.stabn 224,0,0,.L_4103-_SNAPADDSTUD@36
	.stabn 224,0,0,.L_40F7-_SNAPADDSTUD@36
.L_410C:
	.stabs "",36,0,0,.L_410C-_SNAPADDSTUD@36
	.stabs "SNAPADDCLUTCH:F7",36,0,586,_SNAPADDCLUTCH@36
	.stabs "TSNAP:v210",160,0,0,8
	.stabs "ICNT:p1",160,0,0,12
	.stabs "TPV:p212",160,0,0,16
.balign 16

.globl _SNAPADDCLUTCH@36
_SNAPADDCLUTCH@36:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,586,_SNAPADDCLUTCH@36-_SNAPADDCLUTCH@36
.L_410D:
.L_411B:
.L_410F:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,587,.L_411B-_SNAPADDCLUTCH@36
.L_411C:
.L_4111:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [ebp+12]
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_4113
.L_4116:
.L_4117:
.stabn 68,0,588,.L_411C-_SNAPADDCLUTCH@36
.L_411D:
	mov eax, dword ptr [ebp-4]
	inc dword ptr [eax+4]
.stabn 68,0,589,.L_411D-_SNAPADDCLUTCH@36
.L_411E:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [eax+4]
	imul ebx, 28
	mov eax, ebx
	push eax
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax+40]
	call _realloc
	add esp, 8
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx+40], eax
.stabn 68,0,590,.L_411E-_SNAPADDCLUTCH@36
.L_411F:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	mov ecx, dword ptr [ebx+4]
	imul ecx, 28
	mov ebx, dword ptr [eax+40]
	add ebx, ecx
	add ebx, -28
	lea ecx, [ebp+16]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 7
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,591,.L_411F-_SNAPADDCLUTCH@36
.L_4120:
.L_4118:
.L_4114:
	inc dword ptr [ebp-8]
.L_4113:
	mov ecx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ecx
	jle .L_4116
.L_4115:
.L_4119:
.stabn 68,0,592,.L_4120-_SNAPADDCLUTCH@36
.L_4121:
.L_411A:
.L_410E:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 36
	.stabn 68,0,594,.L_410E-_SNAPADDCLUTCH@36
	.stabn 192,0,0,.L_410D-_SNAPADDCLUTCH@36
	.stabn 192,0,0,.L_410F-_SNAPADDCLUTCH@36
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_4111-_SNAPADDCLUTCH@36
	.stabn 192,0,0,.L_4117-_SNAPADDCLUTCH@36
	.stabn 224,0,0,.L_4118-_SNAPADDCLUTCH@36
	.stabn 224,0,0,.L_4119-_SNAPADDCLUTCH@36
	.stabn 224,0,0,.L_411A-_SNAPADDCLUTCH@36
	.stabn 224,0,0,.L_410E-_SNAPADDCLUTCH@36
.L_4122:
	.stabs "",36,0,0,.L_4122-_SNAPADDCLUTCH@36
	.stabs "DRAWMALESHAPE:F7",36,0,603,_DRAWMALESHAPE@24
	.stabs "FX:p11",160,0,0,8
	.stabs "FY:p11",160,0,0,12
	.stabs "FZ:p11",160,0,0,16
	.stabs "FRADIUS:p11",160,0,0,20
	.stabs "FLENGTH:p11",160,0,0,24
	.stabs "BROUND:p2",160,0,0,28
.balign 16

.globl _DRAWMALESHAPE@24
_DRAWMALESHAPE@24:
	push ebp
	mov ebp, esp
	.stabn 68,0,603,_DRAWMALESHAPE@24-_DRAWMALESHAPE@24
.L_4131:
.L_413E:
	push 2882
	call _glEnable@4
.stabn 68,0,610,.L_413E-_DRAWMALESHAPE@24
.L_413F:
	call _glPushMatrix@0
.stabn 68,0,611,.L_413F-_DRAWMALESHAPE@24
.L_4140:
	call _GLLOADCURRENTMATRIX@0
.stabn 68,0,612,.L_4140-_DRAWMALESHAPE@24
.L_4141:
	push dword ptr [ebp+16]
	fld dword ptr [ebp+12]
	fld dword ptr [ebp+24]
	fdiv qword ptr [_Lt_4139]
	fxch st(1)
	fsubrp
	sub esp,4
	fstp dword ptr [esp]
	push dword ptr [ebp+8]
	call _glTranslatef@12
.stabn 68,0,613,.L_4141-_DRAWMALESHAPE@24
.L_4142:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_413A]
	call _glRotatef@16
.stabn 68,0,614,.L_4142-_DRAWMALESHAPE@24
.L_4143:
	push offset _MALESTIPPLE
	call _glPolygonStipple@4
.stabn 68,0,615,.L_4143-_DRAWMALESHAPE@24
.L_4144:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_38D3]
	call _glColor3f@12
.stabn 68,0,616,.L_4144-_DRAWMALESHAPE@24
.L_4145:
	movsx eax, byte ptr [ebp+28]
	test eax, eax
	je .L_4134
.L_4135:
.stabn 68,0,617,.L_4145-_DRAWMALESHAPE@24
.L_4146:
	fld dword ptr [ebp+24]
	fdiv dword ptr [ebp+20]
	fmul qword ptr [_Lt_413B]
	sub esp,4
	fstp dword ptr [esp]
	push dword ptr [_Lt_413C]
	push dword ptr [_Lt_413C]
	call _glScalef@12
.stabn 68,0,618,.L_4146-_DRAWMALESHAPE@24
.L_4147:
	push 7
	push 18
	fld dword ptr [ebp+20]
	sub esp,8
	fstp qword ptr [esp]
	call _glutSolidSphere@16
.stabn 68,0,619,.L_4147-_DRAWMALESHAPE@24
.L_4148:
.L_4136:
	jmp .L_4133
.L_4134:
.L_4137:
.stabn 68,0,620,.L_4148-_DRAWMALESHAPE@24
.L_4149:
	fld dword ptr [ebp+24]
	fdiv dword ptr [ebp+20]
	sub esp,4
	fstp dword ptr [esp]
	push dword ptr [_Lt_413D]
	push dword ptr [_Lt_413D]
	call _glScalef@12
.stabn 68,0,621,.L_4149-_DRAWMALESHAPE@24
.L_414A:
	fld dword ptr [ebp+20]
	sub esp,8
	fstp qword ptr [esp]
	call _glutSolidCube@8
.stabn 68,0,622,.L_414A-_DRAWMALESHAPE@24
.L_414B:
.L_4138:
.L_4133:
	call _glPopMatrix@0
.stabn 68,0,624,.L_414B-_DRAWMALESHAPE@24
.L_414C:
	push 2882
	call _glDisable@4
.stabn 68,0,625,.L_414C-_DRAWMALESHAPE@24
.L_414D:
.L_4132:
	mov esp, ebp
	pop ebp
	ret 24
	.stabn 68,0,626,.L_4132-_DRAWMALESHAPE@24
	.stabn 192,0,0,.L_4131-_DRAWMALESHAPE@24
	.stabn 192,0,0,.L_4135-_DRAWMALESHAPE@24
	.stabn 224,0,0,.L_4136-_DRAWMALESHAPE@24
	.stabn 192,0,0,.L_4137-_DRAWMALESHAPE@24
	.stabn 224,0,0,.L_4138-_DRAWMALESHAPE@24
	.stabn 224,0,0,.L_4132-_DRAWMALESHAPE@24
.L_414E:
	.stabs "",36,0,0,.L_414E-_DRAWMALESHAPE@24
	.stabs "DRAWFEMALESHAPE:F7",36,0,627,_DRAWFEMALESHAPE@24
	.stabs "FX:p11",160,0,0,8
	.stabs "FY:p11",160,0,0,12
	.stabs "FZ:p11",160,0,0,16
	.stabs "FRADIUS:p11",160,0,0,20
	.stabs "FLENGTH:p11",160,0,0,24
	.stabs "BROUND:p2",160,0,0,28
.balign 16

.globl _DRAWFEMALESHAPE@24
_DRAWFEMALESHAPE@24:
	push ebp
	mov ebp, esp
	.stabn 68,0,627,_DRAWFEMALESHAPE@24-_DRAWFEMALESHAPE@24
.L_414F:
.L_4159:
	push 2882
	call _glEnable@4
.stabn 68,0,633,.L_4159-_DRAWFEMALESHAPE@24
.L_415A:
	call _glPushMatrix@0
.stabn 68,0,634,.L_415A-_DRAWFEMALESHAPE@24
.L_415B:
	call _GLLOADCURRENTMATRIX@0
.stabn 68,0,635,.L_415B-_DRAWFEMALESHAPE@24
.L_415C:
	push dword ptr [ebp+16]
	fld dword ptr [ebp+12]
	fld dword ptr [ebp+24]
	fdiv qword ptr [_Lt_4139]
	fxch st(1)
	fsubrp
	sub esp,4
	fstp dword ptr [esp]
	push dword ptr [ebp+8]
	call _glTranslatef@12
.stabn 68,0,636,.L_415C-_DRAWFEMALESHAPE@24
.L_415D:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_413A]
	call _glRotatef@16
.stabn 68,0,637,.L_415D-_DRAWFEMALESHAPE@24
.L_415E:
	push offset _FEMALESTIPPLE
	call _glPolygonStipple@4
.stabn 68,0,638,.L_415E-_DRAWFEMALESHAPE@24
.L_415F:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	call _glColor3f@12
.stabn 68,0,639,.L_415F-_DRAWFEMALESHAPE@24
.L_4160:
	movsx eax, byte ptr [ebp+28]
	test eax, eax
	je .L_4152
.L_4153:
.stabn 68,0,640,.L_4160-_DRAWFEMALESHAPE@24
.L_4161:
	push dword ptr [ebp+24]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_38D3]
	call _glScalef@12
.stabn 68,0,641,.L_4161-_DRAWFEMALESHAPE@24
.L_4162:
	push 18
	push 18
	fld dword ptr [ebp+20]
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [_Lt_4157+4]
	push dword ptr [_Lt_4157]
	call _glutSolidTorus@24
.stabn 68,0,642,.L_4162-_DRAWFEMALESHAPE@24
.L_4163:
.L_4154:
	jmp .L_4151
.L_4152:
.L_4155:
.stabn 68,0,643,.L_4163-_DRAWFEMALESHAPE@24
.L_4164:
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_4158]
	call _glRotatef@16
.stabn 68,0,644,.L_4164-_DRAWFEMALESHAPE@24
.L_4165:
	push dword ptr [ebp+24]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_38D3]
	call _glScalef@12
.stabn 68,0,645,.L_4165-_DRAWFEMALESHAPE@24
.L_4166:
	push 4
	push 18
	fld dword ptr [ebp+20]
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [_Lt_4157+4]
	push dword ptr [_Lt_4157]
	call _glutSolidTorus@24
.stabn 68,0,646,.L_4166-_DRAWFEMALESHAPE@24
.L_4167:
.L_4156:
.L_4151:
	call _glPopMatrix@0
.stabn 68,0,648,.L_4167-_DRAWFEMALESHAPE@24
.L_4168:
	push 2882
	call _glDisable@4
.stabn 68,0,649,.L_4168-_DRAWFEMALESHAPE@24
.L_4169:
.L_4150:
	mov esp, ebp
	pop ebp
	ret 24
	.stabn 68,0,650,.L_4150-_DRAWFEMALESHAPE@24
	.stabn 192,0,0,.L_414F-_DRAWFEMALESHAPE@24
	.stabn 192,0,0,.L_4153-_DRAWFEMALESHAPE@24
	.stabn 224,0,0,.L_4154-_DRAWFEMALESHAPE@24
	.stabn 192,0,0,.L_4155-_DRAWFEMALESHAPE@24
	.stabn 224,0,0,.L_4156-_DRAWFEMALESHAPE@24
	.stabn 224,0,0,.L_4150-_DRAWFEMALESHAPE@24
.L_416A:
	.stabs "",36,0,0,.L_416A-_DRAWFEMALESHAPE@24
	.stabs "SNAPMODEL:F7",36,0,1096,_SNAPMODEL@16
	.stabs "PPART:p215=*101",160,0,0,8
	.stabs "TSNAP:v210",160,0,0,12
	.stabs "BDRAW:p2",160,0,0,16
	.stabs "PROOT:p216=*101",160,0,0,20
.balign 16

.globl _SNAPMODEL@16
_SNAPMODEL@16:
	push ebp
	mov ebp, esp
	sub esp, 176
	push ebx
	.stabn 68,0,1096,_SNAPMODEL@16-_SNAPMODEL@16
.L_416B:
.L_43D1:
	cmp dword ptr [ebp+20], 0
	jne .L_416E
.L_416F:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp+20], eax
.L_416E:
.L_4170:
.stabn 68,0,1100,.L_43D1-_SNAPMODEL@16
.L_43D2:
.L_4171:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,1101,.L_43D2-_SNAPMODEL@16
.L_43D3:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	fld dword ptr [eax+28]
	fld dword ptr [ebx+24]
	fcomip st, st(1)
	fstp st(0)
	jnz .L_4174
.L_4175:
.stabn 68,0,1102,.L_43D3-_SNAPMODEL@16
.L_43D4:
	lea ebx, [ebp-28]
	push ebx
	call __ZN8PARTSIZEC1Ev
	add esp, 4
	push 0
	mov dword ptr [ebp-32], -1
	lea ebx, [ebp-32]
	push ebx
	push -1
	lea ebx, [ebp-28]
	push ebx
	push dword ptr [ebp+8]
	call _SIZEMODEL@20
.stabn 68,0,1103,.L_43D4-_SNAPMODEL@16
.L_43D5:
	mov ebx, dword ptr [ebp-4]
	lea eax, [ebx+8]
	lea ebx, [ebp-28]
	push edi
	push esi
	mov edi, eax
	mov esi, ebx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
.stabn 68,0,1104,.L_43D5-_SNAPMODEL@16
.L_43D6:
.L_4177:
.L_4174:
.L_4173:
	mov ebx, dword ptr [ebp-4]
	cmp dword ptr [ebx+32], 0
	je .L_4179
.L_417A:
.stabn 68,0,1109,.L_43D6-_SNAPMODEL@16
.L_43D7:
	mov dword ptr [ebp-8], 2
	mov dword ptr [ebp-12], 0
.stabn 68,0,1116,.L_43D7-_SNAPMODEL@16
.L_43D8:
.L_417B:
	mov dword ptr [ebp-16], 0
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebx+32]
	dec eax
	mov dword ptr [ebp-20], eax
	jmp .L_417D
.L_4180:
.L_4181:
.stabn 68,0,1121,.L_43D8-_SNAPMODEL@16
.L_43D9:
.L_4182:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-16]
	imul ebx, 88
	mov ecx, dword ptr [eax+36]
	add ecx, ebx
	mov dword ptr [ebp-24], ecx
.stabn 68,0,1122,.L_43D9-_SNAPMODEL@16
.L_43DA:
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+4]
	pop dword ptr [ebp-28]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+8]
	pop dword ptr [ebp-32]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+12]
	pop dword ptr [ebp-36]
.stabn 68,0,1123,.L_43DA-_SNAPMODEL@16
.L_43DB:
	mov ecx, dword ptr [ebp-24]
	lea ebx, [ecx+52]
	mov dword ptr [ebp-40], ebx
.stabn 68,0,1124,.L_43DB-_SNAPMODEL@16
.L_43DC:
	mov ebx, dword ptr [_G_CURRENTMATRIX]
	sal ebx, 6
	lea ecx, [_TMATRIXSTACK+ebx]
	mov dword ptr [ebp-44], ecx
.stabn 68,0,1125,.L_43DC-_SNAPMODEL@16
.L_43DD:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+52]
	mov eax, ebx
	sar eax, 31
	xor ebx, eax
	sub ebx, eax
	dec ebx
	mov dword ptr [ebp-48], ebx
	mov ebx, dword ptr [ebp-24]
	movsx ecx, byte ptr [ebx+53]
	mov eax, ecx
	sar eax, 31
	xor ecx, eax
	sub ecx, eax
	dec ecx
	mov dword ptr [ebp-52], ecx
.stabn 68,0,1126,.L_43DD-_SNAPMODEL@16
.L_43DE:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 4
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_4185
.L_4186:
.stabn 68,0,1127,.L_43DE-_SNAPMODEL@16
.L_43DF:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+52]
	test ebx, ebx
	jge .L_4188
.L_4189:
	fld dword ptr [ebp-28]
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+54]
	imul ecx, dword ptr [ebp-48]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_43CF]
	fxch st(1)
	faddp
	fstp dword ptr [ebp-28]
.L_4188:
.L_418A:
.stabn 68,0,1128,.L_43DF-_SNAPMODEL@16
.L_43E0:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+53]
	test ebx, ebx
	jge .L_418C
.L_418D:
	fld dword ptr [ebp-36]
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+55]
	imul ecx, dword ptr [ebp-52]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_43CF]
	fxch st(1)
	faddp
	fstp dword ptr [ebp-36]
.L_418C:
.L_418E:
.stabn 68,0,1129,.L_43E0-_SNAPMODEL@16
.L_43E1:
.L_418F:
.L_4185:
.L_4184:
.L_4190:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx]
	and ebx, 7
	mov dword ptr [ebp-56], ebx
.stabn 68,0,1131,.L_43E1-_SNAPMODEL@16
.L_43E2:
	cmp dword ptr [ebp-56], 1
	jne .L_4193
.L_4194:
.L_4195:
.stabn 68,0,1132,.L_43E2-_SNAPMODEL@16
.L_43E3:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4197
.L_4198:
	push offset _Lt_4199
	call _puts
	add esp, 4
.L_4197:
.L_419A:
.stabn 68,0,1134,.L_43E3-_SNAPMODEL@16
.L_43E4:
	add dword ptr [ebp-8], 2
.stabn 68,0,1136,.L_43E4-_SNAPMODEL@16
.L_43E5:
.L_419B:
	jmp .L_4191
.L_4193:
	cmp dword ptr [ebp-56], 2
	jne .L_419C
.L_419D:
.L_419E:
.stabn 68,0,1137,.L_43E5-_SNAPMODEL@16
.L_43E6:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx]
	sar ecx, 6
	mov ebx, ecx
	and ebx, 3
	cmp dword ptr [ebp-12], ebx
	jbe .L_41A2
.L_41A3:
	add dword ptr [ebp-8], -2
.L_41A2:
.L_41A4:
.stabn 68,0,1139,.L_43E6-_SNAPMODEL@16
.L_43E7:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx]
	sar ecx, 6
	mov ebx, ecx
	and ebx, 3
	mov ecx, ebx
	mov dword ptr [ebp-12], ecx
.stabn 68,0,1140,.L_43E7-_SNAPMODEL@16
.L_43E8:
	mov dword ptr [ebp-60], 0
.stabn 68,0,1142,.L_43E8-_SNAPMODEL@16
.L_43E9:
	movsx ecx, byte ptr [ebp+16]
	test ecx, ecx
	je .L_41A6
.L_41A7:
.stabn 68,0,1154,.L_43E9-_SNAPMODEL@16
.L_43EA:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 5
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_41A9
.L_41AA:
.stabn 68,0,1155,.L_43EA-_SNAPMODEL@16
.L_43EB:
	lea ecx, [ebp-140]
	mov dword ptr [ebp-176], ecx
	lea ecx, [ebp-140]
	mov dword ptr [ebp-172], ecx
	mov dword ptr [ebp-168], 64
	mov dword ptr [ebp-164], 4
	mov dword ptr [ebp-160], 1
	mov dword ptr [ebp-156], 49
	mov dword ptr [ebp-152], 16
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 15
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+16]
	pop dword ptr [ebp-140]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+28]
	pop dword ptr [ebp-136]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+40]
	pop dword ptr [ebp-132]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-128]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+20]
	pop dword ptr [ebp-124]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+32]
	pop dword ptr [ebp-120]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+44]
	pop dword ptr [ebp-116]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-112]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+24]
	pop dword ptr [ebp-108]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+36]
	pop dword ptr [ebp-104]
	mov ecx, dword ptr [ebp-24]
	push dword ptr [ecx+48]
	pop dword ptr [ebp-100]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-96]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-92]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-88]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-84]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-80]
.stabn 68,0,1156,.L_43EB-_SNAPMODEL@16
.L_43EC:
	lea ecx, [ebp-140]
	push ecx
	call _PUSHANDMULTMATRIX@4
.stabn 68,0,1162,.L_43EC-_SNAPMODEL@16
.L_43ED:
	push offset _Lt_41AC
	call _puts
	add esp, 4
.stabn 68,0,1164,.L_43ED-_SNAPMODEL@16
.L_43EE:
.L_41AD:
.L_41A9:
.L_41A8:
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-68], 0
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-72]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-76]
.stabn 68,0,1173,.L_43EE-_SNAPMODEL@16
.L_43EF:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 4
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_41AF
.L_41B0:
.stabn 68,0,1174,.L_43EF-_SNAPMODEL@16
.L_43F0:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+52]
	mov eax, ebx
	sar eax, 31
	xor ebx, eax
	sub ebx, eax
	dec ebx
	mov dword ptr [ebp-64], ebx
	mov ebx, dword ptr [ebp-24]
	movsx ecx, byte ptr [ebx+53]
	mov eax, ecx
	sar eax, 31
	xor ecx, eax
	sub ecx, eax
	dec ecx
	mov dword ptr [ebp-68], ecx
.stabn 68,0,1175,.L_43F0-_SNAPMODEL@16
.L_43F1:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+52]
	test ebx, ebx
	jge .L_41B2
.L_41B3:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+54]
	imul ecx, dword ptr [ebp-64]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_43CF]
	fstp dword ptr [ebp-72]
.L_41B2:
.L_41B4:
.stabn 68,0,1176,.L_43F1-_SNAPMODEL@16
.L_43F2:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+53]
	test ebx, ebx
	jge .L_41B6
.L_41B7:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+55]
	imul ecx, dword ptr [ebp-68]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_43CF]
	fstp dword ptr [ebp-76]
.L_41B6:
.L_41B8:
.stabn 68,0,1177,.L_43F2-_SNAPMODEL@16
.L_43F3:
.L_41B9:
.L_41AF:
.L_41AE:
.L_41BA:
	mov dword ptr [ebp-80], 0
	mov ecx, dword ptr [ebp-68]
	mov dword ptr [ebp-84], ecx
	jmp .L_41BC
.L_41BF:
.L_41C0:
.stabn 68,0,1179,.L_43F3-_SNAPMODEL@16
.L_43F4:
	push dword ptr [ebp-72]
	pop dword ptr [ebp-88]
.stabn 68,0,1180,.L_43F4-_SNAPMODEL@16
.L_43F5:
.L_41C1:
	mov dword ptr [ebp-92], 0
	mov ecx, dword ptr [ebp-64]
	mov dword ptr [ebp-96], ecx
	jmp .L_41C3
.L_41C6:
.L_41C7:
.stabn 68,0,1181,.L_43F5-_SNAPMODEL@16
.L_43F6:
.L_41C8:
	mov dword ptr [ebp-100], 0
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx]
	sar ebx, 3
	mov ecx, ebx
	and ecx, 7
	add ecx, 4294967295
	mov ebx, ecx
	mov dword ptr [ebp-104], ebx
	jmp .L_41CA
.L_41CD:
.L_41CE:
.stabn 68,0,1182,.L_43F6-_SNAPMODEL@16
.L_43F7:
	mov ebx, dword ptr [ebp-100]
	sal ebx, 2
	mov ecx, dword ptr [ebp-24]
	add ecx, ebx
	lea ebx, [ecx+56]
	mov dword ptr [ebp-108], ebx
.stabn 68,0,1183,.L_43F7-_SNAPMODEL@16
.L_43F8:
	mov byte ptr [ebp-112], 0
.stabn 68,0,1184,.L_43F8-_SNAPMODEL@16
.L_43F9:
.L_41CF:
	mov ebx, dword ptr [ebp-108]
	mov cl, byte ptr [ebx]
	mov byte ptr [ebp-132], cl
.stabn 68,0,1185,.L_43F9-_SNAPMODEL@16
.L_43FA:
	movsx ecx, byte ptr [ebp-132]
	cmp ecx, 1
	jne .L_41D2
.L_41D3:
.L_41D4:
	mov byte ptr [ebp-112], -1
.stabn 68,0,1186,.L_43FA-_SNAPMODEL@16
.L_43FB:
.L_41D5:
	jmp .L_41D0
.L_41D2:
	movsx ecx, byte ptr [ebp-132]
	cmp ecx, 3
	jne .L_41D6
.L_41D7:
.L_41D8:
	mov byte ptr [ebp-112], 0
.stabn 68,0,1187,.L_43FB-_SNAPMODEL@16
.L_43FC:
.L_41D9:
	jmp .L_41D0
.L_41D6:
.L_41DB:
	jmp .L_41CB
.stabn 68,0,1188,.L_43FC-_SNAPMODEL@16
.L_43FD:
.L_41DC:
.L_41DA:
.L_41D0:
.L_41DD:
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-124], 0
.stabn 68,0,1190,.L_43FD-_SNAPMODEL@16
.L_43FE:
	mov ecx, dword ptr [_G_CURRENTMATRIX]
	sal ecx, 6
	lea ebx, [_TMATRIXSTACK+ecx]
	mov dword ptr [ebp-128], ebx
.stabn 68,0,1191,.L_43FE-_SNAPMODEL@16
.L_43FF:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+1]
	sar ecx, 2
	mov ebx, ecx
	and ebx, 1
	test ebx, ebx
	je .L_41DF
.L_41E0:
.stabn 68,0,1192,.L_43FF-_SNAPMODEL@16
.L_4400:
	mov ebx, dword ptr [ebp-108]
	movsx ecx, byte ptr [ebx+1]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_43CF]
	fstp dword ptr [ebp-120]
.stabn 68,0,1195,.L_4400-_SNAPMODEL@16
.L_4401:
	mov ecx, dword ptr [ebp-24]
	fld dword ptr [ecx+8]
	fadd dword ptr [ebp-124]
	fstp dword ptr [ebp-124]
.stabn 68,0,1196,.L_4401-_SNAPMODEL@16
.L_4402:
	push offset _Lt_41E1
	call _puts
	add esp, 4
.stabn 68,0,1198,.L_4402-_SNAPMODEL@16
.L_4403:
.L_41E2:
.L_41DF:
.L_41E3:
.stabn 68,0,1200,.L_4403-_SNAPMODEL@16
.L_4404:
.L_41E4:
.L_41DE:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 1
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_41E6
.L_41E7:
.stabn 68,0,1203,.L_4404-_SNAPMODEL@16
.L_4405:
	movzx eax, byte ptr [ebp-112]
	push eax
	mov ecx, dword ptr [ebp-108]
	movsx eax, byte ptr [ecx+1]
	push eax
	fild dword ptr [esp]
	add esp, 4
	sub esp,4
	fstp dword ptr [esp]
	mov ecx, dword ptr [ebp-108]
	movsx ebx, word ptr [ecx+2]
	push ebx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_38CA]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [ebp-76]
	fadd dword ptr [ebp-124]
	mov ebx, dword ptr [ebp-24]
	fadd dword ptr [ebx+12]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-24]
	fld dword ptr [ebx+8]
	fadd dword ptr [ebp-120]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [ebp-88]
	fadd dword ptr [ebp-116]
	mov ebx, dword ptr [ebp-24]
	fadd dword ptr [ebx+4]
	sub esp,4
	fstp dword ptr [esp]
	call _DRAWMALESHAPE@24
.stabn 68,0,1213,.L_4405-_SNAPMODEL@16
.L_4406:
.L_41E8:
	jmp .L_41E5
.L_41E6:
.L_41E9:
.stabn 68,0,1215,.L_4406-_SNAPMODEL@16
.L_4407:
	movzx eax, byte ptr [ebp-112]
	push eax
	mov ebx, dword ptr [ebp-108]
	movsx eax, byte ptr [ebx+1]
	push eax
	fild dword ptr [esp]
	add esp, 4
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-108]
	movsx ecx, word ptr [ebx+2]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fdiv qword ptr [_Lt_38CA]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [ebp-76]
	fadd dword ptr [ebp-124]
	mov ecx, dword ptr [ebp-24]
	fadd dword ptr [ecx+12]
	sub esp,4
	fstp dword ptr [esp]
	mov ecx, dword ptr [ebp-24]
	fld dword ptr [ecx+8]
	fadd dword ptr [ebp-120]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [ebp-88]
	fadd dword ptr [ebp-116]
	mov ecx, dword ptr [ebp-24]
	fadd dword ptr [ecx+4]
	sub esp,4
	fstp dword ptr [esp]
	call _DRAWFEMALESHAPE@24
.stabn 68,0,1216,.L_4407-_SNAPMODEL@16
.L_4408:
.L_41EA:
.L_41E5:
.L_41EB:
.L_41CB:
	inc dword ptr [ebp-100]
.L_41CA:
	mov ecx, dword ptr [ebp-104]
	cmp dword ptr [ebp-100], ecx
	jle .L_41CD
.L_41CC:
.L_41EC:
.stabn 68,0,1219,.L_4408-_SNAPMODEL@16
.L_4409:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+54]
	push ebx
	fild dword ptr [esp]
	add esp, 4
	fadd dword ptr [ebp-88]
	fstp dword ptr [ebp-88]
.stabn 68,0,1220,.L_4409-_SNAPMODEL@16
.L_440A:
.L_41ED:
.L_41C4:
	inc dword ptr [ebp-92]
.L_41C3:
	mov ebx, dword ptr [ebp-96]
	cmp dword ptr [ebp-92], ebx
	jle .L_41C6
.L_41C5:
.L_41EE:
.stabn 68,0,1221,.L_440A-_SNAPMODEL@16
.L_440B:
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx+55]
	push ecx
	fild dword ptr [esp]
	add esp, 4
	fadd dword ptr [ebp-76]
	fstp dword ptr [ebp-76]
.stabn 68,0,1222,.L_440B-_SNAPMODEL@16
.L_440C:
.L_41EF:
.L_41BD:
	inc dword ptr [ebp-80]
.L_41BC:
	mov ecx, dword ptr [ebp-84]
	cmp dword ptr [ebp-80], ecx
	jle .L_41BF
.L_41BE:
.L_41F0:
.stabn 68,0,1223,.L_440C-_SNAPMODEL@16
.L_440D:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 5
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_41F2
.L_41F3:
	call _POPMATRIX@0
.L_41F2:
.L_41F4:
.stabn 68,0,1224,.L_440D-_SNAPMODEL@16
.L_440E:
.L_41F5:
.L_41A6:
.L_41F6:
.stabn 68,0,1225,.L_440E-_SNAPMODEL@16
.L_440F:
.L_41F7:
.L_41A5:
.L_41F8:
	mov dword ptr [ebp-64], 0
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx]
	sar ebx, 3
	mov ecx, ebx
	and ecx, 7
	add ecx, 4294967295
	mov ebx, ecx
	mov dword ptr [ebp-68], ebx
	jmp .L_41FA
.L_41FD:
.L_41FE:
.stabn 68,0,1239,.L_440F-_SNAPMODEL@16
.L_4410:
.L_4206:
	mov ebx, dword ptr [ebp-64]
	sal ebx, 2
	mov ecx, dword ptr [ebp-24]
	add ecx, ebx
	lea ebx, [ecx+56]
	mov dword ptr [ebp-72], ebx
.stabn 68,0,1241,.L_4410-_SNAPMODEL@16
.L_4411:
.L_4208:
.L_4209:
.L_41FB:
	inc dword ptr [ebp-64]
.L_41FA:
	mov ebx, dword ptr [ebp-68]
	cmp dword ptr [ebp-64], ebx
	jle .L_41FD
.L_41FC:
.L_420A:
.stabn 68,0,1249,.L_4411-_SNAPMODEL@16
.L_4412:
.L_420B:
	mov dword ptr [ebp-64], 1
	mov dword ptr [ebp-68], 0
	mov ebx, dword ptr [ebp-24]
	movzx ecx, byte ptr [ebx]
	sar ecx, 3
	mov ebx, ecx
	and ebx, 7
	mov dword ptr [ebp-72], ebx
	mov dword ptr [ebp-76], 1
.stabn 68,0,1258,.L_4412-_SNAPMODEL@16
.L_4413:
.L_420C:
	mov ebx, dword ptr [ebp-24]
	mov cl, byte ptr [ebx+3]
	mov byte ptr [ebp-80], cl
.stabn 68,0,1259,.L_4413-_SNAPMODEL@16
.L_4414:
	movzx ecx, byte ptr [ebp-80]
	test ecx, ecx
	jne .L_420F
.L_4210:
.L_4211:
	mov dword ptr [ebp-76], 2
.stabn 68,0,1260,.L_4414-_SNAPMODEL@16
.L_4415:
.L_4212:
	jmp .L_420D
.L_420F:
	movzx ecx, byte ptr [ebp-80]
	cmp ecx, 1
	jne .L_4213
.L_4214:
.L_4215:
	mov dword ptr [ebp-76], 1
.stabn 68,0,1261,.L_4415-_SNAPMODEL@16
.L_4416:
.L_4216:
	jmp .L_420D
.L_4213:
	movzx ecx, byte ptr [ebp-80]
	cmp ecx, 2
	jne .L_4217
.L_4218:
.L_4219:
	movsx ecx, byte ptr [ebp+16]
	test ecx, ecx
	jne .L_421B
.L_421C:
	push offset _Lt_421D
	call _puts
	add esp, 4
.L_421B:
.L_421E:
.stabn 68,0,1263,.L_4416-_SNAPMODEL@16
.L_4417:
.L_421F:
.L_4217:
.L_420D:
.L_4220:
	mov ecx, dword ptr [ebp-24]
	movzx ebx, byte ptr [ecx+1]
	sar ebx, 4
	mov ecx, ebx
	and ecx, 1
	test ecx, ecx
	je .L_4222
.L_4223:
	mov ecx, dword ptr [ebp-24]
	movsx ebx, byte ptr [ecx+52]
	mov eax, ebx
	sar eax, 31
	xor ebx, eax
	sub ebx, eax
	mov ecx, dword ptr [ebp-24]
	movsx eax, byte ptr [ecx+53]
	mov ecx, eax
	sar ecx, 31
	xor eax, ecx
	sub eax, ecx
	imul ebx, eax
	mov dword ptr [ebp-64], ebx
.L_4222:
.L_4224:
.stabn 68,0,1268,.L_4417-_SNAPMODEL@16
.L_4418:
	mov ebx, dword ptr [ebp-24]
	movzx eax, byte ptr [ebx+1]
	sar eax, 1
	mov ebx, eax
	and ebx, 1
	test ebx, ebx
	je .L_4226
.L_4227:
.stabn 68,0,1269,.L_4418-_SNAPMODEL@16
.L_4419:
	mov ebx, dword ptr [_G_CURRENTMATRIX]
	sal ebx, 6
	lea eax, [_TMATRIXSTACK+ebx]
	mov dword ptr [ebp-80], eax
.stabn 68,0,1270,.L_4419-_SNAPMODEL@16
.L_441A:
	mov dword ptr [ebp-84], 0
.stabn 68,0,1271,.L_441A-_SNAPMODEL@16
.L_441B:
	cmp dword ptr [ebp-64], 1
	jle .L_4228
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-88], eax
	jmp .L_43D0
.L_4228:
	mov dword ptr [ebp-88], 0
.L_43D0:
	cmp dword ptr [ebp-88], 0
	je .L_422B
.L_422C:
	push offset _Lt_422D
	call _puts
	add esp, 4
.L_422B:
.L_422E:
.stabn 68,0,1273,.L_441B-_SNAPMODEL@16
.L_441D:
	mov dword ptr [ebp-68], 1
.stabn 68,0,1275,.L_441D-_SNAPMODEL@16
.L_441E:
.L_422F:
	mov dword ptr [ebp-92], 0
	mov eax, dword ptr [ebp-24]
	movzx ebx, byte ptr [eax]
	sar ebx, 3
	mov eax, ebx
	and eax, 7
	add eax, 4294967295
	mov ebx, eax
	mov dword ptr [ebp-96], ebx
	jmp .L_4231
.L_4234:
.L_4235:
.stabn 68,0,1276,.L_441E-_SNAPMODEL@16
.L_441F:
.L_4236:
	mov ebx, dword ptr [ebp-92]
	sal ebx, 2
	mov eax, dword ptr [ebp-24]
	add eax, ebx
	mov bl, byte ptr [eax+56]
	mov byte ptr [ebp-100], bl
.stabn 68,0,1277,.L_441F-_SNAPMODEL@16
.L_4420:
	movsx ebx, byte ptr [ebp-100]
	cmp ebx, 5
	je .L_423A
.L_423B:
	movsx ebx, byte ptr [ebp-100]
	cmp ebx, 4
	jne .L_4239
.L_423A:
.L_423C:
	inc dword ptr [ebp-84]
.stabn 68,0,1278,.L_4420-_SNAPMODEL@16
.L_4421:
.L_423D:
.L_4239:
.L_4237:
.L_423E:
.L_423F:
.L_4232:
	inc dword ptr [ebp-92]
.L_4231:
	mov ebx, dword ptr [ebp-96]
	cmp dword ptr [ebp-92], ebx
	jle .L_4234
.L_4233:
.L_4240:
.stabn 68,0,1280,.L_4421-_SNAPMODEL@16
.L_4422:
.L_4241:
	mov dword ptr [ebp-92], 0
	mov ebx, dword ptr [ebp-24]
	movzx eax, byte ptr [ebx]
	sar eax, 3
	mov ebx, eax
	and ebx, 7
	add ebx, 4294967295
	mov eax, ebx
	mov dword ptr [ebp-96], eax
	jmp .L_4243
.L_4246:
.L_4247:
.stabn 68,0,1281,.L_4422-_SNAPMODEL@16
.L_4423:
	mov eax, dword ptr [ebp-92]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	movsx eax, byte ptr [ebx+57]
	cmp eax, 1
	jne .L_4249
.L_424A:
	add dword ptr [ebp-72], 4294967295
	jmp .L_4244
.L_4249:
.L_424B:
.stabn 68,0,1282,.L_4423-_SNAPMODEL@16
.L_4424:
.L_424C:
	mov eax, dword ptr [ebp-92]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	mov al, byte ptr [ebx+56]
	mov byte ptr [ebp-100], al
.stabn 68,0,1283,.L_4424-_SNAPMODEL@16
.L_4425:
	movsx eax, byte ptr [ebp-100]
	cmp eax, 2
	jne .L_424F
.L_4250:
.L_4251:
.stabn 68,0,1284,.L_4425-_SNAPMODEL@16
.L_4426:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_4253
.L_4254:
.stabn 68,0,1285,.L_4426-_SNAPMODEL@16
.L_4427:
.L_4255:
.L_4253:
.L_4252:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-64]
	add dword ptr [eax+12], ebx
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1288,.L_4427-_SNAPMODEL@16
.L_4428:
.L_4256:
	jmp .L_424D
.L_424F:
	movsx ebx, byte ptr [ebp-100]
	cmp ebx, 5
	jne .L_4257
.L_4258:
.L_4259:
.stabn 68,0,1290,.L_4428-_SNAPMODEL@16
.L_4429:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1291,.L_4429-_SNAPMODEL@16
.L_442A:
.L_425A:
	jmp .L_424D
.L_4257:
	movsx ebx, byte ptr [ebp-100]
	cmp ebx, 4
	jne .L_425B
.L_425C:
.L_425D:
.stabn 68,0,1293,.L_442A-_SNAPMODEL@16
.L_442B:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_425F
.L_4260:
.stabn 68,0,1294,.L_442B-_SNAPMODEL@16
.L_442C:
.L_4261:
.L_425F:
.L_425E:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx+28], eax
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1297,.L_442C-_SNAPMODEL@16
.L_442D:
.L_4262:
	jmp .L_424D
.L_425B:
	movsx eax, byte ptr [ebp-100]
	cmp eax, 1
	jne .L_4263
.L_4264:
.L_4265:
.stabn 68,0,1300,.L_442D-_SNAPMODEL@16
.L_442E:
	mov eax, dword ptr [ebp-92]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	movsx eax, word ptr [ebx+58]
	cmp eax, 800
	jne .L_4267
.L_4268:
.stabn 68,0,1301,.L_442E-_SNAPMODEL@16
.L_442F:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1302,.L_442F-_SNAPMODEL@16
.L_4430:
.L_4269:
	jmp .L_4266
.L_4267:
	mov eax, dword ptr [ebp-92]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	movsx eax, word ptr [ebx+58]
	cmp eax, 400
	jne .L_426A
.L_426B:
.stabn 68,0,1304,.L_4430-_SNAPMODEL@16
.L_4431:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_426D
.L_426E:
.stabn 68,0,1305,.L_4431-_SNAPMODEL@16
.L_4432:
.L_426F:
.L_426D:
.L_426C:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-64]
	add dword ptr [eax+20], ebx
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1308,.L_4432-_SNAPMODEL@16
.L_4433:
.L_4270:
	jmp .L_4266
.L_426A:
	mov ebx, dword ptr [ebp-92]
	sal ebx, 2
	mov eax, dword ptr [ebp-24]
	add eax, ebx
	movsx ebx, word ptr [eax+58]
	cmp ebx, 600
	jne .L_4271
.L_4272:
.stabn 68,0,1310,.L_4433-_SNAPMODEL@16
.L_4434:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4274
.L_4275:
.stabn 68,0,1311,.L_4434-_SNAPMODEL@16
.L_4435:
.L_4276:
	mov ebx, dword ptr [ebp-80]
	mov dword ptr [ebp-104], ebx
.stabn 68,0,1314,.L_4435-_SNAPMODEL@16
.L_4436:
	mov ebx, dword ptr [ebp-104]
	fld dword ptr [ebx+48]
	fadd dword ptr [ebp-28]
	fstp dword ptr [ebp-132]
	mov ebx, dword ptr [ebp-104]
	fld dword ptr [ebx+52]
	fadd dword ptr [ebp-32]
	fstp dword ptr [ebp-128]
	mov ebx, dword ptr [ebp-104]
	fld dword ptr [ebx+56]
	fadd dword ptr [ebp-36]
	fstp dword ptr [ebp-124]
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	push dword ptr [ebp-108]
	push dword ptr [ebp-112]
	push dword ptr [ebp-116]
	push dword ptr [ebp-120]
	push dword ptr [ebp-124]
	push dword ptr [ebp-128]
	push dword ptr [ebp-132]
	push dword ptr [ebp-64]
	push dword ptr [ebp+12]
	call _SNAPADDSTUD@36
.stabn 68,0,1316,.L_4436-_SNAPMODEL@16
.L_4437:
.L_427A:
.L_427B:
.L_4274:
.L_4273:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1319,.L_4437-_SNAPMODEL@16
.L_4438:
.L_427C:
	jmp .L_4266
.L_4271:
.L_427D:
.stabn 68,0,1320,.L_4438-_SNAPMODEL@16
.L_4439:
	cmp dword ptr [ebp-84], 0
	je .L_427F
.L_4280:
.stabn 68,0,1321,.L_4439-_SNAPMODEL@16
.L_443A:
	dec dword ptr [ebp-84]
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1322,.L_443A-_SNAPMODEL@16
.L_443B:
.L_4281:
	jmp .L_427E
.L_427F:
.L_4282:
.stabn 68,0,1326,.L_443B-_SNAPMODEL@16
.L_443C:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4284
.L_4285:
	push offset _Lt_4286
	call _puts
	add esp, 4
.L_4284:
.L_4287:
.stabn 68,0,1328,.L_443C-_SNAPMODEL@16
.L_443D:
.L_4288:
.L_427E:
.L_4289:
.L_4266:
.L_428A:
	jmp .L_424D
.L_4263:
.L_428C:
.stabn 68,0,1332,.L_443D-_SNAPMODEL@16
.L_443E:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_428E
.L_428F:
	push offset _Lt_4290
	call _puts
	add esp, 4
.L_428E:
.L_4291:
.stabn 68,0,1333,.L_443E-_SNAPMODEL@16
.L_443F:
.L_4292:
.L_428B:
.L_424D:
.L_4293:
.L_4294:
.L_4244:
	inc dword ptr [ebp-92]
.L_4243:
	mov ebx, dword ptr [ebp-96]
	cmp dword ptr [ebp-92], ebx
	jle .L_4246
.L_4245:
.L_4295:
.stabn 68,0,1335,.L_443F-_SNAPMODEL@16
.L_4440:
.L_4296:
	jmp .L_4225
.L_4226:
.L_4297:
.stabn 68,0,1336,.L_4440-_SNAPMODEL@16
.L_4441:
	mov dword ptr [ebp-68], 2
.stabn 68,0,1337,.L_4441-_SNAPMODEL@16
.L_4442:
	mov ebx, dword ptr [ebp-24]
	movzx eax, byte ptr [ebx+1]
	sar eax, 3
	mov ebx, eax
	and ebx, 1
	test ebx, ebx
	je .L_4299
.L_429A:
.stabn 68,0,1338,.L_4442-_SNAPMODEL@16
.L_4443:
	mov dword ptr [ebp-80], 0
.stabn 68,0,1341,.L_4443-_SNAPMODEL@16
.L_4444:
	mov byte ptr [ebp-84], 0
	mov byte ptr [ebp-88], 0
	mov byte ptr [ebp-92], 0
.stabn 68,0,1342,.L_4444-_SNAPMODEL@16
.L_4445:
.L_429B:
	mov dword ptr [ebp-96], 0
	mov ebx, dword ptr [ebp-24]
	movzx eax, byte ptr [ebx]
	sar eax, 3
	mov ebx, eax
	and ebx, 7
	add ebx, 4294967295
	mov eax, ebx
	mov dword ptr [ebp-100], eax
	jmp .L_429D
.L_42A0:
.L_42A1:
.stabn 68,0,1343,.L_4445-_SNAPMODEL@16
.L_4446:
	mov eax, dword ptr [ebp-96]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	movsx eax, byte ptr [ebx+57]
	push eax
	fild dword ptr [esp]
	add esp, 4
	mov eax, dword ptr [ebp-44]
	fmul dword ptr [eax+20]
	fld dword ptr [_Lt_38D3]
	fcomip st, st(1)
	fstp st(0)
	jnz .L_42A3
.L_42A4:
.stabn 68,0,1344,.L_4446-_SNAPMODEL@16
.L_4447:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_42A6
.L_42A7:
	push offset _Lt_42A8
	call _puts
	add esp, 4
.L_42A6:
.L_42A9:
.stabn 68,0,1346,.L_4447-_SNAPMODEL@16
.L_4448:
	add dword ptr [ebp-72], 4294967295
	jmp .L_429E
.stabn 68,0,1348,.L_4448-_SNAPMODEL@16
.L_4449:
.L_42AA:
.L_42A3:
.L_42A2:
.L_42AB:
	mov eax, dword ptr [ebp-96]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	mov al, byte ptr [ebx+56]
	mov byte ptr [ebp-104], al
.stabn 68,0,1350,.L_4449-_SNAPMODEL@16
.L_444A:
	movsx eax, byte ptr [ebp-104]
	cmp eax, 2
	jne .L_42AE
.L_42AF:
.L_42B0:
.stabn 68,0,1351,.L_444A-_SNAPMODEL@16
.L_444B:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_42B2
.L_42B3:
.stabn 68,0,1352,.L_444B-_SNAPMODEL@16
.L_444C:
.L_42B4:
.L_42B2:
.L_42B1:
	movsx eax, byte ptr [ebp-84]
	test eax, eax
	jne .L_42B6
.L_42B7:
	mov byte ptr [ebp-84], 1
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-76]
	imul ebx, dword ptr [ebp-64]
	add dword ptr [eax+16], ebx
.L_42B6:
.L_42B8:
.stabn 68,0,1355,.L_444C-_SNAPMODEL@16
.L_444D:
	add dword ptr [ebp-72], 4294967295
	mov dword ptr [ebp-80], -999
	mov dword ptr [ebp-76], 1
.stabn 68,0,1358,.L_444D-_SNAPMODEL@16
.L_444E:
.L_42B9:
	jmp .L_42AC
.L_42AE:
	movsx ebx, byte ptr [ebp-104]
	cmp ebx, 3
	jne .L_42BA
.L_42BB:
.L_42BC:
.stabn 68,0,1359,.L_444E-_SNAPMODEL@16
.L_444F:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_42BE
.L_42BF:
.stabn 68,0,1360,.L_444F-_SNAPMODEL@16
.L_4450:
	movsx ebx, byte ptr [ebp-88]
	test ebx, ebx
	jne .L_42C1
.L_42C2:
.stabn 68,0,1361,.L_4450-_SNAPMODEL@16
.L_4451:
	mov byte ptr [ebp-88], 1
.stabn 68,0,1362,.L_4451-_SNAPMODEL@16
.L_4452:
.L_42C3:
	mov ebx, dword ptr [ebp-44]
	mov dword ptr [ebp-108], ebx
.stabn 68,0,1363,.L_4452-_SNAPMODEL@16
.L_4453:
	mov ebx, dword ptr [ebp-108]
	fld dword ptr [ebx+48]
	fadd dword ptr [ebp-28]
	fstp dword ptr [ebp-136]
	mov ebx, dword ptr [ebp-108]
	fld dword ptr [ebx+52]
	fadd dword ptr [ebp-32]
	fstp dword ptr [ebp-132]
	mov ebx, dword ptr [ebp-108]
	fld dword ptr [ebx+56]
	fadd dword ptr [ebp-36]
	fstp dword ptr [ebp-128]
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	push dword ptr [ebp-112]
	push dword ptr [ebp-116]
	push dword ptr [ebp-120]
	push dword ptr [ebp-124]
	push dword ptr [ebp-128]
	push dword ptr [ebp-132]
	push dword ptr [ebp-136]
	push dword ptr [ebp-64]
	push dword ptr [ebp+12]
	call _SNAPADDCLUTCH@36
.stabn 68,0,1364,.L_4453-_SNAPMODEL@16
.L_4454:
.L_42C7:
.L_42C8:
.L_42C1:
.L_42C0:
.L_42C9:
.L_42BE:
.L_42BD:
	movsx ebx, byte ptr [ebp-92]
	test ebx, ebx
	jne .L_42CB
.L_42CC:
	mov byte ptr [ebp-92], 1
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-76]
	imul eax, dword ptr [ebp-64]
	add dword ptr [ebx+24], eax
.L_42CB:
.L_42CD:
.stabn 68,0,1371,.L_4454-_SNAPMODEL@16
.L_4455:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1372,.L_4455-_SNAPMODEL@16
.L_4456:
.L_42CE:
	jmp .L_42AC
.L_42BA:
	movsx eax, byte ptr [ebp-104]
	cmp eax, 1
	jne .L_42CF
.L_42D0:
.L_42D1:
.stabn 68,0,1373,.L_4456-_SNAPMODEL@16
.L_4457:
.L_42D2:
	mov eax, dword ptr [ebp-96]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	mov ax, word ptr [ebx+58]
	mov word ptr [ebp-108], ax
.stabn 68,0,1374,.L_4457-_SNAPMODEL@16
.L_4458:
	movsx eax, word ptr [ebp-108]
	cmp eax, 800
	jne .L_42D5
.L_42D6:
.L_42D7:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1375,.L_4458-_SNAPMODEL@16
.L_4459:
.L_42D8:
	jmp .L_42D3
.L_42D5:
	movsx eax, word ptr [ebp-108]
	cmp eax, 600
	jne .L_42D9
.L_42DA:
.L_42DB:
	inc dword ptr [ebp-80]
.stabn 68,0,1376,.L_4459-_SNAPMODEL@16
.L_445A:
.L_42DC:
	jmp .L_42D3
.L_42D9:
	movsx eax, word ptr [ebp-108]
	cmp eax, 400
	jne .L_42DD
.L_42DE:
.L_42DF:
.stabn 68,0,1377,.L_445A-_SNAPMODEL@16
.L_445B:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_42E1
.L_42E2:
.stabn 68,0,1378,.L_445B-_SNAPMODEL@16
.L_445C:
.L_42E3:
.L_42E1:
.L_42E0:
	movsx eax, byte ptr [ebp-92]
	test eax, eax
	jne .L_42E5
.L_42E6:
	mov byte ptr [ebp-92], 1
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-76]
	imul ebx, dword ptr [ebp-64]
	add dword ptr [eax+24], ebx
.L_42E5:
.L_42E7:
.stabn 68,0,1381,.L_445C-_SNAPMODEL@16
.L_445D:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1382,.L_445D-_SNAPMODEL@16
.L_445E:
.L_42E8:
.L_42DD:
.L_42D3:
.L_42E9:
.L_42EA:
.L_42CF:
.L_42AC:
.L_42EB:
.L_42EC:
.L_429E:
	inc dword ptr [ebp-96]
.L_429D:
	mov ebx, dword ptr [ebp-100]
	cmp dword ptr [ebp-96], ebx
	jle .L_42A0
.L_429F:
.L_42ED:
.stabn 68,0,1385,.L_445E-_SNAPMODEL@16
.L_445F:
	cmp dword ptr [ebp-80], 0
	jle .L_42EF
.L_42F0:
.stabn 68,0,1386,.L_445F-_SNAPMODEL@16
.L_4460:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_42F2
.L_42F3:
.stabn 68,0,1387,.L_4460-_SNAPMODEL@16
.L_4461:
	push offset _Lt_42F4
	call _puts
	add esp, 4
.stabn 68,0,1391,.L_4461-_SNAPMODEL@16
.L_4462:
.L_42F5:
.L_42F2:
.L_42F1:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-80]
	imul eax, dword ptr [ebp-64]
	add dword ptr [ebx+32], eax
	mov eax, dword ptr [ebp-80]
	sub dword ptr [ebp-72], eax
.stabn 68,0,1395,.L_4462-_SNAPMODEL@16
.L_4463:
.L_42F6:
.L_42EF:
.L_42EE:
.L_42F7:
	jmp .L_4298
.L_4299:
.L_42F8:
.stabn 68,0,1397,.L_4463-_SNAPMODEL@16
.L_4464:
	mov byte ptr [ebp-80], 0
	mov byte ptr [ebp-84], 0
.stabn 68,0,1398,.L_4464-_SNAPMODEL@16
.L_4465:
.L_42F9:
	mov dword ptr [ebp-88], 0
	mov eax, dword ptr [ebp-24]
	movzx ebx, byte ptr [eax]
	sar ebx, 3
	mov eax, ebx
	and eax, 7
	add eax, 4294967295
	mov ebx, eax
	mov dword ptr [ebp-92], ebx
	jmp .L_42FB
.L_42FE:
.L_42FF:
.stabn 68,0,1399,.L_4465-_SNAPMODEL@16
.L_4466:
.L_4300:
	mov ebx, dword ptr [ebp-88]
	sal ebx, 2
	mov eax, dword ptr [ebp-24]
	add eax, ebx
	mov bl, byte ptr [eax+56]
	mov byte ptr [ebp-96], bl
.stabn 68,0,1401,.L_4466-_SNAPMODEL@16
.L_4467:
	movsx ebx, byte ptr [ebp-96]
	cmp ebx, 2
	jne .L_4303
.L_4304:
.L_4305:
.stabn 68,0,1402,.L_4467-_SNAPMODEL@16
.L_4468:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4307
.L_4308:
	push offset _Lt_4309
	call _puts
	add esp, 4
.L_4307:
.L_430A:
.stabn 68,0,1404,.L_4468-_SNAPMODEL@16
.L_4469:
.L_430B:
	jmp .L_4301
.L_4303:
	movsx ebx, byte ptr [ebp-96]
	cmp ebx, 4
	jne .L_430C
.L_430D:
.L_430E:
.stabn 68,0,1406,.L_4469-_SNAPMODEL@16
.L_446A:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4310
.L_4311:
.stabn 68,0,1407,.L_446A-_SNAPMODEL@16
.L_446B:
.L_4312:
.L_4310:
.L_430F:
	movsx ebx, byte ptr [ebp-80]
	test ebx, ebx
	jne .L_4314
.L_4315:
	mov byte ptr [ebp-80], 1
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx+32], eax
.L_4314:
.L_4316:
.stabn 68,0,1410,.L_446B-_SNAPMODEL@16
.L_446C:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1411,.L_446C-_SNAPMODEL@16
.L_446D:
.L_4317:
	jmp .L_4301
.L_430C:
	movsx eax, byte ptr [ebp-96]
	cmp eax, 1
	jne .L_4318
.L_4319:
.L_431A:
.stabn 68,0,1412,.L_446D-_SNAPMODEL@16
.L_446E:
	mov eax, dword ptr [ebp-88]
	sal eax, 2
	mov ebx, dword ptr [ebp-24]
	add ebx, eax
	movsx eax, word ptr [ebx+58]
	cmp eax, 400
	jne .L_431C
.L_431D:
.stabn 68,0,1413,.L_446E-_SNAPMODEL@16
.L_446F:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_431F
.L_4320:
.stabn 68,0,1414,.L_446F-_SNAPMODEL@16
.L_4470:
.L_4321:
.L_431F:
.L_431E:
	movsx eax, byte ptr [ebp-84]
	test eax, eax
	jne .L_4323
.L_4324:
	mov byte ptr [ebp-84], 1
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-76]
	imul ebx, dword ptr [ebp-64]
	add dword ptr [eax+24], ebx
.L_4323:
.L_4325:
.stabn 68,0,1417,.L_4470-_SNAPMODEL@16
.L_4471:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1418,.L_4471-_SNAPMODEL@16
.L_4472:
.L_4326:
	jmp .L_431B
.L_431C:
	mov ebx, dword ptr [ebp-88]
	sal ebx, 2
	mov eax, dword ptr [ebp-24]
	add eax, ebx
	movsx ebx, word ptr [eax+58]
	cmp ebx, 600
	jne .L_4327
.L_4328:
.stabn 68,0,1419,.L_4472-_SNAPMODEL@16
.L_4473:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_432A
.L_432B:
.stabn 68,0,1420,.L_4473-_SNAPMODEL@16
.L_4474:
.L_432C:
	mov ebx, dword ptr [ebp-44]
	mov dword ptr [ebp-100], ebx
.stabn 68,0,1422,.L_4474-_SNAPMODEL@16
.L_4475:
.L_432E:
	mov dword ptr [ebp-104], 0
	mov ebx, dword ptr [ebp-48]
	mov dword ptr [ebp-108], ebx
	jmp .L_4330
.L_4333:
.L_4334:
.stabn 68,0,1423,.L_4475-_SNAPMODEL@16
.L_4476:
.L_4335:
	mov dword ptr [ebp-112], 0
	mov ebx, dword ptr [ebp-52]
	mov dword ptr [ebp-116], ebx
	jmp .L_4337
.L_433A:
.L_433B:
.stabn 68,0,1424,.L_4476-_SNAPMODEL@16
.L_4477:
	mov ebx, dword ptr [ebp-100]
	fld dword ptr [ebx+48]
	fadd dword ptr [ebp-28]
	mov ebx, dword ptr [ebp-40]
	movzx eax, byte ptr [ebx+2]
	imul eax, dword ptr [ebp-104]
	push eax
	fild dword ptr [esp]
	add esp, 4
	fxch st(1)
	faddp
	fstp dword ptr [ebp-144]
	mov eax, dword ptr [ebp-100]
	fld dword ptr [eax+52]
	fadd dword ptr [ebp-32]
	fstp dword ptr [ebp-140]
	mov eax, dword ptr [ebp-100]
	fld dword ptr [eax+56]
	fadd dword ptr [ebp-36]
	mov eax, dword ptr [ebp-40]
	movzx ebx, byte ptr [eax+3]
	imul ebx, dword ptr [ebp-112]
	push ebx
	fild dword ptr [esp]
	add esp, 4
	fxch st(1)
	faddp
	fstp dword ptr [ebp-136]
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	push dword ptr [ebp-120]
	push dword ptr [ebp-124]
	push dword ptr [ebp-128]
	push dword ptr [ebp-132]
	push dword ptr [ebp-136]
	push dword ptr [ebp-140]
	push dword ptr [ebp-144]
	push 1
	push dword ptr [ebp+12]
	call _SNAPADDCLUTCH@36
.stabn 68,0,1425,.L_4477-_SNAPMODEL@16
.L_4478:
.L_433E:
.L_4338:
	inc dword ptr [ebp-112]
.L_4337:
	mov ebx, dword ptr [ebp-116]
	cmp dword ptr [ebp-112], ebx
	jle .L_433A
.L_4339:
.L_433F:
.stabn 68,0,1426,.L_4478-_SNAPMODEL@16
.L_4479:
.L_4340:
.L_4331:
	inc dword ptr [ebp-104]
.L_4330:
	mov ebx, dword ptr [ebp-108]
	cmp dword ptr [ebp-104], ebx
	jle .L_4333
.L_4332:
.L_4341:
.stabn 68,0,1427,.L_4479-_SNAPMODEL@16
.L_447A:
.L_4342:
.L_4343:
.L_432A:
.L_4329:
	add dword ptr [ebp-72], 4294967295
.stabn 68,0,1430,.L_447A-_SNAPMODEL@16
.L_447B:
.L_4344:
.L_4327:
.L_431B:
.L_4345:
.L_4318:
.L_4301:
.L_4346:
.L_4347:
.L_42FC:
	inc dword ptr [ebp-88]
.L_42FB:
	mov ebx, dword ptr [ebp-92]
	cmp dword ptr [ebp-88], ebx
	jle .L_42FE
.L_42FD:
.L_4348:
.stabn 68,0,1433,.L_447B-_SNAPMODEL@16
.L_447C:
.L_4349:
.L_4298:
.L_434A:
.L_4225:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_434C
.L_434D:
.stabn 68,0,1437,.L_447C-_SNAPMODEL@16
.L_447D:
	cmp dword ptr [ebp-72], 0
	jae .L_434F
.L_4350:
	push offset _Lt_4351
	call _puts
	add esp, 4
.L_434F:
.L_4352:
.stabn 68,0,1438,.L_447D-_SNAPMODEL@16
.L_447E:
	cmp dword ptr [ebp-72], 1
	jbe .L_4354
.L_4355:
	push offset _Lt_4356
	call _puts
	add esp, 4
.L_4354:
.L_4357:
.stabn 68,0,1439,.L_447E-_SNAPMODEL@16
.L_447F:
.L_4358:
.L_434C:
.L_434B:
	cmp dword ptr [ebp-72], 0
	jbe .L_435A
.L_435B:
.stabn 68,0,1441,.L_447F-_SNAPMODEL@16
.L_4480:
.L_435C:
	cmp dword ptr [ebp-68], 1
	jne .L_435E
.L_435F:
.L_4360:
.stabn 68,0,1443,.L_4480-_SNAPMODEL@16
.L_4481:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4362
.L_4363:
.stabn 68,0,1444,.L_4481-_SNAPMODEL@16
.L_4482:
	push dword ptr [ebp-64]
	push offset _Lt_4364
	call _printf
	add esp, 8
.stabn 68,0,1447,.L_4482-_SNAPMODEL@16
.L_4483:
.L_4365:
.L_4362:
.L_4361:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx], eax
.stabn 68,0,1450,.L_4483-_SNAPMODEL@16
.L_4484:
.L_4366:
	jmp .L_435D
.L_435E:
	cmp dword ptr [ebp-68], 2
	jne .L_4367
.L_4368:
.L_4369:
.stabn 68,0,1454,.L_4484-_SNAPMODEL@16
.L_4485:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_436B
.L_436C:
.stabn 68,0,1456,.L_4485-_SNAPMODEL@16
.L_4486:
.L_436D:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-80], eax
.stabn 68,0,1457,.L_4486-_SNAPMODEL@16
.L_4487:
	mov eax, dword ptr [ebp-80]
	fld dword ptr [eax+48]
	fadd dword ptr [ebp-28]
	fstp dword ptr [ebp-108]
	mov eax, dword ptr [ebp-80]
	fld dword ptr [eax+52]
	fadd dword ptr [ebp-32]
	fstp dword ptr [ebp-104]
	mov eax, dword ptr [ebp-80]
	fld dword ptr [eax+56]
	fadd dword ptr [ebp-36]
	fstp dword ptr [ebp-100]
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	push dword ptr [ebp-84]
	push dword ptr [ebp-88]
	push dword ptr [ebp-92]
	push dword ptr [ebp-96]
	push dword ptr [ebp-100]
	push dword ptr [ebp-104]
	push dword ptr [ebp-108]
	push dword ptr [ebp-64]
	push dword ptr [ebp+12]
	call _SNAPADDCLUTCH@36
.stabn 68,0,1458,.L_4487-_SNAPMODEL@16
.L_4488:
.L_4371:
	cmp dword ptr [ebp-64], 1
	jle .L_4373
.L_4374:
	push dword ptr [ebp-64]
	push offset _Lt_4375
	call _printf
	add esp, 8
.L_4373:
.L_4376:
.stabn 68,0,1462,.L_4488-_SNAPMODEL@16
.L_4489:
.L_4377:
.L_436B:
.L_436A:
.L_4378:
	jmp .L_435D
.L_4367:
	cmp dword ptr [ebp-68], 9
	jne .L_4379
.L_437A:
.L_437B:
.stabn 68,0,1472,.L_4489-_SNAPMODEL@16
.L_448A:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_437D
.L_437E:
.stabn 68,0,1473,.L_448A-_SNAPMODEL@16
.L_448B:
.L_437F:
.L_437D:
.L_437C:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-64]
	add dword ptr [eax+8], ebx
.stabn 68,0,1476,.L_448B-_SNAPMODEL@16
.L_448C:
.L_4380:
	jmp .L_435D
.L_4379:
	cmp dword ptr [ebp-68], 7
	jne .L_4381
.L_4382:
.L_4383:
.stabn 68,0,1477,.L_448C-_SNAPMODEL@16
.L_448D:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_4385
.L_4386:
.stabn 68,0,1478,.L_448D-_SNAPMODEL@16
.L_448E:
.L_4387:
.L_4385:
.L_4384:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx+20], eax
.stabn 68,0,1481,.L_448E-_SNAPMODEL@16
.L_448F:
.L_4388:
	jmp .L_435D
.L_4381:
	cmp dword ptr [ebp-68], 8
	jne .L_4389
.L_438A:
.L_438B:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-76]
	imul ebx, dword ptr [ebp-64]
	add dword ptr [eax+24], ebx
.stabn 68,0,1482,.L_448F-_SNAPMODEL@16
.L_4490:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_438D
.L_438E:
.stabn 68,0,1483,.L_4490-_SNAPMODEL@16
.L_4491:
.L_438F:
.L_438D:
.L_438C:
.L_4390:
	jmp .L_435D
.L_4389:
	cmp dword ptr [ebp-68], 5
	jne .L_4391
.L_4392:
.L_4393:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx+28], eax
.stabn 68,0,1486,.L_4491-_SNAPMODEL@16
.L_4492:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_4395
.L_4396:
.stabn 68,0,1487,.L_4492-_SNAPMODEL@16
.L_4493:
.L_4397:
.L_4395:
.L_4394:
.L_4398:
	jmp .L_435D
.L_4391:
	cmp dword ptr [ebp-68], 6
	jne .L_4399
.L_439A:
.L_439B:
.stabn 68,0,1490,.L_4493-_SNAPMODEL@16
.L_4494:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_439D
.L_439E:
.stabn 68,0,1491,.L_4494-_SNAPMODEL@16
.L_4495:
.L_439F:
.L_439D:
.L_439C:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-64]
	add dword ptr [eax+32], ebx
.stabn 68,0,1494,.L_4495-_SNAPMODEL@16
.L_4496:
.L_43A0:
	jmp .L_435D
.L_4399:
	cmp dword ptr [ebp-68], 3
	jne .L_43A1
.L_43A2:
.L_43A3:
.stabn 68,0,1498,.L_4496-_SNAPMODEL@16
.L_4497:
	movsx ebx, byte ptr [ebp+16]
	test ebx, ebx
	jne .L_43A5
.L_43A6:
.stabn 68,0,1499,.L_4497-_SNAPMODEL@16
.L_4498:
.L_43A7:
.L_43A5:
.L_43A4:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-64]
	add dword ptr [ebx+12], eax
.stabn 68,0,1502,.L_4498-_SNAPMODEL@16
.L_4499:
.L_43A8:
	jmp .L_435D
.L_43A1:
	cmp dword ptr [ebp-68], 4
	jne .L_43A9
.L_43AA:
.L_43AB:
.stabn 68,0,1503,.L_4499-_SNAPMODEL@16
.L_449A:
	movsx eax, byte ptr [ebp+16]
	test eax, eax
	jne .L_43AD
.L_43AE:
.stabn 68,0,1504,.L_449A-_SNAPMODEL@16
.L_449B:
.L_43AF:
.L_43AD:
.L_43AC:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-64]
	add dword ptr [eax+16], ebx
.stabn 68,0,1507,.L_449B-_SNAPMODEL@16
.L_449C:
.L_43B0:
.L_43A9:
.L_435D:
.L_43B1:
.L_43B2:
.L_435A:
.L_4359:
.L_43B3:
.L_43B4:
.L_419C:
.L_4191:
.L_43B5:
.L_43B6:
.L_43B7:
.L_417E:
	inc dword ptr [ebp-16]
.L_417D:
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [ebp-16], ebx
	jle .L_4180
.L_417F:
.L_43B8:
.stabn 68,0,1515,.L_449C-_SNAPMODEL@16
.L_449D:
.L_43B9:
.L_4179:
.L_4178:
.L_43BA:
	mov dword ptr [ebp-8], 0
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebx+4]
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_43BC
.L_43BF:
.L_43C0:
.stabn 68,0,1517,.L_449D-_SNAPMODEL@16
.L_449E:
.L_43C1:
	mov eax, dword ptr [ebp-8]
	imul eax, 56
	mov ebx, dword ptr [ebp-4]
	add ebx, eax
	lea eax, [ebx+44]
	mov dword ptr [ebp-16], eax
.stabn 68,0,1518,.L_449E-_SNAPMODEL@16
.L_449F:
	mov eax, dword ptr [ebp-16]
	movzx ebx, byte ptr [eax]
	cmp ebx, 1
	jne .L_43C4
.L_43C5:
.stabn 68,0,1519,.L_449F-_SNAPMODEL@16
.L_44A0:
.L_43C6:
	mov ebx, dword ptr [ebp-16]
	lea eax, [ebx+4]
	mov dword ptr [ebp-20], eax
.stabn 68,0,1521,.L_44A0-_SNAPMODEL@16
.L_44A1:
	mov eax, dword ptr [ebp-20]
	mov ebx, dword ptr [eax+48]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ebx+4]
	mov dword ptr [ebp-24], eax
.stabn 68,0,1522,.L_44A1-_SNAPMODEL@16
.L_44A2:
	lea eax, [ebp-88]
	mov dword ptr [ebp-124], eax
	lea eax, [ebp-88]
	mov dword ptr [ebp-120], eax
	mov dword ptr [ebp-116], 64
	mov dword ptr [ebp-112], 4
	mov dword ptr [ebp-108], 1
	mov dword ptr [ebp-104], 49
	mov dword ptr [ebp-100], 16
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 15
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+12]
	pop dword ptr [ebp-88]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+24]
	pop dword ptr [ebp-84]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+36]
	pop dword ptr [ebp-80]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-76]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+16]
	pop dword ptr [ebp-72]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+28]
	pop dword ptr [ebp-68]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+40]
	pop dword ptr [ebp-64]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-60]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+20]
	pop dword ptr [ebp-56]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+32]
	pop dword ptr [ebp-52]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+44]
	pop dword ptr [ebp-48]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-44]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax]
	pop dword ptr [ebp-40]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+4]
	pop dword ptr [ebp-36]
	mov eax, dword ptr [ebp-20]
	push dword ptr [eax+8]
	pop dword ptr [ebp-32]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-28]
.stabn 68,0,1525,.L_44A2-_SNAPMODEL@16
.L_44A3:
	lea eax, [ebp-88]
	push eax
	call _PUSHANDMULTMATRIX@4
.stabn 68,0,1538,.L_44A3-_SNAPMODEL@16
.L_44A4:
	push dword ptr [ebp+20]
	movzx eax, byte ptr [ebp+16]
	push eax
	push dword ptr [ebp+12]
	push dword ptr [ebp-24]
	call _SNAPMODEL@16
.stabn 68,0,1539,.L_44A4-_SNAPMODEL@16
.L_44A5:
	call _POPMATRIX@0
.stabn 68,0,1540,.L_44A5-_SNAPMODEL@16
.L_44A6:
.L_43C9:
.L_43CA:
.L_43C4:
.L_43C3:
.L_43CB:
.L_43CC:
.L_43BD:
	inc dword ptr [ebp-8]
.L_43BC:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_43BF
.L_43BE:
.L_43CD:
.stabn 68,0,1544,.L_44A6-_SNAPMODEL@16
.L_44A7:
.L_43CE:
.L_416C:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,1546,.L_416C-_SNAPMODEL@16
	.stabn 192,0,0,.L_416B-_SNAPMODEL@16
	.stabn 192,0,0,.L_416F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4170-_SNAPMODEL@16
	.stabn 192,0,0,.L_4171-_SNAPMODEL@16
	.stabs "TSZ:102",128,0,0,-28
	.stabn 192,0,0,.L_4175-_SNAPMODEL@16
	.stabn 224,0,0,.L_4177-_SNAPMODEL@16
	.stabs "IIDENT:1",128,0,0,-8
	.stabs "IPREVREC:1",128,0,0,-12
	.stabn 192,0,0,.L_417A-_SNAPMODEL@16
	.stabs "N:1",128,0,0,-16
	.stabn 192,0,0,.L_417B-_SNAPMODEL@16
	.stabn 192,0,0,.L_4181-_SNAPMODEL@16
	.stabs "FPX:11",128,0,0,-28
	.stabs "FPY:11",128,0,0,-32
	.stabs "FPZ:11",128,0,0,-36
	.stabs "PG:217=*106",128,0,0,-40
	.stabs "PMAT:218=*184",128,0,0,-44
	.stabs "XCNT:1",128,0,0,-48
	.stabs "ZCNT:1",128,0,0,-52
	.stabn 192,0,0,.L_4182-_SNAPMODEL@16
	.stabn 192,0,0,.L_4186-_SNAPMODEL@16
	.stabn 192,0,0,.L_4189-_SNAPMODEL@16
	.stabn 224,0,0,.L_418A-_SNAPMODEL@16
	.stabn 192,0,0,.L_418D-_SNAPMODEL@16
	.stabn 224,0,0,.L_418E-_SNAPMODEL@16
	.stabn 224,0,0,.L_418F-_SNAPMODEL@16
	.stabn 192,0,0,.L_4190-_SNAPMODEL@16
	.stabn 192,0,0,.L_4195-_SNAPMODEL@16
	.stabn 192,0,0,.L_4198-_SNAPMODEL@16
	.stabn 224,0,0,.L_419A-_SNAPMODEL@16
	.stabn 224,0,0,.L_419B-_SNAPMODEL@16
	.stabs "PZCAPS:V219=ar1;0;4;220=*4",38,0,0,_Lt_44A8
	.stabs "PMATORI:221=*11",128,0,0,-60
	.stabn 192,0,0,.L_419E-_SNAPMODEL@16
	.stabn 192,0,0,.L_41A3-_SNAPMODEL@16
	.stabn 224,0,0,.L_41A4-_SNAPMODEL@16
	.stabs "XCNT:1",128,0,0,-64
	.stabs "ZCNT:1",128,0,0,-68
	.stabs "FSTARTX:11",128,0,0,-72
	.stabs "FOFFZ:11",128,0,0,-76
	.stabn 192,0,0,.L_41A7-_SNAPMODEL@16
	.stabs "FMATRIX:222=ar1;0;15;11",128,0,0,-140
	.stabn 192,0,0,.L_41AA-_SNAPMODEL@16
	.stabn 224,0,0,.L_41AD-_SNAPMODEL@16
	.stabn 192,0,0,.L_41B0-_SNAPMODEL@16
	.stabn 192,0,0,.L_41B3-_SNAPMODEL@16
	.stabn 224,0,0,.L_41B4-_SNAPMODEL@16
	.stabn 192,0,0,.L_41B7-_SNAPMODEL@16
	.stabn 224,0,0,.L_41B8-_SNAPMODEL@16
	.stabn 224,0,0,.L_41B9-_SNAPMODEL@16
	.stabs "IZ:1",128,0,0,-80
	.stabn 192,0,0,.L_41BA-_SNAPMODEL@16
	.stabs "FOFFX:11",128,0,0,-88
	.stabn 192,0,0,.L_41C0-_SNAPMODEL@16
	.stabs "IX:1",128,0,0,-92
	.stabn 192,0,0,.L_41C1-_SNAPMODEL@16
	.stabn 192,0,0,.L_41C7-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-100
	.stabn 192,0,0,.L_41C8-_SNAPMODEL@16
	.stabs "P:223=*108",128,0,0,-108
	.stabs "BROUND:2",128,0,0,-112
	.stabs "FCENX:11",128,0,0,-116
	.stabs "FCENY:11",128,0,0,-120
	.stabs "FCENZ:11",128,0,0,-124
	.stabs "PMAT:224=*184",128,0,0,-128
	.stabn 192,0,0,.L_41CE-_SNAPMODEL@16
	.stabn 192,0,0,.L_41CF-_SNAPMODEL@16
	.stabn 192,0,0,.L_41D4-_SNAPMODEL@16
	.stabn 224,0,0,.L_41D5-_SNAPMODEL@16
	.stabn 192,0,0,.L_41D8-_SNAPMODEL@16
	.stabn 224,0,0,.L_41D9-_SNAPMODEL@16
	.stabn 192,0,0,.L_41DB-_SNAPMODEL@16
	.stabn 224,0,0,.L_41DC-_SNAPMODEL@16
	.stabn 224,0,0,.L_41DD-_SNAPMODEL@16
	.stabn 192,0,0,.L_41E0-_SNAPMODEL@16
	.stabn 224,0,0,.L_41E2-_SNAPMODEL@16
	.stabn 192,0,0,.L_41E3-_SNAPMODEL@16
	.stabn 224,0,0,.L_41E4-_SNAPMODEL@16
	.stabn 192,0,0,.L_41E7-_SNAPMODEL@16
	.stabn 224,0,0,.L_41E8-_SNAPMODEL@16
	.stabn 192,0,0,.L_41E9-_SNAPMODEL@16
	.stabn 224,0,0,.L_41EA-_SNAPMODEL@16
	.stabn 224,0,0,.L_41EB-_SNAPMODEL@16
	.stabn 224,0,0,.L_41EC-_SNAPMODEL@16
	.stabn 224,0,0,.L_41ED-_SNAPMODEL@16
	.stabn 224,0,0,.L_41EE-_SNAPMODEL@16
	.stabn 224,0,0,.L_41EF-_SNAPMODEL@16
	.stabn 224,0,0,.L_41F0-_SNAPMODEL@16
	.stabn 192,0,0,.L_41F3-_SNAPMODEL@16
	.stabn 224,0,0,.L_41F4-_SNAPMODEL@16
	.stabn 224,0,0,.L_41F5-_SNAPMODEL@16
	.stabn 192,0,0,.L_41F6-_SNAPMODEL@16
	.stabn 224,0,0,.L_41F7-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-64
	.stabn 192,0,0,.L_41F8-_SNAPMODEL@16
	.stabs "PZSECS:V225=ar1;0;5;226=*4",38,0,0,_Lt_44A9
	.stabn 192,0,0,.L_41FE-_SNAPMODEL@16
	.stabn 192,0,0,.L_4206-_SNAPMODEL@16
	.stabn 224,0,0,.L_4208-_SNAPMODEL@16
	.stabn 224,0,0,.L_4209-_SNAPMODEL@16
	.stabn 224,0,0,.L_420A-_SNAPMODEL@16
	.stabs "ICONCNT:1",128,0,0,-64
	.stabs "SUBPARTTYPE:T227=eSPUNKNOWN:0,SPSTUD:1,SPCLUTCH:2,SPAXLE:3,SPAXLEHOLE:4,SPPIN:5,SPPINHOLE:6,SPBAR:7,SPBARHOLE:8,SPALIAS:9,;",128,0,0,0
	.stabs "BCONTYPE:227",128,0,0,-68
	.stabs "BSECS:8",128,0,0,-72
	.stabs "BSIDES:1",128,0,0,-76
	.stabn 192,0,0,.L_420B-_SNAPMODEL@16
	.stabn 192,0,0,.L_420C-_SNAPMODEL@16
	.stabn 192,0,0,.L_4211-_SNAPMODEL@16
	.stabn 224,0,0,.L_4212-_SNAPMODEL@16
	.stabn 192,0,0,.L_4215-_SNAPMODEL@16
	.stabn 224,0,0,.L_4216-_SNAPMODEL@16
	.stabn 192,0,0,.L_4219-_SNAPMODEL@16
	.stabn 192,0,0,.L_421C-_SNAPMODEL@16
	.stabn 224,0,0,.L_421E-_SNAPMODEL@16
	.stabn 224,0,0,.L_421F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4220-_SNAPMODEL@16
	.stabn 192,0,0,.L_4223-_SNAPMODEL@16
	.stabn 224,0,0,.L_4224-_SNAPMODEL@16
	.stabs "PMAT:228=*184",128,0,0,-80
	.stabs "IIGNORE:1",128,0,0,-84
	.stabn 192,0,0,.L_4227-_SNAPMODEL@16
	.stabn 192,0,0,.L_422C-_SNAPMODEL@16
	.stabn 224,0,0,.L_422E-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-92
	.stabn 192,0,0,.L_422F-_SNAPMODEL@16
	.stabn 192,0,0,.L_4235-_SNAPMODEL@16
	.stabn 192,0,0,.L_4236-_SNAPMODEL@16
	.stabn 192,0,0,.L_423C-_SNAPMODEL@16
	.stabn 224,0,0,.L_423D-_SNAPMODEL@16
	.stabn 224,0,0,.L_423E-_SNAPMODEL@16
	.stabn 224,0,0,.L_423F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4240-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-92
	.stabn 192,0,0,.L_4241-_SNAPMODEL@16
	.stabn 192,0,0,.L_4247-_SNAPMODEL@16
	.stabn 192,0,0,.L_424A-_SNAPMODEL@16
	.stabn 224,0,0,.L_424B-_SNAPMODEL@16
	.stabn 192,0,0,.L_424C-_SNAPMODEL@16
	.stabn 192,0,0,.L_4251-_SNAPMODEL@16
	.stabn 192,0,0,.L_4254-_SNAPMODEL@16
	.stabn 224,0,0,.L_4255-_SNAPMODEL@16
	.stabn 224,0,0,.L_4256-_SNAPMODEL@16
	.stabn 192,0,0,.L_4259-_SNAPMODEL@16
	.stabn 224,0,0,.L_425A-_SNAPMODEL@16
	.stabn 192,0,0,.L_425D-_SNAPMODEL@16
	.stabn 192,0,0,.L_4260-_SNAPMODEL@16
	.stabn 224,0,0,.L_4261-_SNAPMODEL@16
	.stabn 224,0,0,.L_4262-_SNAPMODEL@16
	.stabn 192,0,0,.L_4265-_SNAPMODEL@16
	.stabn 192,0,0,.L_4268-_SNAPMODEL@16
	.stabn 224,0,0,.L_4269-_SNAPMODEL@16
	.stabn 192,0,0,.L_426B-_SNAPMODEL@16
	.stabn 192,0,0,.L_426E-_SNAPMODEL@16
	.stabn 224,0,0,.L_426F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4270-_SNAPMODEL@16
	.stabn 192,0,0,.L_4272-_SNAPMODEL@16
	.stabn 192,0,0,.L_4275-_SNAPMODEL@16
	.stabn 192,0,0,.L_4276-_SNAPMODEL@16
	.stabn 224,0,0,.L_427A-_SNAPMODEL@16
	.stabn 224,0,0,.L_427B-_SNAPMODEL@16
	.stabn 224,0,0,.L_427C-_SNAPMODEL@16
	.stabn 192,0,0,.L_427D-_SNAPMODEL@16
	.stabn 192,0,0,.L_4280-_SNAPMODEL@16
	.stabn 224,0,0,.L_4281-_SNAPMODEL@16
	.stabn 192,0,0,.L_4282-_SNAPMODEL@16
	.stabn 192,0,0,.L_4285-_SNAPMODEL@16
	.stabn 224,0,0,.L_4287-_SNAPMODEL@16
	.stabn 224,0,0,.L_4288-_SNAPMODEL@16
	.stabn 224,0,0,.L_4289-_SNAPMODEL@16
	.stabn 224,0,0,.L_428A-_SNAPMODEL@16
	.stabn 192,0,0,.L_428C-_SNAPMODEL@16
	.stabn 192,0,0,.L_428F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4291-_SNAPMODEL@16
	.stabn 224,0,0,.L_4292-_SNAPMODEL@16
	.stabn 224,0,0,.L_4293-_SNAPMODEL@16
	.stabn 224,0,0,.L_4294-_SNAPMODEL@16
	.stabn 224,0,0,.L_4295-_SNAPMODEL@16
	.stabn 224,0,0,.L_4296-_SNAPMODEL@16
	.stabn 192,0,0,.L_4297-_SNAPMODEL@16
	.stabs "IMAYBEPINS:1",128,0,0,-80
	.stabs "BDIDAXLEHOLE:2",128,0,0,-84
	.stabs "BDIDCLUTCH:2",128,0,0,-88
	.stabs "BDIDBARHOLE:2",128,0,0,-92
	.stabn 192,0,0,.L_429A-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-96
	.stabn 192,0,0,.L_429B-_SNAPMODEL@16
	.stabn 192,0,0,.L_42A1-_SNAPMODEL@16
	.stabn 192,0,0,.L_42A4-_SNAPMODEL@16
	.stabn 192,0,0,.L_42A7-_SNAPMODEL@16
	.stabn 224,0,0,.L_42A9-_SNAPMODEL@16
	.stabn 224,0,0,.L_42AA-_SNAPMODEL@16
	.stabn 192,0,0,.L_42AB-_SNAPMODEL@16
	.stabn 192,0,0,.L_42B0-_SNAPMODEL@16
	.stabn 192,0,0,.L_42B3-_SNAPMODEL@16
	.stabn 224,0,0,.L_42B4-_SNAPMODEL@16
	.stabn 192,0,0,.L_42B7-_SNAPMODEL@16
	.stabn 224,0,0,.L_42B8-_SNAPMODEL@16
	.stabn 224,0,0,.L_42B9-_SNAPMODEL@16
	.stabn 192,0,0,.L_42BC-_SNAPMODEL@16
	.stabn 192,0,0,.L_42BF-_SNAPMODEL@16
	.stabn 192,0,0,.L_42C2-_SNAPMODEL@16
	.stabn 192,0,0,.L_42C3-_SNAPMODEL@16
	.stabn 224,0,0,.L_42C7-_SNAPMODEL@16
	.stabn 224,0,0,.L_42C8-_SNAPMODEL@16
	.stabn 224,0,0,.L_42C9-_SNAPMODEL@16
	.stabn 192,0,0,.L_42CC-_SNAPMODEL@16
	.stabn 224,0,0,.L_42CD-_SNAPMODEL@16
	.stabn 224,0,0,.L_42CE-_SNAPMODEL@16
	.stabn 192,0,0,.L_42D1-_SNAPMODEL@16
	.stabn 192,0,0,.L_42D2-_SNAPMODEL@16
	.stabn 192,0,0,.L_42D7-_SNAPMODEL@16
	.stabn 224,0,0,.L_42D8-_SNAPMODEL@16
	.stabn 192,0,0,.L_42DB-_SNAPMODEL@16
	.stabn 224,0,0,.L_42DC-_SNAPMODEL@16
	.stabn 192,0,0,.L_42DF-_SNAPMODEL@16
	.stabn 192,0,0,.L_42E2-_SNAPMODEL@16
	.stabn 224,0,0,.L_42E3-_SNAPMODEL@16
	.stabn 192,0,0,.L_42E6-_SNAPMODEL@16
	.stabn 224,0,0,.L_42E7-_SNAPMODEL@16
	.stabn 224,0,0,.L_42E8-_SNAPMODEL@16
	.stabn 224,0,0,.L_42E9-_SNAPMODEL@16
	.stabn 224,0,0,.L_42EA-_SNAPMODEL@16
	.stabn 224,0,0,.L_42EB-_SNAPMODEL@16
	.stabn 224,0,0,.L_42EC-_SNAPMODEL@16
	.stabn 224,0,0,.L_42ED-_SNAPMODEL@16
	.stabn 192,0,0,.L_42F0-_SNAPMODEL@16
	.stabn 192,0,0,.L_42F3-_SNAPMODEL@16
	.stabn 224,0,0,.L_42F5-_SNAPMODEL@16
	.stabn 224,0,0,.L_42F6-_SNAPMODEL@16
	.stabn 224,0,0,.L_42F7-_SNAPMODEL@16
	.stabs "BDIDPINHOLE:2",128,0,0,-80
	.stabs "BDIDBARHOLE:2",128,0,0,-84
	.stabn 192,0,0,.L_42F8-_SNAPMODEL@16
	.stabs "I:1",128,0,0,-88
	.stabn 192,0,0,.L_42F9-_SNAPMODEL@16
	.stabn 192,0,0,.L_42FF-_SNAPMODEL@16
	.stabn 192,0,0,.L_4300-_SNAPMODEL@16
	.stabn 192,0,0,.L_4305-_SNAPMODEL@16
	.stabn 192,0,0,.L_4308-_SNAPMODEL@16
	.stabn 224,0,0,.L_430A-_SNAPMODEL@16
	.stabn 224,0,0,.L_430B-_SNAPMODEL@16
	.stabn 192,0,0,.L_430E-_SNAPMODEL@16
	.stabn 192,0,0,.L_4311-_SNAPMODEL@16
	.stabn 224,0,0,.L_4312-_SNAPMODEL@16
	.stabn 192,0,0,.L_4315-_SNAPMODEL@16
	.stabn 224,0,0,.L_4316-_SNAPMODEL@16
	.stabn 224,0,0,.L_4317-_SNAPMODEL@16
	.stabn 192,0,0,.L_431A-_SNAPMODEL@16
	.stabn 192,0,0,.L_431D-_SNAPMODEL@16
	.stabn 192,0,0,.L_4320-_SNAPMODEL@16
	.stabn 224,0,0,.L_4321-_SNAPMODEL@16
	.stabn 192,0,0,.L_4324-_SNAPMODEL@16
	.stabn 224,0,0,.L_4325-_SNAPMODEL@16
	.stabn 224,0,0,.L_4326-_SNAPMODEL@16
	.stabn 192,0,0,.L_4328-_SNAPMODEL@16
	.stabn 192,0,0,.L_432B-_SNAPMODEL@16
	.stabn 192,0,0,.L_432C-_SNAPMODEL@16
	.stabs "IGX:1",128,0,0,-104
	.stabn 192,0,0,.L_432E-_SNAPMODEL@16
	.stabn 192,0,0,.L_4334-_SNAPMODEL@16
	.stabs "IGZ:1",128,0,0,-112
	.stabn 192,0,0,.L_4335-_SNAPMODEL@16
	.stabn 192,0,0,.L_433B-_SNAPMODEL@16
	.stabn 224,0,0,.L_433E-_SNAPMODEL@16
	.stabn 224,0,0,.L_433F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4340-_SNAPMODEL@16
	.stabn 224,0,0,.L_4341-_SNAPMODEL@16
	.stabn 224,0,0,.L_4342-_SNAPMODEL@16
	.stabn 224,0,0,.L_4343-_SNAPMODEL@16
	.stabn 224,0,0,.L_4344-_SNAPMODEL@16
	.stabn 224,0,0,.L_4345-_SNAPMODEL@16
	.stabn 224,0,0,.L_4346-_SNAPMODEL@16
	.stabn 224,0,0,.L_4347-_SNAPMODEL@16
	.stabn 224,0,0,.L_4348-_SNAPMODEL@16
	.stabn 224,0,0,.L_4349-_SNAPMODEL@16
	.stabn 224,0,0,.L_434A-_SNAPMODEL@16
	.stabn 192,0,0,.L_434D-_SNAPMODEL@16
	.stabn 192,0,0,.L_4350-_SNAPMODEL@16
	.stabn 224,0,0,.L_4352-_SNAPMODEL@16
	.stabn 192,0,0,.L_4355-_SNAPMODEL@16
	.stabn 224,0,0,.L_4357-_SNAPMODEL@16
	.stabn 224,0,0,.L_4358-_SNAPMODEL@16
	.stabn 192,0,0,.L_435B-_SNAPMODEL@16
	.stabn 192,0,0,.L_435C-_SNAPMODEL@16
	.stabn 192,0,0,.L_4360-_SNAPMODEL@16
	.stabn 192,0,0,.L_4363-_SNAPMODEL@16
	.stabn 224,0,0,.L_4365-_SNAPMODEL@16
	.stabn 224,0,0,.L_4366-_SNAPMODEL@16
	.stabn 192,0,0,.L_4369-_SNAPMODEL@16
	.stabn 192,0,0,.L_436C-_SNAPMODEL@16
	.stabn 192,0,0,.L_436D-_SNAPMODEL@16
	.stabn 224,0,0,.L_4371-_SNAPMODEL@16
	.stabn 192,0,0,.L_4374-_SNAPMODEL@16
	.stabn 224,0,0,.L_4376-_SNAPMODEL@16
	.stabn 224,0,0,.L_4377-_SNAPMODEL@16
	.stabn 224,0,0,.L_4378-_SNAPMODEL@16
	.stabn 192,0,0,.L_437B-_SNAPMODEL@16
	.stabn 192,0,0,.L_437E-_SNAPMODEL@16
	.stabn 224,0,0,.L_437F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4380-_SNAPMODEL@16
	.stabn 192,0,0,.L_4383-_SNAPMODEL@16
	.stabn 192,0,0,.L_4386-_SNAPMODEL@16
	.stabn 224,0,0,.L_4387-_SNAPMODEL@16
	.stabn 224,0,0,.L_4388-_SNAPMODEL@16
	.stabn 192,0,0,.L_438B-_SNAPMODEL@16
	.stabn 192,0,0,.L_438E-_SNAPMODEL@16
	.stabn 224,0,0,.L_438F-_SNAPMODEL@16
	.stabn 224,0,0,.L_4390-_SNAPMODEL@16
	.stabn 192,0,0,.L_4393-_SNAPMODEL@16
	.stabn 192,0,0,.L_4396-_SNAPMODEL@16
	.stabn 224,0,0,.L_4397-_SNAPMODEL@16
	.stabn 224,0,0,.L_4398-_SNAPMODEL@16
	.stabn 192,0,0,.L_439B-_SNAPMODEL@16
	.stabn 192,0,0,.L_439E-_SNAPMODEL@16
	.stabn 224,0,0,.L_439F-_SNAPMODEL@16
	.stabn 224,0,0,.L_43A0-_SNAPMODEL@16
	.stabn 192,0,0,.L_43A3-_SNAPMODEL@16
	.stabn 192,0,0,.L_43A6-_SNAPMODEL@16
	.stabn 224,0,0,.L_43A7-_SNAPMODEL@16
	.stabn 224,0,0,.L_43A8-_SNAPMODEL@16
	.stabn 192,0,0,.L_43AB-_SNAPMODEL@16
	.stabn 192,0,0,.L_43AE-_SNAPMODEL@16
	.stabn 224,0,0,.L_43AF-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B0-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B1-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B2-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B3-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B4-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B5-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B6-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B7-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B8-_SNAPMODEL@16
	.stabn 224,0,0,.L_43B9-_SNAPMODEL@16
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_43BA-_SNAPMODEL@16
	.stabn 192,0,0,.L_43C0-_SNAPMODEL@16
	.stabn 192,0,0,.L_43C1-_SNAPMODEL@16
	.stabn 192,0,0,.L_43C5-_SNAPMODEL@16
	.stabs "PSUBPART:229=*101",128,0,0,-24
	.stabs "FMATRIX:230=ar1;0;15;11",128,0,0,-88
	.stabn 192,0,0,.L_43C6-_SNAPMODEL@16
	.stabn 224,0,0,.L_43C9-_SNAPMODEL@16
	.stabn 224,0,0,.L_43CA-_SNAPMODEL@16
	.stabn 224,0,0,.L_43CB-_SNAPMODEL@16
	.stabn 224,0,0,.L_43CC-_SNAPMODEL@16
	.stabn 224,0,0,.L_43CD-_SNAPMODEL@16
	.stabn 224,0,0,.L_43CE-_SNAPMODEL@16
	.stabn 224,0,0,.L_416C-_SNAPMODEL@16
.L_44AA:
	.stabs "",36,0,0,.L_44AA-_SNAPMODEL@16

.section .data
.balign 4
_Lt_44A8:
.int _Lt_29B8
.int _Lt_29BD
.int _Lt_29C2
.int _Lt_2493
.int _Lt_419F
.balign 4
_Lt_44A9:
.int _Lt_41FF
.int _Lt_4200
.int _Lt_4201
.int _Lt_4202
.int _Lt_4203
.int _Lt_4204

.section .text
	.stabs "DRAWLIMITSCUBE:F7",36,0,1550,_DRAWLIMITSCUBE@24
	.stabs "XMIN:p11",160,0,0,8
	.stabs "XMAX:p11",160,0,0,12
	.stabs "YMIN:p11",160,0,0,16
	.stabs "YMAX:p11",160,0,0,20
	.stabs "ZMIN:p11",160,0,0,24
	.stabs "ZMAX:p11",160,0,0,28
.balign 16

.globl _DRAWLIMITSCUBE@24
_DRAWLIMITSCUBE@24:
	push ebp
	mov ebp, esp
	.stabn 68,0,1550,_DRAWLIMITSCUBE@24-_DRAWLIMITSCUBE@24
.L_44AB:
.L_44AE:
	push 7
	call _glBegin@4
.stabn 68,0,1552,.L_44AE-_DRAWLIMITSCUBE@24
.L_44AF:
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	call _glNormal3f@12
.stabn 68,0,1555,.L_44AF-_DRAWLIMITSCUBE@24
.L_44B0:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1556,.L_44B0-_DRAWLIMITSCUBE@24
.L_44B1:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1557,.L_44B1-_DRAWLIMITSCUBE@24
.L_44B2:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1558,.L_44B2-_DRAWLIMITSCUBE@24
.L_44B3:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1559,.L_44B3-_DRAWLIMITSCUBE@24
.L_44B4:
	push dword ptr [_Lt_44AD]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	call _glNormal3f@12
.stabn 68,0,1562,.L_44B4-_DRAWLIMITSCUBE@24
.L_44B5:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1563,.L_44B5-_DRAWLIMITSCUBE@24
.L_44B6:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1564,.L_44B6-_DRAWLIMITSCUBE@24
.L_44B7:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1565,.L_44B7-_DRAWLIMITSCUBE@24
.L_44B8:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1566,.L_44B8-_DRAWLIMITSCUBE@24
.L_44B9:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_44AD]
	call _glNormal3f@12
.stabn 68,0,1569,.L_44B9-_DRAWLIMITSCUBE@24
.L_44BA:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1570,.L_44BA-_DRAWLIMITSCUBE@24
.L_44BB:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1571,.L_44BB-_DRAWLIMITSCUBE@24
.L_44BC:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1572,.L_44BC-_DRAWLIMITSCUBE@24
.L_44BD:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1573,.L_44BD-_DRAWLIMITSCUBE@24
.L_44BE:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	call _glNormal3f@12
.stabn 68,0,1576,.L_44BE-_DRAWLIMITSCUBE@24
.L_44BF:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1577,.L_44BF-_DRAWLIMITSCUBE@24
.L_44C0:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1578,.L_44C0-_DRAWLIMITSCUBE@24
.L_44C1:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1579,.L_44C1-_DRAWLIMITSCUBE@24
.L_44C2:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1580,.L_44C2-_DRAWLIMITSCUBE@24
.L_44C3:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	call _glNormal3f@12
.stabn 68,0,1583,.L_44C3-_DRAWLIMITSCUBE@24
.L_44C4:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1584,.L_44C4-_DRAWLIMITSCUBE@24
.L_44C5:
	push dword ptr [ebp+24]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1585,.L_44C5-_DRAWLIMITSCUBE@24
.L_44C6:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1586,.L_44C6-_DRAWLIMITSCUBE@24
.L_44C7:
	push dword ptr [ebp+28]
	push dword ptr [ebp+20]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1587,.L_44C7-_DRAWLIMITSCUBE@24
.L_44C8:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_44AD]
	push dword ptr [_Lt_3912]
	call _glNormal3f@12
.stabn 68,0,1590,.L_44C8-_DRAWLIMITSCUBE@24
.L_44C9:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1591,.L_44C9-_DRAWLIMITSCUBE@24
.L_44CA:
	push dword ptr [ebp+24]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1592,.L_44CA-_DRAWLIMITSCUBE@24
.L_44CB:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	call _glVertex3f@12
.stabn 68,0,1593,.L_44CB-_DRAWLIMITSCUBE@24
.L_44CC:
	push dword ptr [ebp+28]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _glVertex3f@12
.stabn 68,0,1594,.L_44CC-_DRAWLIMITSCUBE@24
.L_44CD:
	call _glEnd@0
.stabn 68,0,1596,.L_44CD-_DRAWLIMITSCUBE@24
.L_44CE:
.L_44AC:
	mov esp, ebp
	pop ebp
	ret 24
	.stabn 68,0,1597,.L_44AC-_DRAWLIMITSCUBE@24
	.stabn 192,0,0,.L_44AB-_DRAWLIMITSCUBE@24
	.stabn 224,0,0,.L_44AC-_DRAWLIMITSCUBE@24
.L_44CF:
	.stabs "",36,0,0,.L_44CF-_DRAWLIMITSCUBE@24
	.stabs "DETECTPARTCATHEGORY:F2",36,0,1600,_DETECTPARTCATHEGORY@4
	.stabs "PPART:p231=*101",160,0,0,8
.balign 16

.globl _DETECTPARTCATHEGORY@4
_DETECTPARTCATHEGORY@4:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,1600,_DETECTPARTCATHEGORY@4-_DETECTPARTCATHEGORY@4
	mov byte ptr [ebp-4], 0
.L_44D0:
.L_44F9:
	cmp dword ptr [ebp+8], 0
	jne .L_44D3
.L_44D4:
	mov byte ptr [ebp-4], 0
	jmp .L_44D1
.L_44D3:
.L_44D5:
.stabn 68,0,1601,.L_44F9-_DETECTPARTCATHEGORY@4
.L_44FA:
	push 0
	mov dword ptr [ebp-32], -1
	lea eax, [ebp-32]
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp+8]
	call _SIZEMODEL@20
.stabn 68,0,1603,.L_44FA-_DETECTPARTCATHEGORY@4
.L_44FB:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax+40]
	mov dword ptr [ebp-36], ebx
.stabn 68,0,1605,.L_44FB-_DETECTPARTCATHEGORY@4
.L_44FC:
.L_44D7:
	fld dword ptr [ebp-16]
	fsub dword ptr [ebp-20]
	sub esp, 8
	fistp qword ptr [esp]
	pop ebx
	add esp, 4
	mov dword ptr [ebp-40], ebx
.stabn 68,0,1608,.L_44FC-_DETECTPARTCATHEGORY@4
.L_44FD:
	cmp dword ptr [ebp-40], 8
	jne .L_44DA
.L_44DB:
.L_44DC:
.stabn 68,0,1609,.L_44FD-_DETECTPARTCATHEGORY@4
.L_44FE:
	mov ebx, dword ptr [ebp-36]
	cmp dword ptr [ebx], 0
	je .L_44DE
.L_44DF:
	mov byte ptr [ebp-4], 3
	jmp .L_44D1
.L_44DE:
.L_44E0:
.stabn 68,0,1610,.L_44FE-_DETECTPARTCATHEGORY@4
.L_44FF:
.L_44E1:
	jmp .L_44D8
.L_44DA:
	cmp dword ptr [ebp-40], 12
	jne .L_44E2
.L_44E3:
.L_44E4:
.stabn 68,0,1611,.L_44FF-_DETECTPARTCATHEGORY@4
.L_4500:
	mov ebx, dword ptr [ebp-36]
	cmp dword ptr [ebx], 0
	je .L_44E5
	mov ebx, dword ptr [ebp-36]
	mov eax, dword ptr [ebx+4]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_44F7
.L_44E5:
	mov dword ptr [ebp-44], 0
.L_44F7:
	cmp dword ptr [ebp-44], 0
	je .L_44E8
.L_44E9:
.stabn 68,0,1612,.L_4500-_DETECTPARTCATHEGORY@4
.L_4502:
	mov byte ptr [ebp-4], 1
	jmp .L_44D1
.stabn 68,0,1613,.L_4502-_DETECTPARTCATHEGORY@4
.L_4503:
.L_44EA:
.L_44E8:
.L_44E7:
.L_44EB:
	jmp .L_44D8
.L_44E2:
	cmp dword ptr [ebp-40], 20
	jne .L_44EC
.L_44ED:
.L_44EE:
.stabn 68,0,1615,.L_4503-_DETECTPARTCATHEGORY@4
.L_4504:
	mov eax, dword ptr [ebp-36]
	cmp dword ptr [eax], 0
	je .L_44EF
	mov eax, dword ptr [ebp-36]
	mov ebx, dword ptr [eax+4]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-44], ebx
	jmp .L_44F8
.L_44EF:
	mov dword ptr [ebp-44], 0
.L_44F8:
	cmp dword ptr [ebp-44], 0
	je .L_44F2
.L_44F3:
.stabn 68,0,1616,.L_4504-_DETECTPARTCATHEGORY@4
.L_4506:
	mov byte ptr [ebp-4], 4
	jmp .L_44D1
.stabn 68,0,1617,.L_4506-_DETECTPARTCATHEGORY@4
.L_4507:
.L_44F4:
.L_44F2:
.L_44F1:
.L_44F5:
.L_44EC:
.L_44D8:
.L_44F6:
	mov byte ptr [ebp-4], 5
.stabn 68,0,1621,.L_4507-_DETECTPARTCATHEGORY@4
.L_4508:
.L_44D1:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,1622,.L_44D1-_DETECTPARTCATHEGORY@4
	.stabs "TSIZE:102",128,0,0,-28
	.stabs "PSNAP:232=*210",128,0,0,-36
	.stabn 192,0,0,.L_44D0-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44D4-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44D5-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44D7-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44DC-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44DF-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44E0-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44E1-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44E4-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44E9-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44EA-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44EB-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44EE-_DETECTPARTCATHEGORY@4
	.stabn 192,0,0,.L_44F3-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44F4-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44F5-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44F6-_DETECTPARTCATHEGORY@4
	.stabn 224,0,0,.L_44D1-_DETECTPARTCATHEGORY@4
.L_4509:
	.stabs "",36,0,0,.L_4509-_DETECTPARTCATHEGORY@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSFUNCTIONS.BAS",132,0,0,.L_454A
.L_454A:
	.stabs "READTOKENNUMBER:F1",36,0,14,_READTOKENNUMBER@12
	.stabs "STOKEN:v13",160,0,0,8
	.stabs "ISTART:p1",160,0,0,12
	.stabs "BSIGNED:p1",160,0,0,16
.balign 16

.globl _READTOKENNUMBER@12
_READTOKENNUMBER@12:
	push ebp
	mov ebp, esp
	sub esp, 28
	push ebx
	.stabn 68,0,14,_READTOKENNUMBER@12-_READTOKENNUMBER@12
	mov dword ptr [ebp-4], 0
.L_4529:
.L_454B:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 1
.stabn 68,0,15,.L_454B-_READTOKENNUMBER@12
.L_454C:
	cmp dword ptr [ebp+16], 0
	je .L_452B
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp+12]
	movzx eax, byte ptr [ebx]
	cmp eax, 45
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-16], ebx
	jmp .L_4549
.L_452B:
	mov dword ptr [ebp-16], 0
.L_4549:
	cmp dword ptr [ebp-16], 0
	je .L_452E
.L_452F:
	inc dword ptr [ebp+12]
	mov dword ptr [ebp-12], -1
.L_452E:
.L_4530:
.stabn 68,0,16,.L_454C-_READTOKENNUMBER@12
.L_454E:
.L_4531:
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [ebp-20], ebx
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-24], eax
	jmp .L_4533
.L_4536:
.L_4537:
.stabn 68,0,17,.L_454E-_READTOKENNUMBER@12
.L_454F:
.L_4538:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-20]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-28], al
.stabn 68,0,18,.L_454F-_READTOKENNUMBER@12
.L_4550:
	movzx eax, byte ptr [ebp-28]
	cmp eax, 48
	jb .L_453B
	movzx eax, byte ptr [ebp-28]
	cmp eax, 57
	ja .L_453B
.L_453C:
.L_453D:
.stabn 68,0,19,.L_4550-_READTOKENNUMBER@12
.L_4551:
	mov eax, dword ptr [ebp-8]
	imul eax, 10
	mov ebx, eax
	mov eax, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebp-20]
	movzx eax, byte ptr [ecx]
	add ebx, eax
	add ebx, 4294967248
	mov eax, ebx
	mov dword ptr [ebp-8], eax
.stabn 68,0,20,.L_4551-_READTOKENNUMBER@12
.L_4552:
	cmp dword ptr [ebp-8], 0
	jge .L_453F
.L_4540:
	mov dword ptr [ebp-4], -996
	jmp .L_452A
.L_453F:
.L_4541:
.stabn 68,0,21,.L_4552-_READTOKENNUMBER@12
.L_4553:
.L_4542:
	jmp .L_4539
.L_453B:
.L_4544:
.stabn 68,0,22,.L_4553-_READTOKENNUMBER@12
.L_4554:
	mov dword ptr [ebp-4], -995
	jmp .L_452A
.stabn 68,0,23,.L_4554-_READTOKENNUMBER@12
.L_4555:
.L_4545:
.L_4543:
.L_4539:
.L_4546:
.L_4547:
.L_4534:
	inc dword ptr [ebp-20]
.L_4533:
	mov eax, dword ptr [ebp-24]
	cmp dword ptr [ebp-20], eax
	jle .L_4536
.L_4535:
.L_4548:
.stabn 68,0,25,.L_4555-_READTOKENNUMBER@12
.L_4556:
	mov eax, dword ptr [ebp-12]
	imul eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,26,.L_4556-_READTOKENNUMBER@12
.L_4557:
.L_452A:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,27,.L_452A-_READTOKENNUMBER@12
	.stabs "IRESULT:1",128,0,0,-8
	.stabs "ISIGN:1",128,0,0,-12
	.stabn 192,0,0,.L_4529-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_452F-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4530-_READTOKENNUMBER@12
	.stabs "N:1",128,0,0,-20
	.stabn 192,0,0,.L_4531-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_4537-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_4538-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_453D-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_4540-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4541-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4542-_READTOKENNUMBER@12
	.stabn 192,0,0,.L_4544-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4545-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4546-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4547-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_4548-_READTOKENNUMBER@12
	.stabn 224,0,0,.L_452A-_READTOKENNUMBER@12
.L_4558:
	.stabs "",36,0,0,.L_4558-_READTOKENNUMBER@12
	.stabs "ISTOKENNUMERIC:F1",36,0,28,_ISTOKENNUMERIC@8
	.stabs "STOKEN:v13",160,0,0,8
	.stabs "ISTART:p1",160,0,0,12
.balign 16

.globl _ISTOKENNUMERIC@8
_ISTOKENNUMERIC@8:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,28,_ISTOKENNUMERIC@8-_ISTOKENNUMERIC@8
	mov dword ptr [ebp-4], 0
.L_4559:
.L_4568:
.L_455B:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-8], eax
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_455D
.L_4560:
.L_4561:
.stabn 68,0,29,.L_4568-_ISTOKENNUMERIC@8
.L_4569:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-8]
	movzx eax, byte ptr [ebx]
	add eax, 4294967248
	cmp eax, 9
	jbe .L_4563
.L_4564:
	mov dword ptr [ebp-4], 0
	jmp .L_455A
.L_4563:
.L_4565:
.stabn 68,0,30,.L_4569-_ISTOKENNUMERIC@8
.L_456A:
.L_4566:
.L_455E:
	inc dword ptr [ebp-8]
.L_455D:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_4560
.L_455F:
.L_4567:
.stabn 68,0,31,.L_456A-_ISTOKENNUMERIC@8
.L_456B:
	mov dword ptr [ebp-4], -1
.stabn 68,0,32,.L_456B-_ISTOKENNUMERIC@8
.L_456C:
.L_455A:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,33,.L_455A-_ISTOKENNUMERIC@8
	.stabn 192,0,0,.L_4559-_ISTOKENNUMERIC@8
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_455B-_ISTOKENNUMERIC@8
	.stabn 192,0,0,.L_4561-_ISTOKENNUMERIC@8
	.stabn 192,0,0,.L_4564-_ISTOKENNUMERIC@8
	.stabn 224,0,0,.L_4565-_ISTOKENNUMERIC@8
	.stabn 224,0,0,.L_4566-_ISTOKENNUMERIC@8
	.stabn 224,0,0,.L_4567-_ISTOKENNUMERIC@8
	.stabn 224,0,0,.L_455A-_ISTOKENNUMERIC@8
.L_456D:
	.stabs "",36,0,0,.L_456D-_ISTOKENNUMERIC@8
	.stabs "ISPRIMATIVE:F1",36,0,34,_ISPRIMATIVE@4
	.stabs "STOKEN:v13",160,0,0,8
.balign 16

.globl _ISPRIMATIVE@4
_ISPRIMATIVE@4:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,34,_ISPRIMATIVE@4-_ISPRIMATIVE@4
	mov dword ptr [ebp-4], 0
.L_456E:
.L_458C:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	test eax, eax
	jne .L_4571
.L_4572:
	mov dword ptr [ebp-4], 0
	jmp .L_456F
.L_4571:
.L_4573:
.stabn 68,0,35,.L_458C-_ISPRIMATIVE@4
.L_458D:
.L_4574:
	mov dword ptr [ebp-8], 0
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_4576
.L_4579:
.L_457A:
.stabn 68,0,36,.L_458D-_ISPRIMATIVE@4
.L_458E:
.L_457B:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-16], al
.stabn 68,0,37,.L_458E-_ISPRIMATIVE@4
.L_458F:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 97
	jb .L_4582
	movzx eax, byte ptr [ebp-16]
	cmp eax, 122
	jbe .L_4581
.L_4582:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 48
	jb .L_4583
	movzx eax, byte ptr [ebp-16]
	cmp eax, 57
	jbe .L_4581
.L_4583:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 95
	jne .L_457E
.L_4581:
.L_4584:
.stabn 68,0,38,.L_458F-_ISPRIMATIVE@4
.L_4590:
.L_4585:
	jmp .L_457C
.L_457E:
.L_4587:
.stabn 68,0,40,.L_4590-_ISPRIMATIVE@4
.L_4591:
	mov dword ptr [ebp-4], 0
	jmp .L_456F
.stabn 68,0,41,.L_4591-_ISPRIMATIVE@4
.L_4592:
.L_4588:
.L_4586:
.L_457C:
.L_4589:
.L_458A:
.L_4577:
	inc dword ptr [ebp-8]
.L_4576:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_4579
.L_4578:
.L_458B:
.stabn 68,0,43,.L_4592-_ISPRIMATIVE@4
.L_4593:
	mov dword ptr [ebp-4], -1
.stabn 68,0,44,.L_4593-_ISPRIMATIVE@4
.L_4594:
.L_456F:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,45,.L_456F-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_456E-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_4572-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_4573-_ISPRIMATIVE@4
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_4574-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_457A-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_457B-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_4584-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_4585-_ISPRIMATIVE@4
	.stabn 192,0,0,.L_4587-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_4588-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_4589-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_458A-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_458B-_ISPRIMATIVE@4
	.stabn 224,0,0,.L_456F-_ISPRIMATIVE@4
.L_4595:
	.stabs "",36,0,0,.L_4595-_ISPRIMATIVE@4
	.stabs "ISVALIDPARTNAME:F1",36,0,46,_ISVALIDPARTNAME@4
	.stabs "STOKEN:v13",160,0,0,8
.balign 16

.globl _ISVALIDPARTNAME@4
_ISVALIDPARTNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,46,_ISVALIDPARTNAME@4-_ISVALIDPARTNAME@4
	mov dword ptr [ebp-4], 0
.L_4596:
.L_45C2:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	test eax, eax
	jne .L_4599
.L_459A:
	mov dword ptr [ebp-4], 0
	jmp .L_4597
.L_4599:
.L_459B:
.stabn 68,0,47,.L_45C2-_ISVALIDPARTNAME@4
.L_45C3:
.L_459C:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-8], al
.stabn 68,0,48,.L_45C3-_ISVALIDPARTNAME@4
.L_45C4:
	movzx eax, byte ptr [ebp-8]
	cmp eax, 65
	jb .L_459F
	movzx eax, byte ptr [ebp-8]
	cmp eax, 90
	ja .L_459F
.L_45A1:
.L_45A2:
.stabn 68,0,49,.L_45C4-_ISVALIDPARTNAME@4
.L_45C5:
.L_45A3:
	jmp .L_459D
.L_459F:
.L_45A5:
.stabn 68,0,51,.L_45C5-_ISVALIDPARTNAME@4
.L_45C6:
	mov dword ptr [ebp-4], 0
	jmp .L_4597
.stabn 68,0,52,.L_45C6-_ISVALIDPARTNAME@4
.L_45C7:
.L_45A6:
.L_45A4:
.L_459D:
.L_45A7:
.L_45A8:
	mov dword ptr [ebp-8], 1
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_45AA
.L_45AD:
.L_45AE:
.stabn 68,0,54,.L_45C7-_ISVALIDPARTNAME@4
.L_45C8:
.L_45AF:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-8]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-16], al
.stabn 68,0,55,.L_45C8-_ISVALIDPARTNAME@4
.L_45C9:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 65
	jb .L_45B4
	movzx eax, byte ptr [ebp-16]
	cmp eax, 90
	jbe .L_45B3
.L_45B4:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 97
	jb .L_45B2
	movzx eax, byte ptr [ebp-16]
	cmp eax, 122
	ja .L_45B2
.L_45B3:
.L_45B5:
.stabn 68,0,56,.L_45C9-_ISVALIDPARTNAME@4
.L_45CA:
.L_45B6:
	jmp .L_45B0
.L_45B2:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 48
	jb .L_45B9
	movzx eax, byte ptr [ebp-16]
	cmp eax, 57
	jbe .L_45B8
.L_45B9:
	movzx eax, byte ptr [ebp-16]
	cmp eax, 95
	jne .L_45B7
.L_45B8:
.L_45BA:
.stabn 68,0,58,.L_45CA-_ISVALIDPARTNAME@4
.L_45CB:
.L_45BB:
	jmp .L_45B0
.L_45B7:
.L_45BD:
.stabn 68,0,60,.L_45CB-_ISVALIDPARTNAME@4
.L_45CC:
	mov dword ptr [ebp-4], 0
	jmp .L_4597
.stabn 68,0,61,.L_45CC-_ISVALIDPARTNAME@4
.L_45CD:
.L_45BE:
.L_45BC:
.L_45B0:
.L_45BF:
.L_45C0:
.L_45AB:
	inc dword ptr [ebp-8]
.L_45AA:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_45AD
.L_45AC:
.L_45C1:
.stabn 68,0,63,.L_45CD-_ISVALIDPARTNAME@4
.L_45CE:
	mov dword ptr [ebp-4], -1
.stabn 68,0,64,.L_45CE-_ISVALIDPARTNAME@4
.L_45CF:
.L_4597:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,65,.L_4597-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_4596-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_459A-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_459B-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_459C-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45A2-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45A3-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45A5-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45A6-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45A7-_ISVALIDPARTNAME@4
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_45A8-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45AE-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45AF-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45B5-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45B6-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45BA-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45BB-_ISVALIDPARTNAME@4
	.stabn 192,0,0,.L_45BD-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45BE-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45BF-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45C0-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_45C1-_ISVALIDPARTNAME@4
	.stabn 224,0,0,.L_4597-_ISVALIDPARTNAME@4
.L_45D0:
	.stabs "",36,0,0,.L_45D0-_ISVALIDPARTNAME@4
	.stabs "PARSECOLOR:F1",36,0,67,_PARSECOLOR@4
	.stabs "STOKEN:v13",160,0,0,8
.balign 16

.globl _PARSECOLOR@4
_PARSECOLOR@4:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,67,_PARSECOLOR@4-_PARSECOLOR@4
	mov dword ptr [ebp-4], 0
.L_45D1:
.L_4642:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	mov dword ptr [ebp-8], eax
	mov byte ptr [ebp-12], 0
	mov dword ptr [ebp-16], 1
.stabn 68,0,68,.L_4642-_PARSECOLOR@4
.L_4643:
	cmp dword ptr [ebp-8], 1
	jl .L_45D4
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	movzx eax, byte ptr [ebx]
	cmp eax, 35
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-20], ebx
	jmp .L_4641
.L_45D4:
	mov dword ptr [ebp-20], -1
.L_4641:
	cmp dword ptr [ebp-20], 0
	je .L_45D7
.L_45D8:
	mov dword ptr [ebp-4], -997
	jmp .L_45D2
.L_45D7:
.L_45D9:
.stabn 68,0,69,.L_4643-_PARSECOLOR@4
.L_4645:
	mov dword ptr [ebp-24], 0
.stabn 68,0,70,.L_4645-_PARSECOLOR@4
.L_4646:
	mov ebx, dword ptr [ebp-8]
	sub ebx, dword ptr [ebp-16]
	cmp ebx, 6
	jne .L_45DB
.L_45DC:
.stabn 68,0,71,.L_4646-_PARSECOLOR@4
.L_4647:
.L_45DD:
	mov ebx, dword ptr [ebp-16]
	mov dword ptr [ebp-28], ebx
	mov ebx, dword ptr [ebp-8]
	dec ebx
	mov dword ptr [ebp-32], ebx
	jmp .L_45DF
.L_45E2:
.L_45E3:
.stabn 68,0,72,.L_4647-_PARSECOLOR@4
.L_4648:
.L_45E4:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx]
	add eax, dword ptr [ebp-28]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-36], bl
.stabn 68,0,73,.L_4648-_PARSECOLOR@4
.L_4649:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 48
	jb .L_45E7
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 57
	ja .L_45E7
.L_45E8:
.L_45E9:
	mov ebx, dword ptr [ebp-24]
	shl ebx, 4
	mov eax, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebp-28]
	movzx eax, byte ptr [ecx]
	add ebx, eax
	add ebx, 4294967248
	mov dword ptr [ebp-24], ebx
.stabn 68,0,74,.L_4649-_PARSECOLOR@4
.L_464A:
.L_45EA:
	jmp .L_45E5
.L_45E7:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 97
	jb .L_45EB
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 102
	ja .L_45EB
.L_45EC:
.L_45ED:
	mov ebx, dword ptr [ebp-24]
	shl ebx, 4
	mov eax, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebp-28]
	movzx eax, byte ptr [ecx]
	add ebx, eax
	add ebx, 4294967209
	mov dword ptr [ebp-24], ebx
.stabn 68,0,75,.L_464A-_PARSECOLOR@4
.L_464B:
.L_45EE:
	jmp .L_45E5
.L_45EB:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 65
	jb .L_45EF
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 70
	ja .L_45EF
.L_45F0:
.L_45F1:
	mov ebx, dword ptr [ebp-24]
	shl ebx, 4
	mov eax, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebp-28]
	movzx eax, byte ptr [ecx]
	add ebx, eax
	add ebx, 4294967241
	mov dword ptr [ebp-24], ebx
.stabn 68,0,76,.L_464B-_PARSECOLOR@4
.L_464C:
.L_45F2:
	jmp .L_45E5
.L_45EF:
.L_45F4:
	mov dword ptr [ebp-4], -997
	jmp .L_45D2
.stabn 68,0,77,.L_464C-_PARSECOLOR@4
.L_464D:
.L_45F5:
.L_45F3:
.L_45E5:
.L_45F6:
.L_45F7:
.L_45E0:
	inc dword ptr [ebp-28]
.L_45DF:
	mov ebx, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], ebx
	jle .L_45E2
.L_45E1:
.L_45F8:
.stabn 68,0,79,.L_464D-_PARSECOLOR@4
.L_464E:
	mov ebx, dword ptr [ebp-24]
	add ebx, 16777216
	mov eax, ebx
	mov dword ptr [ebp-4], eax
	jmp .L_45D2
.stabn 68,0,80,.L_464E-_PARSECOLOR@4
.L_464F:
.L_45F9:
	jmp .L_45DA
.L_45DB:
	mov eax, dword ptr [ebp-8]
	sub eax, dword ptr [ebp-16]
	cmp eax, 4
	jne .L_45FA
.L_45FB:
.stabn 68,0,81,.L_464F-_PARSECOLOR@4
.L_4650:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-16]
	movzx eax, byte ptr [ebx]
	cmp eax, 48
	jne .L_45FD
.L_45FE:
.stabn 68,0,82,.L_4650-_PARSECOLOR@4
.L_4651:
	inc dword ptr [ebp-16]
	mov byte ptr [ebp-12], 1
.stabn 68,0,83,.L_4651-_PARSECOLOR@4
.L_4652:
.L_45FF:
.L_45FD:
.L_45FC:
.L_4600:
.L_45FA:
.L_45DA:
	mov eax, dword ptr [ebp-8]
	sub eax, dword ptr [ebp-16]
	cmp eax, 3
	jne .L_4602
.L_4603:
.stabn 68,0,86,.L_4652-_PARSECOLOR@4
.L_4653:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-16]
	movzx eax, byte ptr [ebx]
	cmp eax, 48
	jne .L_4605
.L_4606:
	mov byte ptr [ebp-12], 1
.L_4605:
.L_4607:
.stabn 68,0,87,.L_4653-_PARSECOLOR@4
.L_4654:
.L_4608:
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-28], eax
	mov eax, dword ptr [ebp-8]
	dec eax
	mov dword ptr [ebp-32], eax
	jmp .L_460A
.L_460D:
.L_460E:
.stabn 68,0,88,.L_4654-_PARSECOLOR@4
.L_4655:
.L_460F:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-28]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-36], al
.stabn 68,0,89,.L_4655-_PARSECOLOR@4
.L_4656:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 48
	jb .L_4612
	movzx eax, byte ptr [ebp-36]
	cmp eax, 57
	ja .L_4612
.L_4613:
.L_4614:
	mov eax, dword ptr [ebp-24]
	shl eax, 8
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx]
	add ecx, dword ptr [ebp-28]
	movzx ebx, byte ptr [ecx]
	imul ebx, 255
	add ebx, 4294955056
	mov ecx, 15
	push eax
	mov eax, ebx
	xor edx, edx
	div ecx
	mov ebx, eax
	pop eax
	add eax, ebx
	mov dword ptr [ebp-24], eax
.stabn 68,0,90,.L_4656-_PARSECOLOR@4
.L_4657:
.L_4615:
	jmp .L_4610
.L_4612:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 97
	jb .L_4616
	movzx eax, byte ptr [ebp-36]
	cmp eax, 102
	ja .L_4616
.L_4617:
.L_4618:
	mov eax, dword ptr [ebp-24]
	shl eax, 8
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx]
	add ecx, dword ptr [ebp-28]
	movzx ebx, byte ptr [ecx]
	imul ebx, 255
	add ebx, 4294945111
	mov ecx, 15
	push eax
	mov eax, ebx
	xor edx, edx
	div ecx
	mov ebx, eax
	pop eax
	add eax, ebx
	mov dword ptr [ebp-24], eax
	mov byte ptr [ebp-12], 1
.stabn 68,0,91,.L_4657-_PARSECOLOR@4
.L_4658:
.L_4619:
	jmp .L_4610
.L_4616:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 65
	jb .L_461A
	movzx eax, byte ptr [ebp-36]
	cmp eax, 70
	ja .L_461A
.L_461B:
.L_461C:
	mov eax, dword ptr [ebp-24]
	shl eax, 8
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx]
	add ecx, dword ptr [ebp-28]
	movzx ebx, byte ptr [ecx]
	imul ebx, 255
	add ebx, 4294953271
	mov ecx, 15
	push eax
	mov eax, ebx
	xor edx, edx
	div ecx
	mov ebx, eax
	pop eax
	add eax, ebx
	mov dword ptr [ebp-24], eax
	mov byte ptr [ebp-12], 1
.stabn 68,0,92,.L_4658-_PARSECOLOR@4
.L_4659:
.L_461D:
	jmp .L_4610
.L_461A:
.L_461F:
	mov dword ptr [ebp-4], -997
	jmp .L_45D2
.stabn 68,0,93,.L_4659-_PARSECOLOR@4
.L_465A:
.L_4620:
.L_461E:
.L_4610:
.L_4621:
.L_4622:
.L_460B:
	inc dword ptr [ebp-28]
.L_460A:
	mov eax, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], eax
	jle .L_460D
.L_460C:
.L_4623:
.stabn 68,0,95,.L_465A-_PARSECOLOR@4
.L_465B:
	cmp byte ptr [ebp-12], 0
	je .L_4625
.L_4626:
	mov eax, dword ptr [ebp-24]
	add eax, 16777216
	mov ebx, eax
	mov dword ptr [ebp-4], ebx
	jmp .L_45D2
.L_4625:
.L_4627:
.stabn 68,0,96,.L_465B-_PARSECOLOR@4
.L_465C:
.L_4628:
.L_4602:
.L_4601:
	mov dword ptr [ebp-24], 0
.stabn 68,0,99,.L_465C-_PARSECOLOR@4
.L_465D:
.L_4629:
	mov ebx, dword ptr [ebp-16]
	mov dword ptr [ebp-28], ebx
	mov ebx, dword ptr [ebp-8]
	dec ebx
	mov dword ptr [ebp-32], ebx
	jmp .L_462B
.L_462E:
.L_462F:
.stabn 68,0,100,.L_465D-_PARSECOLOR@4
.L_465E:
.L_4630:
	mov ebx, dword ptr [ebp+8]
	mov eax, dword ptr [ebx]
	add eax, dword ptr [ebp-28]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-36], bl
.stabn 68,0,101,.L_465E-_PARSECOLOR@4
.L_465F:
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 48
	jb .L_4633
	movzx ebx, byte ptr [ebp-36]
	cmp ebx, 57
	ja .L_4633
.L_4634:
.L_4635:
	mov ebx, dword ptr [ebp-24]
	imul ebx, 10
	mov eax, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebp-28]
	movzx eax, byte ptr [ecx]
	add ebx, eax
	add ebx, 4294967248
	mov dword ptr [ebp-24], ebx
.stabn 68,0,102,.L_465F-_PARSECOLOR@4
.L_4660:
.L_4636:
	jmp .L_4631
.L_4633:
.L_4638:
	mov dword ptr [ebp-4], -997
	jmp .L_45D2
.stabn 68,0,103,.L_4660-_PARSECOLOR@4
.L_4661:
.L_4639:
.L_4637:
.L_4631:
.L_463A:
	cmp dword ptr [ebp-24], 10999
	jbe .L_463C
.L_463D:
	mov dword ptr [ebp-4], -997
	jmp .L_45D2
.L_463C:
.L_463E:
.stabn 68,0,105,.L_4661-_PARSECOLOR@4
.L_4662:
.L_463F:
.L_462C:
	inc dword ptr [ebp-28]
.L_462B:
	mov ebx, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], ebx
	jle .L_462E
.L_462D:
.L_4640:
.stabn 68,0,106,.L_4662-_PARSECOLOR@4
.L_4663:
	mov ebx, dword ptr [ebp-24]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,107,.L_4663-_PARSECOLOR@4
.L_4664:
.L_45D2:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,108,.L_45D2-_PARSECOLOR@4
	.stabs "ILEN:1",128,0,0,-8
	.stabs "BHASHEX:16",128,0,0,-12
	.stabs "ITOKENSTART:1",128,0,0,-16
	.stabs "UCOLOR:8",128,0,0,-24
	.stabn 192,0,0,.L_45D1-_PARSECOLOR@4
	.stabn 192,0,0,.L_45D8-_PARSECOLOR@4
	.stabn 224,0,0,.L_45D9-_PARSECOLOR@4
	.stabn 192,0,0,.L_45DC-_PARSECOLOR@4
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_45DD-_PARSECOLOR@4
	.stabn 192,0,0,.L_45E3-_PARSECOLOR@4
	.stabn 192,0,0,.L_45E4-_PARSECOLOR@4
	.stabn 192,0,0,.L_45E9-_PARSECOLOR@4
	.stabn 224,0,0,.L_45EA-_PARSECOLOR@4
	.stabn 192,0,0,.L_45ED-_PARSECOLOR@4
	.stabn 224,0,0,.L_45EE-_PARSECOLOR@4
	.stabn 192,0,0,.L_45F1-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F2-_PARSECOLOR@4
	.stabn 192,0,0,.L_45F4-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F5-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F6-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F7-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F8-_PARSECOLOR@4
	.stabn 224,0,0,.L_45F9-_PARSECOLOR@4
	.stabn 192,0,0,.L_45FB-_PARSECOLOR@4
	.stabn 192,0,0,.L_45FE-_PARSECOLOR@4
	.stabn 224,0,0,.L_45FF-_PARSECOLOR@4
	.stabn 224,0,0,.L_4600-_PARSECOLOR@4
	.stabn 192,0,0,.L_4603-_PARSECOLOR@4
	.stabn 192,0,0,.L_4606-_PARSECOLOR@4
	.stabn 224,0,0,.L_4607-_PARSECOLOR@4
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_4608-_PARSECOLOR@4
	.stabn 192,0,0,.L_460E-_PARSECOLOR@4
	.stabn 192,0,0,.L_460F-_PARSECOLOR@4
	.stabn 192,0,0,.L_4614-_PARSECOLOR@4
	.stabn 224,0,0,.L_4615-_PARSECOLOR@4
	.stabn 192,0,0,.L_4618-_PARSECOLOR@4
	.stabn 224,0,0,.L_4619-_PARSECOLOR@4
	.stabn 192,0,0,.L_461C-_PARSECOLOR@4
	.stabn 224,0,0,.L_461D-_PARSECOLOR@4
	.stabn 192,0,0,.L_461F-_PARSECOLOR@4
	.stabn 224,0,0,.L_4620-_PARSECOLOR@4
	.stabn 224,0,0,.L_4621-_PARSECOLOR@4
	.stabn 224,0,0,.L_4622-_PARSECOLOR@4
	.stabn 224,0,0,.L_4623-_PARSECOLOR@4
	.stabn 192,0,0,.L_4626-_PARSECOLOR@4
	.stabn 224,0,0,.L_4627-_PARSECOLOR@4
	.stabn 224,0,0,.L_4628-_PARSECOLOR@4
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_4629-_PARSECOLOR@4
	.stabn 192,0,0,.L_462F-_PARSECOLOR@4
	.stabn 192,0,0,.L_4630-_PARSECOLOR@4
	.stabn 192,0,0,.L_4635-_PARSECOLOR@4
	.stabn 224,0,0,.L_4636-_PARSECOLOR@4
	.stabn 192,0,0,.L_4638-_PARSECOLOR@4
	.stabn 224,0,0,.L_4639-_PARSECOLOR@4
	.stabn 224,0,0,.L_463A-_PARSECOLOR@4
	.stabn 192,0,0,.L_463D-_PARSECOLOR@4
	.stabn 224,0,0,.L_463E-_PARSECOLOR@4
	.stabn 224,0,0,.L_463F-_PARSECOLOR@4
	.stabn 224,0,0,.L_4640-_PARSECOLOR@4
	.stabn 224,0,0,.L_45D2-_PARSECOLOR@4
.L_4665:
	.stabs "",36,0,0,.L_4665-_PARSECOLOR@4
	.stabs "FINDPARTNAME:F1",36,0,110,_FINDPARTNAME@4
	.stabs "SNAME:v13",160,0,0,8
.balign 16

.globl _FINDPARTNAME@4
_FINDPARTNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,110,_FINDPARTNAME@4-_FINDPARTNAME@4
	mov dword ptr [ebp-4], 0
.L_4666:
.L_467C:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	cmp eax, 1
	jge .L_4669
.L_466A:
	mov dword ptr [ebp-4], -999
	jmp .L_4667
.L_4669:
.L_466B:
.stabn 68,0,111,.L_467C-_FINDPARTNAME@4
.L_467D:
.L_466C:
	mov dword ptr [ebp-8], 1
	mov eax, dword ptr [_G_IPARTCOUNT]
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_466E
.L_4671:
.L_4672:
.stabn 68,0,112,.L_467D-_FINDPARTNAME@4
.L_467E:
.L_4673:
	mov eax, dword ptr [ebp-8]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,113,.L_467E-_FINDPARTNAME@4
.L_467F:
	push -1
	push dword ptr [ebp+8]
	push -1
	mov ebx, dword ptr [ebp-16]
	lea eax, [ebx+92]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_4676
.L_4677:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	jmp .L_4667
.L_4676:
.L_4678:
.stabn 68,0,114,.L_467F-_FINDPARTNAME@4
.L_4680:
.L_4679:
.L_467A:
.L_466F:
	inc dword ptr [ebp-8]
.L_466E:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_4671
.L_4670:
.L_467B:
.stabn 68,0,116,.L_4680-_FINDPARTNAME@4
.L_4681:
	mov dword ptr [ebp-4], -999
.stabn 68,0,117,.L_4681-_FINDPARTNAME@4
.L_4682:
.L_4667:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,118,.L_4667-_FINDPARTNAME@4
	.stabn 192,0,0,.L_4666-_FINDPARTNAME@4
	.stabn 192,0,0,.L_466A-_FINDPARTNAME@4
	.stabn 224,0,0,.L_466B-_FINDPARTNAME@4
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_466C-_FINDPARTNAME@4
	.stabn 192,0,0,.L_4672-_FINDPARTNAME@4
	.stabn 192,0,0,.L_4673-_FINDPARTNAME@4
	.stabn 192,0,0,.L_4677-_FINDPARTNAME@4
	.stabn 224,0,0,.L_4678-_FINDPARTNAME@4
	.stabn 224,0,0,.L_4679-_FINDPARTNAME@4
	.stabn 224,0,0,.L_467A-_FINDPARTNAME@4
	.stabn 224,0,0,.L_467B-_FINDPARTNAME@4
	.stabn 224,0,0,.L_4667-_FINDPARTNAME@4
.L_4683:
	.stabs "",36,0,0,.L_4683-_FINDPARTNAME@4
	.stabs "FINDMODELINDEX:F1",36,0,119,_FINDMODELINDEX@4
	.stabs "SPART:v13",160,0,0,8
.balign 16

.globl _FINDMODELINDEX@4
_FINDMODELINDEX@4:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,119,_FINDMODELINDEX@4-_FINDMODELINDEX@4
	mov dword ptr [ebp-4], 0
.L_4684:
.L_4696:
	push 5
	push offset _Lt_4686
	push -1
	push -1
	push 0
	push dword ptr [ebp+8]
	call _fb_StrLcase2@8
	push eax
	push 2
	push offset _Lt_2642
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	lea eax, [ebp-16]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcat@20
	push eax
	push offset _G_SFILENAMES
	push 1
	call _fb_StrInstr@12
	dec eax
	mov dword ptr [ebp-32], eax
.stabn 68,0,121,.L_4696-_FINDMODELINDEX@4
.L_4697:
	cmp dword ptr [ebp-32], 0
	jge .L_468A
.L_468B:
	mov dword ptr [ebp-4], -999
	jmp .L_4685
.L_468A:
.L_468C:
.stabn 68,0,122,.L_4697-_FINDMODELINDEX@4
.L_4698:
.L_468D:
.L_4690:
	dec dword ptr [ebp-32]
.stabn 68,0,124,.L_4698-_FINDMODELINDEX@4
.L_4699:
	mov eax, dword ptr [_G_SFILENAMES]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_4692
.L_4693:
	jmp .L_468E
.L_4692:
.L_4694:
.stabn 68,0,125,.L_4699-_FINDMODELINDEX@4
.L_469A:
.L_4695:
.L_468F:
	jmp .L_468D
.L_468E:
.stabn 68,0,126,.L_469A-_FINDMODELINDEX@4
.L_469B:
	mov ebx, dword ptr [_G_SFILENAMES]
	add ebx, dword ptr [ebp-32]
	add ebx, -4
	mov eax, dword ptr [ebx]
	mov dword ptr [ebp-4], eax
.stabn 68,0,127,.L_469B-_FINDMODELINDEX@4
.L_469C:
.L_4685:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,128,.L_4685-_FINDMODELINDEX@4
	.stabs "IPOS:1",128,0,0,-32
	.stabn 192,0,0,.L_4684-_FINDMODELINDEX@4
	.stabn 192,0,0,.L_468B-_FINDMODELINDEX@4
	.stabn 224,0,0,.L_468C-_FINDMODELINDEX@4
	.stabn 192,0,0,.L_4690-_FINDMODELINDEX@4
	.stabn 192,0,0,.L_4693-_FINDMODELINDEX@4
	.stabn 224,0,0,.L_4694-_FINDMODELINDEX@4
	.stabn 224,0,0,.L_4695-_FINDMODELINDEX@4
	.stabn 224,0,0,.L_4685-_FINDMODELINDEX@4
.L_469D:
	.stabs "",36,0,0,.L_469D-_FINDMODELINDEX@4
	.stabs "LOADPARTMODEL:F1",36,0,129,_LOADPARTMODEL@4
	.stabs "PARTSTRUCTLS:Tt233=s128TLOCATION:212,0,224;TMATRIX:184,224,512;SNAME:13,736,96;SPRIMATIVE:13,832,96;ICOLOR:1,928,32;IMODELINDEX:1,960,32;BPARTCAT:2,992,8;BFOUNDPART:2,1000,1;BCONNECTED:2,1001,1;;",128,0,0,0
	.stabs "TPART:v233",160,0,0,8
.balign 16

.globl _LOADPARTMODEL@4
_LOADPARTMODEL@4:
	push ebp
	mov ebp, esp
	sub esp, 32
	push ebx
	.stabn 68,0,129,_LOADPARTMODEL@4-_LOADPARTMODEL@4
	mov dword ptr [ebp-4], 0
.L_469E:
.L_46B5:
.L_46A0:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-8], eax
.stabn 68,0,130,.L_46B5-_LOADPARTMODEL@4
.L_46B6:
	mov eax, dword ptr [ebp-8]
	cmp dword ptr [eax+120], 0
	jl .L_46A3
.L_46A4:
	mov dword ptr [ebp-4], 0
	jmp .L_469F
.L_46A3:
.L_46A5:
.stabn 68,0,131,.L_46B6-_LOADPARTMODEL@4
.L_46B7:
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
.stabn 68,0,133,.L_46B7-_LOADPARTMODEL@4
.L_46B8:
	push 1
	lea eax, [ebp-20]
	push eax
	mov eax, dword ptr [ebp-8]
	lea ebx, [eax+104]
	push ebx
	call _LOADFILE@12
	movzx ebx, al
	neg ebx
	test ebx, ebx
	jne .L_46A7
.L_46A8:
.stabn 68,0,134,.L_46B8-_LOADPARTMODEL@4
.L_46B9:
	mov dword ptr [ebp-4], -998
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrDelete@4
	jmp .L_469F
.stabn 68,0,135,.L_46B9-_LOADPARTMODEL@4
.L_46BA:
.L_46A9:
.L_46A7:
.L_46A6:
	push 1
	push -1
	mov ebx, dword ptr [ebp-8]
	lea eax, [ebx+104]
	push eax
	push dword ptr [ebp-20]
	call _LOADMODEL@16
	mov dword ptr [ebp-24], eax
.stabn 68,0,137,.L_46BA-_LOADPARTMODEL@4
.L_46BB:
	cmp dword ptr [ebp-24], 0
	jne .L_46AB
.L_46AC:
	mov dword ptr [ebp-4], -997
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
	jmp .L_469F
.L_46AB:
.L_46AD:
.stabn 68,0,138,.L_46BB-_LOADPARTMODEL@4
.L_46BC:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [ebp-8]
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx+120], ecx
.stabn 68,0,139,.L_46BC-_LOADPARTMODEL@4
.L_46BD:
	push 0
	push -1
	push -1
	push -1
	push 1
	push offset _Lt_2642
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+104]
	push ecx
	call _fb_StrInstrRev@12
	inc eax
	push eax
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+104]
	push ecx
	call _fb_StrMid@12
	push eax
	push -1
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+104]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,140,.L_46BD-_LOADPARTMODEL@4
.L_46BE:
	mov ecx, dword ptr [ebp-24]
	cmp dword ptr [ecx+40], 0
	jne .L_46AF
.L_46B0:
.stabn 68,0,143,.L_46BE-_LOADPARTMODEL@4
.L_46BF:
	push 44
	call _malloc
	add esp, 4
	mov dword ptr [ebp-28], eax
	cmp dword ptr [ebp-28], 0
	je .L_46B2
	push edi
	mov edi, dword ptr [ebp-28]
	xor eax, eax
	mov ecx, 11
	rep stosd
	pop edi
.L_46B2:
	mov eax, dword ptr [ebp-24]
	mov ecx, dword ptr [ebp-28]
	mov dword ptr [eax+40], ecx
.stabn 68,0,144,.L_46BF-_LOADPARTMODEL@4
.L_46C0:
	mov ecx, dword ptr [ebp-24]
	mov eax, dword ptr [ecx+40]
	mov dword ptr [ebp-32], eax
.stabn 68,0,145,.L_46C0-_LOADPARTMODEL@4
.L_46C1:
	push 0
	push 0
	push dword ptr [ebp-32]
	push dword ptr [ebp-24]
	call _SNAPMODEL@16
.stabn 68,0,146,.L_46C1-_LOADPARTMODEL@4
.L_46C2:
.L_46B3:
.L_46AF:
.L_46AE:
	push dword ptr [ebp-24]
	call _DETECTPARTCATHEGORY@4
	mov ecx, dword ptr [ebp-8]
	mov byte ptr [ecx+124], al
.stabn 68,0,151,.L_46C2-_LOADPARTMODEL@4
.L_46C3:
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
.L_46B4:
.stabn 68,0,152,.L_46C3-_LOADPARTMODEL@4
.L_46C4:
	mov dword ptr [ebp-4], 0
.stabn 68,0,153,.L_46C4-_LOADPARTMODEL@4
.L_46C5:
.L_469F:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,154,.L_469F-_LOADPARTMODEL@4
	.stabn 192,0,0,.L_469E-_LOADPARTMODEL@4
	.stabs "SMODEL:13",128,0,0,-20
	.stabs "PMODEL:234=*101",128,0,0,-24
	.stabn 192,0,0,.L_46A0-_LOADPARTMODEL@4
	.stabn 192,0,0,.L_46A4-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_46A5-_LOADPARTMODEL@4
	.stabn 192,0,0,.L_46A8-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_46A9-_LOADPARTMODEL@4
	.stabn 192,0,0,.L_46AC-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_46AD-_LOADPARTMODEL@4
	.stabs "PSNAP:235=*210",128,0,0,-32
	.stabn 192,0,0,.L_46B0-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_46B3-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_46B4-_LOADPARTMODEL@4
	.stabn 224,0,0,.L_469F-_LOADPARTMODEL@4
.L_46C6:
	.stabs "",36,0,0,.L_46C6-_LOADPARTMODEL@4
	.stabs "ADDPARTNAME:F1",36,0,155,_ADDPARTNAME@8
	.stabs "SNAME:v13",160,0,0,8
	.stabs "SPART:v13",160,0,0,12
.balign 16

.globl _ADDPARTNAME@8
_ADDPARTNAME@8:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,155,_ADDPARTNAME@8-_ADDPARTNAME@8
	mov dword ptr [ebp-4], 0
.L_46C7:
.L_46D7:
	push 1
	push offset _G_TPART
	call _fb_ArrayUBound@8
	cmp dword ptr [_G_IPARTCOUNT], eax
	jle .L_46CA
.L_46CB:
.stabn 68,0,160,.L_46D7-_ADDPARTNAME@8
.L_46D8:
	push 1
	push offset _G_TPART
	call _fb_ArrayUBound@8
	add eax, 256
	push eax
	push 0
	push 1
	push offset __ZN12PARTSTRUCTLSD1Ev
	push offset __ZN12PARTSTRUCTLSC1Ev
	push 128
	push offset _G_TPART
	call _fb_ArrayRedimPresvObj
	add esp, 28
.stabn 68,0,161,.L_46D8-_ADDPARTNAME@8
.L_46D9:
.L_46CC:
.L_46CA:
.L_46C9:
	push dword ptr [ebp+12]
	call _FINDMODELINDEX@4
	mov dword ptr [ebp-8], eax
.stabn 68,0,164,.L_46D9-_ADDPARTNAME@8
.L_46DA:
	push 128
	push 0
	mov eax, dword ptr [_G_IPARTCOUNT]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax]
	push ebx
	call _memset
	add esp, 12
.stabn 68,0,165,.L_46DA-_ADDPARTNAME@8
.L_46DB:
.L_46CD:
	mov ebx, dword ptr [_G_IPARTCOUNT]
	sal ebx, 7
	add ebx, dword ptr [_G_TPART]
	lea eax, [ebx]
	mov dword ptr [ebp-12], eax
.stabn 68,0,166,.L_46DB-_ADDPARTNAME@8
.L_46DC:
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	mov eax, dword ptr [ebp-12]
	lea ebx, [eax+92]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,167,.L_46DC-_ADDPARTNAME@8
.L_46DD:
	push 0
	push -1
	push 5
	push offset _Lt_4686
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ebx, [eax+104]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,168,.L_46DD-_ADDPARTNAME@8
.L_46DE:
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+120], -1
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+116], -1
.stabn 68,0,169,.L_46DE-_ADDPARTNAME@8
.L_46DF:
	cmp dword ptr [ebp-8], 0
	jge .L_46D1
.L_46D2:
.stabn 68,0,171,.L_46DF-_ADDPARTNAME@8
.L_46E0:
	mov ebx, dword ptr [ebp-12]
	movsx eax, byte ptr [ebx+125]
	and eax, 4294967294
	mov ebx, dword ptr [ebp-12]
	lea ecx, [ebx+104]
	push ecx
	mov ebx, eax
	call _FINDFILE@4
	test eax, eax
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	and ecx, 1
	or ebx, ecx
	mov ecx, dword ptr [ebp-12]
	mov byte ptr [ecx+125], bl
.stabn 68,0,173,.L_46E0-_ADDPARTNAME@8
.L_46E2:
.L_46D3:
	jmp .L_46D0
.L_46D1:
.L_46D4:
.stabn 68,0,174,.L_46E2-_ADDPARTNAME@8
.L_46E3:
	mov ebx, dword ptr [ebp-12]
	movsx ecx, byte ptr [ebx+125]
	and ecx, 4294967294
	or ecx, 1
	mov ebx, dword ptr [ebp-12]
	mov byte ptr [ebx+125], cl
.stabn 68,0,175,.L_46E3-_ADDPARTNAME@8
.L_46E4:
	mov ecx, dword ptr [ebp-12]
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ecx+120], ebx
.stabn 68,0,176,.L_46E4-_ADDPARTNAME@8
.L_46E5:
.L_46D5:
.L_46D0:
.L_46D6:
	inc dword ptr [_G_IPARTCOUNT]
.stabn 68,0,182,.L_46E5-_ADDPARTNAME@8
.L_46E6:
	mov ebx, dword ptr [_G_IPARTCOUNT]
	dec ebx
	mov dword ptr [ebp-4], ebx
.stabn 68,0,183,.L_46E6-_ADDPARTNAME@8
.L_46E7:
.L_46C8:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,185,.L_46C8-_ADDPARTNAME@8
	.stabs "IINDEX:1",128,0,0,-8
	.stabn 192,0,0,.L_46C7-_ADDPARTNAME@8
	.stabn 192,0,0,.L_46CB-_ADDPARTNAME@8
	.stabn 224,0,0,.L_46CC-_ADDPARTNAME@8
	.stabn 192,0,0,.L_46CD-_ADDPARTNAME@8
	.stabn 192,0,0,.L_46D2-_ADDPARTNAME@8
	.stabn 224,0,0,.L_46D3-_ADDPARTNAME@8
	.stabn 192,0,0,.L_46D4-_ADDPARTNAME@8
	.stabn 224,0,0,.L_46D5-_ADDPARTNAME@8
	.stabn 224,0,0,.L_46D6-_ADDPARTNAME@8
	.stabn 224,0,0,.L_46C8-_ADDPARTNAME@8
.L_46E8:
	.stabs "",36,0,0,.L_46E8-_ADDPARTNAME@8
	.stabs "ADDCONNECTION:F1",36,0,186,_ADDCONNECTION@4
	.stabs "PARTCONNLS:Tt236=s16ILEFTPART:1,0,32;IRIGHTPART:1,32,32;ILEFTNUM:5,64,16;IRIGHTNUM:5,80,16;ILEFTTYPE:2,96,8;IRIGHTTYPE:2,104,8;BRESV:237=ar1;0;1;2,112,16;;",128,0,0,0
	.stabs "TCONN:v236",160,0,0,8
.balign 16

.globl _ADDCONNECTION@4
_ADDCONNECTION@4:
	push ebp
	mov ebp, esp
	sub esp, 4
	push ebx
	.stabn 68,0,186,_ADDCONNECTION@4-_ADDCONNECTION@4
	mov dword ptr [ebp-4], 0
.L_46E9:
.L_46EF:
	push 1
	push offset _G_TCONN
	call _fb_ArrayUBound@8
	cmp dword ptr [_G_ICONNCOUNT], eax
	jle .L_46EC
.L_46ED:
.stabn 68,0,187,.L_46EF-_ADDCONNECTION@4
.L_46F0:
	push 1
	push offset _G_TCONN
	call _fb_ArrayUBound@8
	add eax, 256
	push eax
	push 0
	push 1
	push 0
	push -1
	push 16
	push offset _G_TCONN
	call _fb_ArrayRedimPresvEx
	add esp, 28
.stabn 68,0,188,.L_46F0-_ADDCONNECTION@4
.L_46F1:
.L_46EE:
.L_46EC:
.L_46EB:
	mov eax, dword ptr [_G_ICONNCOUNT]
	sal eax, 4
	add eax, dword ptr [_G_TCONN]
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx]
	mov dword ptr [eax], ecx
	mov ecx, dword ptr [ebx+4]
	mov dword ptr [eax+4], ecx
	mov ecx, dword ptr [ebx+8]
	mov dword ptr [eax+8], ecx
	mov ecx, dword ptr [ebx+12]
	mov dword ptr [eax+12], ecx
	inc dword ptr [_G_ICONNCOUNT]
.stabn 68,0,190,.L_46F1-_ADDCONNECTION@4
.L_46F2:
	mov ebx, dword ptr [_G_ICONNCOUNT]
	dec ebx
	mov dword ptr [ebp-4], ebx
.stabn 68,0,191,.L_46F2-_ADDCONNECTION@4
.L_46F3:
.L_46EA:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,192,.L_46EA-_ADDCONNECTION@4
	.stabn 192,0,0,.L_46E9-_ADDCONNECTION@4
	.stabn 192,0,0,.L_46ED-_ADDCONNECTION@4
	.stabn 224,0,0,.L_46EE-_ADDCONNECTION@4
	.stabn 224,0,0,.L_46EA-_ADDCONNECTION@4
.L_46F4:
	.stabs "",36,0,0,.L_46F4-_ADDCONNECTION@4
	.stabs "SAFETEXT:F13",36,0,194,_SAFETEXT@4
	.stabs "SINPUT:v13",160,0,0,8
.balign 16

.globl _SAFETEXT@4
_SAFETEXT@4:
	push ebp
	mov ebp, esp
	sub esp, 60
	push ebx
	.stabn 68,0,194,_SAFETEXT@4-_SAFETEXT@4
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_46F5:
.L_4710:
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
.stabn 68,0,195,.L_4710-_SAFETEXT@4
.L_4711:
.L_46F7:
	mov dword ptr [ebp-28], 0
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-32], eax
	jmp .L_46F9
.L_46FC:
.L_46FD:
.stabn 68,0,196,.L_4711-_SAFETEXT@4
.L_4712:
.L_46FE:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-28]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-36], al
.stabn 68,0,197,.L_4712-_SAFETEXT@4
.L_4713:
	movzx eax, byte ptr [ebp-36]
	test eax, eax
	jl .L_4703
	movzx eax, byte ptr [ebp-36]
	cmp eax, 31
	jle .L_4702
.L_4703:
	movzx eax, byte ptr [ebp-36]
	cmp eax, 128
	jl .L_4701
	movzx eax, byte ptr [ebp-36]
	cmp eax, 255
	jg .L_4701
.L_4702:
.L_4704:
	push 0
	push -1
	push -1
	push -1
	push 2
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-28]
	movzx eax, byte ptr [ebx]
	push eax
	call _fb_HEXEx_b@8
	push eax
	push 2
	push offset _Lt_4705
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	lea eax, [ebp-48]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	lea eax, [ebp-60]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,198,.L_4713-_SAFETEXT@4
.L_4714:
.L_4708:
	jmp .L_46FF
.L_4701:
.L_470A:
.stabn 68,0,199,.L_4714-_SAFETEXT@4
.L_4715:
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-28]
	movzx eax, byte ptr [ebx]
	push eax
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	lea eax, [ebp-48]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,200,.L_4715-_SAFETEXT@4
.L_4716:
.L_470C:
.L_4709:
.L_46FF:
.L_470D:
.L_470E:
.L_46FA:
	inc dword ptr [ebp-28]
.L_46F9:
	mov eax, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], eax
	jle .L_46FC
.L_46FB:
.L_470F:
.stabn 68,0,202,.L_4716-_SAFETEXT@4
.L_4717:
	push 0
	push -1
	lea eax, [ebp-24]
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_46F6
.stabn 68,0,203,.L_4717-_SAFETEXT@4
.L_4718:
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
.L_46F6:
	lea eax, [ebp-12]
	push eax
	call _fb_StrAllocTempResult@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,204,.L_46F6-_SAFETEXT@4
	.stabs "SRESULT:13",128,0,0,-24
	.stabn 192,0,0,.L_46F5-_SAFETEXT@4
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_46F7-_SAFETEXT@4
	.stabn 192,0,0,.L_46FD-_SAFETEXT@4
	.stabn 192,0,0,.L_46FE-_SAFETEXT@4
	.stabn 192,0,0,.L_4704-_SAFETEXT@4
	.stabn 224,0,0,.L_4708-_SAFETEXT@4
	.stabn 192,0,0,.L_470A-_SAFETEXT@4
	.stabn 224,0,0,.L_470C-_SAFETEXT@4
	.stabn 224,0,0,.L_470D-_SAFETEXT@4
	.stabn 224,0,0,.L_470E-_SAFETEXT@4
	.stabn 224,0,0,.L_470F-_SAFETEXT@4
	.stabn 224,0,0,.L_46F6-_SAFETEXT@4
.L_4719:
	.stabs "",36,0,0,.L_4719-_SAFETEXT@4
	.stabs "SCANONICALIZEFILEPATH:F7",36,0,205,_SCANONICALIZEFILEPATH@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl _SCANONICALIZEFILEPATH@4
_SCANONICALIZEFILEPATH@4:
	push ebp
	mov ebp, esp
	.stabn 68,0,205,_SCANONICALIZEFILEPATH@4-_SCANONICALIZEFILEPATH@4
.L_471A:
.L_471C:
.L_471B:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,207,.L_471B-_SCANONICALIZEFILEPATH@4
	.stabn 192,0,0,.L_471A-_SCANONICALIZEFILEPATH@4
	.stabn 224,0,0,.L_471B-_SCANONICALIZEFILEPATH@4
.L_471D:
	.stabs "",36,0,0,.L_471D-_SCANONICALIZEFILEPATH@4
	.stabs "LOADSCRIPTFILE:F16",36,0,208,_LOADSCRIPTFILE@8
	.stabs "SFILE:v13",160,0,0,8
	.stabs "SOUTSTRING:v13",160,0,0,12
.balign 16

.globl _LOADSCRIPTFILE@8
_LOADSCRIPTFILE@8:
	push ebp
	mov ebp, esp
	sub esp, 48
	push ebx
	.stabn 68,0,208,_LOADSCRIPTFILE@8-_LOADSCRIPTFILE@8
	mov byte ptr [ebp-4], 0
.L_471E:
.L_475E:
	call _fb_FileFree@0
	mov dword ptr [ebp-8], eax
	push 0
	push dword ptr [ebp-8]
	push 0
	push 1
	push 0
	push dword ptr [ebp+8]
	call _fb_FileOpen@24
	mov dword ptr [ebp-12], eax
.stabn 68,0,209,.L_475E-_LOADSCRIPTFILE@8
.L_475F:
	cmp dword ptr [ebp-12], 0
	jne .L_4720
	push dword ptr [ebp-8]
	call _fb_FileSize@4
	cmp edx, 0
	mov ebx, -1
	jg .L_4760
	jl .L_4761
	cmp eax, 67108864
	ja .L_4760
.L_4761:
	xor ebx, ebx
.L_4760:
	mov dword ptr [ebp-16], ebx
	jmp .L_475D
.L_4720:
	mov dword ptr [ebp-16], -1
.L_475D:
	cmp dword ptr [ebp-16], 0
	je .L_4723
.L_4724:
.stabn 68,0,210,.L_475F-_LOADSCRIPTFILE@8
.L_4762:
	cmp dword ptr [ebp-12], 0
	jne .L_4726
.L_4727:
	push dword ptr [ebp-8]
	call _fb_FileClose@4
.L_4726:
.L_4728:
.stabn 68,0,211,.L_4762-_LOADSCRIPTFILE@8
.L_4763:
	mov byte ptr [ebp-4], 0
	jmp .L_471F
.stabn 68,0,212,.L_4763-_LOADSCRIPTFILE@8
.L_4764:
.L_4729:
.L_4723:
.L_4722:
	push 0
	push -1
	push dword ptr [ebp-8]
	call _fb_FileSize@4
	mov ebx, eax
	push ebx
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrInit@20
.stabn 68,0,214,.L_4764-_LOADSCRIPTFILE@8
.L_4765:
	push 0
	push -1
	push dword ptr [ebp-8]
	call _fb_FileSize@4
	push 0
	push 3
	push edx
	push eax
	mov eax, [esp+0]
	mul dword ptr [esp+8]
	xchg eax, [esp+0]
	imul eax, [esp+12]
	add eax, edx
	mov edx, [esp+4]
	imul edx, [esp+8]
	add edx, eax
	mov [esp+4], edx
	pop eax
	pop edx
	add esp, 8
	mov ebx, eax
	push ebx
	call _fb_SPACE@4
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,215,.L_4765-_LOADSCRIPTFILE@8
.L_4766:
	push -1
	lea eax, [ebp-28]
	push eax
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGetStr@16
	push dword ptr [ebp-8]
	call _fb_FileClose@4
.stabn 68,0,216,.L_4766-_LOADSCRIPTFILE@8
.L_4767:
	mov dword ptr [ebp-32], 0
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-36], eax
.stabn 68,0,218,.L_4767-_LOADSCRIPTFILE@8
.L_4768:
.L_472A:
	mov dword ptr [ebp-40], 0
	mov eax, dword ptr [ebp-36]
	dec eax
	mov dword ptr [ebp-44], eax
	jmp .L_472C
.L_472F:
.L_4730:
.stabn 68,0,219,.L_4768-_LOADSCRIPTFILE@8
.L_4769:
	mov eax, dword ptr [ebp-28]
	add eax, dword ptr [ebp-40]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-48], bl
.stabn 68,0,220,.L_4769-_LOADSCRIPTFILE@8
.L_476A:
.L_4731:
	movzx ebx, byte ptr [ebp-48]
	cmp ebx, 59
	jne .L_4733
.L_4735:
.L_4736:
.stabn 68,0,222,.L_476A-_LOADSCRIPTFILE@8
.L_476B:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebx]
	add eax, dword ptr [ebp-32]
	mov bl, byte ptr [ebp-48]
	mov byte ptr [eax], bl
	inc dword ptr [ebp-32]
.stabn 68,0,223,.L_476B-_LOADSCRIPTFILE@8
.L_476C:
.L_4737:
.L_473A:
	inc dword ptr [ebp-40]
	mov ebx, dword ptr [ebp-36]
	cmp dword ptr [ebp-40], ebx
	jl .L_473C
.L_473D:
	jmp .L_472E
.L_473C:
.L_473E:
.stabn 68,0,225,.L_476C-_LOADSCRIPTFILE@8
.L_476D:
	mov ebx, dword ptr [ebp-28]
	add ebx, dword ptr [ebp-40]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-48], al
.stabn 68,0,226,.L_476D-_LOADSCRIPTFILE@8
.L_476E:
.L_473F:
	movzx eax, byte ptr [ebp-48]
	cmp eax, 13
	je .L_4742
.L_4743:
	movzx eax, byte ptr [ebp-48]
	cmp eax, 9
	je .L_4742
.L_4744:
	movzx eax, byte ptr [ebp-48]
	cmp eax, 32
	je .L_4742
.L_4745:
	movzx eax, byte ptr [ebp-48]
	cmp eax, 59
	jne .L_4741
.L_4742:
.L_4746:
.stabn 68,0,228,.L_476E-_LOADSCRIPTFILE@8
.L_476F:
.L_4747:
	jmp .L_4740
.L_4741:
	movzx eax, byte ptr [ebp-48]
	cmp eax, 10
	jne .L_4748
.L_4749:
.L_474A:
.stabn 68,0,230,.L_476F-_LOADSCRIPTFILE@8
.L_4770:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-32]
	mov byte ptr [ebx], 13
	mov byte ptr [ebp-48], 10
	inc dword ptr [ebp-32]
	jmp .L_4738
.stabn 68,0,231,.L_4770-_LOADSCRIPTFILE@8
.L_4771:
.L_474B:
	jmp .L_4740
.L_4748:
.L_474D:
.stabn 68,0,232,.L_4771-_LOADSCRIPTFILE@8
.L_4772:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebx]
	add eax, dword ptr [ebp-32]
	mov byte ptr [eax], 13
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-32]
	mov byte ptr [ebx+1], 10
	add dword ptr [ebp-32], 2
	jmp .L_4738
.stabn 68,0,233,.L_4772-_LOADSCRIPTFILE@8
.L_4773:
.L_474E:
.L_474C:
.L_4740:
.L_474F:
.L_4750:
.L_4739:
	jmp .L_4737
.L_4738:
.stabn 68,0,235,.L_4773-_LOADSCRIPTFILE@8
.L_4774:
.L_4751:
	jmp .L_4732
.L_4733:
	movzx ebx, byte ptr [ebp-48]
	cmp ebx, 13
	jne .L_4752
.L_4753:
.L_4754:
	jmp .L_472D
.stabn 68,0,236,.L_4774-_LOADSCRIPTFILE@8
.L_4775:
.L_4755:
	jmp .L_4732
.L_4752:
	movzx ebx, byte ptr [ebp-48]
	cmp ebx, 10
	jne .L_4756
.L_4757:
.L_4758:
	mov ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebx]
	add eax, dword ptr [ebp-32]
	mov byte ptr [eax], 13
	inc dword ptr [ebp-32]
.stabn 68,0,237,.L_4775-_LOADSCRIPTFILE@8
.L_4776:
.L_4759:
.L_4756:
.L_4732:
.L_475A:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-32]
	mov al, byte ptr [ebp-48]
	mov byte ptr [ebx], al
	inc dword ptr [ebp-32]
.stabn 68,0,239,.L_4776-_LOADSCRIPTFILE@8
.L_4777:
.L_475B:
.L_472D:
	inc dword ptr [ebp-40]
.L_472C:
	mov eax, dword ptr [ebp-44]
	cmp dword ptr [ebp-40], eax
	jle .L_472F
.L_472E:
.L_475C:
.stabn 68,0,240,.L_4777-_LOADSCRIPTFILE@8
.L_4778:
	push 0
	push -1
	push dword ptr [ebp-32]
	push dword ptr [ebp+12]
	call _fb_LEFT@8
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
.stabn 68,0,241,.L_4778-_LOADSCRIPTFILE@8
.L_4779:
	mov byte ptr [ebp-4], 1
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_471F
.stabn 68,0,242,.L_4779-_LOADSCRIPTFILE@8
.L_477A:
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
.L_471F:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,243,.L_471F-_LOADSCRIPTFILE@8
	.stabs "F:1",128,0,0,-8
	.stabs "IRESU:1",128,0,0,-12
	.stabs "SDATA:13",128,0,0,-28
	.stabs "IOUT:1",128,0,0,-32
	.stabs "ILEN:1",128,0,0,-36
	.stabn 192,0,0,.L_471E-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4724-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4727-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4728-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4729-_LOADSCRIPTFILE@8
	.stabs "IN:1",128,0,0,-40
	.stabn 192,0,0,.L_472A-_LOADSCRIPTFILE@8
	.stabs "ICHAR:3",128,0,0,-48
	.stabn 192,0,0,.L_4730-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4731-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4736-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_473A-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_473D-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_473E-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_473F-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4746-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4747-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_474A-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_474B-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_474D-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_474E-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_474F-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4750-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4751-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4754-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4755-_LOADSCRIPTFILE@8
	.stabn 192,0,0,.L_4758-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_4759-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_475A-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_475B-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_475C-_LOADSCRIPTFILE@8
	.stabn 224,0,0,.L_471F-_LOADSCRIPTFILE@8
.L_477B:
	.stabs "",36,0,0,.L_477B-_LOADSCRIPTFILE@8
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LS2LDR.BAS",132,0,0,.L_47DE
.L_47DE:
	.stabs "LS_GETNEXTSTATEMENT:F1",36,0,124,_LS_GETNEXTSTATEMENT@16
	.stabs "SSCRIPT:v13",160,0,0,8
	.stabs "ISTSTART:p1",160,0,0,12
	.stabs "OUT_SSTATEMENT:v13",160,0,0,16
	.stabs "INOUT_ILINENUMBER:v1",160,0,0,20
.balign 16

.globl _LS_GETNEXTSTATEMENT@16
_LS_GETNEXTSTATEMENT@16:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,124,_LS_GETNEXTSTATEMENT@16-_LS_GETNEXTSTATEMENT@16
	mov dword ptr [ebp-4], 0
.L_477E:
.L_47DF:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	cmp dword ptr [ebp+12], eax
	jl .L_4781
.L_4782:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push dword ptr [ebp+16]
	call _fb_StrAssign@20
	mov dword ptr [ebp-4], 0
	jmp .L_477F
.L_4781:
.L_4783:
.stabn 68,0,125,.L_47DF-_LS_GETNEXTSTATEMENT@16
.L_47E0:
	push 1
	push offset _Lt_4734
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	push dword ptr [ebp+12]
	call _fb_StrInstr@12
	mov dword ptr [ebp-8], eax
	mov dword ptr [ebp-12], 0
.stabn 68,0,126,.L_47E0-_LS_GETNEXTSTATEMENT@16
.L_47E1:
	cmp dword ptr [ebp-8], 0
	jne .L_4785
.L_4786:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	mov dword ptr [ebp-8], eax
	mov dword ptr [ebp-12], 1
.L_4785:
.L_4787:
.stabn 68,0,127,.L_47E1-_LS_GETNEXTSTATEMENT@16
.L_47E2:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-16], eax
.stabn 68,0,128,.L_47E2-_LS_GETNEXTSTATEMENT@16
.L_47E3:
.L_4788:
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-20], eax
.stabn 68,0,129,.L_47E3-_LS_GETNEXTSTATEMENT@16
.L_47E4:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp+12]
	dec ebx
	mov eax, dword ptr [ebp-20]
	mov dword ptr [eax], ebx
.stabn 68,0,130,.L_47E4-_LS_GETNEXTSTATEMENT@16
.L_47E5:
	cmp dword ptr [ebp-8], 0
	je .L_478A
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-24], ebx
	jmp .L_47D9
.L_478A:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	inc eax
	mov dword ptr [ebp-24], eax
.L_47D9:
	mov eax, dword ptr [ebp-24]
	sub eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp-20]
	mov dword ptr [ebx+4], eax
.stabn 68,0,131,.L_47E5-_LS_GETNEXTSTATEMENT@16
.L_47E6:
.L_478C:
	mov eax, dword ptr [ebp-20]
	cmp dword ptr [eax+4], 0
	jle .L_478E
	mov eax, dword ptr [ebp-20]
	mov ebx, dword ptr [eax]
	movzx eax, byte ptr [ebx]
	movsx ebx, byte ptr [_G_BSEPARATORS+eax]
	and ebx, 1
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-28], ebx
	jmp .L_47DA
.L_478E:
	mov dword ptr [ebp-28], 0
.L_47DA:
	cmp dword ptr [ebp-28], 0
	je .L_478D
.L_4790:
.stabn 68,0,132,.L_47E6-_LS_GETNEXTSTATEMENT@16
.L_47E8:
.L_4791:
	mov ebx, dword ptr [ebp-20]
	mov eax, dword ptr [ebx]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-44], bl
.stabn 68,0,133,.L_47E8-_LS_GETNEXTSTATEMENT@16
.L_47E9:
	movzx ebx, byte ptr [ebp-44]
	cmp ebx, 47
	jne .L_4794
.L_4795:
.L_4796:
	jmp .L_478D
.stabn 68,0,134,.L_47E9-_LS_GETNEXTSTATEMENT@16
.L_47EA:
.L_4797:
	jmp .L_4792
.L_4794:
	movzx ebx, byte ptr [ebp-44]
	cmp ebx, 10
	jne .L_4798
.L_4799:
.L_479A:
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.stabn 68,0,135,.L_47EA-_LS_GETNEXTSTATEMENT@16
.L_47EB:
.L_479B:
	jmp .L_4792
.L_4798:
	movzx ebx, byte ptr [ebp-44]
	cmp ebx, 13
	jne .L_479C
.L_479D:
.L_479E:
	mov ebx, dword ptr [ebp-20]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax+1]
	cmp ebx, 10
	jne .L_47A0
.L_47A1:
	mov ebx, dword ptr [ebp-20]
	inc dword ptr [ebx]
	mov ebx, dword ptr [ebp-20]
	dec dword ptr [ebx+4]
	inc dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.L_47A0:
.L_47A2:
.stabn 68,0,136,.L_47EB-_LS_GETNEXTSTATEMENT@16
.L_47EC:
.L_47A3:
.L_479C:
.L_4792:
.L_47A4:
	mov ebx, dword ptr [ebp-20]
	inc dword ptr [ebx]
	mov ebx, dword ptr [ebp-20]
	dec dword ptr [ebx+4]
	inc dword ptr [ebp+12]
.stabn 68,0,138,.L_47EC-_LS_GETNEXTSTATEMENT@16
.L_47ED:
.L_47A5:
	jmp .L_478C
.L_478D:
.stabn 68,0,139,.L_47ED-_LS_GETNEXTSTATEMENT@16
.L_47EE:
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [ebx+4], 0
	jle .L_47A6
	mov ebx, dword ptr [ebp-20]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 35
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-32], eax
	jmp .L_47DB
.L_47A6:
	mov dword ptr [ebp-32], 0
.L_47DB:
	mov eax, dword ptr [ebp-32]
	mov dword ptr [ebp-36], eax
.stabn 68,0,142,.L_47EE-_LS_GETNEXTSTATEMENT@16
.L_47F0:
	cmp dword ptr [ebp-36], 0
	je .L_47A9
.L_47AA:
.stabn 68,0,143,.L_47F0-_LS_GETNEXTSTATEMENT@16
.L_47F1:
	push 1
	push offset _Lt_24A8
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	push dword ptr [ebp+12]
	call _fb_StrInstr@12
	mov dword ptr [ebp-8], eax
.stabn 68,0,144,.L_47F1-_LS_GETNEXTSTATEMENT@16
.L_47F2:
	cmp dword ptr [ebp-8], 0
	jne .L_47AC
.L_47AD:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	mov dword ptr [ebp-8], eax
.L_47AC:
.L_47AE:
.stabn 68,0,145,.L_47F2-_LS_GETNEXTSTATEMENT@16
.L_47F3:
	cmp dword ptr [ebp-8], 1
	jle .L_47AF
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-8]
	movzx eax, byte ptr [ebx-2]
	cmp eax, 13
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-44], ebx
	jmp .L_47DC
.L_47AF:
	mov dword ptr [ebp-44], 0
.L_47DC:
	cmp dword ptr [ebp-44], 0
	je .L_47B2
.L_47B3:
	dec dword ptr [ebp-8]
.L_47B2:
.L_47B4:
.stabn 68,0,146,.L_47F3-_LS_GETNEXTSTATEMENT@16
.L_47F5:
	mov ebx, dword ptr [ebp-8]
	sub ebx, dword ptr [ebp+12]
	mov eax, dword ptr [ebp-20]
	mov dword ptr [eax+4], ebx
	mov dword ptr [ebp-12], 1
.stabn 68,0,147,.L_47F5-_LS_GETNEXTSTATEMENT@16
.L_47F6:
.L_47B5:
.L_47A9:
.L_47A8:
.L_47B6:
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [ebx+4], 0
	jle .L_47B8
	mov ebx, dword ptr [ebp-20]
	mov eax, dword ptr [ebp-20]
	mov ecx, dword ptr [ebx]
	add ecx, dword ptr [eax+4]
	movzx eax, byte ptr [ecx-1]
	movsx ecx, byte ptr [_G_BSEPARATORS+eax]
	and ecx, 1
	test ecx, ecx
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-40], ecx
	jmp .L_47DD
.L_47B8:
	mov dword ptr [ebp-40], 0
.L_47DD:
	cmp dword ptr [ebp-40], 0
	je .L_47B7
.L_47BA:
.stabn 68,0,150,.L_47F6-_LS_GETNEXTSTATEMENT@16
.L_47F8:
.L_47BB:
	mov ecx, dword ptr [ebp-20]
	mov eax, dword ptr [ebp-20]
	mov ebx, dword ptr [ecx]
	add ebx, dword ptr [eax+4]
	mov al, byte ptr [ebx-1]
	mov byte ptr [ebp-44], al
.stabn 68,0,151,.L_47F8-_LS_GETNEXTSTATEMENT@16
.L_47F9:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 47
	jne .L_47BE
.L_47BF:
.L_47C0:
	jmp .L_47B7
.stabn 68,0,152,.L_47F9-_LS_GETNEXTSTATEMENT@16
.L_47FA:
.L_47C1:
	jmp .L_47BC
.L_47BE:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 10
	jne .L_47C2
.L_47C3:
.L_47C4:
	mov eax, dword ptr [ebp+20]
	inc dword ptr [eax]
.stabn 68,0,153,.L_47FA-_LS_GETNEXTSTATEMENT@16
.L_47FB:
.L_47C5:
	jmp .L_47BC
.L_47C2:
	movzx eax, byte ptr [ebp-44]
	cmp eax, 13
	jne .L_47C6
.L_47C7:
.L_47C8:
	mov eax, dword ptr [ebp-20]
	mov ebx, dword ptr [ebp-20]
	mov ecx, dword ptr [eax]
	add ecx, dword ptr [ebx+4]
	movzx ebx, byte ptr [ecx]
	cmp ebx, 10
	jne .L_47CA
.L_47CB:
	mov ebx, dword ptr [ebp-20]
	dec dword ptr [ebx+4]
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.L_47CA:
.L_47CC:
.stabn 68,0,154,.L_47FB-_LS_GETNEXTSTATEMENT@16
.L_47FC:
.L_47CD:
.L_47C6:
.L_47BC:
.L_47CE:
	mov ebx, dword ptr [ebp-20]
	dec dword ptr [ebx+4]
.stabn 68,0,156,.L_47FC-_LS_GETNEXTSTATEMENT@16
.L_47FD:
.L_47CF:
	jmp .L_47B6
.L_47B7:
.stabn 68,0,157,.L_47FD-_LS_GETNEXTSTATEMENT@16
.L_47FE:
	mov ebx, dword ptr [ebp-20]
	mov ecx, dword ptr [ebp-12]
	add dword ptr [ebx+4], ecx
.stabn 68,0,159,.L_47FE-_LS_GETNEXTSTATEMENT@16
.L_47FF:
	mov ecx, dword ptr [ebp-20]
	cmp dword ptr [ecx+4], 0
	jne .L_47D1
.L_47D2:
.stabn 68,0,161,.L_47FF-_LS_GETNEXTSTATEMENT@16
.L_4800:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	cmp dword ptr [ebp-8], eax
	jne .L_47D4
.L_47D5:
	mov dword ptr [ebp-8], 0
.L_47D4:
.L_47D6:
.stabn 68,0,162,.L_4800-_LS_GETNEXTSTATEMENT@16
.L_4801:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push dword ptr [ebp+16]
	call _fb_StrAssign@20
.stabn 68,0,163,.L_4801-_LS_GETNEXTSTATEMENT@16
.L_4802:
.L_47D7:
.L_47D1:
.L_47D0:
.L_47D8:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,166,.L_4802-_LS_GETNEXTSTATEMENT@16
.L_4803:
.L_477F:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,167,.L_477F-_LS_GETNEXTSTATEMENT@16
	.stabs "ISTNEXT:1",128,0,0,-8
	.stabs "BNOEOS:1",128,0,0,-12
	.stabs "FBSTR:Tt239=s12PZDATA:240=*3,0,32;ILEN:1,32,32;ISIZE:1,64,32;;",128,0,0,0
	.stabs "PZFB:238=*239",128,0,0,-16
	.stabn 192,0,0,.L_477E-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_4782-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_4783-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_4786-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_4787-_LS_GETNEXTSTATEMENT@16
	.stabs "BISPREPROCESSOR:1",128,0,0,-36
	.stabn 192,0,0,.L_4788-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_4790-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_4791-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_4796-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_4797-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_479A-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_479B-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_479E-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47A1-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47A2-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47A3-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47A4-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47A5-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47AA-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47AD-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47AE-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47B3-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47B4-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47B5-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47BA-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47BB-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47C0-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47C1-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47C4-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47C5-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47C8-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47CB-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47CC-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47CD-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47CE-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47CF-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47D2-_LS_GETNEXTSTATEMENT@16
	.stabn 192,0,0,.L_47D5-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47D6-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47D7-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_47D8-_LS_GETNEXTSTATEMENT@16
	.stabn 224,0,0,.L_477F-_LS_GETNEXTSTATEMENT@16
.L_4804:
	.stabs "",36,0,0,.L_4804-_LS_GETNEXTSTATEMENT@16
	.stabs "LS_SPLITTOKENS:F1",36,0,168,_LS_SPLITTOKENS@20
	.stabs "SSTATEMENT:v13",160,0,0,8
	.stabs "FBARRAY:Tt241=s120DATA:242=*13,0,32;PTR:243=*13,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:244=ar1;0;0;70,192,768;;",128,0,0,0
	.stabs "OUT_STOKEN:v241",160,0,0,12
	.stabs "IFILENUMBER:p1",160,0,0,16
	.stabs "INOUT_ILINENUMBER:v1",160,0,0,20
	.stabs "OUT_IERRTOKEN:v1",160,0,0,24
.balign 16

.globl _LS_SPLITTOKENS@20
_LS_SPLITTOKENS@20:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,168,_LS_SPLITTOKENS@20-_LS_SPLITTOKENS@20
	mov dword ptr [ebp-4], 0
.L_4805:
.L_4869:
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-12], 0
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	mov dword ptr [ebp-16], eax
.stabn 68,0,169,.L_4869-_LS_SPLITTOKENS@20
.L_486A:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	test eax, eax
	jne .L_4808
.L_4809:
	mov dword ptr [ebp-4], 0
	jmp .L_4806
.L_4808:
.L_480A:
.stabn 68,0,172,.L_486A-_LS_SPLITTOKENS@20
.L_486B:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-20], ebx
.stabn 68,0,173,.L_486B-_LS_SPLITTOKENS@20
.L_486C:
	mov ebx, dword ptr [ebp+24]
	mov dword ptr [ebx], 0
.stabn 68,0,174,.L_486C-_LS_SPLITTOKENS@20
.L_486D:
.L_480B:
.L_480E:
	push 1
	push dword ptr [ebp+12]
	call _fb_ArrayUBound@8
	cmp dword ptr [ebp-12], eax
	jle .L_4810
.L_4811:
	mov eax, dword ptr [ebp-12]
	dec eax
	mov ebx, dword ptr [ebp+24]
	mov dword ptr [ebx], eax
	jmp .L_480C
.L_4810:
.L_4812:
.stabn 68,0,177,.L_486D-_LS_SPLITTOKENS@20
.L_486E:
.L_4813:
	mov eax, dword ptr [ebp-12]
	imul eax, 12
	mov ebx, dword ptr [ebp+12]
	add eax, dword ptr [ebx]
	lea ebx, [eax]
	mov dword ptr [ebp-24], ebx
.stabn 68,0,178,.L_486E-_LS_SPLITTOKENS@20
.L_486F:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	mov ebx, dword ptr [ebp+16]
	and ebx, 2047
	shl ebx, 21
	or eax, ebx
	mov ebx, dword ptr [ebp-24]
	mov dword ptr [ebx+8], eax
.stabn 68,0,179,.L_486F-_LS_SPLITTOKENS@20
.L_4870:
	mov eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-8]
	mov ebx, dword ptr [ebp-24]
	mov dword ptr [ebx], eax
.stabn 68,0,180,.L_4870-_LS_SPLITTOKENS@20
.L_4871:
.L_4815:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax]
	movzx eax, byte ptr [ebx]
	movsx ebx, byte ptr [_G_BSEPARATORS+eax]
	and ebx, 1
	je .L_4816
.L_4817:
.stabn 68,0,182,.L_4871-_LS_SPLITTOKENS@20
.L_4872:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_4819
.L_481A:
	jmp .L_480C
.L_4819:
.L_481B:
.stabn 68,0,183,.L_4872-_LS_SPLITTOKENS@20
.L_4873:
	mov ebx, dword ptr [ebp-24]
	inc dword ptr [ebx]
	inc dword ptr [ebp-8]
.stabn 68,0,184,.L_4873-_LS_SPLITTOKENS@20
.L_4874:
.L_481C:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	mov bl, byte ptr [eax-1]
	mov byte ptr [ebp-28], bl
.stabn 68,0,185,.L_4874-_LS_SPLITTOKENS@20
.L_4875:
	movzx ebx, byte ptr [ebp-28]
	cmp ebx, 10
	jne .L_481F
.L_4820:
.L_4821:
.stabn 68,0,186,.L_4875-_LS_SPLITTOKENS@20
.L_4876:
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.stabn 68,0,187,.L_4876-_LS_SPLITTOKENS@20
.L_4877:
.L_4822:
	jmp .L_481D
.L_481F:
	movzx ebx, byte ptr [ebp-28]
	cmp ebx, 13
	jne .L_4823
.L_4824:
.L_4825:
.stabn 68,0,188,.L_4877-_LS_SPLITTOKENS@20
.L_4878:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 10
	jne .L_4827
.L_4828:
	mov ebx, dword ptr [ebp-24]
	inc dword ptr [ebx]
	inc dword ptr [ebp-8]
	mov ebx, dword ptr [ebp+20]
	inc dword ptr [ebx]
.L_4827:
.L_4829:
.stabn 68,0,189,.L_4878-_LS_SPLITTOKENS@20
.L_4879:
.L_482A:
	jmp .L_481D
.L_4823:
	movzx ebx, byte ptr [ebp-28]
	cmp ebx, 47
	jne .L_482B
.L_482C:
.L_482D:
.stabn 68,0,190,.L_4879-_LS_SPLITTOKENS@20
.L_487A:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 47
	jne .L_482F
.L_4830:
.stabn 68,0,191,.L_487A-_LS_SPLITTOKENS@20
.L_487B:
.L_4831:
	mov ebx, dword ptr [ebp-16]
	cmp dword ptr [ebp-8], ebx
	jge .L_4833
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 13
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-32], eax
	jmp .L_4865
.L_4833:
	mov dword ptr [ebp-32], 0
.L_4865:
	cmp dword ptr [ebp-32], 0
	je .L_4835
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax]
	movzx eax, byte ptr [ebx]
	cmp eax, 10
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-36], ebx
	jmp .L_4866
.L_4835:
	mov dword ptr [ebp-36], 0
.L_4866:
	cmp dword ptr [ebp-36], 0
	je .L_4832
.L_4837:
.stabn 68,0,192,.L_487B-_LS_SPLITTOKENS@20
.L_487E:
	mov ebx, dword ptr [ebp-24]
	inc dword ptr [ebx]
	inc dword ptr [ebp-8]
.stabn 68,0,193,.L_487E-_LS_SPLITTOKENS@20
.L_487F:
.L_4838:
	jmp .L_4831
.L_4832:
.stabn 68,0,194,.L_487F-_LS_SPLITTOKENS@20
.L_4880:
.L_4839:
	jmp .L_482E
.L_482F:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 42
	jne .L_483A
.L_483C:
.stabn 68,0,195,.L_4880-_LS_SPLITTOKENS@20
.L_4881:
	mov ebx, dword ptr [ebp-24]
	inc dword ptr [ebx]
	inc dword ptr [ebp-8]
.stabn 68,0,196,.L_4881-_LS_SPLITTOKENS@20
.L_4882:
.L_483D:
	mov ebx, dword ptr [ebp-16]
	cmp dword ptr [ebp-8], ebx
	jge .L_483F
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-32], ebx
	jmp .L_4867
.L_483F:
	mov dword ptr [ebp-32], 0
.L_4867:
	cmp dword ptr [ebp-32], 0
	je .L_483E
.L_4841:
.stabn 68,0,197,.L_4882-_LS_SPLITTOKENS@20
.L_4884:
	mov ebx, dword ptr [ebp-24]
	inc dword ptr [ebx]
	inc dword ptr [ebp-8]
.stabn 68,0,198,.L_4884-_LS_SPLITTOKENS@20
.L_4885:
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax-1]
	cmp ebx, 42
	jne .L_4842
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ebx]
	movzx ebx, byte ptr [eax]
	cmp ebx, 47
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-36], eax
	jmp .L_4868
.L_4842:
	mov dword ptr [ebp-36], 0
.L_4868:
	cmp dword ptr [ebp-36], 0
	je .L_4845
.L_4846:
.stabn 68,0,199,.L_4885-_LS_SPLITTOKENS@20
.L_4887:
	mov eax, dword ptr [ebp-24]
	inc dword ptr [eax]
	inc dword ptr [ebp-8]
	jmp .L_483E
.stabn 68,0,200,.L_4887-_LS_SPLITTOKENS@20
.L_4888:
.L_4847:
.L_4845:
.L_4844:
.L_4848:
	jmp .L_483D
.L_483E:
.stabn 68,0,202,.L_4888-_LS_SPLITTOKENS@20
.L_4889:
.L_4849:
.L_483A:
.L_482E:
.L_484A:
.L_482B:
.L_481D:
.L_484B:
	mov eax, dword ptr [ebp-16]
	cmp dword ptr [ebp-8], eax
	jl .L_484D
.L_484E:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax+8]
	and ebx, 4292870144
	mov eax, dword ptr [ebp+20]
	mov ecx, dword ptr [eax]
	and ecx, 2097151
	or ebx, ecx
	mov ecx, dword ptr [ebp-24]
	mov dword ptr [ecx+8], ebx
	jmp .L_480C
.L_484D:
.L_484F:
.stabn 68,0,205,.L_4889-_LS_SPLITTOKENS@20
.L_488A:
.L_4850:
	jmp .L_4815
.L_4816:
.stabn 68,0,206,.L_488A-_LS_SPLITTOKENS@20
.L_488B:
	mov ebx, dword ptr [ebp-24]
	mov ecx, dword ptr [ebx]
	movzx ebx, byte ptr [ecx]
	movsx ecx, byte ptr [_G_BSEPARATORS+ebx]
	and ecx, -2
	je .L_4852
.L_4853:
.stabn 68,0,209,.L_488B-_LS_SPLITTOKENS@20
.L_488C:
	mov ecx, dword ptr [ebp-24]
	mov dword ptr [ecx+4], 1
	inc dword ptr [ebp-8]
.stabn 68,0,210,.L_488C-_LS_SPLITTOKENS@20
.L_488D:
.L_4854:
	jmp .L_4851
.L_4852:
.L_4855:
.stabn 68,0,211,.L_488D-_LS_SPLITTOKENS@20
.L_488E:
	mov ecx, dword ptr [ebp-24]
	mov dword ptr [ecx+4], 0
.stabn 68,0,212,.L_488E-_LS_SPLITTOKENS@20
.L_488F:
.L_4856:
	mov ecx, dword ptr [ebp-24]
	mov ebx, dword ptr [ebp-24]
	mov eax, dword ptr [ecx]
	add eax, dword ptr [ebx+4]
	movzx ebx, byte ptr [eax]
	movsx eax, byte ptr [_G_BSEPARATORS+ebx]
	test eax, eax
	jne .L_4857
.L_4858:
.stabn 68,0,213,.L_488F-_LS_SPLITTOKENS@20
.L_4890:
	mov eax, dword ptr [ebp-16]
	cmp dword ptr [ebp-8], eax
	jl .L_485A
.L_485B:
	jmp .L_4857
.L_485A:
.L_485C:
.stabn 68,0,214,.L_4890-_LS_SPLITTOKENS@20
.L_4891:
	mov eax, dword ptr [ebp-24]
	inc dword ptr [eax+4]
	inc dword ptr [ebp-8]
.stabn 68,0,215,.L_4891-_LS_SPLITTOKENS@20
.L_4892:
.L_485D:
	jmp .L_4856
.L_4857:
.stabn 68,0,216,.L_4892-_LS_SPLITTOKENS@20
.L_4893:
.L_485E:
.L_4851:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax+8]
	and ebx, 4292870144
	mov eax, dword ptr [ebp+20]
	mov ecx, dword ptr [eax]
	and ecx, 2097151
	or ebx, ecx
	mov ecx, dword ptr [ebp-24]
	mov dword ptr [ecx+8], ebx
.stabn 68,0,218,.L_4893-_LS_SPLITTOKENS@20
.L_4894:
	mov ebx, dword ptr [ebp-24]
	cmp dword ptr [ebx+4], 0
	ja .L_4860
.L_4861:
	jmp .L_480C
.L_4860:
.L_4862:
.stabn 68,0,219,.L_4894-_LS_SPLITTOKENS@20
.L_4895:
	inc dword ptr [ebp-12]
.stabn 68,0,220,.L_4895-_LS_SPLITTOKENS@20
.L_4896:
.L_4863:
.L_4864:
.L_480D:
	jmp .L_480B
.L_480C:
.stabn 68,0,222,.L_4896-_LS_SPLITTOKENS@20
.L_4897:
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,223,.L_4897-_LS_SPLITTOKENS@20
.L_4898:
.L_4806:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,224,.L_4806-_LS_SPLITTOKENS@20
	.stabs "ITOKSTART:1",128,0,0,-8
	.stabs "ITOKCNT:1",128,0,0,-12
	.stabs "ITOKEND:1",128,0,0,-16
	.stabs "PZSTATEMENT:245=*3",128,0,0,-20
	.stabn 192,0,0,.L_4805-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4809-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_480A-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_480E-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4811-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4812-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4813-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4817-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_481A-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_481B-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_481C-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4821-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4822-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4825-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4828-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4829-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_482A-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_482D-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4830-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4837-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4838-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4839-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_483C-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4841-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4846-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4847-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4848-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4849-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_484A-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_484B-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_484E-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_484F-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4850-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4853-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4854-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4855-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4858-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_485B-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_485C-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_485D-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_485E-_LS_SPLITTOKENS@20
	.stabn 192,0,0,.L_4861-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4862-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4863-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4864-_LS_SPLITTOKENS@20
	.stabn 224,0,0,.L_4806-_LS_SPLITTOKENS@20
.L_4899:
	.stabs "",36,0,0,.L_4899-_LS_SPLITTOKENS@20
	.stabs "LEGOSCRIPTTOLDRAW:F13",36,0,226,_LEGOSCRIPTTOLDRAW@8
	.stabs "_SSCRIPT:v13",160,0,0,8
	.stabs "SOUTPUT:v13",160,0,0,12
.balign 16

.globl _LEGOSCRIPTTOLDRAW@8
_LEGOSCRIPTTOLDRAW@8:
	push ebp
	mov ebp, esp
	sub esp, 828
	push ebx
	.stabn 68,0,226,_LEGOSCRIPTTOLDRAW@8-_LEGOSCRIPTTOLDRAW@8
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_489A:
.L_4D2E:
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-216]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 48
	rep stosd
	pop edi
	pop eax
	lea eax, [ebp-216]
	mov dword ptr [ebp-252], eax
	lea eax, [ebp-216]
	mov dword ptr [ebp-248], eax
	mov dword ptr [ebp-244], 192
	mov dword ptr [ebp-240], 12
	mov dword ptr [ebp-236], 1
	mov dword ptr [ebp-232], 49
	mov dword ptr [ebp-228], 16
	mov dword ptr [ebp-224], 0
	mov dword ptr [ebp-220], 15
	mov dword ptr [ebp-264], 0
	mov dword ptr [ebp-260], 0
	mov dword ptr [ebp-256], 0
.stabn 68,0,238,.L_4D2E-_LEGOSCRIPTTOLDRAW@8
.L_4D2F:
	mov dword ptr [ebp-268], 1
	mov dword ptr [ebp-272], 1
	mov dword ptr [ebp-276], 0
	mov dword ptr [ebp-280], 1
.stabn 68,0,239,.L_4D2F-_LEGOSCRIPTTOLDRAW@8
.L_4D30:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	mov dword ptr [_G_IPARTCOUNT], 1
	mov dword ptr [_G_ICONNCOUNT], 0
.stabn 68,0,240,.L_4D30-_LEGOSCRIPTTOLDRAW@8
.L_4D31:
	mov dword ptr [ebp-316], 0
	mov dword ptr [ebp-312], 0
	mov dword ptr [ebp-308], 0
	mov dword ptr [ebp-304], 20
	mov dword ptr [ebp-300], 1
	mov dword ptr [ebp-296], 17
	mov dword ptr [ebp-292], 0
	mov dword ptr [ebp-288], 0
	mov dword ptr [ebp-284], 0
	push 8
	push 1
	push 1
	push 0
	push -1
	push 20
	lea eax, [ebp-316]
	push eax
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,246,.L_4D31-_LEGOSCRIPTTOLDRAW@8
.L_4D32:
	mov dword ptr [ebp-352], 0
	mov dword ptr [ebp-348], 0
	mov dword ptr [ebp-344], 0
	mov dword ptr [ebp-340], 4
	mov dword ptr [ebp-336], 1
	mov dword ptr [ebp-332], 17
	mov dword ptr [ebp-328], 0
	mov dword ptr [ebp-324], 0
	mov dword ptr [ebp-320], 0
	push 15
	push 0
	push 1
	push 0
	push -1
	push 4
	lea eax, [ebp-352]
	push eax
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,247,.L_4D32-_LEGOSCRIPTTOLDRAW@8
.L_4D33:
	mov eax, dword ptr [ebp-276]
	sal eax, 2
	add eax, dword ptr [ebp-352]
	mov ebx, dword ptr [ebp-272]
	mov dword ptr [eax], ebx
.stabn 68,0,249,.L_4D33-_LEGOSCRIPTTOLDRAW@8
.L_4D34:
	push 0
	push 9
	push offset _Lt_489D
	push -1
	lea ebx, [ebp-364]
	push ebx
	call _fb_StrInit@20
	push 0
	push 10
	push offset _Lt_489E
	push -1
	lea ebx, [ebp-376]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,250,.L_4D34-_LEGOSCRIPTTOLDRAW@8
.L_4D35:
.L_489F:
	mov ebx, dword ptr [ebp-272]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	lea eax, [ebx]
	mov dword ptr [ebp-380], eax
.stabn 68,0,251,.L_4D35-_LEGOSCRIPTTOLDRAW@8
.L_4D36:
	lea eax, [ebp-364]
	mov ebx, dword ptr [ebp-380]
	mov dword ptr [ebx], eax
.stabn 68,0,252,.L_4D36-_LEGOSCRIPTTOLDRAW@8
.L_4D37:
	lea eax, [ebp-376]
	mov ebx, dword ptr [ebp-380]
	mov dword ptr [ebx+4], eax
.stabn 68,0,253,.L_4D37-_LEGOSCRIPTTOLDRAW@8
.L_4D38:
	mov eax, dword ptr [ebp-380]
	mov ebx, dword ptr [ebp+8]
	mov dword ptr [eax+8], ebx
.stabn 68,0,254,.L_4D38-_LEGOSCRIPTTOLDRAW@8
.L_4D39:
	mov ebx, dword ptr [ebp-380]
	mov dword ptr [ebx+16], 1
.stabn 68,0,255,.L_4D39-_LEGOSCRIPTTOLDRAW@8
.L_4D3A:
	mov ebx, dword ptr [ebp-380]
	mov dword ptr [ebx+12], 1
.stabn 68,0,256,.L_4D3A-_LEGOSCRIPTTOLDRAW@8
.L_4D3B:
.L_48A1:
.L_48A2:
	mov ebx, dword ptr [_G_TPART]
	lea eax, [ebx]
	mov dword ptr [ebp-380], eax
.stabn 68,0,275,.L_4D3B-_LEGOSCRIPTTOLDRAW@8
.L_4D3C:
	mov eax, dword ptr [ebp-380]
	lea ebx, [eax+28]
	push edi
	push esi
	mov edi, ebx
	mov esi, offset _G_TIDENTITYMATRIX
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
.stabn 68,0,276,.L_4D3C-_LEGOSCRIPTTOLDRAW@8
.L_4D3D:
	mov ebx, dword ptr [ebp-380]
	movsx eax, byte ptr [ebx+125]
	and eax, 4294967293
	or eax, 2
	mov ebx, dword ptr [ebp-380]
	mov byte ptr [ebx+125], al
.stabn 68,0,277,.L_4D3D-_LEGOSCRIPTTOLDRAW@8
.L_4D3E:
.L_48A4:
.L_48A5:
.L_48A7:
	mov eax, dword ptr [ebp-272]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	lea ebx, [eax+12]
	push ebx
	lea ebx, [ebp-24]
	push ebx
	mov ebx, dword ptr [ebp-272]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx+16]
	mov ebx, dword ptr [ebp-272]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx+8]
	call _LS_GETNEXTSTATEMENT@16
	mov dword ptr [ebp-380], eax
.stabn 68,0,288,.L_4D3E-_LEGOSCRIPTTOLDRAW@8
.L_4D3F:
	cmp dword ptr [ebp-380], 0
	jne .L_48A9
.L_48AA:
	cmp dword ptr [ebp-276], 0
	je .L_48AC
.L_48AD:
	dec dword ptr [ebp-276]
	mov eax, dword ptr [ebp-276]
	sal eax, 2
	add eax, dword ptr [ebp-352]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-272], ebx
	jmp .L_48A5
.L_48AE:
	jmp .L_48AB
.L_48AC:
.L_48AF:
	jmp .L_48A6
.L_48AB:
.L_48B0:
.L_48A9:
.L_48B1:
.stabn 68,0,289,.L_4D3F-_LEGOSCRIPTTOLDRAW@8
.L_4D40:
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrLen@8
	test eax, eax
	jne .L_48B3
.L_48B4:
	mov eax, dword ptr [ebp-380]
	inc eax
	mov ebx, dword ptr [ebp-272]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	mov dword ptr [ebx+16], eax
	jmp .L_48A5
.L_48B3:
.L_48B5:
.stabn 68,0,290,.L_4D40-_LEGOSCRIPTTOLDRAW@8
.L_4D41:
	mov dword ptr [ebp-384], 0
.stabn 68,0,295,.L_4D41-_LEGOSCRIPTTOLDRAW@8
.L_4D42:
	lea eax, [ebp-384]
	push eax
	mov eax, dword ptr [ebp-272]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	lea ebx, [eax+12]
	push ebx
	push dword ptr [ebp-272]
	lea ebx, [ebp-252]
	push ebx
	lea ebx, [ebp-24]
	push ebx
	call _LS_SPLITTOKENS@20
	mov dword ptr [ebp-388], eax
.stabn 68,0,296,.L_4D42-_LEGOSCRIPTTOLDRAW@8
.L_4D43:
	cmp dword ptr [ebp-388], 15
	jle .L_48B7
.L_48B8:
.stabn 68,0,297,.L_4D43-_LEGOSCRIPTTOLDRAW@8
.L_4D44:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-384]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-384]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-420], 0
	mov dword ptr [ebp-416], 0
	mov dword ptr [ebp-412], 0
	push 0
	push 16
	push offset _Lt_48BA
	push -1
	lea ebx, [ebp-420]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-420]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-432], 0
	mov dword ptr [ebp-428], 0
	mov dword ptr [ebp-424], 0
	lea eax, [ebp-432]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-444], 0
	mov dword ptr [ebp-440], 0
	mov dword ptr [ebp-436], 0
	lea eax, [ebp-444]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	mov dword ptr [ebp-448], 0
	lea eax, [ebp-456]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	mov dword ptr [ebp-460], 0
	lea eax, [ebp-468]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	lea eax, [ebp-480]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-420]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.stabn 68,0,299,.L_4D44-_LEGOSCRIPTTOLDRAW@8
.L_4D45:
.L_48C9:
.L_48B7:
.L_48B6:
	mov eax, dword ptr [ebp-380]
	inc eax
	mov ebx, dword ptr [ebp-272]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	mov dword ptr [ebx+16], eax
.stabn 68,0,302,.L_4D45-_LEGOSCRIPTTOLDRAW@8
.L_4D46:
	cmp dword ptr [ebp-388], 0
	jne .L_48CB
.L_48CC:
	cmp dword ptr [ebp-380], 0
	jne .L_48CE
.L_48CF:
	cmp dword ptr [ebp-276], 0
	je .L_48D1
.L_48D2:
	dec dword ptr [ebp-276]
	mov eax, dword ptr [ebp-276]
	sal eax, 2
	add eax, dword ptr [ebp-352]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-272], ebx
	jmp .L_48A5
.L_48D3:
	jmp .L_48D0
.L_48D1:
.L_48D4:
	jmp .L_48A6
.L_48D0:
.L_48D5:
.L_48D6:
	jmp .L_48CD
.L_48CE:
.L_48D7:
	jmp .L_48A5
.L_48CD:
.L_48D8:
.L_48CB:
.L_48D9:
.stabn 68,0,303,.L_4D46-_LEGOSCRIPTTOLDRAW@8
.L_4D47:
	mov ebx, dword ptr [ebp-24]
	movzx eax, byte ptr [ebx]
	cmp eax, 35
	jne .L_48DB
.L_48DC:
.stabn 68,0,306,.L_4D47-_LEGOSCRIPTTOLDRAW@8
.L_4D48:
	mov dword ptr [ebp-412], 0
.stabn 68,0,307,.L_4D48-_LEGOSCRIPTTOLDRAW@8
.L_4D49:
.L_48DD:
	push 0
	push -1
	push 0
	lea eax, [ebp-216]
	push eax
	call _fb_StrLcase2@8
	push eax
	push -1
	lea eax, [ebp-424]
	push eax
	call _fb_StrInit@20
.stabn 68,0,308,.L_4D49-_LEGOSCRIPTTOLDRAW@8
.L_4D4A:
	push 9
	push offset _Lt_48E1
	push -1
	lea eax, [ebp-424]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_48E0
.L_48E2:
.L_48E3:
.stabn 68,0,309,.L_4D4A-_LEGOSCRIPTTOLDRAW@8
.L_4D4B:
	cmp dword ptr [ebp-388], 2
	jge .L_48E5
.L_48E6:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push 35
	push offset _Lt_48E7
	push -1
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-476]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_48E5:
.L_48F2:
.stabn 68,0,310,.L_4D4B-_LEGOSCRIPTTOLDRAW@8
.L_4D4C:
	cmp dword ptr [ebp-388], 2
	jle .L_48F4
.L_48F5:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-192]
	push ebx
	push 27
	push offset _Lt_48F6
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-500]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-500]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	lea eax, [ebp-596]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	mov dword ptr [ebp-600], 0
	lea eax, [ebp-608]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-500]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_48F4:
.L_4903:
.stabn 68,0,311,.L_4D4C-_LEGOSCRIPTTOLDRAW@8
.L_4D4D:
	push -1
	lea eax, [ebp-204]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-428], eax
	mov dword ptr [ebp-412], 1
.stabn 68,0,312,.L_4D4D-_LEGOSCRIPTTOLDRAW@8
.L_4D4E:
	mov eax, dword ptr [ebp-204]
	movzx ebx, byte ptr [eax]
	cmp ebx, 34
	je .L_4905
	mov ebx, dword ptr [ebp-204]
	movzx eax, byte ptr [ebx]
	cmp eax, 39
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-432], ebx
	jmp .L_4D20
.L_4905:
	mov dword ptr [ebp-432], 0
.L_4D20:
	cmp dword ptr [ebp-432], 0
	je .L_4908
.L_4909:
.stabn 68,0,313,.L_4D4E-_LEGOSCRIPTTOLDRAW@8
.L_4D50:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push 33
	push offset _Lt_490A
	push -1
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-476]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,314,.L_4D50-_LEGOSCRIPTTOLDRAW@8
.L_4D51:
.L_4915:
.L_4908:
.L_4907:
	cmp dword ptr [ebp-428], 2
	jl .L_4916
	mov eax, dword ptr [ebp-204]
	add eax, dword ptr [ebp-428]
	movzx ebx, byte ptr [eax-1]
	mov eax, dword ptr [ebp-204]
	movzx ecx, byte ptr [eax]
	cmp ebx, ecx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-436], ebx
	jmp .L_4D21
.L_4916:
	mov dword ptr [ebp-436], -1
.L_4D21:
	cmp dword ptr [ebp-436], 0
	je .L_4919
.L_491A:
.stabn 68,0,316,.L_4D51-_LEGOSCRIPTTOLDRAW@8
.L_4D53:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push 25
	push offset _Lt_491B
	push -1
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-476]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,317,.L_4D53-_LEGOSCRIPTTOLDRAW@8
.L_4D54:
.L_4926:
.L_4919:
.L_4918:
	push 0
	push -1
	mov eax, dword ptr [ebp-428]
	add eax, -2
	push eax
	push 2
	lea eax, [ebp-204]
	push eax
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-448]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-448]
	push eax
	call _SCANONICALIZEFILEPATH@4
.stabn 68,0,319,.L_4D54-_LEGOSCRIPTTOLDRAW@8
.L_4D55:
	push 0
	push -1
	push 0
	lea eax, [ebp-448]
	push eax
	call _fb_StrLcase2@8
	push eax
	push -1
	lea eax, [ebp-460]
	push eax
	call _fb_StrInit@20
	mov dword ptr [ebp-464], 0
.stabn 68,0,320,.L_4D55-_LEGOSCRIPTTOLDRAW@8
.L_4D56:
.L_4927:
	mov dword ptr [ebp-468], 1
	mov eax, dword ptr [ebp-280]
	mov dword ptr [ebp-472], eax
	jmp .L_4929
.L_492C:
.L_492D:
.stabn 68,0,321,.L_4D56-_LEGOSCRIPTTOLDRAW@8
.L_4D57:
	mov eax, dword ptr [ebp-468]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	cmp dword ptr [eax+4], 0
	jne .L_492F
.L_4930:
	jmp .L_492B
.L_492F:
.L_4931:
.stabn 68,0,322,.L_4D57-_LEGOSCRIPTTOLDRAW@8
.L_4D58:
	push -1
	lea eax, [ebp-460]
	push eax
	push -1
	mov eax, dword ptr [ebp-468]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	push dword ptr [eax+4]
	call _fb_StrCompare@16
	test eax, eax
	jne .L_4933
.L_4934:
	mov eax, dword ptr [ebp-468]
	mov dword ptr [ebp-464], eax
.L_4933:
.L_4935:
.stabn 68,0,323,.L_4D58-_LEGOSCRIPTTOLDRAW@8
.L_4D59:
.L_4936:
	mov dword ptr [ebp-476], 0
	mov eax, dword ptr [ebp-276]
	mov dword ptr [ebp-480], eax
	jmp .L_4938
.L_493B:
.L_493C:
.stabn 68,0,324,.L_4D59-_LEGOSCRIPTTOLDRAW@8
.L_4D5A:
	push -1
	lea eax, [ebp-460]
	push eax
	push -1
	mov eax, dword ptr [ebp-476]
	sal eax, 2
	add eax, dword ptr [ebp-352]
	mov ebx, dword ptr [eax]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx+4]
	call _fb_StrCompare@16
	test eax, eax
	jne .L_493E
.L_493F:
.stabn 68,0,325,.L_4D5A-_LEGOSCRIPTTOLDRAW@8
.L_4D5B:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	push 0
	push 19
	push offset _Lt_4940
	push -1
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-492]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-492]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-448]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,326,.L_4D5B-_LEGOSCRIPTTOLDRAW@8
.L_4D5C:
.L_494B:
.L_493E:
.L_493D:
.L_494C:
.L_4939:
	inc dword ptr [ebp-476]
.L_4938:
	mov eax, dword ptr [ebp-480]
	cmp dword ptr [ebp-476], eax
	jle .L_493B
.L_493A:
.L_494D:
.stabn 68,0,328,.L_4D5C-_LEGOSCRIPTTOLDRAW@8
.L_4D5D:
.L_494E:
.L_492A:
	inc dword ptr [ebp-468]
.L_4929:
	mov eax, dword ptr [ebp-472]
	cmp dword ptr [ebp-468], eax
	jle .L_492C
.L_492B:
.L_494F:
.stabn 68,0,329,.L_4D5D-_LEGOSCRIPTTOLDRAW@8
.L_4D5E:
	cmp dword ptr [ebp-464], 0
	jne .L_4951
.L_4952:
.stabn 68,0,330,.L_4D5E-_LEGOSCRIPTTOLDRAW@8
.L_4D5F:
	push 12
	call _malloc
	add esp, 4
	mov dword ptr [ebp-468], eax
	cmp dword ptr [ebp-468], 0
	je .L_4954
	mov eax, dword ptr [ebp-468]
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
.L_4954:
	mov eax, dword ptr [ebp-468]
	mov dword ptr [ebp-472], eax
.stabn 68,0,331,.L_4D5F-_LEGOSCRIPTTOLDRAW@8
.L_4D60:
	push dword ptr [ebp-472]
	lea eax, [ebp-448]
	push eax
	call _LOADSCRIPTFILE@8
	test al, al
	jne .L_4956
.L_4957:
.stabn 68,0,332,.L_4D60-_LEGOSCRIPTTOLDRAW@8
.L_4D61:
	push offset _Lt_4958
	call _puts
	add esp, 4
.stabn 68,0,333,.L_4D61-_LEGOSCRIPTTOLDRAW@8
.L_4D62:
	cmp dword ptr [ebp-472], 0
	je .L_4959
	push dword ptr [ebp-472]
	call _fb_StrDelete@4
	push dword ptr [ebp-472]
	call _free
	add esp, 4
.L_4959:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 15
	push offset _Lt_495A
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-448]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,334,.L_4D62-_LEGOSCRIPTTOLDRAW@8
.L_4D63:
.L_4965:
.L_4956:
.L_4955:
	inc dword ptr [ebp-280]
.stabn 68,0,336,.L_4D63-_LEGOSCRIPTTOLDRAW@8
.L_4D64:
.L_4966:
	mov eax, dword ptr [ebp-280]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	lea ebx, [eax]
	mov dword ptr [ebp-476], ebx
.stabn 68,0,337,.L_4D64-_LEGOSCRIPTTOLDRAW@8
.L_4D65:
	push 12
	call _malloc
	add esp, 4
	mov dword ptr [ebp-480], eax
	cmp dword ptr [ebp-480], 0
	je .L_4969
	push 0
	push -1
	lea eax, [ebp-448]
	push eax
	push -1
	push dword ptr [ebp-480]
	call _fb_StrInit@20
.L_4969:
	mov eax, dword ptr [ebp-476]
	mov ebx, dword ptr [ebp-480]
	mov dword ptr [eax], ebx
.stabn 68,0,338,.L_4D65-_LEGOSCRIPTTOLDRAW@8
.L_4D66:
	push 12
	call _malloc
	add esp, 4
	mov dword ptr [ebp-484], eax
	cmp dword ptr [ebp-484], 0
	je .L_496B
	push 0
	push -1
	lea eax, [ebp-460]
	push eax
	push -1
	push dword ptr [ebp-484]
	call _fb_StrInit@20
.L_496B:
	mov eax, dword ptr [ebp-476]
	mov ebx, dword ptr [ebp-484]
	mov dword ptr [eax+4], ebx
.stabn 68,0,339,.L_4D66-_LEGOSCRIPTTOLDRAW@8
.L_4D67:
	mov ebx, dword ptr [ebp-476]
	mov eax, dword ptr [ebp-472]
	mov dword ptr [ebx+8], eax
.stabn 68,0,340,.L_4D67-_LEGOSCRIPTTOLDRAW@8
.L_4D68:
.L_496C:
	mov eax, dword ptr [ebp-280]
	mov dword ptr [ebp-464], eax
.stabn 68,0,342,.L_4D68-_LEGOSCRIPTTOLDRAW@8
.L_4D69:
.L_496D:
.L_4951:
.L_4950:
.L_496E:
	mov eax, dword ptr [ebp-464]
	imul eax, 20
	add eax, dword ptr [ebp-316]
	lea ebx, [eax]
	mov dword ptr [ebp-468], ebx
.stabn 68,0,344,.L_4D69-_LEGOSCRIPTTOLDRAW@8
.L_4D6A:
	mov ebx, dword ptr [ebp-468]
	mov dword ptr [ebx+16], 1
.stabn 68,0,345,.L_4D6A-_LEGOSCRIPTTOLDRAW@8
.L_4D6B:
	mov ebx, dword ptr [ebp-468]
	mov dword ptr [ebx+12], 1
.stabn 68,0,346,.L_4D6B-_LEGOSCRIPTTOLDRAW@8
.L_4D6C:
.L_4970:
	inc dword ptr [ebp-276]
	mov ebx, dword ptr [ebp-464]
	mov dword ptr [ebp-272], ebx
.stabn 68,0,348,.L_4D6C-_LEGOSCRIPTTOLDRAW@8
.L_4D6D:
	mov ebx, dword ptr [ebp-276]
	sal ebx, 2
	add ebx, dword ptr [ebp-352]
	mov eax, dword ptr [ebp-464]
	mov dword ptr [ebx], eax
.stabn 68,0,349,.L_4D6D-_LEGOSCRIPTTOLDRAW@8
.L_4D6E:
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-448]
	push eax
	call _fb_StrDelete@4
.L_4971:
	jmp .L_48DE
.L_48E0:
	push 8
	push offset _Lt_4973
	push -1
	lea eax, [ebp-424]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_4972
.L_4974:
.L_4975:
.stabn 68,0,350,.L_4D6E-_LEGOSCRIPTTOLDRAW@8
.L_4D6F:
.L_4976:
	jmp .L_48DE
.L_4972:
.L_4978:
.stabn 68,0,352,.L_4D6F-_LEGOSCRIPTTOLDRAW@8
.L_4D70:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-436], 0
	mov dword ptr [ebp-432], 0
	mov dword ptr [ebp-428], 0
	push 0
	push 32
	push offset _Lt_4979
	push -1
	lea ebx, [ebp-436]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-436]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	mov dword ptr [ebp-440], 0
	lea eax, [ebp-448]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-436]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,353,.L_4D70-_LEGOSCRIPTTOLDRAW@8
.L_4D71:
.L_4984:
.L_4977:
.L_48DE:
	lea eax, [ebp-424]
	push eax
	call _fb_StrDelete@4
.L_4985:
.stabn 68,0,354,.L_4D71-_LEGOSCRIPTTOLDRAW@8
.L_4D72:
	jmp .L_48A5
.stabn 68,0,355,.L_4D72-_LEGOSCRIPTTOLDRAW@8
.L_4D73:
.L_4986:
.L_48DB:
.L_48DA:
.L_4987:
	mov dword ptr [ebp-412], 0
	mov eax, dword ptr [ebp-388]
	dec eax
	mov dword ptr [ebp-416], eax
	jmp .L_4989
.L_498C:
.L_498D:
.stabn 68,0,359,.L_4D73-_LEGOSCRIPTTOLDRAW@8
.L_4D74:
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	cmp dword ptr [ebp-268], eax
	je .L_498F
.L_4990:
.stabn 68,0,360,.L_4D74-_LEGOSCRIPTTOLDRAW@8
.L_4D75:
	mov eax, dword ptr [ebp-412]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	mov ebx, eax
	mov dword ptr [ebp-268], ebx
.stabn 68,0,364,.L_4D75-_LEGOSCRIPTTOLDRAW@8
.L_4D76:
.L_4991:
.L_498F:
.L_498E:
.L_4992:
.L_498A:
	inc dword ptr [ebp-412]
.L_4989:
	mov ebx, dword ptr [ebp-416]
	cmp dword ptr [ebp-412], ebx
	jle .L_498C
.L_498B:
.L_4993:
.stabn 68,0,369,.L_4D76-_LEGOSCRIPTTOLDRAW@8
.L_4D77:
	mov dword ptr [ebp-392], 0
.stabn 68,0,375,.L_4D77-_LEGOSCRIPTTOLDRAW@8
.L_4D78:
	mov dword ptr [ebp-408], 0
	mov dword ptr [ebp-404], 0
	mov dword ptr [ebp-400], 0
	mov dword ptr [ebp-396], 0
.stabn 68,0,376,.L_4D78-_LEGOSCRIPTTOLDRAW@8
.L_4D79:
	mov dword ptr [ebp-408], -999
	mov dword ptr [ebp-404], -999
.stabn 68,0,377,.L_4D79-_LEGOSCRIPTTOLDRAW@8
.L_4D7A:
.L_4994:
.L_4997:
	mov dword ptr [ebp-412], -999
	mov byte ptr [ebp-416], 0
.stabn 68,0,384,.L_4D7A-_LEGOSCRIPTTOLDRAW@8
.L_4D7B:
	mov ebx, dword ptr [ebp-392]
	imul ebx, 12
	lea eax, [ebp+ebx-216]
	push eax
	call _ISPRIMATIVE@4
	test eax, eax
	je .L_4999
.L_499A:
.stabn 68,0,386,.L_4D7B-_LEGOSCRIPTTOLDRAW@8
.L_4D7C:
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-204]
	push ebx
	call _fb_StrLen@8
	test eax, eax
	je .L_499B
	mov eax, dword ptr [ebp-392]
	cmp eax, dword ptr [ebp-388]
	setge al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-444], eax
	jmp .L_4D22
.L_499B:
	mov dword ptr [ebp-444], -1
.L_4D22:
	cmp dword ptr [ebp-444], 0
	je .L_499E
.L_499F:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	push 0
	push 41
	push offset _Lt_49A0
	push -1
	lea ebx, [ebp-460]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-460]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_499E:
.L_49AB:
.stabn 68,0,389,.L_4D7C-_LEGOSCRIPTTOLDRAW@8
.L_4D7E:
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-204]
	push ebx
	call _ISVALIDPARTNAME@4
	test eax, eax
	jne .L_49AD
.L_49AE:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push -1
	push 27
	push offset _Lt_49AF
	push -1
	push -1
	mov ebx, dword ptr [ebp-392]
	imul ebx, 12
	lea eax, [ebp+ebx-204]
	push eax
	push 2
	push offset _Lt_2653
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-484]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_49AD:
.L_49BC:
.stabn 68,0,390,.L_4D7E-_LEGOSCRIPTTOLDRAW@8
.L_4D7F:
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-204]
	push ebx
	call _FINDPARTNAME@4
	mov dword ptr [ebp-412], eax
.stabn 68,0,391,.L_4D7F-_LEGOSCRIPTTOLDRAW@8
.L_4D80:
	cmp dword ptr [ebp-412], 0
	jl .L_49BE
.L_49BF:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	push 0
	push 20
	push offset _Lt_49C0
	push -1
	lea ebx, [ebp-460]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-460]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_49BE:
.L_49CB:
.stabn 68,0,392,.L_4D80-_LEGOSCRIPTTOLDRAW@8
.L_4D81:
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	push ebx
	mov ebx, dword ptr [ebp-392]
	imul ebx, 12
	lea eax, [ebp+ebx-204]
	push eax
	call _ADDPARTNAME@8
	mov dword ptr [ebp-412], eax
.stabn 68,0,393,.L_4D81-_LEGOSCRIPTTOLDRAW@8
.L_4D82:
	cmp dword ptr [ebp-412], 0
	jl .L_49CC
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	movsx ebx, byte ptr [eax+125]
	and ebx, 1
	test ebx, ebx
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-448], eax
	jmp .L_4D23
.L_49CC:
	mov dword ptr [ebp-448], 0
.L_4D23:
	cmp dword ptr [ebp-448], 0
	je .L_49CF
.L_49D0:
.stabn 68,0,394,.L_4D82-_LEGOSCRIPTTOLDRAW@8
.L_4D84:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push -1
	push 22
	push offset _Lt_49D1
	push -1
	push -1
	mov ebx, dword ptr [ebp-392]
	imul ebx, 12
	lea eax, [ebp+ebx-216]
	push eax
	push 2
	push offset _Lt_2653
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-484]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.stabn 68,0,395,.L_4D84-_LEGOSCRIPTTOLDRAW@8
.L_4D85:
	jmp .L_4995
.stabn 68,0,397,.L_4D85-_LEGOSCRIPTTOLDRAW@8
.L_4D86:
.L_49DE:
.L_49CF:
.L_49CE:
	add dword ptr [ebp-392], 2
.stabn 68,0,399,.L_4D86-_LEGOSCRIPTTOLDRAW@8
.L_4D87:
.L_49DF:
	jmp .L_4998
.L_4999:
.L_49E0:
.stabn 68,0,400,.L_4D87-_LEGOSCRIPTTOLDRAW@8
.L_4D88:
	push 5
	push offset _Lt_49E1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	push ebx
	call _fb_StrCompare@16
	test eax, eax
	jne .L_49E3
.L_49E4:
.stabn 68,0,402,.L_4D88-_LEGOSCRIPTTOLDRAW@8
.L_4D89:
	mov dword ptr [ebp-412], 0
.stabn 68,0,403,.L_4D89-_LEGOSCRIPTTOLDRAW@8
.L_4D8A:
.L_49E5:
	jmp .L_49E2
.L_49E3:
.L_49E6:
.stabn 68,0,404,.L_4D8A-_LEGOSCRIPTTOLDRAW@8
.L_4D8B:
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	push ebx
	call _ISVALIDPARTNAME@4
	test eax, eax
	jne .L_49E8
.L_49E9:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push -1
	push 40
	push offset _Lt_49EA
	push -1
	push -1
	mov ebx, dword ptr [ebp-392]
	imul ebx, 12
	lea eax, [ebp+ebx-216]
	push eax
	push 2
	push offset _Lt_2653
	mov dword ptr [ebp-452], 0
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	lea eax, [ebp-452]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-464], 0
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	lea eax, [ebp-464]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-476]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_49E8:
.L_49F7:
.stabn 68,0,405,.L_4D8B-_LEGOSCRIPTTOLDRAW@8
.L_4D8C:
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	push ebx
	call _FINDPARTNAME@4
	mov dword ptr [ebp-412], eax
.stabn 68,0,406,.L_4D8C-_LEGOSCRIPTTOLDRAW@8
.L_4D8D:
	cmp dword ptr [ebp-412], 0
	jge .L_49F9
.L_49FA:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-452], 0
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	push 0
	push 23
	push offset _Lt_49FB
	push -1
	lea ebx, [ebp-452]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-452]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-464], 0
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	lea eax, [ebp-464]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	lea eax, [ebp-476]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-452]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_49F9:
.L_4A06:
.stabn 68,0,407,.L_4D8D-_LEGOSCRIPTTOLDRAW@8
.L_4D8E:
.L_4A07:
.L_49E2:
	inc dword ptr [ebp-392]
	mov byte ptr [ebp-416], 1
.stabn 68,0,409,.L_4D8E-_LEGOSCRIPTTOLDRAW@8
.L_4D8F:
.L_4A08:
.L_4998:
	mov eax, dword ptr [ebp-388]
	cmp dword ptr [ebp-392], eax
	jne .L_4A0A
.L_4A0B:
.stabn 68,0,414,.L_4D8F-_LEGOSCRIPTTOLDRAW@8
.L_4D90:
	cmp dword ptr [ebp-408], 0
	jge .L_4A0D
.L_4A0E:
	jmp .L_4995
.L_4A0D:
.L_4A0F:
.stabn 68,0,415,.L_4D90-_LEGOSCRIPTTOLDRAW@8
.L_4D91:
	cmp dword ptr [ebp-412], 0
	je .L_4A11
.L_4A12:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-452], 0
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	push 0
	push 35
	push offset _Lt_4A13
	push -1
	lea ebx, [ebp-452]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-452]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-464], 0
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	lea eax, [ebp-464]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	lea eax, [ebp-476]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-452]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4A11:
.L_4A1E:
.stabn 68,0,416,.L_4D91-_LEGOSCRIPTTOLDRAW@8
.L_4D92:
.L_4A1F:
.L_4A0A:
.L_4A09:
	cmp dword ptr [ebp-408], 0
	jge .L_4A21
.L_4A22:
	mov eax, dword ptr [ebp-412]
	mov dword ptr [ebp-408], eax
.L_4A23:
	jmp .L_4A20
.L_4A21:
.L_4A24:
	mov eax, dword ptr [ebp-412]
	mov dword ptr [ebp-404], eax
.L_4A20:
.L_4A25:
.stabn 68,0,422,.L_4D92-_LEGOSCRIPTTOLDRAW@8
.L_4D93:
	mov eax, dword ptr [ebp-404]
	cmp dword ptr [ebp-408], eax
	jne .L_4A27
.L_4A28:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-452], 0
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	push 0
	push 31
	push offset _Lt_4A29
	push -1
	lea ebx, [ebp-452]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-452]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-464], 0
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	lea eax, [ebp-464]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	lea eax, [ebp-476]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-452]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4A27:
.L_4A34:
.stabn 68,0,423,.L_4D93-_LEGOSCRIPTTOLDRAW@8
.L_4D94:
	mov byte ptr [ebp-420], 0
	mov byte ptr [ebp-424], 0
	mov byte ptr [ebp-428], 0
.stabn 68,0,426,.L_4D94-_LEGOSCRIPTTOLDRAW@8
.L_4D95:
	mov byte ptr [ebp-432], 0
	mov byte ptr [ebp-436], 0
	mov byte ptr [ebp-440], 0
.stabn 68,0,427,.L_4D95-_LEGOSCRIPTTOLDRAW@8
.L_4D96:
.L_4A35:
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax]
	mov dword ptr [ebp-444], ebx
.stabn 68,0,430,.L_4D96-_LEGOSCRIPTTOLDRAW@8
.L_4D97:
	mov byte ptr [ebp-448], 0
.stabn 68,0,431,.L_4D97-_LEGOSCRIPTTOLDRAW@8
.L_4D98:
.L_4A37:
.L_4A3A:
	mov ebx, dword ptr [ebp-388]
	cmp dword ptr [ebp-392], ebx
	jne .L_4A3C
.L_4A3D:
.stabn 68,0,433,.L_4D98-_LEGOSCRIPTTOLDRAW@8
.L_4D99:
	cmp dword ptr [ebp-408], 0
	jge .L_4A3F
.L_4A40:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push 27
	push offset _Lt_4A41
	push -1
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-476]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4A3F:
.L_4A4C:
.stabn 68,0,434,.L_4D99-_LEGOSCRIPTTOLDRAW@8
.L_4D9A:
	jmp .L_4995
.stabn 68,0,435,.L_4D9A-_LEGOSCRIPTTOLDRAW@8
.L_4D9B:
.L_4A4D:
.L_4A3C:
.L_4A3B:
	inc dword ptr [ebp-392]
.stabn 68,0,437,.L_4D9B-_LEGOSCRIPTTOLDRAW@8
.L_4D9C:
	push 0
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-228]
	push ebx
	push -1
	lea ebx, [ebp-460]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,438,.L_4D9C-_LEGOSCRIPTTOLDRAW@8
.L_4D9D:
	cmp dword ptr [ebp-412], 0
	jne .L_4A4E
	mov ebx, dword ptr [ebp-460]
	movzx eax, byte ptr [ebx]
	cmp eax, 61
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-464], ebx
	jmp .L_4D24
.L_4A4E:
	mov dword ptr [ebp-464], 0
.L_4D24:
	cmp dword ptr [ebp-464], 0
	je .L_4A51
.L_4A52:
.stabn 68,0,440,.L_4D9D-_LEGOSCRIPTTOLDRAW@8
.L_4D9F:
	movsx ebx, byte ptr [ebp-448]
	test ebx, ebx
	jne .L_4A54
.L_4A55:
	mov byte ptr [ebp-448], 1
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	push 0
	push 28
	push offset _Lt_4A57
	push -1
	lea ebx, [ebp-476]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-476]
	push ebx
	call _SAFETEXT@4
	push eax
	push 10
	push offset _Lt_4A56
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	lea eax, [ebp-488]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	lea eax, [ebp-584]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-476]
	push eax
	call _fb_StrDelete@4
.L_4A54:
.L_4A62:
.stabn 68,0,441,.L_4D9F-_LEGOSCRIPTTOLDRAW@8
.L_4DA0:
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_4A39
.stabn 68,0,442,.L_4DA0-_LEGOSCRIPTTOLDRAW@8
.L_4DA1:
.L_4A63:
.L_4A51:
.L_4A50:
.L_4A64:
	mov eax, dword ptr [ebp-460]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-468], bl
.stabn 68,0,444,.L_4DA1-_LEGOSCRIPTTOLDRAW@8
.L_4DA2:
	movzx ebx, byte ptr [ebp-468]
	cmp ebx, 115
	je .L_4A6A
.L_4A6B:
	movzx ebx, byte ptr [ebp-468]
	cmp ebx, 99
	jne .L_4A67
.L_4A6A:
.L_4A6C:
.stabn 68,0,445,.L_4DA2-_LEGOSCRIPTTOLDRAW@8
.L_4DA3:
	cmp dword ptr [ebp-404], 0
	jge .L_4A6E
.L_4A6F:
.stabn 68,0,448,.L_4DA3-_LEGOSCRIPTTOLDRAW@8
.L_4DA4:
	movsx ebx, byte ptr [ebp-395]
	test ebx, ebx
	je .L_4A71
.L_4A72:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-460]
	push ebx
	push 20
	push offset _Lt_4A73
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-516]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-516]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	lea eax, [ebp-612]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-624], 0
	mov dword ptr [ebp-620], 0
	mov dword ptr [ebp-616], 0
	lea eax, [ebp-624]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-516]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4A71:
.L_4A80:
.stabn 68,0,449,.L_4DA4-_LEGOSCRIPTTOLDRAW@8
.L_4DA5:
.L_4A81:
	jmp .L_4A6D
.L_4A6E:
.L_4A82:
.stabn 68,0,450,.L_4DA5-_LEGOSCRIPTTOLDRAW@8
.L_4DA6:
	movsx eax, byte ptr [ebp-395]
	test eax, eax
	je .L_4A84
.L_4A85:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-460]
	push ebx
	push 33
	push offset _Lt_4A86
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-516]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-516]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	lea eax, [ebp-612]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-624], 0
	mov dword ptr [ebp-620], 0
	mov dword ptr [ebp-616], 0
	lea eax, [ebp-624]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-516]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4A84:
.L_4A93:
.stabn 68,0,451,.L_4DA6-_LEGOSCRIPTTOLDRAW@8
.L_4DA7:
.L_4A94:
.L_4A6D:
	push 0
	push 1
	lea eax, [ebp-460]
	push eax
	call _READTOKENNUMBER@12
	mov dword ptr [ebp-472], eax
.stabn 68,0,453,.L_4DA7-_LEGOSCRIPTTOLDRAW@8
.L_4DA8:
	cmp dword ptr [ebp-472], 0
	jg .L_4A96
.L_4A97:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	push 0
	push 25
	push offset _Lt_4A98
	push -1
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-492]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-492]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4A96:
.L_4AA3:
.stabn 68,0,454,.L_4DA8-_LEGOSCRIPTTOLDRAW@8
.L_4DA9:
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax]
	push ebx
	call _LOADPARTMODEL@4
	test eax, eax
	jge .L_4AA5
.L_4AA6:
.stabn 68,0,455,.L_4DA9-_LEGOSCRIPTTOLDRAW@8
.L_4DAA:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	push 0
	push 21
	push offset _Lt_4AA7
	push -1
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-492]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-492]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,457,.L_4DAA-_LEGOSCRIPTTOLDRAW@8
.L_4DAB:
.L_4AB2:
.L_4AA5:
.L_4AA4:
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	mov ebx, dword ptr [eax+120]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ebx+4]
	mov dword ptr [ebp-476], eax
.stabn 68,0,459,.L_4DAB-_LEGOSCRIPTTOLDRAW@8
.L_4DAC:
	mov eax, dword ptr [ebp-476]
	mov ebx, dword ptr [eax+40]
	mov dword ptr [ebp-480], ebx
.stabn 68,0,460,.L_4DAC-_LEGOSCRIPTTOLDRAW@8
.L_4DAD:
.L_4AB3:
	mov ebx, dword ptr [ebp-480]
	mov dword ptr [ebp-484], ebx
.stabn 68,0,461,.L_4DAD-_LEGOSCRIPTTOLDRAW@8
.L_4DAE:
.L_4AB5:
	mov ebx, dword ptr [ebp-460]
	mov al, byte ptr [ebx]
	mov byte ptr [ebp-488], al
.stabn 68,0,462,.L_4DAE-_LEGOSCRIPTTOLDRAW@8
.L_4DAF:
	movzx eax, byte ptr [ebp-488]
	cmp eax, 115
	jne .L_4AB8
.L_4AB9:
.L_4ABA:
.stabn 68,0,463,.L_4DAF-_LEGOSCRIPTTOLDRAW@8
.L_4DB0:
	mov eax, dword ptr [ebp-484]
	mov ebx, dword ptr [eax]
	cmp dword ptr [ebp-472], ebx
	jle .L_4ABC
.L_4ABD:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	push 0
	push -1
	push 8
	push offset _Lt_4AC3
	push -1
	push -1
	mov ebx, dword ptr [ebp-484]
	push dword ptr [ebx]
	call _fb_IntToStr@4
	push eax
	push -1
	push 12
	push offset _Lt_4AC2
	push -1
	push 3
	push offset _Lt_4AC1
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax+104]
	push ebx
	push -1
	push 2
	push offset _Lt_4AC0
	push -1
	push -1
	mov ebx, dword ptr [ebp-412]
	sal ebx, 7
	add ebx, dword ptr [_G_TPART]
	lea eax, [ebx+92]
	push eax
	push 7
	push offset _Lt_4ABF
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-584]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-584]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	lea eax, [ebp-596]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	mov dword ptr [ebp-600], 0
	lea eax, [ebp-608]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-620], 0
	mov dword ptr [ebp-616], 0
	mov dword ptr [ebp-612], 0
	lea eax, [ebp-620]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-632], 0
	mov dword ptr [ebp-628], 0
	mov dword ptr [ebp-624], 0
	lea eax, [ebp-632]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-644], 0
	mov dword ptr [ebp-640], 0
	mov dword ptr [ebp-636], 0
	lea eax, [ebp-644]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-656], 0
	mov dword ptr [ebp-652], 0
	mov dword ptr [ebp-648], 0
	lea eax, [ebp-656]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-668], 0
	mov dword ptr [ebp-664], 0
	mov dword ptr [ebp-660], 0
	lea eax, [ebp-668]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-680], 0
	mov dword ptr [ebp-676], 0
	mov dword ptr [ebp-672], 0
	lea eax, [ebp-680]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-692], 0
	mov dword ptr [ebp-688], 0
	mov dword ptr [ebp-684], 0
	lea eax, [ebp-692]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-584]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4ABC:
.L_4AD5:
.stabn 68,0,464,.L_4DB0-_LEGOSCRIPTTOLDRAW@8
.L_4DB1:
	cmp dword ptr [ebp-404], 0
	jge .L_4AD7
.L_4AD8:
	mov byte ptr [ebp-396], 1
	mov ax, word ptr [ebp-472]
	mov word ptr [ebp-400], ax
.L_4AD9:
	jmp .L_4AD6
.L_4AD7:
.L_4ADA:
	mov byte ptr [ebp-395], 1
	mov ax, word ptr [ebp-472]
	mov word ptr [ebp-398], ax
.L_4AD6:
.L_4ADB:
.stabn 68,0,465,.L_4DB1-_LEGOSCRIPTTOLDRAW@8
.L_4DB2:
.L_4ADC:
	jmp .L_4AB6
.L_4AB8:
	movzx eax, byte ptr [ebp-488]
	cmp eax, 99
	jne .L_4ADD
.L_4ADE:
.L_4ADF:
.stabn 68,0,466,.L_4DB2-_LEGOSCRIPTTOLDRAW@8
.L_4DB3:
	mov eax, dword ptr [ebp-484]
	mov ebx, dword ptr [eax+4]
	cmp dword ptr [ebp-472], ebx
	jle .L_4AE1
.L_4AE2:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	push 0
	push -1
	push 11
	push offset _Lt_4AE3
	push -1
	push -1
	mov ebx, dword ptr [ebp-484]
	push dword ptr [ebx+4]
	call _fb_IntToStr@4
	push eax
	push -1
	push 12
	push offset _Lt_4AC2
	push -1
	push 3
	push offset _Lt_4AC1
	push -1
	push -1
	mov eax, dword ptr [ebp-412]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax+104]
	push ebx
	push -1
	push 2
	push offset _Lt_4AC0
	push -1
	push -1
	mov ebx, dword ptr [ebp-412]
	sal ebx, 7
	add ebx, dword ptr [_G_TPART]
	lea eax, [ebx+92]
	push eax
	push 7
	push offset _Lt_4ABF
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	lea eax, [ebp-500]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	lea eax, [ebp-512]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	lea eax, [ebp-524]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	lea eax, [ebp-536]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	lea eax, [ebp-548]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	lea eax, [ebp-560]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	lea eax, [ebp-572]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-584]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-584]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	lea eax, [ebp-596]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	mov dword ptr [ebp-600], 0
	lea eax, [ebp-608]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-620], 0
	mov dword ptr [ebp-616], 0
	mov dword ptr [ebp-612], 0
	lea eax, [ebp-620]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-632], 0
	mov dword ptr [ebp-628], 0
	mov dword ptr [ebp-624], 0
	lea eax, [ebp-632]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-644], 0
	mov dword ptr [ebp-640], 0
	mov dword ptr [ebp-636], 0
	lea eax, [ebp-644]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-656], 0
	mov dword ptr [ebp-652], 0
	mov dword ptr [ebp-648], 0
	lea eax, [ebp-656]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-668], 0
	mov dword ptr [ebp-664], 0
	mov dword ptr [ebp-660], 0
	lea eax, [ebp-668]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-680], 0
	mov dword ptr [ebp-676], 0
	mov dword ptr [ebp-672], 0
	lea eax, [ebp-680]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-692], 0
	mov dword ptr [ebp-688], 0
	mov dword ptr [ebp-684], 0
	lea eax, [ebp-692]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-584]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4AE1:
.L_4AF5:
.stabn 68,0,467,.L_4DB3-_LEGOSCRIPTTOLDRAW@8
.L_4DB4:
	cmp dword ptr [ebp-404], 0
	jge .L_4AF7
.L_4AF8:
	mov byte ptr [ebp-396], 2
	mov ax, word ptr [ebp-472]
	mov word ptr [ebp-400], ax
.L_4AF9:
	jmp .L_4AF6
.L_4AF7:
.L_4AFA:
	mov byte ptr [ebp-395], 2
	mov ax, word ptr [ebp-472]
	mov word ptr [ebp-398], ax
.L_4AF6:
.L_4AFB:
.stabn 68,0,468,.L_4DB4-_LEGOSCRIPTTOLDRAW@8
.L_4DB5:
.L_4AFC:
.L_4ADD:
.L_4AB6:
.L_4AFD:
.L_4AFE:
	movsx eax, byte ptr [ebp-396]
	movsx ebx, byte ptr [ebp-395]
	cmp eax, ebx
	jne .L_4B00
.L_4B01:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	push 0
	push 23
	push offset _Lt_4B02
	push -1
	lea ebx, [ebp-492]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-492]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-492]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B00:
.L_4B0D:
.stabn 68,0,473,.L_4DB5-_LEGOSCRIPTTOLDRAW@8
.L_4DB6:
.L_4B0E:
	jmp .L_4A65
.L_4A67:
	movzx eax, byte ptr [ebp-468]
	cmp eax, 61
	jne .L_4B0F
.L_4B10:
.L_4B11:
.stabn 68,0,474,.L_4DB6-_LEGOSCRIPTTOLDRAW@8
.L_4DB7:
	cmp dword ptr [ebp-404], 0
	jl .L_4B13
.L_4B14:
.stabn 68,0,475,.L_4DB7-_LEGOSCRIPTTOLDRAW@8
.L_4DB8:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-460]
	push ebx
	push 33
	push offset _Lt_4B15
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	lea ebx, [ebp-480]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-504]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-504]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	lea eax, [ebp-612]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-504]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,476,.L_4DB8-_LEGOSCRIPTTOLDRAW@8
.L_4DB9:
.L_4B22:
.L_4B13:
.L_4B12:
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_4996
.stabn 68,0,478,.L_4DB9-_LEGOSCRIPTTOLDRAW@8
.L_4DBA:
.L_4B23:
	jmp .L_4A65
.L_4B0F:
	movzx eax, byte ptr [ebp-468]
	cmp eax, 120
	jne .L_4B24
.L_4B25:
.L_4B26:
.stabn 68,0,479,.L_4DBA-_LEGOSCRIPTTOLDRAW@8
.L_4DBB:
	cmp byte ptr [ebp-416], 0
	je .L_4B28
.L_4B29:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	push 0
	push 76
	push offset _Lt_4B2A
	push -1
	lea ebx, [ebp-480]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-480]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-480]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B28:
.L_4B35:
.stabn 68,0,480,.L_4DBB-_LEGOSCRIPTTOLDRAW@8
.L_4DBC:
.L_4B36:
	mov eax, dword ptr [ebp-460]
	mov bl, byte ptr [eax+1]
	mov byte ptr [ebp-472], bl
.stabn 68,0,481,.L_4DBC-_LEGOSCRIPTTOLDRAW@8
.L_4DBD:
	movzx ebx, byte ptr [ebp-472]
	cmp ebx, 111
	jne .L_4B39
.L_4B3B:
.L_4B3C:
.stabn 68,0,482,.L_4DBD-_LEGOSCRIPTTOLDRAW@8
.L_4DBE:
	movsx ebx, byte ptr [ebp-432]
	test ebx, ebx
	je .L_4B3E
.L_4B3F:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 23
	push offset _Lt_4B40
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B3E:
.L_4B4B:
.stabn 68,0,483,.L_4DBE-_LEGOSCRIPTTOLDRAW@8
.L_4DBF:
	mov eax, dword ptr [ebp-444]
	push -1
	push 2
	lea ebx, [ebp-460]
	push ebx
	mov ebx, eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fadd dword ptr [ebx]
	mov ebx, dword ptr [ebp-444]
	fstp dword ptr [ebx]
	mov byte ptr [ebp-432], 1
.stabn 68,0,484,.L_4DBF-_LEGOSCRIPTTOLDRAW@8
.L_4DC0:
.L_4B4C:
	jmp .L_4B37
.L_4B39:
.L_4B4E:
.stabn 68,0,485,.L_4DC0-_LEGOSCRIPTTOLDRAW@8
.L_4DC1:
	movsx ebx, byte ptr [ebp-420]
	test ebx, ebx
	je .L_4B50
.L_4B51:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 25
	push offset _Lt_4B52
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B50:
.L_4B5D:
.stabn 68,0,486,.L_4DC1-_LEGOSCRIPTTOLDRAW@8
.L_4DC2:
	push -1
	mov eax, dword ptr [ebp-460]
	movzx ebx, byte ptr [eax+1]
	cmp ebx, 114
	sete al
	shr eax, 1
	sbb eax, eax
	neg eax
	inc eax
	push eax
	lea eax, [ebp-460]
	push eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fmul qword ptr [_Lt_4D25]
	mov eax, dword ptr [ebp-444]
	fstp dword ptr [eax+12]
	mov byte ptr [ebp-420], 1
.stabn 68,0,487,.L_4DC2-_LEGOSCRIPTTOLDRAW@8
.L_4DC4:
.L_4B5F:
.L_4B4D:
.L_4B37:
.L_4B60:
.L_4B61:
	jmp .L_4A65
.L_4B24:
	movzx eax, byte ptr [ebp-468]
	cmp eax, 121
	jne .L_4B62
.L_4B64:
.L_4B65:
.stabn 68,0,489,.L_4DC4-_LEGOSCRIPTTOLDRAW@8
.L_4DC5:
	cmp byte ptr [ebp-416], 0
	je .L_4B67
.L_4B68:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	push 0
	push 76
	push offset _Lt_4B69
	push -1
	lea ebx, [ebp-480]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-480]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-480]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B67:
.L_4B74:
.stabn 68,0,490,.L_4DC5-_LEGOSCRIPTTOLDRAW@8
.L_4DC6:
.L_4B75:
	mov eax, dword ptr [ebp-460]
	mov bl, byte ptr [eax+1]
	mov byte ptr [ebp-472], bl
.stabn 68,0,491,.L_4DC6-_LEGOSCRIPTTOLDRAW@8
.L_4DC7:
	movzx ebx, byte ptr [ebp-472]
	cmp ebx, 111
	jne .L_4B78
.L_4B79:
.L_4B7A:
.stabn 68,0,492,.L_4DC7-_LEGOSCRIPTTOLDRAW@8
.L_4DC8:
	movsx ebx, byte ptr [ebp-436]
	test ebx, ebx
	je .L_4B7C
.L_4B7D:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 23
	push offset _Lt_4B7E
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B7C:
.L_4B89:
.stabn 68,0,493,.L_4DC8-_LEGOSCRIPTTOLDRAW@8
.L_4DC9:
	mov eax, dword ptr [ebp-444]
	push -1
	push 2
	lea ebx, [ebp-460]
	push ebx
	mov ebx, eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fadd dword ptr [ebx+4]
	mov ebx, dword ptr [ebp-444]
	fstp dword ptr [ebx+4]
	mov byte ptr [ebp-436], 1
.stabn 68,0,494,.L_4DC9-_LEGOSCRIPTTOLDRAW@8
.L_4DCA:
.L_4B8A:
	jmp .L_4B76
.L_4B78:
.L_4B8C:
.stabn 68,0,495,.L_4DCA-_LEGOSCRIPTTOLDRAW@8
.L_4DCB:
	movsx ebx, byte ptr [ebp-424]
	test ebx, ebx
	je .L_4B8E
.L_4B8F:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 25
	push offset _Lt_4B90
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4B8E:
.L_4B9B:
.stabn 68,0,496,.L_4DCB-_LEGOSCRIPTTOLDRAW@8
.L_4DCC:
	push -1
	mov eax, dword ptr [ebp-460]
	movzx ebx, byte ptr [eax+1]
	cmp ebx, 114
	sete al
	shr eax, 1
	sbb eax, eax
	neg eax
	inc eax
	push eax
	lea eax, [ebp-460]
	push eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fmul qword ptr [_Lt_4D25]
	mov eax, dword ptr [ebp-444]
	fstp dword ptr [eax+16]
	mov byte ptr [ebp-424], 1
.stabn 68,0,497,.L_4DCC-_LEGOSCRIPTTOLDRAW@8
.L_4DCE:
.L_4B9C:
.L_4B8B:
.L_4B76:
.L_4B9D:
.L_4B9E:
	jmp .L_4A65
.L_4B62:
	movzx eax, byte ptr [ebp-468]
	cmp eax, 122
	jne .L_4B9F
.L_4BA0:
.L_4BA1:
.stabn 68,0,499,.L_4DCE-_LEGOSCRIPTTOLDRAW@8
.L_4DCF:
	cmp byte ptr [ebp-416], 0
	je .L_4BA3
.L_4BA4:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	push 0
	push 76
	push offset _Lt_4BA5
	push -1
	lea ebx, [ebp-480]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-480]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	lea eax, [ebp-504]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-480]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4BA3:
.L_4BB0:
.stabn 68,0,500,.L_4DCF-_LEGOSCRIPTTOLDRAW@8
.L_4DD0:
.L_4BB1:
	mov eax, dword ptr [ebp-460]
	mov bl, byte ptr [eax+1]
	mov byte ptr [ebp-472], bl
.stabn 68,0,501,.L_4DD0-_LEGOSCRIPTTOLDRAW@8
.L_4DD1:
	movzx ebx, byte ptr [ebp-472]
	cmp ebx, 111
	jne .L_4BB4
.L_4BB5:
.L_4BB6:
.stabn 68,0,502,.L_4DD1-_LEGOSCRIPTTOLDRAW@8
.L_4DD2:
	movsx ebx, byte ptr [ebp-440]
	test ebx, ebx
	je .L_4BB8
.L_4BB9:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 23
	push offset _Lt_4BBA
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4BB8:
.L_4BC5:
.stabn 68,0,503,.L_4DD2-_LEGOSCRIPTTOLDRAW@8
.L_4DD3:
	mov eax, dword ptr [ebp-444]
	push -1
	push 2
	lea ebx, [ebp-460]
	push ebx
	mov ebx, eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fadd dword ptr [ebx+8]
	mov ebx, dword ptr [ebp-444]
	fstp dword ptr [ebx+8]
	mov byte ptr [ebp-440], 1
.stabn 68,0,504,.L_4DD3-_LEGOSCRIPTTOLDRAW@8
.L_4DD4:
.L_4BC6:
	jmp .L_4BB2
.L_4BB4:
.L_4BC8:
.stabn 68,0,505,.L_4DD4-_LEGOSCRIPTTOLDRAW@8
.L_4DD5:
	movsx ebx, byte ptr [ebp-428]
	test ebx, ebx
	je .L_4BCA
.L_4BCB:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 25
	push offset _Lt_4BCC
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4BCA:
.L_4BD7:
.stabn 68,0,506,.L_4DD5-_LEGOSCRIPTTOLDRAW@8
.L_4DD6:
	push -1
	mov eax, dword ptr [ebp-460]
	movzx ebx, byte ptr [eax+1]
	cmp ebx, 114
	sete al
	shr eax, 1
	sbb eax, eax
	neg eax
	inc eax
	push eax
	lea eax, [ebp-460]
	push eax
	call _READTOKENNUMBER@12
	push eax
	fild dword ptr [esp]
	add esp, 4
	fmul qword ptr [_Lt_4D25]
	mov eax, dword ptr [ebp-444]
	fstp dword ptr [eax+20]
	mov byte ptr [ebp-428], 1
.stabn 68,0,507,.L_4DD6-_LEGOSCRIPTTOLDRAW@8
.L_4DD8:
.L_4BD8:
.L_4BC7:
.L_4BB2:
.L_4BD9:
.L_4BDA:
	jmp .L_4A65
.L_4B9F:
	movzx eax, byte ptr [ebp-468]
	cmp eax, 35
	jne .L_4BDB
.L_4BDC:
.L_4BDD:
.stabn 68,0,509,.L_4DD8-_LEGOSCRIPTTOLDRAW@8
.L_4DD9:
	cmp byte ptr [ebp-416], 0
	je .L_4BDF
.L_4BE0:
.stabn 68,0,510,.L_4DD9-_LEGOSCRIPTTOLDRAW@8
.L_4DDA:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	push 0
	push 43
	push offset _Lt_4BE1
	push -1
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-484]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-484]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,511,.L_4DDA-_LEGOSCRIPTTOLDRAW@8
.L_4DDB:
.L_4BEC:
.L_4BDF:
.L_4BDE:
	mov eax, dword ptr [ebp-444]
	cmp dword ptr [eax+116], 0
	jl .L_4BEE
.L_4BEF:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	mov ebx, dword ptr [ebp-444]
	lea eax, [ebx+92]
	push eax
	push 43
	push offset _Lt_4BF0
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-508]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-508]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-604], 0
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	lea eax, [ebp-604]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-616], 0
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	lea eax, [ebp-616]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-508]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.L_4BEE:
.L_4BFD:
.stabn 68,0,513,.L_4DDB-_LEGOSCRIPTTOLDRAW@8
.L_4DDC:
	lea eax, [ebp-460]
	push eax
	call _PARSECOLOR@4
	mov dword ptr [ebp-472], eax
.stabn 68,0,514,.L_4DDC-_LEGOSCRIPTTOLDRAW@8
.L_4DDD:
	cmp dword ptr [ebp-472], 0
	jge .L_4BFF
.L_4C00:
.stabn 68,0,515,.L_4DDD-_LEGOSCRIPTTOLDRAW@8
.L_4DDE:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-460]
	push ebx
	push 23
	push offset _Lt_4C01
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea ebx, [ebp-484]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-508]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-508]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-556], 0
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	lea eax, [ebp-556]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-568], 0
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	lea eax, [ebp-568]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-580], 0
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	lea eax, [ebp-580]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-592], 0
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	lea eax, [ebp-592]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-604], 0
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	lea eax, [ebp-604]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-616], 0
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	lea eax, [ebp-616]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-508]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,516,.L_4DDE-_LEGOSCRIPTTOLDRAW@8
.L_4DDF:
.L_4C0E:
.L_4BFF:
.L_4BFE:
	mov eax, dword ptr [ebp-444]
	mov ebx, dword ptr [ebp-472]
	mov dword ptr [eax+116], ebx
.stabn 68,0,518,.L_4DDF-_LEGOSCRIPTTOLDRAW@8
.L_4DE0:
.L_4C0F:
	jmp .L_4A65
.L_4BDB:
.L_4C11:
.stabn 68,0,519,.L_4DE0-_LEGOSCRIPTTOLDRAW@8
.L_4DE1:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	mov dword ptr [ebp-496], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-460]
	push ebx
	push 16
	push offset _Lt_4C12
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	mov dword ptr [ebp-472], 0
	lea ebx, [ebp-480]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	mov dword ptr [ebp-484], 0
	lea eax, [ebp-492]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-504]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-504]
	push eax
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	mov dword ptr [ebp-508], 0
	lea eax, [ebp-516]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	mov dword ptr [ebp-520], 0
	lea eax, [ebp-528]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	mov dword ptr [ebp-532], 0
	lea eax, [ebp-540]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-552], 0
	mov dword ptr [ebp-548], 0
	mov dword ptr [ebp-544], 0
	lea eax, [ebp-552]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-564], 0
	mov dword ptr [ebp-560], 0
	mov dword ptr [ebp-556], 0
	lea eax, [ebp-564]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-576], 0
	mov dword ptr [ebp-572], 0
	mov dword ptr [ebp-568], 0
	lea eax, [ebp-576]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-588], 0
	mov dword ptr [ebp-584], 0
	mov dword ptr [ebp-580], 0
	lea eax, [ebp-588]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-600], 0
	mov dword ptr [ebp-596], 0
	mov dword ptr [ebp-592], 0
	lea eax, [ebp-600]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-612], 0
	mov dword ptr [ebp-608], 0
	mov dword ptr [ebp-604], 0
	lea eax, [ebp-612]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-504]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
	jmp .L_48A6
.stabn 68,0,520,.L_4DE1-_LEGOSCRIPTTOLDRAW@8
.L_4DE2:
.L_4C1F:
.L_4C10:
.L_4A65:
.L_4C20:
	lea eax, [ebp-460]
	push eax
	call _fb_StrDelete@4
.L_4C21:
.L_4A39:
	jmp .L_4A37
.L_4A38:
.stabn 68,0,522,.L_4DE2-_LEGOSCRIPTTOLDRAW@8
.L_4DE3:
.L_4C22:
.L_4C23:
.L_4996:
	jmp .L_4994
.L_4995:
.stabn 68,0,525,.L_4DE3-_LEGOSCRIPTTOLDRAW@8
.L_4DE4:
.L_4C24:
	cmp dword ptr [ebp-408], -999
	je .L_4C25
	mov eax, dword ptr [ebp-404]
	cmp eax, -999
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-412], eax
	jmp .L_4D26
.L_4C25:
	mov dword ptr [ebp-412], 0
.L_4D26:
	cmp dword ptr [ebp-412], 0
	je .L_4C28
.L_4C29:
.stabn 68,0,528,.L_4DE4-_LEGOSCRIPTTOLDRAW@8
.L_4DE6:
	cmp dword ptr [ebp-408], 0
	je .L_4C2A
	movsx eax, byte ptr [ebp-396]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-416], eax
	jmp .L_4D27
.L_4C2A:
	mov dword ptr [ebp-416], 0
.L_4D27:
	cmp dword ptr [ebp-416], 0
	je .L_4C2D
.L_4C2E:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-436], 0
	mov dword ptr [ebp-432], 0
	mov dword ptr [ebp-428], 0
	push 0
	push 31
	push offset _Lt_4C2F
	push -1
	lea ebx, [ebp-436]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-436]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	mov dword ptr [ebp-440], 0
	lea eax, [ebp-448]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-436]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4C2D:
.L_4C3A:
.stabn 68,0,529,.L_4DE6-_LEGOSCRIPTTOLDRAW@8
.L_4DE8:
	cmp dword ptr [ebp-404], 0
	je .L_4C3B
	movsx eax, byte ptr [ebp-395]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-420], eax
	jmp .L_4D28
.L_4C3B:
	mov dword ptr [ebp-420], 0
.L_4D28:
	cmp dword ptr [ebp-420], 0
	je .L_4C3E
.L_4C3F:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-436], 0
	mov dword ptr [ebp-432], 0
	mov dword ptr [ebp-428], 0
	push 0
	push 32
	push offset _Lt_4C40
	push -1
	lea ebx, [ebp-436]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-436]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	mov dword ptr [ebp-440], 0
	lea eax, [ebp-448]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-436]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4C3E:
.L_4C4B:
.stabn 68,0,530,.L_4DE8-_LEGOSCRIPTTOLDRAW@8
.L_4DEA:
	cmp dword ptr [ebp-408], 0
	jne .L_4C4C
	mov eax, dword ptr [ebp-404]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-424], eax
	jmp .L_4D29
.L_4C4C:
	mov dword ptr [ebp-424], 0
.L_4D29:
	cmp dword ptr [ebp-424], 0
	je .L_4C4F
.L_4C50:
	push 0
	push -1
	push -1
	push 4
	push offset _Lt_48BF
	push -1
	push -1
	lea eax, [ebp-24]
	push eax
	call _SAFETEXT@4
	push eax
	push -1
	push 3
	push offset _Lt_48BE
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	and eax, 2097151
	push eax
	call _fb_UIntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_48BD
	push -1
	push -1
	mov eax, dword ptr [ebp-392]
	imul eax, 12
	lea ebx, [ebp+eax-216]
	mov eax, dword ptr [ebx+8]
	shr eax, 21
	and eax, 2047
	mov ebx, eax
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	push dword ptr [ebx]
	push -1
	push 6
	push offset _Lt_48BC
	push -1
	push -1
	mov dword ptr [ebp-436], 0
	mov dword ptr [ebp-432], 0
	mov dword ptr [ebp-428], 0
	push 0
	push 50
	push offset _Lt_4C51
	push -1
	lea ebx, [ebp-436]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-436]
	push ebx
	call _SAFETEXT@4
	push eax
	push 8
	push offset _Lt_48B9
	mov dword ptr [ebp-448], 0
	mov dword ptr [ebp-444], 0
	mov dword ptr [ebp-440], 0
	lea eax, [ebp-448]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	mov dword ptr [ebp-452], 0
	lea eax, [ebp-460]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-472], 0
	mov dword ptr [ebp-468], 0
	mov dword ptr [ebp-464], 0
	lea eax, [ebp-472]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-484], 0
	mov dword ptr [ebp-480], 0
	mov dword ptr [ebp-476], 0
	lea eax, [ebp-484]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-496], 0
	mov dword ptr [ebp-492], 0
	mov dword ptr [ebp-488], 0
	lea eax, [ebp-496]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-508], 0
	mov dword ptr [ebp-504], 0
	mov dword ptr [ebp-500], 0
	lea eax, [ebp-508]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-520], 0
	mov dword ptr [ebp-516], 0
	mov dword ptr [ebp-512], 0
	lea eax, [ebp-520]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-532], 0
	mov dword ptr [ebp-528], 0
	mov dword ptr [ebp-524], 0
	lea eax, [ebp-532]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	mov dword ptr [ebp-544], 0
	mov dword ptr [ebp-540], 0
	mov dword ptr [ebp-536], 0
	lea eax, [ebp-544]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+12]
	call _fb_StrAssign@20
	lea eax, [ebp-436]
	push eax
	call _fb_StrDelete@4
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrAssign@20
	jmp .L_48A6
.L_4C4F:
.L_4C5C:
.stabn 68,0,531,.L_4DEA-_LEGOSCRIPTTOLDRAW@8
.L_4DEC:
	lea eax, [ebp-408]
	push eax
	call _ADDCONNECTION@4
.stabn 68,0,532,.L_4DEC-_LEGOSCRIPTTOLDRAW@8
.L_4DED:
.L_4C5D:
.L_4C28:
.L_4C27:
.L_4C5E:
	cmp dword ptr [ebp-380], 0
	jne .L_4C60
.L_4C61:
	jmp .L_48A6
.L_4C60:
.L_4C62:
.stabn 68,0,536,.L_4DED-_LEGOSCRIPTTOLDRAW@8
.L_4DEE:
.L_4C63:
	jmp .L_48A5
.L_48A6:
.stabn 68,0,537,.L_4DEE-_LEGOSCRIPTTOLDRAW@8
.L_4DEF:
	cmp dword ptr [_G_IPARTCOUNT], 0
	jle .L_4C65
.L_4C66:
.stabn 68,0,565,.L_4DEF-_LEGOSCRIPTTOLDRAW@8
.L_4DF0:
	lea eax, [ebp-652]
	mov dword ptr [ebp-688], eax
	lea eax, [ebp-652]
	mov dword ptr [ebp-684], eax
	mov dword ptr [ebp-680], 12
	mov dword ptr [ebp-676], 4
	mov dword ptr [ebp-672], 1
	mov dword ptr [ebp-668], 49
	mov dword ptr [ebp-664], 3
	mov dword ptr [ebp-660], 0
	mov dword ptr [ebp-656], 2
.stabn 68,0,568,.L_4DF0-_LEGOSCRIPTTOLDRAW@8
.L_4DF1:
	mov byte ptr [ebp-692], -1
.stabn 68,0,576,.L_4DF1-_LEGOSCRIPTTOLDRAW@8
.L_4DF2:
.L_4C68:
.L_4C6B:
	mov byte ptr [ebp-696], 0
	mov byte ptr [ebp-700], 0
.stabn 68,0,578,.L_4DF2-_LEGOSCRIPTTOLDRAW@8
.L_4DF3:
.L_4C6C:
	mov dword ptr [ebp-704], 0
	mov eax, dword ptr [_G_ICONNCOUNT]
	dec eax
	mov dword ptr [ebp-708], eax
	jmp .L_4C6E
.L_4C71:
.L_4C72:
.stabn 68,0,580,.L_4DF3-_LEGOSCRIPTTOLDRAW@8
.L_4DF4:
.L_4C73:
	mov eax, dword ptr [ebp-704]
	sal eax, 4
	add eax, dword ptr [_G_TCONN]
	lea ebx, [eax]
	mov dword ptr [ebp-712], ebx
.stabn 68,0,581,.L_4DF4-_LEGOSCRIPTTOLDRAW@8
.L_4DF5:
	mov ebx, dword ptr [ebp-712]
	mov eax, dword ptr [ebx]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	movsx ebx, byte ptr [eax+125]
	sar ebx, 1
	mov eax, ebx
	and eax, 1
	test eax, eax
	jne .L_4C76
.L_4C77:
.stabn 68,0,584,.L_4DF5-_LEGOSCRIPTTOLDRAW@8
.L_4DF6:
	mov eax, dword ptr [ebp-712]
	mov ebx, dword ptr [eax+4]
	sal ebx, 7
	add ebx, dword ptr [_G_TPART]
	movsx eax, byte ptr [ebx+125]
	sar eax, 1
	mov ebx, eax
	and ebx, 1
	test ebx, ebx
	je .L_4C79
.L_4C7A:
.stabn 68,0,585,.L_4DF6-_LEGOSCRIPTTOLDRAW@8
.L_4DF7:
.L_4C7B:
	mov ebx, dword ptr [ebp-712]
	push dword ptr [ebx]
	mov ebx, dword ptr [ebp-712]
	mov eax, dword ptr [ebp-712]
	mov ecx, dword ptr [ebx+4]
	mov dword ptr [eax], ecx
	mov ecx, dword ptr [ebp-712]
	pop dword ptr [ecx+4]
.L_4C7C:
.L_4C7D:
	mov ecx, dword ptr [ebp-712]
	movzx eax, byte ptr [ecx+12]
	push eax
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [ebp-712]
	mov bl, byte ptr [ecx+13]
	mov byte ptr [eax+12], bl
	mov ebx, dword ptr [ebp-712]
	mov eax, dword ptr [esp]
	mov byte ptr [ebx+13], al
	add esp, 4
.L_4C7E:
.stabn 68,0,586,.L_4DF7-_LEGOSCRIPTTOLDRAW@8
.L_4DF8:
.L_4C7F:
	mov ebx, dword ptr [ebp-712]
	movzx eax, word ptr [ebx+8]
	push eax
	mov ebx, dword ptr [ebp-712]
	mov eax, dword ptr [ebp-712]
	mov cx, word ptr [ebx+10]
	mov word ptr [eax+8], cx
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [esp]
	mov word ptr [ecx+10], ax
	add esp, 4
.L_4C80:
	dec dword ptr [ebp-704]
	jmp .L_4C6F
.stabn 68,0,587,.L_4DF8-_LEGOSCRIPTTOLDRAW@8
.L_4DF9:
.L_4C81:
	jmp .L_4C78
.L_4C79:
.L_4C82:
.stabn 68,0,588,.L_4DF9-_LEGOSCRIPTTOLDRAW@8
.L_4DFA:
	movsx ecx, byte ptr [ebp-692]
	test ecx, ecx
	je .L_4C84
.L_4C85:
.stabn 68,0,589,.L_4DFA-_LEGOSCRIPTTOLDRAW@8
.L_4DFB:
.L_4C86:
	mov ecx, dword ptr [ebp-704]
	sal ecx, 4
	add ecx, dword ptr [_G_TCONN]
	mov eax, dword ptr [ecx]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ecx, [eax]
	mov dword ptr [ebp-736], ecx
.stabn 68,0,593,.L_4DFB-_LEGOSCRIPTTOLDRAW@8
.L_4DFC:
	mov ecx, dword ptr [ebp-736]
	cmp dword ptr [ecx+116], 0
	jge .L_4C88
	mov dword ptr [ebp-740], 16
	jmp .L_4D2A
.L_4C88:
	mov ecx, dword ptr [ebp-736]
	mov eax, dword ptr [ecx+116]
	mov dword ptr [ebp-740], eax
.L_4D2A:
	mov eax, dword ptr [ebp-740]
	mov dword ptr [ebp-744], eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+104]
	mov dword ptr [ebp-748], ecx
.stabn 68,0,595,.L_4DFC-_LEGOSCRIPTTOLDRAW@8
.L_4DFD:
	mov ecx, dword ptr [ebp-736]
	movsx eax, byte ptr [ecx+125]
	and eax, 4294967293
	or eax, 2
	mov ecx, dword ptr [ebp-736]
	mov byte ptr [ecx+125], al
.stabn 68,0,596,.L_4DFD-_LEGOSCRIPTTOLDRAW@8
.L_4DFE:
	mov eax, dword ptr [ebp-736]
	push dword ptr [eax]
	pop dword ptr [ebp-652]
	mov eax, dword ptr [ebp-736]
	push dword ptr [eax+4]
	pop dword ptr [ebp-648]
	mov eax, dword ptr [ebp-736]
	push dword ptr [eax+8]
	pop dword ptr [ebp-644]
.stabn 68,0,597,.L_4DFE-_LEGOSCRIPTTOLDRAW@8
.L_4DFF:
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, offset _G_TIDENTITYMATRIX
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,598,.L_4DFF-_LEGOSCRIPTTOLDRAW@8
.L_4E00:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4C8B
.L_4C8C:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+12]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEX@12
.L_4C8B:
.L_4C8D:
.stabn 68,0,599,.L_4E00-_LEGOSCRIPTTOLDRAW@8
.L_4E01:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4C8F
.L_4C90:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+16]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEY@12
.L_4C8F:
.L_4C91:
.stabn 68,0,600,.L_4E01-_LEGOSCRIPTTOLDRAW@8
.L_4E02:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4C93
.L_4C94:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+20]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEZ@12
.L_4C93:
.L_4C95:
.stabn 68,0,601,.L_4E02-_LEGOSCRIPTTOLDRAW@8
.L_4E03:
.L_4C96:
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	mov dword ptr [ebp-752], eax
.stabn 68,0,602,.L_4E03-_LEGOSCRIPTTOLDRAW@8
.L_4E04:
	mov eax, dword ptr [ebp-748]
	push dword ptr [eax]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+40]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+36]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+32]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+24]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+20]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+16]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+8]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax+4]
	sub esp,8
	fstp qword ptr [esp]
	mov eax, dword ptr [ebp-752]
	fld dword ptr [eax]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-644]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-648]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-652]
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [ebp-744]
	push offset _Lt_4C98
	lea eax, [ebp-632]
	push eax
	call _sprintf
	add esp, 112
.stabn 68,0,603,.L_4E04-_LEGOSCRIPTTOLDRAW@8
.L_4E05:
.L_4C99:
	push 0
	push 256
	lea eax, [ebp-632]
	push eax
	push -1
	lea eax, [ebp-264]
	push eax
	call _fb_StrConcatAssign@20
.stabn 68,0,606,.L_4E05-_LEGOSCRIPTTOLDRAW@8
.L_4E06:
.L_4C9A:
	mov byte ptr [ebp-692], 0
	mov byte ptr [ebp-696], -1
	jmp .L_4C6F
.stabn 68,0,613,.L_4E06-_LEGOSCRIPTTOLDRAW@8
.L_4E07:
.L_4C9B:
	jmp .L_4C83
.L_4C84:
.L_4C9C:
.stabn 68,0,614,.L_4E07-_LEGOSCRIPTTOLDRAW@8
.L_4E08:
	mov byte ptr [ebp-700], 1
	jmp .L_4C6F
.stabn 68,0,616,.L_4E08-_LEGOSCRIPTTOLDRAW@8
.L_4E09:
.L_4C9D:
.L_4C83:
.L_4C9E:
.L_4C78:
.L_4C9F:
	jmp .L_4C75
.L_4C76:
.L_4CA0:
.stabn 68,0,619,.L_4E09-_LEGOSCRIPTTOLDRAW@8
.L_4E0A:
	mov eax, dword ptr [ebp-712]
	mov ecx, dword ptr [eax+4]
	sal ecx, 7
	add ecx, dword ptr [_G_TPART]
	movsx eax, byte ptr [ecx+125]
	sar eax, 1
	mov ecx, eax
	and ecx, 1
	test ecx, ecx
	je .L_4CA2
.L_4CA3:
.stabn 68,0,620,.L_4E0A-_LEGOSCRIPTTOLDRAW@8
.L_4E0B:
	jmp .L_4C6F
.stabn 68,0,621,.L_4E0B-_LEGOSCRIPTTOLDRAW@8
.L_4E0C:
.L_4CA4:
.L_4CA2:
.L_4CA5:
.stabn 68,0,622,.L_4E0C-_LEGOSCRIPTTOLDRAW@8
.L_4E0D:
.L_4CA6:
.L_4CA1:
.L_4CA7:
.L_4C75:
	mov dword ptr [ebp-716], 0
	mov dword ptr [ebp-720], 0
.stabn 68,0,630,.L_4E0D-_LEGOSCRIPTTOLDRAW@8
.L_4E0E:
	mov ecx, dword ptr [ebp-712]
	cmp dword ptr [ecx], 0
	jne .L_4CA9
.L_4CAA:
.stabn 68,0,631,.L_4E0E-_LEGOSCRIPTTOLDRAW@8
.L_4E0F:
	mov ecx, offset _G_NULLSNAP
	mov dword ptr [ebp-636], ecx
.stabn 68,0,632,.L_4E0F-_LEGOSCRIPTTOLDRAW@8
.L_4E10:
.L_4CAB:
	jmp .L_4CA8
.L_4CA9:
.L_4CAC:
.stabn 68,0,633,.L_4E10-_LEGOSCRIPTTOLDRAW@8
.L_4E11:
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [ecx]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	mov ecx, dword ptr [eax+120]
	sal ecx, 3
	add ecx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ecx+4]
	mov dword ptr [ebp-720], eax
.stabn 68,0,634,.L_4E11-_LEGOSCRIPTTOLDRAW@8
.L_4E12:
	mov eax, dword ptr [ebp-720]
	mov ecx, dword ptr [eax+40]
	mov dword ptr [ebp-716], ecx
.stabn 68,0,635,.L_4E12-_LEGOSCRIPTTOLDRAW@8
.L_4E13:
.L_4CAD:
	mov ecx, dword ptr [ebp-712]
	mov al, byte ptr [ecx+12]
	mov byte ptr [ebp-736], al
.stabn 68,0,636,.L_4E13-_LEGOSCRIPTTOLDRAW@8
.L_4E14:
	movsx eax, byte ptr [ebp-736]
	cmp eax, 1
	jne .L_4CB0
.L_4CB1:
.L_4CB2:
	mov eax, dword ptr [ebp-716]
	mov ecx, dword ptr [ebp-712]
	movsx ebx, word ptr [ecx+8]
	imul ebx, 28
	mov ecx, dword ptr [eax+36]
	add ecx, ebx
	add ecx, -28
	mov dword ptr [ebp-636], ecx
.stabn 68,0,637,.L_4E14-_LEGOSCRIPTTOLDRAW@8
.L_4E15:
.L_4CB3:
	jmp .L_4CAE
.L_4CB0:
	movsx ecx, byte ptr [ebp-736]
	cmp ecx, 2
	jne .L_4CB4
.L_4CB5:
.L_4CB6:
	mov ecx, dword ptr [ebp-716]
	mov ebx, dword ptr [ebp-712]
	movsx eax, word ptr [ebx+8]
	imul eax, 28
	mov ebx, dword ptr [ecx+40]
	add ebx, eax
	add ebx, -28
	mov dword ptr [ebp-636], ebx
.stabn 68,0,638,.L_4E15-_LEGOSCRIPTTOLDRAW@8
.L_4E16:
.L_4CB7:
	jmp .L_4CAE
.L_4CB4:
.L_4CB9:
	push offset _Lt_4CBA
	call _puts
	add esp, 4
.stabn 68,0,639,.L_4E16-_LEGOSCRIPTTOLDRAW@8
.L_4E17:
.L_4CBB:
.L_4CB8:
.L_4CAE:
.L_4CBC:
.L_4CBD:
.L_4CA8:
	mov ebx, dword ptr [ebp-712]
	cmp dword ptr [ebx+4], 0
	jne .L_4CBF
.L_4CC0:
.stabn 68,0,642,.L_4E17-_LEGOSCRIPTTOLDRAW@8
.L_4E18:
	mov ebx, offset _G_NULLSNAP
	mov dword ptr [ebp-636], ebx
.stabn 68,0,643,.L_4E18-_LEGOSCRIPTTOLDRAW@8
.L_4E19:
.L_4CC1:
	jmp .L_4CBE
.L_4CBF:
.L_4CC2:
.stabn 68,0,644,.L_4E19-_LEGOSCRIPTTOLDRAW@8
.L_4E1A:
	mov ebx, dword ptr [ebp-712]
	mov eax, dword ptr [ebx+4]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	mov ebx, dword ptr [eax+120]
	sal ebx, 3
	add ebx, dword ptr [_G_TMODELS]
	mov eax, dword ptr [ebx+4]
	mov dword ptr [ebp-720], eax
.stabn 68,0,645,.L_4E1A-_LEGOSCRIPTTOLDRAW@8
.L_4E1B:
	mov eax, dword ptr [ebp-720]
	mov ebx, dword ptr [eax+40]
	mov dword ptr [ebp-716], ebx
.stabn 68,0,646,.L_4E1B-_LEGOSCRIPTTOLDRAW@8
.L_4E1C:
.L_4CC3:
	mov ebx, dword ptr [ebp-712]
	mov al, byte ptr [ebx+13]
	mov byte ptr [ebp-736], al
.stabn 68,0,647,.L_4E1C-_LEGOSCRIPTTOLDRAW@8
.L_4E1D:
	movsx eax, byte ptr [ebp-736]
	cmp eax, 1
	jne .L_4CC6
.L_4CC7:
.L_4CC8:
	mov eax, dword ptr [ebp-716]
	mov ebx, dword ptr [ebp-712]
	movsx ecx, word ptr [ebx+10]
	imul ecx, 28
	mov ebx, dword ptr [eax+36]
	add ebx, ecx
	add ebx, -28
	mov dword ptr [ebp-640], ebx
.stabn 68,0,648,.L_4E1D-_LEGOSCRIPTTOLDRAW@8
.L_4E1E:
.L_4CC9:
	jmp .L_4CC4
.L_4CC6:
	movsx ebx, byte ptr [ebp-736]
	cmp ebx, 2
	jne .L_4CCA
.L_4CCB:
.L_4CCC:
	mov ebx, dword ptr [ebp-716]
	mov ecx, dword ptr [ebp-712]
	movsx eax, word ptr [ecx+10]
	imul eax, 28
	mov ecx, dword ptr [ebx+40]
	add ecx, eax
	add ecx, -28
	mov dword ptr [ebp-640], ecx
.stabn 68,0,649,.L_4E1E-_LEGOSCRIPTTOLDRAW@8
.L_4E1F:
.L_4CCD:
	jmp .L_4CC4
.L_4CCA:
.L_4CCF:
	push offset _Lt_4CBA
	call _puts
	add esp, 4
.stabn 68,0,650,.L_4E1F-_LEGOSCRIPTTOLDRAW@8
.L_4E20:
.L_4CD0:
.L_4CCE:
.L_4CC4:
.L_4CD1:
.L_4CD2:
.L_4CBE:
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [ecx]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ecx, [eax]
	mov dword ptr [ebp-724], ecx
.stabn 68,0,659,.L_4E20-_LEGOSCRIPTTOLDRAW@8
.L_4E21:
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [ecx]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ecx, [eax]
	mov dword ptr [ebp-728], ecx
	mov ecx, dword ptr [ebp-712]
	mov eax, dword ptr [ecx+4]
	mov dword ptr [ebp-732], eax
.stabn 68,0,660,.L_4E21-_LEGOSCRIPTTOLDRAW@8
.L_4E22:
	mov eax, dword ptr [ebp-712]
	mov ecx, dword ptr [eax+4]
	sal ecx, 7
	add ecx, dword ptr [_G_TPART]
	movsx eax, byte ptr [ecx+125]
	and eax, 4294967293
	or eax, 2
	mov ecx, dword ptr [ebp-712]
	mov ebx, dword ptr [ecx+4]
	sal ebx, 7
	add ebx, dword ptr [_G_TPART]
	mov byte ptr [ebx+125], al
	mov byte ptr [ebp-696], -1
.stabn 68,0,661,.L_4E22-_LEGOSCRIPTTOLDRAW@8
.L_4E23:
.L_4CD3:
	mov eax, dword ptr [ebp-732]
	sal eax, 7
	add eax, dword ptr [_G_TPART]
	lea ebx, [eax]
	mov dword ptr [ebp-736], ebx
.stabn 68,0,664,.L_4E23-_LEGOSCRIPTTOLDRAW@8
.L_4E24:
	mov ebx, dword ptr [ebp-736]
	lea eax, [ebx+28]
	mov ebx, dword ptr [ebp-728]
	lea ecx, [ebx+28]
	push ecx
	push edi
	push esi
	mov edi, eax
	mov esi, ecx
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,672,.L_4E24-_LEGOSCRIPTTOLDRAW@8
.L_4E25:
	mov ecx, dword ptr [ebp-636]
	cmp dword ptr [ecx+24], 0
	je .L_4CD6
.L_4CD7:
.stabn 68,0,684,.L_4E25-_LEGOSCRIPTTOLDRAW@8
.L_4E26:
	push offset _Lt_4CD8
	call _puts
	add esp, 4
.stabn 68,0,685,.L_4E26-_LEGOSCRIPTTOLDRAW@8
.L_4E27:
	mov ecx, dword ptr [ebp-636]
	push dword ptr [ecx+24]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MULTMATRIX4X4WITHVECTOR3X3@12
.stabn 68,0,686,.L_4E27-_LEGOSCRIPTTOLDRAW@8
.L_4E28:
.L_4CD9:
.L_4CD6:
.L_4CD5:
	mov ecx, dword ptr [ebp-640]
	cmp dword ptr [ecx+24], 0
	je .L_4CDB
.L_4CDC:
.stabn 68,0,688,.L_4E28-_LEGOSCRIPTTOLDRAW@8
.L_4E29:
	push offset _Lt_4CDD
	call _puts
	add esp, 4
.stabn 68,0,689,.L_4E29-_LEGOSCRIPTTOLDRAW@8
.L_4E2A:
	mov ecx, dword ptr [ebp-640]
	push dword ptr [ecx+24]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MULTMATRIX4X4WITHVECTOR3X3@12
.stabn 68,0,690,.L_4E2A-_LEGOSCRIPTTOLDRAW@8
.L_4E2B:
.L_4CDE:
.L_4CDB:
.L_4CDA:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+12]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4CE0
.L_4CE1:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+12]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEX@12
.L_4CE0:
.L_4CE2:
.stabn 68,0,692,.L_4E2B-_LEGOSCRIPTTOLDRAW@8
.L_4E2C:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+16]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4CE4
.L_4CE5:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+16]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEY@12
.L_4CE4:
.L_4CE6:
.stabn 68,0,693,.L_4E2C-_LEGOSCRIPTTOLDRAW@8
.L_4E2D:
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+20]
	fld dword ptr [_Lt_3912]
	fcomip st, st(1)
	fstp st(0)
	jz .L_4CE8
.L_4CE9:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ecx+20]
	mov ecx, dword ptr [ebp-736]
	lea eax, [ecx+28]
	push eax
	mov eax, dword ptr [ebp-736]
	lea ecx, [eax+28]
	push ecx
	call _MATRIXROTATEZ@12
.L_4CE8:
.L_4CEA:
.stabn 68,0,694,.L_4E2D-_LEGOSCRIPTTOLDRAW@8
.L_4E2E:
	mov ecx, dword ptr [ebp-636]
	push dword ptr [ecx]
	pop dword ptr [ebp-652]
	mov ecx, dword ptr [ebp-636]
	push dword ptr [ecx+4]
	pop dword ptr [ebp-648]
	mov ecx, dword ptr [ebp-636]
	push dword ptr [ecx+8]
	pop dword ptr [ebp-644]
.stabn 68,0,696,.L_4E2E-_LEGOSCRIPTTOLDRAW@8
.L_4E2F:
	mov ecx, dword ptr [ebp-728]
	fld dword ptr [ecx+76]
	fadd dword ptr [ebp-652]
	fstp dword ptr [ebp-652]
.stabn 68,0,699,.L_4E2F-_LEGOSCRIPTTOLDRAW@8
.L_4E30:
	mov ecx, dword ptr [ebp-728]
	fld dword ptr [ecx+80]
	fadd dword ptr [ebp-648]
	fstp dword ptr [ebp-648]
.stabn 68,0,700,.L_4E30-_LEGOSCRIPTTOLDRAW@8
.L_4E31:
	mov ecx, dword ptr [ebp-728]
	fld dword ptr [ecx+84]
	fadd dword ptr [ebp-644]
	fstp dword ptr [ebp-644]
.stabn 68,0,701,.L_4E31-_LEGOSCRIPTTOLDRAW@8
.L_4E32:
	lea ecx, [ebp-748]
	mov dword ptr [ebp-784], ecx
	lea ecx, [ebp-748]
	mov dword ptr [ebp-780], ecx
	mov dword ptr [ebp-776], 12
	mov dword ptr [ebp-772], 4
	mov dword ptr [ebp-768], 1
	mov dword ptr [ebp-764], 49
	mov dword ptr [ebp-760], 3
	mov dword ptr [ebp-756], 0
	mov dword ptr [ebp-752], 2
	mov ecx, dword ptr [ebp-640]
	push dword ptr [ecx]
	pop dword ptr [ebp-748]
	mov ecx, dword ptr [ebp-640]
	push dword ptr [ecx+4]
	pop dword ptr [ebp-744]
	mov ecx, dword ptr [ebp-640]
	push dword ptr [ecx+8]
	pop dword ptr [ebp-740]
.stabn 68,0,703,.L_4E32-_LEGOSCRIPTTOLDRAW@8
.L_4E33:
	mov ecx, dword ptr [ebp-724]
	fld dword ptr [ecx]
	fsub dword ptr [ebp-652]
	fsub dword ptr [ebp-748]
	mov ecx, dword ptr [ebp-736]
	fadd dword ptr [ecx]
	fstp dword ptr [ebp-652]
.stabn 68,0,707,.L_4E33-_LEGOSCRIPTTOLDRAW@8
.L_4E34:
	mov ecx, dword ptr [ebp-724]
	fld dword ptr [ebp-648]
	fadd dword ptr [ecx+4]
	fsub dword ptr [ebp-744]
	mov ecx, dword ptr [ebp-736]
	fadd dword ptr [ecx+4]
	fstp dword ptr [ebp-648]
.stabn 68,0,708,.L_4E34-_LEGOSCRIPTTOLDRAW@8
.L_4E35:
	mov ecx, dword ptr [ebp-724]
	fld dword ptr [ebp-644]
	fadd dword ptr [ecx+8]
	fadd dword ptr [ebp-740]
	mov ecx, dword ptr [ebp-736]
	fadd dword ptr [ecx+8]
	fstp dword ptr [ebp-644]
.stabn 68,0,709,.L_4E35-_LEGOSCRIPTTOLDRAW@8
.L_4E36:
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ebp-652]
	pop dword ptr [ecx]
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ebp-648]
	pop dword ptr [ecx+4]
	mov ecx, dword ptr [ebp-736]
	push dword ptr [ebp-644]
	pop dword ptr [ecx+8]
.stabn 68,0,713,.L_4E36-_LEGOSCRIPTTOLDRAW@8
.L_4E37:
	lea ecx, [ebp-808]
	mov eax, dword ptr [ebp-720]
	lea ebx, [eax+8]
	push ecx
	push edi
	push esi
	mov edi, ecx
	mov esi, ebx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
.stabn 68,0,717,.L_4E37-_LEGOSCRIPTTOLDRAW@8
.L_4E38:
	mov ebx, dword ptr [ebp-736]
	mov ecx, dword ptr [ebx+120]
	mov dword ptr [ebp-812], ecx
.stabn 68,0,718,.L_4E38-_LEGOSCRIPTTOLDRAW@8
.L_4E39:
	fld dword ptr [_Lt_4045]
	fadd dword ptr [ebp-800]
	fld qword ptr [_Lt_39E7]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_4CED
.L_4CEE:
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-800]
.L_4CED:
.L_4CEF:
.stabn 68,0,723,.L_4E39-_LEGOSCRIPTTOLDRAW@8
.L_4E3A:
	fld dword ptr [ebp-808]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4046]
	fstp dword ptr [ebp-808]
	fld dword ptr [ebp-804]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4047]
	fstp dword ptr [ebp-804]
.stabn 68,0,724,.L_4E3A-_LEGOSCRIPTTOLDRAW@8
.L_4E3B:
	fld dword ptr [ebp-800]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+4]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4046]
	fstp dword ptr [ebp-800]
	fld dword ptr [ebp-796]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+4]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4047]
	fstp dword ptr [ebp-796]
.stabn 68,0,725,.L_4E3B-_LEGOSCRIPTTOLDRAW@8
.L_4E3C:
	fld dword ptr [ebp-792]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+8]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4046]
	fstp dword ptr [ebp-792]
	fld dword ptr [ebp-788]
	mov ecx, dword ptr [ebp-736]
	fld dword ptr [ecx+8]
	fxch st(1)
	faddp
	fadd qword ptr [_Lt_4047]
	fstp dword ptr [ebp-788]
.stabn 68,0,726,.L_4E3C-_LEGOSCRIPTTOLDRAW@8
.L_4E3D:
	mov ecx, dword ptr [ebp-736]
	cmp dword ptr [ecx+116], 0
	jge .L_4CF0
	mov dword ptr [ebp-816], 16
	jmp .L_4D2B
.L_4CF0:
	mov ecx, dword ptr [ebp-736]
	mov ebx, dword ptr [ecx+116]
	mov dword ptr [ebp-816], ebx
.L_4D2B:
	mov ebx, dword ptr [ebp-816]
	mov dword ptr [ebp-820], ebx
	mov ebx, dword ptr [ebp-736]
	lea ecx, [ebx+104]
	mov dword ptr [ebp-824], ecx
.stabn 68,0,750,.L_4E3D-_LEGOSCRIPTTOLDRAW@8
.L_4E3E:
.L_4CF2:
	mov ecx, dword ptr [ebp-736]
	lea ebx, [ecx+28]
	mov dword ptr [ebp-828], ebx
.stabn 68,0,752,.L_4E3E-_LEGOSCRIPTTOLDRAW@8
.L_4E3F:
	mov ebx, dword ptr [ebp-824]
	push dword ptr [ebx]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+40]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+36]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+32]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+24]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+20]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+16]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+8]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx+4]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	mov ebx, dword ptr [ebp-828]
	fld dword ptr [_Lt_4D2C]
	fmul dword ptr [ebx]
	sub esp,4
	fstp dword ptr [esp]
	call _roundf
	add esp, 4
	fdiv qword ptr [_Lt_25AC]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-644]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-648]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-652]
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [ebp-820]
	push offset _Lt_4C98
	lea ebx, [ebp-632]
	push ebx
	call _sprintf
	add esp, 112
.stabn 68,0,754,.L_4E3F-_LEGOSCRIPTTOLDRAW@8
.L_4E40:
.L_4CF4:
	push 0
	push 256
	lea ebx, [ebp-632]
	push ebx
	push -1
	lea ebx, [ebp-264]
	push ebx
	call _fb_StrConcatAssign@20
.stabn 68,0,757,.L_4E40-_LEGOSCRIPTTOLDRAW@8
.L_4E41:
.L_4CF5:
.L_4CF6:
.L_4CF7:
.L_4C6F:
	inc dword ptr [ebp-704]
.L_4C6E:
	mov ebx, dword ptr [ebp-708]
	cmp dword ptr [ebp-704], ebx
	jle .L_4C71
.L_4C70:
.L_4CF8:
.stabn 68,0,766,.L_4E41-_LEGOSCRIPTTOLDRAW@8
.L_4E42:
	movsx ebx, byte ptr [ebp-696]
	test ebx, ebx
	jne .L_4CFA
.L_4CFB:
.stabn 68,0,770,.L_4E42-_LEGOSCRIPTTOLDRAW@8
.L_4E43:
	movsx ebx, byte ptr [ebp-692]
	test ebx, ebx
	jne .L_4CFC
	movsx ebx, byte ptr [ebp-700]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-704], ebx
	jmp .L_4D2D
.L_4CFC:
	mov dword ptr [ebp-704], 0
.L_4D2D:
	cmp dword ptr [ebp-704], 0
	je .L_4CFF
.L_4D00:
.stabn 68,0,771,.L_4E43-_LEGOSCRIPTTOLDRAW@8
.L_4E45:
	mov byte ptr [ebp-692], -1
	jmp .L_4C6A
.stabn 68,0,772,.L_4E45-_LEGOSCRIPTTOLDRAW@8
.L_4E46:
.L_4D01:
.L_4CFF:
.L_4CFE:
	jmp .L_4C69
.stabn 68,0,774,.L_4E46-_LEGOSCRIPTTOLDRAW@8
.L_4E47:
.L_4D02:
.L_4CFA:
.L_4CF9:
.L_4D03:
.L_4C6A:
	jmp .L_4C68
.L_4C69:
.stabn 68,0,776,.L_4E47-_LEGOSCRIPTTOLDRAW@8
.L_4E48:
.L_4D04:
.L_4C65:
.L_4C64:
	push 192
	push 0
	lea ebx, [ebp-216]
	push ebx
	call _memset
	add esp, 12
.stabn 68,0,782,.L_4E48-_LEGOSCRIPTTOLDRAW@8
.L_4E49:
	push 12
	push 0
	lea ebx, [ebp-24]
	push ebx
	call _memset
	add esp, 12
.stabn 68,0,783,.L_4E49-_LEGOSCRIPTTOLDRAW@8
.L_4E4A:
.L_4D05:
	mov dword ptr [ebp-380], 2
	mov ebx, dword ptr [ebp-280]
	mov dword ptr [ebp-384], ebx
	jmp .L_4D07
.L_4D0A:
.L_4D0B:
.stabn 68,0,786,.L_4E4A-_LEGOSCRIPTTOLDRAW@8
.L_4E4B:
.L_4D0C:
	mov ebx, dword ptr [ebp-380]
	imul ebx, 20
	add ebx, dword ptr [ebp-316]
	lea ecx, [ebx]
	mov dword ptr [ebp-388], ecx
.stabn 68,0,787,.L_4E4B-_LEGOSCRIPTTOLDRAW@8
.L_4E4C:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx+8], 0
	je .L_4D0F
.L_4D10:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx+8], 0
	je .L_4D11
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx+8]
	call _fb_StrDelete@4
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx+8]
	call _free
	add esp, 4
.L_4D11:
	mov ecx, dword ptr [ebp-388]
	mov dword ptr [ecx+8], 0
.L_4D0F:
.L_4D12:
.stabn 68,0,788,.L_4E4C-_LEGOSCRIPTTOLDRAW@8
.L_4E4D:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx], 0
	je .L_4D14
.L_4D15:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx], 0
	je .L_4D16
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx]
	call _fb_StrDelete@4
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx]
	call _free
	add esp, 4
.L_4D16:
	mov ecx, dword ptr [ebp-388]
	mov dword ptr [ecx], 0
.L_4D14:
.L_4D17:
.stabn 68,0,789,.L_4E4D-_LEGOSCRIPTTOLDRAW@8
.L_4E4E:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx+4], 0
	je .L_4D19
.L_4D1A:
	mov ecx, dword ptr [ebp-388]
	cmp dword ptr [ecx+4], 0
	je .L_4D1B
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx+4]
	call _fb_StrDelete@4
	mov ecx, dword ptr [ebp-388]
	push dword ptr [ecx+4]
	call _free
	add esp, 4
.L_4D1B:
	mov ecx, dword ptr [ebp-388]
	mov dword ptr [ecx+4], 0
.L_4D19:
.L_4D1C:
.stabn 68,0,790,.L_4E4E-_LEGOSCRIPTTOLDRAW@8
.L_4E4F:
.L_4D1D:
.L_4D1E:
.L_4D08:
	inc dword ptr [ebp-380]
.L_4D07:
	mov ecx, dword ptr [ebp-384]
	cmp dword ptr [ebp-380], ecx
	jle .L_4D0A
.L_4D09:
.L_4D1F:
.stabn 68,0,792,.L_4E4F-_LEGOSCRIPTTOLDRAW@8
.L_4E50:
	push 255
	push 0
	push 1
	push offset __ZN12PARTSTRUCTLSD1Ev
	push offset __ZN12PARTSTRUCTLSC1Ev
	push 128
	push offset _G_TPART
	call _fb_ArrayRedimObj
	add esp, 28
.stabn 68,0,794,.L_4E50-_LEGOSCRIPTTOLDRAW@8
.L_4E51:
	push 255
	push 0
	push 1
	push 0
	push -1
	push 16
	push offset _G_TCONN
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,795,.L_4E51-_LEGOSCRIPTTOLDRAW@8
.L_4E52:
	push 0
	push -1
	lea ecx, [ebp-264]
	push ecx
	push -1
	lea ecx, [ebp-12]
	push ecx
	call _fb_StrInit@20
	lea ecx, [ebp-376]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-364]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-352]
	push ecx
	call _fb_ArrayErase@4
	lea ecx, [ebp-316]
	push ecx
	call _fb_ArrayErase@4
	lea ecx, [ebp-264]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-252]
	push ecx
	call _fb_ArrayDestructStr@4
	lea ecx, [ebp-24]
	push ecx
	call _fb_StrDelete@4
	jmp .L_489B
.stabn 68,0,797,.L_4E52-_LEGOSCRIPTTOLDRAW@8
.L_4E53:
	lea ecx, [ebp-376]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-364]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-352]
	push ecx
	call _fb_ArrayErase@4
	lea ecx, [ebp-316]
	push ecx
	call _fb_ArrayErase@4
	lea ecx, [ebp-264]
	push ecx
	call _fb_StrDelete@4
	lea ecx, [ebp-252]
	push ecx
	call _fb_ArrayDestructStr@4
	lea ecx, [ebp-24]
	push ecx
	call _fb_StrDelete@4
.L_489B:
	lea ecx, [ebp-12]
	push ecx
	call _fb_StrAllocTempResult@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,799,.L_489B-_LEGOSCRIPTTOLDRAW@8
	.stabs "SSTATEMENT:13",128,0,0,-24
	.stabs "STOKEN:246=ar1;0;15;13",128,0,0,-216
	.stabs "SRESULT:13",128,0,0,-264
	.stabs "ITOKENLINENUMBER:1",128,0,0,-268
	.stabs "ICURFILE:1",128,0,0,-272
	.stabs "ISTACKPOS:1",128,0,0,-276
	.stabs "IFILECOUNT:1",128,0,0,-280
	.stabs "FILESTRUCT:Tt249=s20PSFILENAME:250=*13,0,32;PSFILEPATH:251=*13,32,32;PSSCRIPT:252=*13,64,32;ULINENUMBER:1,96,32;USTSTART:1,128,32;;",128,0,0,0
	.stabs "FBARRAY1:Tt247=s36DATA:248=*249,0,32;PTR:253=*249,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:254=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "AFILE:247",128,0,0,-316
	.stabs "FBARRAY1:Tt255=s36DATA:256=*1,0,32;PTR:257=*1,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:258=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "IFILESTACK:255",128,0,0,-352
	.stabs "SMAINFILE:13",128,0,0,-364
	.stabs "SMAINPATH:13",128,0,0,-376
	.stabn 192,0,0,.L_489A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_489F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48A1-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48A2-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48A4-_LEGOSCRIPTTOLDRAW@8
	.stabs "ISTNEXT:1",128,0,0,-380
	.stabs "IERRTOKEN:1",128,0,0,-384
	.stabs "ITOKCNT:1",128,0,0,-388
	.stabs "ICURTOKEN:1",128,0,0,-392
	.stabs "TCONN:236",128,0,0,-408
	.stabn 192,0,0,.L_48A7-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48AA-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48AD-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48AE-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48AF-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48B0-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48B1-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48B4-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48B5-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48B8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48C9-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48CC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48CF-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48D2-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48D3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48D4-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48D5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48D6-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48D7-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48D8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48D9-_LEGOSCRIPTTOLDRAW@8
	.stabs "ICURTOKEN:1",128,0,0,-412
	.stabn 192,0,0,.L_48DC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48DD-_LEGOSCRIPTTOLDRAW@8
	.stabs "IEND:1",128,0,0,-428
	.stabs "SFILE:13",128,0,0,-448
	.stabs "SFILEL:13",128,0,0,-460
	.stabs "ILOADEDFILE:1",128,0,0,-464
	.stabn 192,0,0,.L_48E3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48E6-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_48F2-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_48F5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4903-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4909-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4915-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_491A-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4926-_LEGOSCRIPTTOLDRAW@8
	.stabs "N:1",128,0,0,-468
	.stabn 192,0,0,.L_4927-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_492D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4930-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4931-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4934-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4935-_LEGOSCRIPTTOLDRAW@8
	.stabs "I:1",128,0,0,-476
	.stabn 192,0,0,.L_4936-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_493C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_493F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_494B-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_494C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_494D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_494E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_494F-_LEGOSCRIPTTOLDRAW@8
	.stabs "PSSCRIPT:259=*13",128,0,0,-472
	.stabn 192,0,0,.L_4952-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4957-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4965-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4966-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_496C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_496D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_496E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4970-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4971-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4975-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4976-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4978-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4984-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4985-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4986-_LEGOSCRIPTTOLDRAW@8
	.stabs "N:1",128,0,0,-412
	.stabn 192,0,0,.L_4987-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_498D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4990-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4991-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4992-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4993-_LEGOSCRIPTTOLDRAW@8
	.stabs "ERRORCODES:T260=eECNOTFOUND:-999,ECFAILEDTOLOAD:-998,ECFAILEDTOPARSE:-997,ECNUMBEROVERFLOW:-996,ECNOTANUMBER:-995,ECALREADYEXIST:-994,ECSUCCESS:0,;",128,0,0,0
	.stabs "INAME:260",128,0,0,-412
	.stabs "BEXISTING:16",128,0,0,-416
	.stabs "BDEFINEDXROT:2",128,0,0,-420
	.stabs "BDEFINEDYROT:2",128,0,0,-424
	.stabs "BDEFINEDZROT:2",128,0,0,-428
	.stabs "BDEFINEDXOFF:2",128,0,0,-432
	.stabs "BDEFINEDYOFF:2",128,0,0,-436
	.stabs "BDEFINEDZOFF:2",128,0,0,-440
	.stabn 192,0,0,.L_4997-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_499A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_499F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49AB-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49AE-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49BC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49BF-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49CB-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49D0-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49DE-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49DF-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49E0-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49E4-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49E5-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49E6-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49E9-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_49F7-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_49FA-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A06-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A07-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A08-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A0B-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A0E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A0F-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A12-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A1E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A1F-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A22-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A23-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A24-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A25-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A28-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A34-_LEGOSCRIPTTOLDRAW@8
	.stabs "BATTIGNORED:2",128,0,0,-448
	.stabn 192,0,0,.L_4A35-_LEGOSCRIPTTOLDRAW@8
	.stabs "STHISTOKEN:13",128,0,0,-460
	.stabn 192,0,0,.L_4A3A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A3D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A40-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A4C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A4D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A52-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A55-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A62-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A63-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A64-_LEGOSCRIPTTOLDRAW@8
	.stabs "ICONN:1",128,0,0,-472
	.stabs "PMODEL:261=*101",128,0,0,-476
	.stabs "PSNAP:262=*210",128,0,0,-480
	.stabn 192,0,0,.L_4A6C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A6F-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A72-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A80-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A81-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A82-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A85-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A93-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4A94-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4A97-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AA3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AA6-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AB2-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AB3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AB5-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4ABA-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4ABD-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AD5-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AD8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AD9-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4ADA-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4ADB-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4ADC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4ADF-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AE2-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AF5-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AF8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AF9-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4AFA-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AFB-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AFC-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AFD-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4AFE-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B01-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B0D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B0E-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B11-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B14-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B22-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B23-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B26-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B29-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B35-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B36-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B3C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B3F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B4B-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B4C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B4E-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B51-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B5D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B5F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B60-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B61-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B65-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B68-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B74-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B75-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B7A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B7D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B89-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B8A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B8C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4B8F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B9B-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B9C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B9D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4B9E-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BA1-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BA4-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BB0-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BB1-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BB6-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BB9-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BC5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BC6-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BC8-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BCB-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BD7-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BD8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BD9-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BDA-_LEGOSCRIPTTOLDRAW@8
	.stabs "ICOLOR:1",128,0,0,-472
	.stabn 192,0,0,.L_4BDD-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BE0-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BEC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4BEF-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4BFD-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C00-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C0E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C0F-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C11-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C1F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C20-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C21-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C22-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C23-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C24-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C29-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C2E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C3A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C3F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C4B-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C50-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C5C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C5D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C5E-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C61-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C62-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C63-_LEGOSCRIPTTOLDRAW@8
	.stabs "ZTEMP:4",128,0,0,-632
	.stabs "PLEFT:263=*212",128,0,0,-636
	.stabs "PRIGHT:264=*212",128,0,0,-640
	.stabs "TVEC3:265=ar1;0;2;11",128,0,0,-652
	.stabs "BFIRSTCONNECT:2",128,0,0,-692
	.stabn 192,0,0,.L_4C66-_LEGOSCRIPTTOLDRAW@8
	.stabs "BDIDCONNECT:2",128,0,0,-696
	.stabs "BHAVESTRAYCONNECTIONS:2",128,0,0,-700
	.stabn 192,0,0,.L_4C6B-_LEGOSCRIPTTOLDRAW@8
	.stabs "I:1",128,0,0,-704
	.stabn 192,0,0,.L_4C6C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C72-_LEGOSCRIPTTOLDRAW@8
	.stabs "PSNAP:266=*210",128,0,0,-716
	.stabs "PMODEL:267=*101",128,0,0,-720
	.stabs "PTLOCATION:268=*212",128,0,0,-724
	.stabs "PLEFTPART:269=*233",128,0,0,-728
	.stabs "IRIGHTPART_:1",128,0,0,-732
	.stabn 192,0,0,.L_4C73-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C77-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C7A-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C7B-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C7C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C7D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C7E-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C7F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C80-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C81-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C82-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C85-_LEGOSCRIPTTOLDRAW@8
	.stabs "ICOLOR:1",128,0,0,-744
	.stabs "PSPRIMATIVE:270=*13",128,0,0,-748
	.stabn 192,0,0,.L_4C86-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C8C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C8D-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C90-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C91-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C94-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C95-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C96-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C99-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C9A-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C9B-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4C9C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C9D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C9E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4C9F-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CA0-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CA3-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CA4-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CA5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CA6-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CA7-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CAA-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CAB-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CAC-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CAD-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CB2-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CB3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CB6-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CB7-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CB9-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CBB-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CBC-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CBD-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CC0-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CC1-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CC2-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CC3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CC8-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CC9-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CCC-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CCD-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CCF-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CD0-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CD1-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CD2-_LEGOSCRIPTTOLDRAW@8
	.stabs "TVEC3R:271=ar1;0;2;11",128,0,0,-748
	.stabs "TPART:102",128,0,0,-808
	.stabs "IIDX:1",128,0,0,-812
	.stabs "ICOLOR:1",128,0,0,-820
	.stabs "PSPRIMATIVE:272=*13",128,0,0,-824
	.stabn 192,0,0,.L_4CD3-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CD7-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CD9-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CDC-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CDE-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CE1-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CE2-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CE5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CE6-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CE9-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CEA-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CEE-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CEF-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CF2-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CF4-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CF5-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CF6-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CF7-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4CF8-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4CFB-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D00-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D01-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D02-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D03-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D04-_LEGOSCRIPTTOLDRAW@8
	.stabs "N:1",128,0,0,-380
	.stabn 192,0,0,.L_4D05-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D0B-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D0C-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D10-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D12-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D15-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D17-_LEGOSCRIPTTOLDRAW@8
	.stabn 192,0,0,.L_4D1A-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D1C-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D1D-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D1E-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_4D1F-_LEGOSCRIPTTOLDRAW@8
	.stabn 224,0,0,.L_489B-_LEGOSCRIPTTOLDRAW@8
.L_4E54:
	.stabs "",36,0,0,.L_4E54-_LEGOSCRIPTTOLDRAW@8
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\PARTSEARCH.BAS",132,0,0,.L_4E61
.L_4E61:
	.stabs "HASHNAME:F6",36,0,61,_HASHNAME@4
	.stabs "SNAME:v13",160,0,0,8
.balign 16

.globl _HASHNAME@4
_HASHNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,61,_HASHNAME@4-_HASHNAME@4
	mov word ptr [ebp-4], 0
.L_4E56:
.L_4E62:
	mov dword ptr [ebp-8], 65535
.stabn 68,0,62,.L_4E62-_HASHNAME@4
.L_4E63:
	mov dword ptr [ebp-12], 0
.stabn 68,0,63,.L_4E63-_HASHNAME@4
.L_4E64:
.L_4E58:
.L_4E5B:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-12]
	movzx eax, byte ptr [ebx]
	test eax, eax
	jne .L_4E5D
.L_4E5E:
	mov eax, dword ptr [ebp-12]
	add eax, dword ptr [ebp-8]
	and eax, 65535
	mov word ptr [ebp-4], ax
	jmp .L_4E57
.L_4E5D:
.L_4E5F:
.stabn 68,0,65,.L_4E64-_HASHNAME@4
.L_4E65:
	mov eax, dword ptr [ebp-8]
	imul eax, 19
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [ebx]
	add ecx, dword ptr [ebp-12]
	movzx ebx, byte ptr [ecx]
	or ebx, 32
	add eax, ebx
	mov ecx, eax
	add ecx, 4294967248
	mov ebx, ecx
	mov dword ptr [ebp-8], ebx
.stabn 68,0,66,.L_4E65-_HASHNAME@4
.L_4E66:
	inc dword ptr [ebp-12]
.stabn 68,0,67,.L_4E66-_HASHNAME@4
.L_4E67:
.L_4E60:
.L_4E5A:
	jmp .L_4E58
.L_4E59:
.stabn 68,0,68,.L_4E67-_HASHNAME@4
.L_4E68:
.L_4E57:
	mov ax, word ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,69,.L_4E57-_HASHNAME@4
	.stabs "IHASH:1",128,0,0,-8
	.stabs "I:1",128,0,0,-12
	.stabn 192,0,0,.L_4E56-_HASHNAME@4
	.stabn 192,0,0,.L_4E5B-_HASHNAME@4
	.stabn 192,0,0,.L_4E5E-_HASHNAME@4
	.stabn 224,0,0,.L_4E5F-_HASHNAME@4
	.stabn 224,0,0,.L_4E60-_HASHNAME@4
	.stabn 224,0,0,.L_4E57-_HASHNAME@4
.L_4E69:
	.stabs "",36,0,0,.L_4E69-_HASHNAME@4
	.stabs "COMPAREPARTNAMES:F1",36,0,70,_COMPAREPARTNAMES@8
	.stabs "PBA:p273=*3",160,0,0,8
	.stabs "PBB:p274=*3",160,0,0,12
.balign 16

.globl _COMPAREPARTNAMES@8
_COMPAREPARTNAMES@8:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,70,_COMPAREPARTNAMES@8-_COMPAREPARTNAMES@8
	mov dword ptr [ebp-4], 0
.L_4E6A:
.L_4E79:
.L_4E6C:
.L_4E6F:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	or ebx, 32
	mov dword ptr [ebp-8], ebx
	mov ebx, dword ptr [ebp+12]
	movzx eax, byte ptr [ebx]
	or eax, 32
	mov dword ptr [ebp-12], eax
.stabn 68,0,72,.L_4E79-_COMPAREPARTNAMES@8
.L_4E7A:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	je .L_4E71
.L_4E72:
	mov eax, dword ptr [ebp-8]
	sub eax, dword ptr [ebp-12]
	mov dword ptr [ebp-4], eax
	jmp .L_4E6B
.L_4E71:
.L_4E73:
.stabn 68,0,73,.L_4E7A-_COMPAREPARTNAMES@8
.L_4E7B:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_4E75
.L_4E76:
	mov dword ptr [ebp-4], 0
	jmp .L_4E6B
.L_4E75:
.L_4E77:
.stabn 68,0,74,.L_4E7B-_COMPAREPARTNAMES@8
.L_4E7C:
	inc dword ptr [ebp+8]
	inc dword ptr [ebp+12]
.stabn 68,0,75,.L_4E7C-_COMPAREPARTNAMES@8
.L_4E7D:
.L_4E78:
.L_4E6E:
	jmp .L_4E6C
.L_4E6D:
.stabn 68,0,76,.L_4E7D-_COMPAREPARTNAMES@8
.L_4E7E:
.L_4E6B:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,77,.L_4E6B-_COMPAREPARTNAMES@8
	.stabn 192,0,0,.L_4E6A-_COMPAREPARTNAMES@8
	.stabs "IA:1",128,0,0,-8
	.stabs "IB:1",128,0,0,-12
	.stabn 192,0,0,.L_4E6F-_COMPAREPARTNAMES@8
	.stabn 192,0,0,.L_4E72-_COMPAREPARTNAMES@8
	.stabn 224,0,0,.L_4E73-_COMPAREPARTNAMES@8
	.stabn 192,0,0,.L_4E76-_COMPAREPARTNAMES@8
	.stabn 224,0,0,.L_4E77-_COMPAREPARTNAMES@8
	.stabn 224,0,0,.L_4E78-_COMPAREPARTNAMES@8
	.stabn 224,0,0,.L_4E6B-_COMPAREPARTNAMES@8
.L_4E7F:
	.stabs "",36,0,0,.L_4E7F-_COMPAREPARTNAMES@8
	.stabs "COMPAREPARTIALNAMES:F1",36,0,78,_COMPAREPARTIALNAMES@8
	.stabs "PBA:p275=*3",160,0,0,8
	.stabs "PBB:p276=*3",160,0,0,12
.balign 16

.globl _COMPAREPARTIALNAMES@8
_COMPAREPARTIALNAMES@8:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,78,_COMPAREPARTIALNAMES@8-_COMPAREPARTIALNAMES@8
	mov dword ptr [ebp-4], 0
.L_4E80:
.L_4E8F:
.L_4E82:
.L_4E85:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	or ebx, 32
	mov dword ptr [ebp-8], ebx
	mov ebx, dword ptr [ebp+12]
	movzx eax, byte ptr [ebx]
	or eax, 32
	mov dword ptr [ebp-12], eax
.stabn 68,0,80,.L_4E8F-_COMPAREPARTIALNAMES@8
.L_4E90:
	mov eax, dword ptr [ebp+8]
	movzx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_4E87
.L_4E88:
	mov dword ptr [ebp-4], 0
	jmp .L_4E81
.L_4E87:
.L_4E89:
.stabn 68,0,81,.L_4E90-_COMPAREPARTIALNAMES@8
.L_4E91:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ebx
	je .L_4E8B
.L_4E8C:
	mov ebx, dword ptr [ebp-8]
	sub ebx, dword ptr [ebp-12]
	mov dword ptr [ebp-4], ebx
	jmp .L_4E81
.L_4E8B:
.L_4E8D:
.stabn 68,0,82,.L_4E91-_COMPAREPARTIALNAMES@8
.L_4E92:
	inc dword ptr [ebp+8]
	inc dword ptr [ebp+12]
.stabn 68,0,83,.L_4E92-_COMPAREPARTIALNAMES@8
.L_4E93:
.L_4E8E:
.L_4E84:
	jmp .L_4E82
.L_4E83:
.stabn 68,0,84,.L_4E93-_COMPAREPARTIALNAMES@8
.L_4E94:
.L_4E81:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,85,.L_4E81-_COMPAREPARTIALNAMES@8
	.stabn 192,0,0,.L_4E80-_COMPAREPARTIALNAMES@8
	.stabs "IA:1",128,0,0,-8
	.stabs "IB:1",128,0,0,-12
	.stabn 192,0,0,.L_4E85-_COMPAREPARTIALNAMES@8
	.stabn 192,0,0,.L_4E88-_COMPAREPARTIALNAMES@8
	.stabn 224,0,0,.L_4E89-_COMPAREPARTIALNAMES@8
	.stabn 192,0,0,.L_4E8C-_COMPAREPARTIALNAMES@8
	.stabn 224,0,0,.L_4E8D-_COMPAREPARTIALNAMES@8
	.stabn 224,0,0,.L_4E8E-_COMPAREPARTIALNAMES@8
	.stabn 224,0,0,.L_4E81-_COMPAREPARTIALNAMES@8
.L_4E95:
	.stabs "",36,0,0,.L_4E95-_COMPAREPARTIALNAMES@8
	.stabs "SEARCHPARTSTRUCT:Tt278=s65664IPARTINDEX:8,0,32;IPREV:8,32,32;QDATA:10,64,64;WFLAGS:6,128,16;IFOLDER:3,144,8;BTYPE:3,152,8;ZDESC:4,160,864;ZNAME:4,1024,524280;;",128,0,0,0
	.stabs "FINDPART:F277=*278",36,0,86,_FINDPART@4
	.stabs "SNAME:v13",160,0,0,8
.balign 16

.globl _FINDPART@4
_FINDPART@4:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,86,_FINDPART@4-_FINDPART@4
	mov dword ptr [ebp-4], 0
.L_4E96:
.L_4EA4:
	push dword ptr [ebp+8]
	call _HASHNAME@4
	mov word ptr [ebp-8], ax
.stabn 68,0,87,.L_4EA4-_FINDPART@4
.L_4EA5:
	movzx eax, word ptr [ebp-8]
	mov ebx, dword ptr [_G_LHASHLIST+eax*4]
	mov dword ptr [ebp-12], ebx
.stabn 68,0,88,.L_4EA5-_FINDPART@4
.L_4EA6:
	push 0
	push -1
	push 5
	push offset _Lt_4686
	push -1
	push dword ptr [ebp+8]
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea ebx, [ebp-36]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrInit@20
	mov eax, dword ptr [ebp-24]
	mov dword ptr [ebp-40], eax
.stabn 68,0,89,.L_4EA6-_FINDPART@4
.L_4EA7:
.L_4E99:
	cmp dword ptr [ebp-12], 0
	je .L_4E9A
.L_4E9B:
.stabn 68,0,91,.L_4EA7-_FINDPART@4
.L_4EA8:
.L_4E9C:
	mov eax, dword ptr [_G_PPARTSNAMES]
	add eax, dword ptr [ebp-12]
	mov dword ptr [ebp-44], eax
.stabn 68,0,92,.L_4EA8-_FINDPART@4
.L_4EA9:
	mov eax, dword ptr [ebp-44]
	lea ebx, [eax+128]
	push ebx
	push dword ptr [ebp-40]
	call _COMPAREPARTNAMES@8
	test eax, eax
	jne .L_4E9F
.L_4EA0:
	mov eax, dword ptr [_G_PPARTSNAMES]
	add eax, dword ptr [ebp-12]
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_4E97
.L_4E9F:
.L_4EA1:
.stabn 68,0,94,.L_4EA9-_FINDPART@4
.L_4EAA:
	mov eax, dword ptr [ebp-44]
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-12], ebx
.stabn 68,0,95,.L_4EAA-_FINDPART@4
.L_4EAB:
.L_4EA2:
.L_4EA3:
	jmp .L_4E99
.L_4E9A:
.stabn 68,0,97,.L_4EAB-_FINDPART@4
.L_4EAC:
	mov dword ptr [ebp-4], 0
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrDelete@4
	jmp .L_4E97
.stabn 68,0,99,.L_4EAC-_FINDPART@4
.L_4EAD:
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrDelete@4
.L_4E97:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,100,.L_4E97-_FINDPART@4
	.stabs "IHASH:6",128,0,0,-8
	.stabs "IOFFSET:8",128,0,0,-12
	.stabs "SNAMEL:13",128,0,0,-24
	.stabs "PBNAME:279=*3",128,0,0,-40
	.stabn 192,0,0,.L_4E96-_FINDPART@4
	.stabn 192,0,0,.L_4E9B-_FINDPART@4
	.stabn 192,0,0,.L_4E9C-_FINDPART@4
	.stabn 192,0,0,.L_4EA0-_FINDPART@4
	.stabn 224,0,0,.L_4EA1-_FINDPART@4
	.stabn 224,0,0,.L_4EA2-_FINDPART@4
	.stabn 224,0,0,.L_4EA3-_FINDPART@4
	.stabn 224,0,0,.L_4E97-_FINDPART@4
.L_4EAE:
	.stabs "",36,0,0,.L_4EAE-_FINDPART@4
	.stabs "COMPAREINDEXEDPARTNAME:F1",36,0,101,_COMPAREINDEXEDPARTNAME
	.stabs "PA:p280=*7",160,0,0,8
	.stabs "PB:p281=*7",160,0,0,12
.balign 16

.globl _COMPAREINDEXEDPARTNAME
_COMPAREINDEXEDPARTNAME:
	push ebp
	mov ebp, esp
	sub esp, 16
	push ebx
	.stabn 68,0,101,_COMPAREINDEXEDPARTNAME-_COMPAREINDEXEDPARTNAME
	mov dword ptr [ebp-4], 0
.L_4EAF:
.L_4EB5:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	lea eax, [ebx+128]
	mov dword ptr [ebp-8], eax
.stabn 68,0,103,.L_4EB5-_COMPAREINDEXEDPARTNAME
.L_4EB6:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	lea eax, [ebx+128]
	mov dword ptr [ebp-12], eax
.stabn 68,0,104,.L_4EB6-_COMPAREINDEXEDPARTNAME
.L_4EB7:
	push dword ptr [ebp-12]
	push dword ptr [ebp-8]
	call _COMPAREPARTNAMES@8
	mov dword ptr [ebp-16], eax
.stabn 68,0,105,.L_4EB7-_COMPAREINDEXEDPARTNAME
.L_4EB8:
	cmp dword ptr [ebp-16], 0
	jne .L_4EB2
.L_4EB3:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	movzx eax, byte ptr [ebx+18]
	mov ebx, dword ptr [ebp+12]
	mov ecx, dword ptr [_G_PPARTSNAMES]
	add ecx, dword ptr [ebx]
	movzx ebx, byte ptr [ecx+18]
	sub eax, ebx
	mov dword ptr [ebp-4], eax
	jmp .L_4EB0
.L_4EB2:
.L_4EB4:
.stabn 68,0,106,.L_4EB8-_COMPAREINDEXEDPARTNAME
.L_4EB9:
	push dword ptr [ebp-12]
	push dword ptr [ebp-8]
	call _COMPAREPARTNAMES@8
	mov dword ptr [ebp-4], eax
.stabn 68,0,107,.L_4EB9-_COMPAREINDEXEDPARTNAME
.L_4EBA:
.L_4EB0:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,108,.L_4EB0-_COMPAREINDEXEDPARTNAME
	.stabs "PBA:282=*3",128,0,0,-8
	.stabs "PBB:283=*3",128,0,0,-12
	.stabs "IRESU:1",128,0,0,-16
	.stabn 192,0,0,.L_4EAF-_COMPAREINDEXEDPARTNAME
	.stabn 192,0,0,.L_4EB3-_COMPAREINDEXEDPARTNAME
	.stabn 224,0,0,.L_4EB4-_COMPAREINDEXEDPARTNAME
	.stabn 224,0,0,.L_4EB0-_COMPAREINDEXEDPARTNAME
.L_4EBB:
	.stabs "",36,0,0,.L_4EBB-_COMPAREINDEXEDPARTNAME
	.stabs "FINDPARTINDEX:F1",36,0,109,_FINDPARTINDEX@4
	.stabs "SNAME:v13",160,0,0,8
.balign 16

.globl _FINDPARTINDEX@4
_FINDPARTINDEX@4:
	push ebp
	mov ebp, esp
	sub esp, 52
	push ebx
	.stabn 68,0,109,_FINDPARTINDEX@4-_FINDPARTINDEX@4
	mov dword ptr [ebp-4], 0
.L_4EBC:
.L_4ED6:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [_G_LPARTCOUNT]
	add eax, 4294967295
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,110,.L_4ED6-_FINDPARTINDEX@4
.L_4ED7:
	push 0
	push -1
	push 5
	push offset _Lt_4686
	push -1
	push dword ptr [ebp+8]
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea ebx, [ebp-36]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrInit@20
	mov eax, dword ptr [ebp-24]
	mov dword ptr [ebp-40], eax
.stabn 68,0,111,.L_4ED7-_FINDPARTINDEX@4
.L_4ED8:
.L_4EBF:
.L_4EC2:
	mov eax, dword ptr [ebp-12]
	add eax, dword ptr [ebp-8]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [ebp-44], eax
.stabn 68,0,113,.L_4ED8-_FINDPARTINDEX@4
.L_4ED9:
	mov eax, dword ptr [ebp-44]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	lea eax, [ebx+128]
	mov dword ptr [ebp-48], eax
.stabn 68,0,115,.L_4ED9-_FINDPARTINDEX@4
.L_4EDA:
	push dword ptr [ebp-48]
	push dword ptr [ebp-40]
	call _COMPAREPARTNAMES@8
	mov dword ptr [ebp-52], eax
.stabn 68,0,116,.L_4EDA-_FINDPARTINDEX@4
.L_4EDB:
	cmp dword ptr [ebp-52], 0
	jne .L_4EC4
.L_4EC5:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EBD
.L_4EC4:
.L_4EC6:
.stabn 68,0,118,.L_4EDB-_FINDPARTINDEX@4
.L_4EDC:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jne .L_4EC8
.L_4EC9:
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EBD
.L_4EC8:
.L_4ECA:
.stabn 68,0,119,.L_4EDC-_FINDPARTINDEX@4
.L_4EDD:
	cmp dword ptr [ebp-52], 0
	jle .L_4ECC
.L_4ECD:
	mov eax, dword ptr [ebp-44]
	inc eax
	mov dword ptr [ebp-8], eax
.L_4ECE:
	jmp .L_4ECB
.L_4ECC:
.L_4ECF:
	mov eax, dword ptr [ebp-44]
	dec eax
	mov dword ptr [ebp-12], eax
.L_4ECB:
.L_4ED0:
.stabn 68,0,120,.L_4EDD-_FINDPARTINDEX@4
.L_4EDE:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_4ED2
.L_4ED3:
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EBD
.L_4ED2:
.L_4ED4:
.stabn 68,0,121,.L_4EDE-_FINDPARTINDEX@4
.L_4EDF:
.L_4ED5:
.L_4EC1:
	jmp .L_4EBF
.L_4EC0:
.stabn 68,0,122,.L_4EDF-_FINDPARTINDEX@4
.L_4EE0:
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
.L_4EBD:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,123,.L_4EBD-_FINDPARTINDEX@4
	.stabs "UFIRST:1",128,0,0,-8
	.stabs "ULAST:1",128,0,0,-12
	.stabs "SNAMEL:13",128,0,0,-24
	.stabs "PNAME:284=*3",128,0,0,-40
	.stabn 192,0,0,.L_4EBC-_FINDPARTINDEX@4
	.stabs "UMID:1",128,0,0,-44
	.stabs "PBB:285=*3",128,0,0,-48
	.stabs "UCMP:1",128,0,0,-52
	.stabn 192,0,0,.L_4EC2-_FINDPARTINDEX@4
	.stabn 192,0,0,.L_4EC5-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4EC6-_FINDPARTINDEX@4
	.stabn 192,0,0,.L_4EC9-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4ECA-_FINDPARTINDEX@4
	.stabn 192,0,0,.L_4ECD-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4ECE-_FINDPARTINDEX@4
	.stabn 192,0,0,.L_4ECF-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4ED0-_FINDPARTINDEX@4
	.stabn 192,0,0,.L_4ED3-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4ED4-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4ED5-_FINDPARTINDEX@4
	.stabn 224,0,0,.L_4EBD-_FINDPARTINDEX@4
.L_4EE1:
	.stabs "",36,0,0,.L_4EE1-_FINDPARTINDEX@4
	.stabs "SEARCHPART:F1",36,0,124,_SEARCHPART@8
	.stabs "SNAME:v13",160,0,0,8
	.stabs "IPREV:p1",160,0,0,12
.balign 16

.globl _SEARCHPART@8
_SEARCHPART@8:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,124,_SEARCHPART@8-_SEARCHPART@8
	mov dword ptr [ebp-4], 0
.L_4EE2:
.L_4F0C:
	mov dword ptr [ebp-8], 0
	mov eax, dword ptr [_G_LPARTCOUNT]
	add eax, 4294967295
	mov ebx, eax
	mov dword ptr [ebp-12], ebx
.stabn 68,0,125,.L_4F0C-_SEARCHPART@8
.L_4F0D:
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	lea ebx, [ebp-28]
	push ebx
	call _fb_StrInit@20
	mov ebx, dword ptr [ebp-28]
	mov dword ptr [ebp-32], ebx
.stabn 68,0,126,.L_4F0D-_SEARCHPART@8
.L_4F0E:
	cmp dword ptr [ebp+12], 0
	jge .L_4EE5
.L_4EE6:
.stabn 68,0,127,.L_4F0E-_SEARCHPART@8
.L_4F0F:
.L_4EE7:
.L_4EEA:
	mov ebx, dword ptr [ebp-12]
	add ebx, dword ptr [ebp-8]
	mov ecx, 2
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	mov dword ptr [ebp-16], ebx
.stabn 68,0,129,.L_4F0F-_SEARCHPART@8
.L_4F10:
	mov ebx, dword ptr [ebp-16]
	sal ebx, 2
	add ebx, dword ptr [_G_LPARTINDEX]
	mov eax, dword ptr [_G_PPARTSNAMES]
	add eax, dword ptr [ebx]
	lea ebx, [eax+128]
	mov dword ptr [ebp-40], ebx
.stabn 68,0,130,.L_4F10-_SEARCHPART@8
.L_4F11:
	push dword ptr [ebp-40]
	push dword ptr [ebp-32]
	call _COMPAREPARTIALNAMES@8
	mov dword ptr [ebp-44], eax
.stabn 68,0,131,.L_4F11-_SEARCHPART@8
.L_4F12:
	cmp dword ptr [ebp-44], 0
	jne .L_4EEC
.L_4EED:
	jmp .L_4EE8
.L_4EEC:
.L_4EEE:
.stabn 68,0,133,.L_4F12-_SEARCHPART@8
.L_4F13:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jne .L_4EF0
.L_4EF1:
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EE3
.L_4EF0:
.L_4EF2:
.stabn 68,0,134,.L_4F13-_SEARCHPART@8
.L_4F14:
	cmp dword ptr [ebp-44], 0
	jle .L_4EF4
.L_4EF5:
	mov eax, dword ptr [ebp-16]
	inc eax
	mov dword ptr [ebp-8], eax
.L_4EF6:
	jmp .L_4EF3
.L_4EF4:
.L_4EF7:
	mov eax, dword ptr [ebp-16]
	dec eax
	mov dword ptr [ebp-12], eax
.L_4EF3:
.L_4EF8:
.stabn 68,0,135,.L_4F14-_SEARCHPART@8
.L_4F15:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], eax
	jle .L_4EFA
.L_4EFB:
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EE3
.L_4EFA:
.L_4EFC:
.stabn 68,0,136,.L_4F15-_SEARCHPART@8
.L_4F16:
.L_4EFD:
.L_4EE9:
	jmp .L_4EE7
.L_4EE8:
.stabn 68,0,137,.L_4F16-_SEARCHPART@8
.L_4F17:
.L_4EFE:
	cmp dword ptr [ebp-16], 0
	jle .L_4F00
	mov eax, dword ptr [ebp-16]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax-4]
	lea eax, [ebx+128]
	push eax
	push dword ptr [ebp-32]
	call _COMPAREPARTIALNAMES@8
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-36], eax
	jmp .L_4F0B
.L_4F00:
	mov dword ptr [ebp-36], 0
.L_4F0B:
	cmp dword ptr [ebp-36], 0
	je .L_4EFF
.L_4F02:
.stabn 68,0,139,.L_4F17-_SEARCHPART@8
.L_4F19:
	dec dword ptr [ebp-16]
.stabn 68,0,140,.L_4F19-_SEARCHPART@8
.L_4F1A:
.L_4F03:
	jmp .L_4EFE
.L_4EFF:
.stabn 68,0,141,.L_4F1A-_SEARCHPART@8
.L_4F1B:
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EE3
.stabn 68,0,142,.L_4F1B-_SEARCHPART@8
.L_4F1C:
.L_4F04:
	jmp .L_4EE4
.L_4EE5:
.L_4F05:
.stabn 68,0,143,.L_4F1C-_SEARCHPART@8
.L_4F1D:
	mov eax, dword ptr [ebp+12]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax+4]
	lea eax, [ebx+128]
	push eax
	push dword ptr [ebp-32]
	call _COMPAREPARTIALNAMES@8
	test eax, eax
	je .L_4F07
.L_4F08:
	mov dword ptr [ebp-4], -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EE3
.L_4F07:
.L_4F09:
.stabn 68,0,144,.L_4F1D-_SEARCHPART@8
.L_4F1E:
	mov eax, dword ptr [ebp+12]
	inc eax
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_4EE3
.stabn 68,0,145,.L_4F1E-_SEARCHPART@8
.L_4F1F:
.L_4F0A:
.L_4EE4:
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
.L_4EE3:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,147,.L_4EE3-_SEARCHPART@8
	.stabs "UFIRST:1",128,0,0,-8
	.stabs "ULAST:1",128,0,0,-12
	.stabs "UMID:1",128,0,0,-16
	.stabs "SNAMEL:13",128,0,0,-28
	.stabs "PNAME:286=*3",128,0,0,-32
	.stabn 192,0,0,.L_4EE2-_SEARCHPART@8
	.stabn 192,0,0,.L_4EE6-_SEARCHPART@8
	.stabs "PBB:287=*3",128,0,0,-40
	.stabs "UCMP:1",128,0,0,-44
	.stabn 192,0,0,.L_4EEA-_SEARCHPART@8
	.stabn 192,0,0,.L_4EED-_SEARCHPART@8
	.stabn 224,0,0,.L_4EEE-_SEARCHPART@8
	.stabn 192,0,0,.L_4EF1-_SEARCHPART@8
	.stabn 224,0,0,.L_4EF2-_SEARCHPART@8
	.stabn 192,0,0,.L_4EF5-_SEARCHPART@8
	.stabn 224,0,0,.L_4EF6-_SEARCHPART@8
	.stabn 192,0,0,.L_4EF7-_SEARCHPART@8
	.stabn 224,0,0,.L_4EF8-_SEARCHPART@8
	.stabn 192,0,0,.L_4EFB-_SEARCHPART@8
	.stabn 224,0,0,.L_4EFC-_SEARCHPART@8
	.stabn 224,0,0,.L_4EFD-_SEARCHPART@8
	.stabn 192,0,0,.L_4F02-_SEARCHPART@8
	.stabn 224,0,0,.L_4F03-_SEARCHPART@8
	.stabn 224,0,0,.L_4F04-_SEARCHPART@8
	.stabn 192,0,0,.L_4F05-_SEARCHPART@8
	.stabn 192,0,0,.L_4F08-_SEARCHPART@8
	.stabn 224,0,0,.L_4F09-_SEARCHPART@8
	.stabn 224,0,0,.L_4F0A-_SEARCHPART@8
	.stabn 224,0,0,.L_4EE3-_SEARCHPART@8
.L_4F20:
	.stabs "",36,0,0,.L_4F20-_SEARCHPART@8
	.stabs "INSTRWHOLE:F1",36,0,149,_INSTRWHOLE@8
	.stabs "STEXT:v13",160,0,0,8
	.stabs "SSEARCH:v13",160,0,0,12
.balign 16

.globl _INSTRWHOLE@8
_INSTRWHOLE@8:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,149,_INSTRWHOLE@8-_INSTRWHOLE@8
	mov dword ptr [ebp-4], 0
.L_4F21:
.L_4F31:
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push 1
	call _fb_StrInstr@12
	mov dword ptr [ebp-8], eax
.stabn 68,0,150,.L_4F31-_INSTRWHOLE@8
.L_4F32:
	cmp dword ptr [ebp-8], 0
	jne .L_4F24
.L_4F25:
	mov dword ptr [ebp-4], 0
	jmp .L_4F22
.L_4F24:
.L_4F26:
.stabn 68,0,151,.L_4F32-_INSTRWHOLE@8
.L_4F33:
.L_4F27:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [eax]
	add ebx, dword ptr [ebp-8]
	push -1
	push dword ptr [ebp+12]
	call _fb_StrLen@8
	add ebx, eax
	mov al, byte ptr [ebx-1]
	mov byte ptr [ebp-12], al
.stabn 68,0,152,.L_4F33-_INSTRWHOLE@8
.L_4F34:
	movzx eax, byte ptr [ebp-12]
	cmp eax, 48
	jb .L_4F2C
	movzx eax, byte ptr [ebp-12]
	cmp eax, 57
	jbe .L_4F2B
.L_4F2C:
	movzx eax, byte ptr [ebp-12]
	cmp eax, 65
	jb .L_4F2D
	movzx eax, byte ptr [ebp-12]
	cmp eax, 90
	jbe .L_4F2B
.L_4F2D:
	movzx eax, byte ptr [ebp-12]
	cmp eax, 97
	jb .L_4F2A
	movzx eax, byte ptr [ebp-12]
	cmp eax, 122
	ja .L_4F2A
.L_4F2B:
.L_4F2E:
.stabn 68,0,153,.L_4F34-_INSTRWHOLE@8
.L_4F35:
	mov dword ptr [ebp-4], 0
	jmp .L_4F22
.stabn 68,0,154,.L_4F35-_INSTRWHOLE@8
.L_4F36:
.L_4F2F:
.L_4F2A:
.L_4F28:
.L_4F30:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,156,.L_4F36-_INSTRWHOLE@8
.L_4F37:
.L_4F22:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,157,.L_4F22-_INSTRWHOLE@8
	.stabs "IRESU:1",128,0,0,-8
	.stabn 192,0,0,.L_4F21-_INSTRWHOLE@8
	.stabn 192,0,0,.L_4F25-_INSTRWHOLE@8
	.stabn 224,0,0,.L_4F26-_INSTRWHOLE@8
	.stabn 192,0,0,.L_4F27-_INSTRWHOLE@8
	.stabn 192,0,0,.L_4F2E-_INSTRWHOLE@8
	.stabn 224,0,0,.L_4F2F-_INSTRWHOLE@8
	.stabn 224,0,0,.L_4F30-_INSTRWHOLE@8
	.stabn 224,0,0,.L_4F22-_INSTRWHOLE@8
.L_4F38:
	.stabs "",36,0,0,.L_4F38-_INSTRWHOLE@8
	.stabs "LOADPARTNAMES:F1",36,0,158,_LOADPARTNAMES@0
.balign 16

.globl _LOADPARTNAMES@0
_LOADPARTNAMES@0:
	push ebp
	mov ebp, esp
	sub esp, 220
	push ebx
	.stabn 68,0,158,_LOADPARTNAMES@0-_LOADPARTNAMES@0
	mov dword ptr [ebp-4], 0
.L_4F39:
.L_4FC5:
	call _fb_FileFree@0
	mov dword ptr [ebp-8], eax
.stabn 68,0,160,.L_4FC5-_LOADPARTNAMES@0
.L_4FC6:
	mov dword ptr [ebp-12], 4
.stabn 68,0,161,.L_4FC6-_LOADPARTNAMES@0
.L_4FC7:
	push 0
	push dword ptr [ebp-8]
	push 0
	push 1
	push 0
	push 15
	push offset _Lt_4F3B
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_FileOpen@24
	test eax, eax
	je .L_4F3E
.L_4F3F:
.stabn 68,0,163,.L_4FC7-_LOADPARTNAMES@0
.L_4FC8:
	cmp dword ptr [_G_PPARTSNAMES], 0
	je .L_4F41
.L_4F42:
	push dword ptr [_G_PPARTSNAMES]
	call _free
	add esp, 4
.L_4F41:
.L_4F43:
.stabn 68,0,165,.L_4FC8-_LOADPARTNAMES@0
.L_4FC9:
	push dword ptr [ebp-12]
	call _malloc
	add esp, 4
	mov dword ptr [_G_PPARTSNAMES], eax
.stabn 68,0,166,.L_4FC9-_LOADPARTNAMES@0
.L_4FCA:
.L_4F44:
	mov dword ptr [ebp-40], 1
.L_4F48:
.L_4F49:
.stabn 68,0,168,.L_4FCA-_LOADPARTNAMES@0
.L_4FCB:
	push 0
	push -1
	push 2
	push offset _Lt_2642
	push -1
	mov eax, dword ptr [ebp-40]
	imul eax, 12
	lea ebx, [_G_SPATHLIST+eax]
	push ebx
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	lea ebx, [ebp-64]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-52]
	push eax
	call _fb_StrInit@20
.stabn 68,0,169,.L_4FCB-_LOADPARTNAMES@0
.L_4FCC:
	push 3
	push offset _Lt_4F4B
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-52]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_4F4D
.L_4F4E:
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
	jmp .L_4F47
.L_4F4D:
.L_4F4F:
.stabn 68,0,170,.L_4FCC-_LOADPARTNAMES@0
.L_4FCD:
	push 0
	push -1
	push 0
	push 33
	push 6
	push offset _Lt_4F50
	push -1
	lea eax, [ebp-52]
	push eax
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_Dir@12
	push eax
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrInit@20
.stabn 68,0,171,.L_4FCD-_LOADPARTNAMES@0
.L_4FCE:
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-92], eax
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrInit@20
.stabn 68,0,177,.L_4FCE-_LOADPARTNAMES@0
.L_4FCF:
.L_4F52:
	cmp dword ptr [ebp-92], 0
	je .L_4F53
.L_4F54:
.stabn 68,0,178,.L_4FCF-_LOADPARTNAMES@0
.L_4FD0:
	call _fb_FileFree@0
	mov dword ptr [ebp-108], eax
	mov dword ptr [ebp-112], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrInit@20
	mov dword ptr [ebp-128], 0
.stabn 68,0,180,.L_4FD0-_LOADPARTNAMES@0
.L_4FD1:
	mov dword ptr [ebp-132], 0
.stabn 68,0,181,.L_4FD1-_LOADPARTNAMES@0
.L_4FD2:
	push 0
	push dword ptr [ebp-108]
	push 0
	push 0
	push 2
	push -1
	lea eax, [ebp-88]
	push eax
	push -1
	lea eax, [ebp-52]
	push eax
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	lea eax, [ebp-144]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_FileOpen@24
.stabn 68,0,182,.L_4FD2-_LOADPARTNAMES@0
.L_4FD3:
.L_4F56:
	push dword ptr [ebp-108]
	call _fb_FileEof@4
	test eax, eax
	jne .L_4F57
.L_4F58:
.stabn 68,0,183,.L_4FD3-_LOADPARTNAMES@0
.L_4FD4:
	push 0
	push -1
	lea eax, [ebp-124]
	push eax
	push dword ptr [ebp-108]
	call _fb_FileLineInput@16
.stabn 68,0,184,.L_4FD4-_LOADPARTNAMES@0
.L_4FD5:
	push 0
	push -1
	push 0
	lea eax, [ebp-124]
	push eax
	call _fb_TRIM@4
	push eax
	call _fb_StrLcase2@8
	push eax
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,185,.L_4FD5-_LOADPARTNAMES@0
.L_4FD6:
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_4F5A
.L_4F5B:
	jmp .L_4F56
.L_4F5A:
.L_4F5C:
.stabn 68,0,186,.L_4FD6-_LOADPARTNAMES@0
.L_4FD7:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax]
	cmp ebx, 48
	je .L_4F5E
.L_4F5F:
	jmp .L_4F57
.L_4F5E:
.L_4F60:
.stabn 68,0,187,.L_4FD7-_LOADPARTNAMES@0
.L_4FD8:
	mov ebx, dword ptr [ebp-124]
	movzx eax, byte ptr [ebx+2]
	cmp eax, 126
	jne .L_4F63
.L_4F64:
	or dword ptr [ebp-128], 16
.L_4F63:
.L_4F65:
.stabn 68,0,189,.L_4FD8-_LOADPARTNAMES@0
.L_4FD9:
	push 6
	push offset _Lt_4F66
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-124]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_4F68
.L_4F69:
	or dword ptr [ebp-128], 2048
.L_4F68:
.L_4F6A:
.stabn 68,0,190,.L_4FD9-_LOADPARTNAMES@0
.L_4FDA:
	push 21
	push offset _Lt_4F6B
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-124]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_4F6D
.L_4F6E:
	or dword ptr [ebp-128], 2
.L_4F6D:
.L_4F6F:
.stabn 68,0,191,.L_4FDA-_LOADPARTNAMES@0
.L_4FDB:
	push 19
	push offset _Lt_4F70
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-124]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_4F72
.L_4F73:
	or dword ptr [ebp-128], 16
.L_4F72:
.L_4F74:
.stabn 68,0,192,.L_4FDB-_LOADPARTNAMES@0
.L_4FDC:
	push 7
	push offset _Lt_4F75
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-124]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_4F77
.L_4F78:
	or dword ptr [ebp-128], 256
.L_4F77:
.L_4F79:
.stabn 68,0,193,.L_4FDC-_LOADPARTNAMES@0
.L_4FDD:
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	push 0
	push 7
	push offset _Lt_4F7A
	push -1
	lea eax, [ebp-168]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-168]
	push eax
	lea eax, [ebp-124]
	push eax
	call _INSTRWHOLE@8
	mov dword ptr [ebp-172], eax
	lea eax, [ebp-168]
	push eax
	call _fb_StrDelete@4
	cmp dword ptr [ebp-172], 0
	je .L_4F7D
.L_4F7F:
	or dword ptr [ebp-128], 32768
.L_4F7D:
.L_4F80:
.stabn 68,0,194,.L_4FDD-_LOADPARTNAMES@0
.L_4FDE:
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	push 0
	push 9
	push offset _Lt_4F81
	push -1
	lea eax, [ebp-184]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-184]
	push eax
	lea eax, [ebp-124]
	push eax
	call _INSTRWHOLE@8
	mov dword ptr [ebp-188], eax
	lea eax, [ebp-184]
	push eax
	call _fb_StrDelete@4
	cmp dword ptr [ebp-188], 0
	je .L_4F84
.L_4F86:
	or dword ptr [ebp-128], 32768
.L_4F84:
.L_4F87:
.stabn 68,0,195,.L_4FDE-_LOADPARTNAMES@0
.L_4FDF:
	cmp dword ptr [ebp-112], 0
	jne .L_4F89
.L_4F8A:
.stabn 68,0,196,.L_4FDF-_LOADPARTNAMES@0
.L_4FE0:
	mov eax, dword ptr [ebp-124]
	movzx ebx, byte ptr [eax+2]
	cmp ebx, 61
	jne .L_4F8C
.L_4F8D:
	or dword ptr [ebp-128], 2
.L_4F8C:
.L_4F8E:
.stabn 68,0,197,.L_4FE0-_LOADPARTNAMES@0
.L_4FE1:
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	push 0
	push 7
	push offset _Lt_4F8F
	push -1
	lea ebx, [ebp-200]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-200]
	push ebx
	lea ebx, [ebp-124]
	push ebx
	call _INSTRWHOLE@8
	mov dword ptr [ebp-204], eax
	lea eax, [ebp-200]
	push eax
	call _fb_StrDelete@4
	cmp dword ptr [ebp-204], 0
	je .L_4F92
.L_4F94:
	mov dword ptr [ebp-132], 1
.L_4F92:
.L_4F95:
.stabn 68,0,198,.L_4FE1-_LOADPARTNAMES@0
.L_4FE2:
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	push 0
	push 7
	push offset _Lt_4F96
	push -1
	lea eax, [ebp-216]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-216]
	push eax
	lea eax, [ebp-124]
	push eax
	call _INSTRWHOLE@8
	mov dword ptr [ebp-220], eax
	lea eax, [ebp-216]
	push eax
	call _fb_StrDelete@4
	cmp dword ptr [ebp-220], 0
	je .L_4F99
.L_4F9B:
	mov dword ptr [ebp-132], 2
.L_4F99:
.L_4F9C:
.stabn 68,0,199,.L_4FE2-_LOADPARTNAMES@0
.L_4FE3:
	push 0
	push -1
	lea eax, [ebp-124]
	push eax
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrAssign@20
	mov dword ptr [ebp-112], 1
.stabn 68,0,200,.L_4FE3-_LOADPARTNAMES@0
.L_4FE4:
.L_4F9D:
.L_4F89:
.L_4F88:
.L_4F9E:
	jmp .L_4F56
.L_4F57:
.stabn 68,0,202,.L_4FE4-_LOADPARTNAMES@0
.L_4FE5:
	push dword ptr [ebp-108]
	call _fb_FileClose@4
.stabn 68,0,203,.L_4FE5-_LOADPARTNAMES@0
.L_4FE6:
	cmp dword ptr [ebp-112], 0
	jne .L_4FA0
.L_4FA1:
.stabn 68,0,204,.L_4FE6-_LOADPARTNAMES@0
.L_4FE7:
	push 1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea eax, [ebp-88]
	push eax
	push 38
	push offset _Lt_4FA2
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	lea eax, [ebp-168]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	lea eax, [ebp-180]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,205,.L_4FE7-_LOADPARTNAMES@0
.L_4FE8:
.L_4FA5:
.L_4FA0:
.L_4F9F:
	mov eax, dword ptr [ebp-88]
	add eax, dword ptr [ebp-92]
	mov bl, byte ptr [eax-4]
	mov byte ptr [ebp-148], bl
	mov ebx, dword ptr [ebp-88]
	add ebx, dword ptr [ebp-92]
	mov byte ptr [ebx-4], 0
.stabn 68,0,209,.L_4FE8-_LOADPARTNAMES@0
.L_4FE9:
	lea ebx, [ebp-88]
	push ebx
	call _HASHNAME@4
	mov word ptr [ebp-152], ax
	mov eax, dword ptr [ebp-88]
	add eax, dword ptr [ebp-92]
	mov bl, byte ptr [ebp-148]
	mov byte ptr [eax-4], bl
.stabn 68,0,210,.L_4FE9-_LOADPARTNAMES@0
.L_4FEA:
	mov ebx, dword ptr [ebp-92]
	add ebx, 129
	or ebx, 3
	inc ebx
	mov dword ptr [ebp-156], ebx
.stabn 68,0,215,.L_4FEA-_LOADPARTNAMES@0
.L_4FEB:
	mov ebx, dword ptr [ebp-156]
	add ebx, dword ptr [ebp-12]
	push ebx
	push dword ptr [_G_PPARTSNAMES]
	call _realloc
	add esp, 8
	mov dword ptr [_G_PPARTSNAMES], eax
.stabn 68,0,216,.L_4FEB-_LOADPARTNAMES@0
.L_4FEC:
	cmp dword ptr [_G_PPARTSNAMES], 0
	jne .L_4FA7
.L_4FA8:
.stabn 68,0,217,.L_4FEC-_LOADPARTNAMES@0
.L_4FED:
	push 1
	push 17
	push offset _Lt_4FA9
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,218,.L_4FED-_LOADPARTNAMES@0
.L_4FEE:
	mov dword ptr [ebp-4], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
	jmp .L_4F3A
.stabn 68,0,219,.L_4FEE-_LOADPARTNAMES@0
.L_4FEF:
.L_4FAA:
.L_4FA7:
.L_4FA6:
.L_4FAB:
	mov eax, dword ptr [_G_PPARTSNAMES]
	add eax, dword ptr [ebp-12]
	mov dword ptr [ebp-160], eax
.stabn 68,0,222,.L_4FEF-_LOADPARTNAMES@0
.L_4FF0:
	mov eax, dword ptr [ebp-160]
	mov dword ptr [eax], 0
	mov al, byte ptr [ebp-40]
	mov ebx, dword ptr [ebp-160]
	mov byte ptr [ebx+18], al
.stabn 68,0,223,.L_4FF0-_LOADPARTNAMES@0
.L_4FF1:
	movzx eax, word ptr [ebp-152]
	mov ebx, dword ptr [ebp-160]
	mov ecx, dword ptr [_G_LHASHLIST+eax*4]
	mov dword ptr [ebx+4], ecx
.stabn 68,0,224,.L_4FF1-_LOADPARTNAMES@0
.L_4FF2:
	mov cx, word ptr [ebp-128]
	mov ebx, dword ptr [ebp-160]
	mov word ptr [ebx+16], cx
.stabn 68,0,225,.L_4FF2-_LOADPARTNAMES@0
.L_4FF3:
	mov cl, byte ptr [ebp-132]
	mov ebx, dword ptr [ebp-160]
	mov byte ptr [ebx+19], cl
.stabn 68,0,226,.L_4FF3-_LOADPARTNAMES@0
.L_4FF4:
	push 0
	push -1
	push -1
	push 3
	lea ecx, [ebp-104]
	push ecx
	call _fb_StrMid@12
	push eax
	push 108
	mov eax, dword ptr [ebp-160]
	lea ecx, [eax+20]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,227,.L_4FF4-_LOADPARTNAMES@0
.L_4FF5:
	push 0
	push -1
	lea ecx, [ebp-88]
	push ecx
	push 65535
	mov ecx, dword ptr [ebp-160]
	lea eax, [ecx+128]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,228,.L_4FF5-_LOADPARTNAMES@0
.L_4FF6:
.L_4FAD:
	mov eax, dword ptr [_G_LPARTCOUNT]
	and eax, 1023
	test eax, eax
	jne .L_4FAF
.L_4FB0:
	mov eax, dword ptr [_G_LPARTCOUNT]
	add eax, 1023
	mov ecx, eax
	push ecx
	push 0
	push 1
	push 0
	push -1
	push 4
	push offset _G_LPARTINDEX
	call _fb_ArrayRedimPresvEx
	add esp, 28
.L_4FAF:
.L_4FB1:
.stabn 68,0,230,.L_4FF6-_LOADPARTNAMES@0
.L_4FF7:
	movzx ecx, word ptr [ebp-152]
	mov eax, dword ptr [ebp-12]
	mov dword ptr [_G_LHASHLIST+ecx*4], eax
.stabn 68,0,231,.L_4FF7-_LOADPARTNAMES@0
.L_4FF8:
	mov eax, dword ptr [_G_LPARTCOUNT]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ecx, dword ptr [ebp-12]
	mov dword ptr [eax], ecx
.stabn 68,0,232,.L_4FF8-_LOADPARTNAMES@0
.L_4FF9:
	inc dword ptr [_G_LPARTCOUNT]
.stabn 68,0,233,.L_4FF9-_LOADPARTNAMES@0
.L_4FFA:
	mov ecx, dword ptr [ebp-156]
	add dword ptr [ebp-12], ecx
.stabn 68,0,234,.L_4FFA-_LOADPARTNAMES@0
.L_4FFB:
	push 0
	push -1
	push 0
	call _fb_DirNext@4
	push eax
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrAssign@20
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-92], eax
.stabn 68,0,235,.L_4FFB-_LOADPARTNAMES@0
.L_4FFC:
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
.L_4FB2:
	jmp .L_4F52
.L_4F53:
.stabn 68,0,236,.L_4FFC-_LOADPARTNAMES@0
.L_4FFD:
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
.L_4FB3:
.L_4F46:
	inc dword ptr [ebp-40]
.L_4F45:
	cmp dword ptr [ebp-40], 8
	jle .L_4F48
.L_4F47:
.L_4FB4:
.stabn 68,0,237,.L_4FFD-_LOADPARTNAMES@0
.L_4FFE:
	mov eax, dword ptr [_G_LPARTCOUNT]
	add eax, 4294967295
	mov ecx, eax
	push ecx
	push 0
	push 1
	push 0
	push -1
	push 4
	push offset _G_LPARTINDEX
	call _fb_ArrayRedimPresvEx
	add esp, 28
.stabn 68,0,238,.L_4FFE-_LOADPARTNAMES@0
.L_4FFF:
	push offset _COMPAREINDEXEDPARTNAME
	push 4
	push dword ptr [_G_LPARTCOUNT]
	mov ecx, dword ptr [_G_LPARTINDEX]
	lea eax, [ecx]
	push eax
	call _qsort
	add esp, 16
.stabn 68,0,239,.L_4FFF-_LOADPARTNAMES@0
.L_5000:
	push 0
	push dword ptr [ebp-8]
	push 0
	push 2
	push 0
	push 15
	push offset _Lt_4F3B
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_FileOpen@24
	test eax, eax
	je .L_4FB7
.L_4FB8:
.stabn 68,0,241,.L_5000-_LOADPARTNAMES@0
.L_5001:
	push 1
	push 46
	push offset _Lt_4FB9
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,242,.L_5001-_LOADPARTNAMES@0
.L_5002:
.L_4FBA:
	jmp .L_4FB6
.L_4FB7:
.L_4FBB:
.stabn 68,0,243,.L_5002-_LOADPARTNAMES@0
.L_5003:
	push 4
	push offset _G_LPARTCOUNT
	push 0
	push dword ptr [ebp-8]
	call _fb_FilePut@16
.stabn 68,0,244,.L_5003-_LOADPARTNAMES@0
.L_5004:
	push 4
	lea eax, [ebp-12]
	push eax
	push 0
	push dword ptr [ebp-8]
	call _fb_FilePut@16
.stabn 68,0,245,.L_5004-_LOADPARTNAMES@0
.L_5005:
	push offset _Lt_4E55
	push 0
	push dword ptr [ebp-8]
	call _fb_FilePutArray@12
.stabn 68,0,246,.L_5005-_LOADPARTNAMES@0
.L_5006:
	push offset _G_LPARTINDEX
	push 0
	push dword ptr [ebp-8]
	call _fb_FilePutArray@12
.stabn 68,0,247,.L_5006-_LOADPARTNAMES@0
.L_5007:
	push dword ptr [ebp-12]
	push dword ptr [_G_PPARTSNAMES]
	push 0
	push dword ptr [ebp-8]
	call _fb_FilePut@16
.stabn 68,0,248,.L_5007-_LOADPARTNAMES@0
.L_5008:
	push dword ptr [ebp-8]
	call _fb_FileClose@4
.stabn 68,0,249,.L_5008-_LOADPARTNAMES@0
.L_5009:
.L_4FBC:
.L_4FB6:
.L_4FBD:
	jmp .L_4F3D
.L_4F3E:
.L_4FBE:
.stabn 68,0,252,.L_5009-_LOADPARTNAMES@0
.L_500A:
	push 4
	push offset _G_LPARTCOUNT
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGet@16
.stabn 68,0,253,.L_500A-_LOADPARTNAMES@0
.L_500B:
	push 4
	lea eax, [ebp-12]
	push eax
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGet@16
.stabn 68,0,254,.L_500B-_LOADPARTNAMES@0
.L_500C:
	mov eax, dword ptr [_G_LPARTCOUNT]
	add eax, 4294967295
	mov ecx, eax
	push ecx
	push 0
	push 1
	push 0
	push -1
	push 4
	push offset _G_LPARTINDEX
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,255,.L_500C-_LOADPARTNAMES@0
.L_500D:
	push offset _Lt_4E55
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGetArray@12
.stabn 68,0,256,.L_500D-_LOADPARTNAMES@0
.L_500E:
	mov ecx, dword ptr [_G_LPARTCOUNT]
	sal ecx, 2
	mov eax, ecx
	push eax
	mov eax, dword ptr [_G_LPARTINDEX]
	lea ecx, [eax]
	push ecx
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGet@16
.stabn 68,0,257,.L_500E-_LOADPARTNAMES@0
.L_500F:
	push dword ptr [ebp-12]
	call _malloc
	add esp, 4
	mov dword ptr [_G_PPARTSNAMES], eax
.stabn 68,0,258,.L_500F-_LOADPARTNAMES@0
.L_5010:
	cmp dword ptr [_G_PPARTSNAMES], 0
	jne .L_4FC0
.L_4FC1:
	push 1
	push 48
	push offset _Lt_4FC2
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	call _fb_PrintString@12
.L_4FC0:
.L_4FC3:
.stabn 68,0,259,.L_5010-_LOADPARTNAMES@0
.L_5011:
	push dword ptr [ebp-12]
	push dword ptr [_G_PPARTSNAMES]
	push 0
	push dword ptr [ebp-8]
	call _fb_FileGet@16
.stabn 68,0,260,.L_5011-_LOADPARTNAMES@0
.L_5012:
	push dword ptr [ebp-8]
	call _fb_FileClose@4
.stabn 68,0,261,.L_5012-_LOADPARTNAMES@0
.L_5013:
.L_4FC4:
.L_4F3D:
	mov dword ptr [ebp-4], -1
.stabn 68,0,268,.L_5013-_LOADPARTNAMES@0
.L_5014:
.L_4F3A:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,269,.L_4F3A-_LOADPARTNAMES@0
	.stabs "F:1",128,0,0,-8
	.stabs "UPARTNAMESSIZE:8",128,0,0,-12
	.stabn 192,0,0,.L_4F39-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F3F-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F42-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F43-_LOADPARTNAMES@0
	.stabs "N:1",128,0,0,-40
	.stabn 192,0,0,.L_4F44-_LOADPARTNAMES@0
	.stabs "SPATH:13",128,0,0,-52
	.stabs "SNAME:13",128,0,0,-88
	.stabs "ILEN:1",128,0,0,-92
	.stabs "SDESC:13",128,0,0,-104
	.stabn 192,0,0,.L_4F49-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F4E-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F4F-_LOADPARTNAMES@0
	.stabs "F:1",128,0,0,-108
	.stabs "IGOTCOMMENT:1",128,0,0,-112
	.stabs "SLINE:13",128,0,0,-124
	.stabs "WFLAGS:1",128,0,0,-128
	.stabs "PARTTYPES:T288=ePTUNKNOWN:0,PTBRICK:1,PTPLATE:2,;",128,0,0,0
	.stabs "BDETECTEDTYPE:288",128,0,0,-132
	.stabs "ICHAR:3",128,0,0,-148
	.stabs "IHASH:6",128,0,0,-152
	.stabs "ISIZE:1",128,0,0,-156
	.stabn 192,0,0,.L_4F54-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F58-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F5B-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F5C-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F5F-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F60-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F64-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F65-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F69-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F6A-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F6E-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F6F-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F73-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F74-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F78-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F79-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F7F-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F80-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F86-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F87-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F8A-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F8D-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F8E-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F94-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F95-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4F9B-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F9C-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F9D-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F9E-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FA1-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FA5-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FA8-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FAA-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FAB-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FAD-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FB0-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FB1-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FB2-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FB3-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FB4-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FB8-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FBA-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FBB-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FBC-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FBD-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FBE-_LOADPARTNAMES@0
	.stabn 192,0,0,.L_4FC1-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FC3-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4FC4-_LOADPARTNAMES@0
	.stabn 224,0,0,.L_4F3A-_LOADPARTNAMES@0
.L_5015:
	.stabs "",36,0,0,.L_5015-_LOADPARTNAMES@0
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\COMBOBOX.BAS",132,0,0,.L_5024
.L_5024:
	.stabs "LOADCONFIG:F7",36,0,75,_LOADCONFIG@0
.balign 16

.globl _LOADCONFIG@0
_LOADCONFIG@0:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,75,_LOADCONFIG@0-_LOADCONFIG@0
.L_5018:
.L_5025:
	push 0
	push -1
	push 11
	push offset _Lt_5016
	push -1
	push 2
	push offset _Lt_2642
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,76,.L_5025-_LOADCONFIG@0
.L_5026:
	push dword ptr [ebp-12]
	push 50
	push offset _Lt_501E
	push offset _Lt_5017
	call _GetPrivateProfileIntA@16
	mov dword ptr [_CFG_MAXSEARCHPARTS], eax
.stabn 68,0,88,.L_5026-_LOADCONFIG@0
.L_5027:
	push dword ptr [ebp-12]
	push 5
	push offset _Lt_5020
	push offset _Lt_5017
	call _GetPrivateProfileIntA@16
	mov bl, al
	mov byte ptr [_CFG_SEARCHBOXROWS], bl
.stabn 68,0,88,.L_5027-_LOADCONFIG@0
.L_5028:
	push dword ptr [ebp-12]
	push 5
	push offset _Lt_5021
	push offset _Lt_5017
	call _GetPrivateProfileIntA@16
	mov bl, al
	mov byte ptr [_CFG_SEARCHBOXCOLS], bl
.stabn 68,0,88,.L_5028-_LOADCONFIG@0
.L_5029:
	push dword ptr [ebp-12]
	push 1
	push offset _Lt_5022
	push offset _Lt_5017
	call _GetPrivateProfileIntA@16
	mov bl, al
	mov byte ptr [_CFG_PRIMAUTOCOMPLETEMANUAL], bl
.stabn 68,0,88,.L_5029-_LOADCONFIG@0
.L_502A:
	push dword ptr [ebp-12]
	push 1
	push offset _Lt_5023
	push offset _Lt_5017
	call _GetPrivateProfileIntA@16
	mov bl, al
	mov byte ptr [_CFG_PRIMAUTOCOMPLETESELECTION], bl
.stabn 68,0,88,.L_502A-_LOADCONFIG@0
.L_502B:
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrDelete@4
.L_5019:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,89,.L_5019-_LOADCONFIG@0
	.stabs "SCONFIGFILE:13",128,0,0,-12
	.stabn 192,0,0,.L_5018-_LOADCONFIG@0
	.stabn 224,0,0,.L_5019-_LOADCONFIG@0
.L_502C:
	.stabs "",36,0,0,.L_502C-_LOADCONFIG@0
	.stabs "SAVECONFIG:F7",36,0,90,_SAVECONFIG@0
.balign 16

.globl _SAVECONFIG@0
_SAVECONFIG@0:
	push ebp
	mov ebp, esp
	sub esp, 156
	.stabn 68,0,90,_SAVECONFIG@0-_SAVECONFIG@0
.L_502D:
.L_503B:
	push 0
	push -1
	push 11
	push offset _Lt_5016
	push -1
	push 2
	push offset _Lt_2642
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,91,.L_503B-_SAVECONFIG@0
.L_503C:
	push dword ptr [ebp-12]
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push -1
	push -1
	push dword ptr [_CFG_MAXSEARCHPARTS]
	call _fb_IntToStr@4
	push eax
	push 1
	push offset _Lt_0000
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	lea eax, [ebp-48]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-60]
	push offset _Lt_501E
	push offset _Lt_5017
	call _WritePrivateProfileStringA@16
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,95,.L_503C-_SAVECONFIG@0
.L_503D:
	push dword ptr [ebp-12]
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	push 0
	push -1
	push -1
	movsx eax, byte ptr [_CFG_SEARCHBOXROWS]
	push eax
	call _fb_IntToStr@4
	push eax
	push 1
	push offset _Lt_0000
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	lea eax, [ebp-72]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-84]
	push offset _Lt_5020
	push offset _Lt_5017
	call _WritePrivateProfileStringA@16
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,95,.L_503D-_SAVECONFIG@0
.L_503E:
	push dword ptr [ebp-12]
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	push 0
	push -1
	push -1
	movsx eax, byte ptr [_CFG_SEARCHBOXCOLS]
	push eax
	call _fb_IntToStr@4
	push eax
	push 1
	push offset _Lt_0000
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	lea eax, [ebp-96]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-108]
	push offset _Lt_5021
	push offset _Lt_5017
	call _WritePrivateProfileStringA@16
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,95,.L_503E-_SAVECONFIG@0
.L_503F:
	push dword ptr [ebp-12]
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push -1
	push -1
	movsx eax, byte ptr [_CFG_PRIMAUTOCOMPLETEMANUAL]
	push eax
	call _fb_IntToStr@4
	push eax
	push 1
	push offset _Lt_0000
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-132]
	push offset _Lt_5022
	push offset _Lt_5017
	call _WritePrivateProfileStringA@16
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,95,.L_503F-_SAVECONFIG@0
.L_5040:
	push dword ptr [ebp-12]
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	push 0
	push -1
	push -1
	movsx eax, byte ptr [_CFG_PRIMAUTOCOMPLETESELECTION]
	push eax
	call _fb_IntToStr@4
	push eax
	push 1
	push offset _Lt_0000
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	lea eax, [ebp-144]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-156]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-156]
	push offset _Lt_5023
	push offset _Lt_5017
	call _WritePrivateProfileStringA@16
	lea eax, [ebp-156]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,95,.L_5040-_SAVECONFIG@0
.L_5041:
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.L_502E:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,96,.L_502E-_SAVECONFIG@0
	.stabs "SCONFIGFILE:13",128,0,0,-12
	.stabn 192,0,0,.L_502D-_SAVECONFIG@0
	.stabn 224,0,0,.L_502E-_SAVECONFIG@0
.L_5042:
	.stabs "",36,0,0,.L_5042-_SAVECONFIG@0
	.stabs "SEARCHCONTAINERMESSAGES:F1",36,0,100,_SEARCHCONTAINERMESSAGES@16
	.stabs "HWND:p289=*21",160,0,0,8
	.stabs "IMSG:p1",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16

.globl _SEARCHCONTAINERMESSAGES@16
_SEARCHCONTAINERMESSAGES@16:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,100,_SEARCHCONTAINERMESSAGES@16-_SEARCHCONTAINERMESSAGES@16
	mov dword ptr [ebp-4], 0
.L_5043:
.L_505E:
.L_5045:
	cmp dword ptr [ebp+12], 16
	jne .L_5047
.L_5048:
.L_5049:
.stabn 68,0,102,.L_505E-_SEARCHCONTAINERMESSAGES@16
.L_505F:
	mov dword ptr [ebp-4], 0
	jmp .L_5044
.stabn 68,0,103,.L_505F-_SEARCHCONTAINERMESSAGES@16
.L_5060:
.L_504A:
	jmp .L_5046
.L_5047:
	cmp dword ptr [ebp+12], 273
	jne .L_504B
.L_504C:
.L_504D:
.stabn 68,0,104,.L_5060-_SEARCHCONTAINERMESSAGES@16
.L_5061:
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-8], eax
.stabn 68,0,105,.L_5061-_SEARCHCONTAINERMESSAGES@16
.L_5062:
	mov eax, dword ptr [ebp+16]
	shr eax, 16
	mov dword ptr [ebp-12], eax
.stabn 68,0,106,.L_5062-_SEARCHCONTAINERMESSAGES@16
.L_5063:
.L_504E:
	mov eax, dword ptr [_G_HSEARCH]
	cmp dword ptr [ebp-8], eax
	jne .L_5050
.L_5051:
.L_5052:
.stabn 68,0,108,.L_5063-_SEARCHCONTAINERMESSAGES@16
.L_5064:
.L_5053:
	cmp dword ptr [ebp-12], 1
	jne .L_5055
.L_5056:
.L_5057:
.stabn 68,0,110,.L_5064-_SEARCHCONTAINERMESSAGES@16
.L_5065:
	mov byte ptr [_G_SEARCHCHANGED], -1
.stabn 68,0,111,.L_5065-_SEARCHCONTAINERMESSAGES@16
.L_5066:
	push 0
	push 0
	push 256
	push dword ptr [_G_HCON]
	call _SendMessageA@16
.stabn 68,0,113,.L_5066-_SEARCHCONTAINERMESSAGES@16
.L_5067:
.L_5058:
.L_5055:
.L_5054:
.L_5059:
.L_505A:
.L_5050:
.L_504F:
.L_505B:
	mov dword ptr [ebp-4], 0
	jmp .L_5044
.stabn 68,0,117,.L_5067-_SEARCHCONTAINERMESSAGES@16
.L_5068:
.L_505C:
.L_504B:
.L_5046:
.L_505D:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,119,.L_5068-_SEARCHCONTAINERMESSAGES@16
.L_5069:
.L_5044:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,120,.L_5044-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5043-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5045-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5049-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_504A-_SEARCHCONTAINERMESSAGES@16
	.stabs "HWND:290=*21",128,0,0,-8
	.stabs "WNOTIFYCODE:8",128,0,0,-12
	.stabn 192,0,0,.L_504D-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_504E-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5052-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5053-_SEARCHCONTAINERMESSAGES@16
	.stabn 192,0,0,.L_5057-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_5058-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_5059-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_505A-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_505B-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_505C-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_505D-_SEARCHCONTAINERMESSAGES@16
	.stabn 224,0,0,.L_5044-_SEARCHCONTAINERMESSAGES@16
.L_506A:
	.stabs "",36,0,0,.L_506A-_SEARCHCONTAINERMESSAGES@16
	.stabs "UPDATESEARCHWINDOWFONT:F7",36,0,121,_UPDATESEARCHWINDOWFONT@4
	.stabs "HFONT:p291=*55",160,0,0,8
.balign 16

.globl _UPDATESEARCHWINDOWFONT@4
_UPDATESEARCHWINDOWFONT@4:
	push ebp
	mov ebp, esp
	sub esp, 20
	.stabn 68,0,121,_UPDATESEARCHWINDOWFONT@4-_UPDATESEARCHWINDOWFONT@4
.L_506B:
.L_5071:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [_G_HFONTSEARCH], eax
.stabn 68,0,122,.L_5071-_UPDATESEARCHWINDOWFONT@4
.L_5072:
	push 0
	push 0
	push 0
	push 0
	push 300
	push 300
	push 0
	push 0
	push 512
	push 0
	push offset _Lt_506E
	push 0
	call _CreateWindowExW@48
	mov dword ptr [ebp-4], eax
.stabn 68,0,123,.L_5072-_UPDATESEARCHWINDOWFONT@4
.L_5073:
	push 0
	push dword ptr [ebp+8]
	push 48
	push dword ptr [ebp-4]
	call _SendMessageA@16
.stabn 68,0,124,.L_5073-_UPDATESEARCHWINDOWFONT@4
.L_5074:
	push offset _Lt_506F
	push 0
	push 384
	push dword ptr [ebp-4]
	call _SendMessageA@16
.stabn 68,0,126,.L_5074-_UPDATESEARCHWINDOWFONT@4
.L_5075:
	push offset _Lt_5070
	push 0
	push 384
	push dword ptr [ebp-4]
	call _SendMessageA@16
.stabn 68,0,127,.L_5075-_UPDATESEARCHWINDOWFONT@4
.L_5076:
	lea eax, [ebp-20]
	push eax
	push 1
	push 408
	push dword ptr [ebp-4]
	call _SendMessageA@16
.stabn 68,0,128,.L_5076-_UPDATESEARCHWINDOWFONT@4
.L_5077:
	mov eax, dword ptr [ebp-16]
	mov dword ptr [_G_SEARCHROWHEI], eax
.stabn 68,0,129,.L_5077-_UPDATESEARCHWINDOWFONT@4
.L_5078:
	push dword ptr [ebp-4]
	call _DestroyWindow@4
.stabn 68,0,130,.L_5078-_UPDATESEARCHWINDOWFONT@4
.L_5079:
	push 0
	push dword ptr [ebp+8]
	push 48
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,131,.L_5079-_UPDATESEARCHWINDOWFONT@4
.L_507A:
.L_506C:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,132,.L_506C-_UPDATESEARCHWINDOWFONT@4
	.stabs "HTEMP:292=*21",128,0,0,-4
	.stabs "TRCITEM:23",128,0,0,-20
	.stabn 192,0,0,.L_506B-_UPDATESEARCHWINDOWFONT@4
	.stabn 224,0,0,.L_506C-_UPDATESEARCHWINDOWFONT@4
.L_507B:
	.stabs "",36,0,0,.L_507B-_UPDATESEARCHWINDOWFONT@4
	.stabs "INITSEARCHWINDOW:F7",36,0,134,_INITSEARCHWINDOW@0
.balign 16

.globl _INITSEARCHWINDOW@0
_INITSEARCHWINDOW@0:
	push ebp
	mov ebp, esp
	sub esp, 60
	.stabn 68,0,134,_INITSEARCHWINDOW@0-_INITSEARCHWINDOW@0
.L_507C:
.L_5087:
	mov eax, dword ptr [_G_TMAINCTX+264]
	mov dword ptr [_G_HCON], eax
.stabn 68,0,144,.L_5087-_INITSEARCHWINDOW@0
.L_5088:
	lea eax, [ebp-48]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 12
	rep stosd
	pop edi
	pop eax
.stabn 68,0,148,.L_5088-_INITSEARCHWINDOW@0
.L_5089:
	push 0
	call _GetModuleHandleA@4
	mov dword ptr [ebp-52], eax
.stabn 68,0,149,.L_5089-_INITSEARCHWINDOW@0
.L_508A:
.L_507F:
	mov dword ptr [ebp-48], 48
.stabn 68,0,151,.L_508A-_INITSEARCHWINDOW@0
.L_508B:
	mov eax, offset _SEARCHCONTAINERMESSAGES@16
	mov dword ptr [ebp-40], eax
.stabn 68,0,152,.L_508B-_INITSEARCHWINDOW@0
.L_508C:
	mov eax, dword ptr [ebp-52]
	mov dword ptr [ebp-28], eax
.stabn 68,0,153,.L_508C-_INITSEARCHWINDOW@0
.L_508D:
	mov eax, offset _Lt_507E
	mov dword ptr [ebp-8], eax
.stabn 68,0,154,.L_508D-_INITSEARCHWINDOW@0
.L_508E:
.L_5081:
	lea eax, [ebp-48]
	push eax
	call _RegisterClassExA@4
	movzx eax, ax
	test eax, eax
	jne .L_5083
.L_5084:
	push 1
	push 24
	push offset _Lt_5085
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	call _fb_PrintString@12
	push -1
	call _fb_Sleep@4
	push 0
	call _fb_End@4
.L_5083:
.L_5086:
.stabn 68,0,156,.L_508E-_INITSEARCHWINDOW@0
.L_508F:
	mov dword ptr [ebp-60], 0
	mov eax, dword ptr [_G_RCCON+12]
	add eax, -24
	mov dword ptr [ebp-56], eax
.stabn 68,0,165,.L_508F-_INITSEARCHWINDOW@0
.L_5090:
	lea eax, [ebp-60]
	push eax
	push dword ptr [_G_HCON]
	call _ClientToScreen@8
.stabn 68,0,166,.L_5090-_INITSEARCHWINDOW@0
.L_5091:
	mov eax, dword ptr [_G_TMAINCTX+696]
	mov dword ptr [_G_HSTATUS], eax
.stabn 68,0,171,.L_5091-_INITSEARCHWINDOW@0
.L_5092:
	push 0
	push dword ptr [ebp-52]
	push 0
	push dword ptr [_G_HCON]
	push 0
	push 0
	push 0
	push 0
	push 2156396544
	push offset _Lt_507E
	push offset _Lt_507E
	push 524296
	call _CreateWindowExA@48
	mov dword ptr [_G_HCONTAINER], eax
.stabn 68,0,173,.L_5092-_INITSEARCHWINDOW@0
.L_5093:
	push 0
	push dword ptr [ebp-52]
	push 0
	push dword ptr [_G_HCONTAINER]
	push 100
	push 300
	push 0
	push 0
	push 1343226625
	push 0
	push offset _Lt_506E
	push 0
	call _CreateWindowExW@48
	mov dword ptr [_G_HSEARCH], eax
.stabn 68,0,174,.L_5093-_INITSEARCHWINDOW@0
.L_5094:
	push 2
	push 192
	push 0
	push dword ptr [_G_HCONTAINER]
	call _SetLayeredWindowAttributes@16
.stabn 68,0,175,.L_5094-_INITSEARCHWINDOW@0
.L_5095:
	push 17
	call _GetStockObject@4
	push eax
	call _UPDATESEARCHWINDOWFONT@4
.stabn 68,0,177,.L_5095-_INITSEARCHWINDOW@0
.L_5096:
.L_507D:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,183,.L_507D-_INITSEARCHWINDOW@0
	.stabs "HINSTANCE__:Tt297=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HICON__:Tt299=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HBRUSH__:Tt302=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "TAGWNDCLASSEXA:Tt293=s48CBSIZE:8,0,32;STYLE:8,32,32;LPFNWNDPROC:294=*295=f1,64,32;CBCLSEXTRA:1,96,32;CBWNDEXTRA:1,128,32;HINSTANCE:296=*297,160,32;HICON:298=*299,192,32;HCURSOR:300=*299,224,32;HBRBACKGROUND:301=*302,256,32;LPSZMENUNAME:303=*4,288,32;LPSZCLASSNAME:304=*4,320,32;HICONSM:305=*299,352,32;;",128,0,0,0
	.stabs "WX:293",128,0,0,-48
	.stabs "HINSTANCE:306=*297",128,0,0,-52
	.stabs "TSTATUSPT:154",128,0,0,-60
	.stabn 192,0,0,.L_507C-_INITSEARCHWINDOW@0
	.stabn 192,0,0,.L_507F-_INITSEARCHWINDOW@0
	.stabn 224,0,0,.L_5081-_INITSEARCHWINDOW@0
	.stabn 192,0,0,.L_5084-_INITSEARCHWINDOW@0
	.stabn 224,0,0,.L_5086-_INITSEARCHWINDOW@0
	.stabn 224,0,0,.L_507D-_INITSEARCHWINDOW@0
.L_5097:
	.stabs "",36,0,0,.L_5097-_INITSEARCHWINDOW@0
	.stabs "PROCESSMESSAGE:F7",36,0,184,_PROCESSMESSAGE@4
	.stabs "TAGMSG:Tt307=s28HWND:308=*21,0,32;MESSAGE:8,32,32;WPARAM:8,64,32;LPARAM:1,96,32;TIME:8,128,32;PT:154,160,64;;",128,0,0,0
	.stabs "TMSG:v307",160,0,0,8
.balign 16

.globl _PROCESSMESSAGE@4
_PROCESSMESSAGE@4:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,184,_PROCESSMESSAGE@4-_PROCESSMESSAGE@4
.L_5098:
.L_50B7:
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [_G_HSEARCH]
	cmp dword ptr [eax], ebx
	je .L_509B
.L_509C:
	jmp .L_5099
.L_509B:
.L_509D:
.stabn 68,0,185,.L_50B7-_PROCESSMESSAGE@4
.L_50B8:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+4], 515
	jne .L_509F
.L_50A0:
.stabn 68,0,186,.L_50B8-_PROCESSMESSAGE@4
.L_50B9:
	push dword ptr [_G_HCON]
	call _SetFocus@4
.stabn 68,0,199,.L_50B9-_PROCESSMESSAGE@4
.L_50BA:
	push 1077477377
	push 32
	push 258
	push dword ptr [_G_HCON]
	call _SendMessageA@16
.stabn 68,0,200,.L_50BA-_PROCESSMESSAGE@4
.L_50BB:
	jmp .L_5099
.stabn 68,0,202,.L_50BB-_PROCESSMESSAGE@4
.L_50BC:
.L_50A1:
.L_509F:
.L_509E:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+4], 256
	jne .L_50A3
.L_50A4:
.stabn 68,0,204,.L_50BC-_PROCESSMESSAGE@4
.L_50BD:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+8], 32
	je .L_50A5
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+8], 13
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-4], eax
	jmp .L_50B4
.L_50A5:
	mov dword ptr [ebp-4], -1
.L_50B4:
	cmp dword ptr [ebp-4], 0
	jne .L_50A7
	mov eax, dword ptr [ebp+8]
	cmp dword ptr [eax+8], 8
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-8], ebx
	jmp .L_50B5
.L_50A7:
	mov dword ptr [ebp-8], -1
.L_50B5:
	cmp dword ptr [ebp-8], 0
	je .L_50AA
.L_50AB:
.stabn 68,0,205,.L_50BD-_PROCESSMESSAGE@4
.L_50C0:
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+8], 32
	je .L_50AC
	mov ebx, dword ptr [ebp+8]
	cmp dword ptr [ebx+8], 8
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-12], eax
	jmp .L_50B6
.L_50AC:
	mov dword ptr [ebp-12], -1
.L_50B6:
	cmp dword ptr [ebp-12], 0
	je .L_50AF
.L_50B0:
.stabn 68,0,221,.L_50C0-_PROCESSMESSAGE@4
.L_50C2:
	push dword ptr [_G_HCON]
	call _SetFocus@4
	mov eax, dword ptr [ebp+8]
	mov ebx, dword ptr [_G_HCON]
	mov dword ptr [eax], ebx
.stabn 68,0,222,.L_50C2-_PROCESSMESSAGE@4
.L_50C3:
	push dword ptr [ebp+8]
	call _TranslateMessage@4
.stabn 68,0,223,.L_50C3-_PROCESSMESSAGE@4
.L_50C4:
	push dword ptr [ebp+8]
	call _DispatchMessageA@4
.stabn 68,0,224,.L_50C4-_PROCESSMESSAGE@4
.L_50C5:
.L_50B1:
.L_50AF:
.L_50AE:
.stabn 68,0,228,.L_50C5-_PROCESSMESSAGE@4
.L_50C6:
.L_50B2:
.L_50AA:
.L_50A9:
.L_50B3:
.L_50A3:
.L_50A2:
.L_5099:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,231,.L_5099-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_5098-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_509C-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_509D-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_50A0-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_50A1-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_50A4-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_50AB-_PROCESSMESSAGE@4
	.stabn 192,0,0,.L_50B0-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_50B1-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_50B2-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_50B3-_PROCESSMESSAGE@4
	.stabn 224,0,0,.L_5099-_PROCESSMESSAGE@4
.L_50C7:
	.stabs "",36,0,0,.L_50C7-_PROCESSMESSAGE@4
	.stabs "GETPARTDESCRIPTION:F13",36,0,266,_GETPARTDESCRIPTION@8
	.stabs "IPART:p1",160,0,0,8
	.stabs "BUNNOFICIAL:v2",160,0,0,12
.balign 16

.globl _GETPARTDESCRIPTION@8
_GETPARTDESCRIPTION@8:
	push ebp
	mov ebp, esp
	sub esp, 104
	push ebx
	.stabn 68,0,266,_GETPARTDESCRIPTION@8-_GETPARTDESCRIPTION@8
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_50D0:
.L_50EB:
	mov eax, dword ptr [ebp+8]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,267,.L_50EB-_GETPARTDESCRIPTION@8
.L_50EC:
	push 0
	push -1
	mov ebx, dword ptr [ebp-16]
	lea eax, [ebx+20]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_TRIM@4
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrInit@20
	mov dword ptr [ebp-32], 0
.stabn 68,0,268,.L_50EC-_GETPARTDESCRIPTION@8
.L_50ED:
.L_50D2:
	mov eax, dword ptr [ebp-28]
	add eax, dword ptr [ebp-32]
	movzx ebx, byte ptr [eax]
	cmp ebx, 126
	jne .L_50D3
.L_50D4:
.stabn 68,0,270,.L_50ED-_GETPARTDESCRIPTION@8
.L_50EE:
	push 9
	push offset _Lt_50D5
	call _fb_StrAllocTempDescZEx@8
	push eax
	push 0
	lea eax, [ebp-28]
	push eax
	call _fb_StrLcase2@8
	push eax
	mov eax, dword ptr [ebp-32]
	inc eax
	push eax
	call _fb_StrInstr@12
	mov dword ptr [ebp-48], eax
.stabn 68,0,272,.L_50EE-_GETPARTDESCRIPTION@8
.L_50EF:
	cmp dword ptr [ebp-48], 0
	je .L_50D7
.L_50D8:
.stabn 68,0,273,.L_50EF-_GETPARTDESCRIPTION@8
.L_50F0:
	push -1
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp-48]
	add eax, 9
	push eax
	lea eax, [ebp-28]
	push eax
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-60]
	push eax
	call _SEARCHPART@8
	mov dword ptr [ebp-64], eax
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,274,.L_50F0-_GETPARTDESCRIPTION@8
.L_50F1:
	cmp dword ptr [ebp-64], 0
	je .L_50DB
.L_50DC:
.stabn 68,0,275,.L_50F1-_GETPARTDESCRIPTION@8
.L_50F2:
	mov eax, dword ptr [ebp-64]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,276,.L_50F2-_GETPARTDESCRIPTION@8
.L_50F3:
	push -1
	lea ebx, [ebp-28]
	push ebx
	call _fb_StrLen@8
	add eax, 2
	mov dword ptr [ebp-68], eax
.stabn 68,0,277,.L_50F3-_GETPARTDESCRIPTION@8
.L_50F4:
	push 0
	push -1
	push 108
	mov eax, dword ptr [ebp-16]
	lea ebx, [eax+20]
	push ebx
	push -1
	push 4
	push offset _Lt_50DD
	push -1
	push -1
	push -1
	mov ebx, dword ptr [ebp-32]
	add ebx, 2
	push ebx
	lea ebx, [ebp-28]
	push ebx
	call _fb_StrMid@12
	push eax
	push -1
	push dword ptr [ebp-32]
	lea eax, [ebp-28]
	push eax
	call _fb_LEFT@8
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	lea eax, [ebp-92]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	lea eax, [ebp-104]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,278,.L_50F4-_GETPARTDESCRIPTION@8
.L_50F5:
	mov eax, dword ptr [ebp-68]
	mov dword ptr [ebp-32], eax
.stabn 68,0,279,.L_50F5-_GETPARTDESCRIPTION@8
.L_50F6:
	jmp .L_50D2
.stabn 68,0,280,.L_50F6-_GETPARTDESCRIPTION@8
.L_50F7:
.L_50E1:
.L_50DB:
.L_50DA:
.L_50E2:
.L_50D7:
.L_50D6:
	jmp .L_50D3
.stabn 68,0,283,.L_50F7-_GETPARTDESCRIPTION@8
.L_50F8:
.L_50E3:
	jmp .L_50D2
.L_50D3:
.stabn 68,0,284,.L_50F8-_GETPARTDESCRIPTION@8
.L_50F9:
	mov eax, dword ptr [ebp-16]
	movzx ebx, byte ptr [eax+18]
	cmp ebx, 2
	jne .L_50E5
.L_50E6:
	mov ebx, dword ptr [ebp+12]
	mov byte ptr [ebx], 1
	push 0
	push -1
	push -1
	lea ebx, [ebp-28]
	push ebx
	push 14
	push offset _Lt_50E7
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea ebx, [ebp-56]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_50D1
.L_50E5:
.L_50E9:
.stabn 68,0,286,.L_50F9-_GETPARTDESCRIPTION@8
.L_50FA:
	mov eax, dword ptr [ebp+12]
	mov byte ptr [eax], 0
	push 0
	push -1
	push -1
	lea eax, [ebp-28]
	push eax
	push 2
	push offset _Lt_2499
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	lea eax, [ebp-44]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	jmp .L_50D1
.stabn 68,0,287,.L_50FA-_GETPARTDESCRIPTION@8
.L_50FB:
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
.L_50D1:
	lea eax, [ebp-12]
	push eax
	call _fb_StrAllocTempResult@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,288,.L_50D1-_GETPARTDESCRIPTION@8
	.stabs "PPART:309=*278",128,0,0,-16
	.stabs "SDESC:13",128,0,0,-28
	.stabs "IPOS:1",128,0,0,-32
	.stabn 192,0,0,.L_50D0-_GETPARTDESCRIPTION@8
	.stabs "IMOVED:1",128,0,0,-48
	.stabn 192,0,0,.L_50D4-_GETPARTDESCRIPTION@8
	.stabs "IPART2:1",128,0,0,-64
	.stabn 192,0,0,.L_50D8-_GETPARTDESCRIPTION@8
	.stabs "IPOS2:1",128,0,0,-68
	.stabn 192,0,0,.L_50DC-_GETPARTDESCRIPTION@8
	.stabn 224,0,0,.L_50E1-_GETPARTDESCRIPTION@8
	.stabn 224,0,0,.L_50E2-_GETPARTDESCRIPTION@8
	.stabn 224,0,0,.L_50E3-_GETPARTDESCRIPTION@8
	.stabn 192,0,0,.L_50E6-_GETPARTDESCRIPTION@8
	.stabn 224,0,0,.L_50E9-_GETPARTDESCRIPTION@8
	.stabn 224,0,0,.L_50D1-_GETPARTDESCRIPTION@8
.L_50FC:
	.stabs "",36,0,0,.L_50FC-_GETPARTDESCRIPTION@8
	.stabs "ISPARTFILTERED:F16",36,0,289,_ISPARTFILTERED@4
	.stabs "PPART:p310=*278",160,0,0,8
.balign 16

.globl _ISPARTFILTERED@4
_ISPARTFILTERED@4:
	push ebp
	mov ebp, esp
	sub esp, 52
	push ebx
	.stabn 68,0,289,_ISPARTFILTERED@4-_ISPARTFILTERED@4
	mov byte ptr [ebp-4], 0
.L_50FD:
.L_513B:
	cmp dword ptr [ebp+8], 0
	jne .L_5100
.L_5101:
	mov byte ptr [ebp-4], 1
	jmp .L_50FE
.L_5100:
.L_5102:
.stabn 68,0,290,.L_513B-_ISPARTFILTERED@4
.L_513C:
.L_5103:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-8], eax
.stabn 68,0,291,.L_513C-_ISPARTFILTERED@4
.L_513D:
	cmp dword ptr [_G_REVERSEFILTERFLAGS], 0
	je .L_5105
	mov eax, dword ptr [ebp-8]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_REVERSEFILTERFLAGS]
	test ebx, ebx
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-12], ebx
	jmp .L_513A
.L_5105:
	mov dword ptr [ebp-12], 0
.L_513A:
	cmp dword ptr [ebp-12], 0
	je .L_5108
.L_5109:
	mov byte ptr [ebp-4], 1
	jmp .L_50FE
.L_5108:
.L_510A:
.stabn 68,0,292,.L_513D-_ISPARTFILTERED@4
.L_513F:
	mov ebx, dword ptr [ebp-8]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	je .L_510C
.L_510D:
	mov byte ptr [ebp-4], 1
	jmp .L_50FE
.L_510C:
.L_510E:
.stabn 68,0,293,.L_513F-_ISPARTFILTERED@4
.L_5140:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32768
	test eax, eax
	jne .L_5110
.L_5111:
	mov byte ptr [ebp-4], 0
	jmp .L_50FE
.L_5110:
.L_5112:
.stabn 68,0,295,.L_5140-_ISPARTFILTERED@4
.L_5141:
	push 0
	push 65535
	mov eax, dword ptr [ebp+8]
	lea ebx, [eax+128]
	push ebx
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,296,.L_5141-_ISPARTFILTERED@4
.L_5142:
	push 0
	push -1
	push 1
	push offset _Lt_2563
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-24]
	push eax
	push 1
	call _fb_StrInstr@12
	dec eax
	push eax
	lea eax, [ebp-24]
	push eax
	call _fb_LEFT@8
	push eax
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrInit@20
.stabn 68,0,297,.L_5142-_ISPARTFILTERED@4
.L_5143:
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-40], eax
.stabn 68,0,298,.L_5143-_ISPARTFILTERED@4
.L_5144:
	cmp dword ptr [ebp-40], 3
	jge .L_5114
.L_5115:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_50FE
.L_5114:
.L_5116:
.stabn 68,0,299,.L_5144-_ISPARTFILTERED@4
.L_5145:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32768
	je .L_5118
.L_5119:
.stabn 68,0,302,.L_5145-_ISPARTFILTERED@4
.L_5146:
.L_511A:
	mov dword ptr [ebp-44], -4
.L_511E:
.L_511F:
.stabn 68,0,303,.L_5146-_ISPARTFILTERED@4
.L_5147:
.L_5120:
	mov eax, dword ptr [ebp-36]
	add eax, dword ptr [ebp-40]
	add eax, dword ptr [ebp-44]
	mov bl, byte ptr [eax]
	mov byte ptr [ebp-48], bl
.stabn 68,0,304,.L_5147-_ISPARTFILTERED@4
.L_5148:
	movzx ebx, byte ptr [ebp-48]
	cmp ebx, 99
	je .L_5125
.L_5126:
	movzx ebx, byte ptr [ebp-48]
	cmp ebx, 112
	jne .L_5123
.L_5125:
.L_5127:
.stabn 68,0,305,.L_5148-_ISPARTFILTERED@4
.L_5149:
.L_5128:
	mov ebx, dword ptr [ebp-44]
	inc ebx
	mov dword ptr [ebp-52], ebx
	jmp .L_5129
.L_512C:
.L_512D:
.stabn 68,0,306,.L_5149-_ISPARTFILTERED@4
.L_514A:
	mov ebx, dword ptr [ebp-36]
	add ebx, dword ptr [ebp-40]
	add ebx, dword ptr [ebp-52]
	movzx eax, byte ptr [ebx]
	push eax
	call _isdigit
	add esp, 4
	test eax, eax
	jne .L_512F
.L_5130:
	jmp .L_511C
.L_512F:
.L_5131:
.stabn 68,0,307,.L_514A-_ISPARTFILTERED@4
.L_514B:
.L_5132:
.L_512A:
	inc dword ptr [ebp-52]
.L_5129:
	cmp dword ptr [ebp-52], -1
	jle .L_512C
.L_512B:
.L_5133:
.stabn 68,0,308,.L_514B-_ISPARTFILTERED@4
.L_514C:
	mov byte ptr [ebp-4], 1
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
	jmp .L_50FE
.stabn 68,0,309,.L_514C-_ISPARTFILTERED@4
.L_514D:
.L_5134:
.L_5123:
.L_5121:
.L_5135:
.L_5136:
.L_511C:
	inc dword ptr [ebp-44]
.L_511B:
	cmp dword ptr [ebp-44], -3
	jle .L_511E
.L_511D:
.L_5137:
.stabn 68,0,311,.L_514D-_ISPARTFILTERED@4
.L_514E:
.L_5138:
.L_5118:
.L_5117:
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
.L_5139:
.stabn 68,0,313,.L_514E-_ISPARTFILTERED@4
.L_514F:
	mov byte ptr [ebp-4], 0
.stabn 68,0,314,.L_514F-_ISPARTFILTERED@4
.L_5150:
.L_50FE:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,316,.L_50FE-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_50FD-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5101-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5102-_ISPARTFILTERED@4
	.stabs "SPART:13",128,0,0,-24
	.stabs "SPARTID:13",128,0,0,-36
	.stabs "ILENID:1",128,0,0,-40
	.stabn 192,0,0,.L_5103-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5109-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_510A-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_510D-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_510E-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5111-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5112-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5115-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5116-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5119-_ISPARTFILTERED@4
	.stabs "N:1",128,0,0,-44
	.stabn 192,0,0,.L_511A-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_511F-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5120-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5127-_ISPARTFILTERED@4
	.stabs "M:1",128,0,0,-52
	.stabn 192,0,0,.L_5128-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_512D-_ISPARTFILTERED@4
	.stabn 192,0,0,.L_5130-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5131-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5132-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5133-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5134-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5135-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5136-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5137-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5138-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_5139-_ISPARTFILTERED@4
	.stabn 224,0,0,.L_50FE-_ISPARTFILTERED@4
.L_5151:
	.stabs "",36,0,0,.L_5151-_ISPARTFILTERED@4
	.stabs "UPDATESEARCH:F1",36,0,317,_UPDATESEARCH@4
	.stabs "SSEARCH:v13",160,0,0,8
.balign 16

.globl _UPDATESEARCH@4
_UPDATESEARCH@4:
	push ebp
	mov ebp, esp
	sub esp, 1176
	push ebx
	.stabn 68,0,317,_UPDATESEARCH@4-_UPDATESEARCH@4
	mov dword ptr [ebp-4], 0
.L_5152:
.L_51EC:
	mov dword ptr [ebp-8], -1
	mov dword ptr [ebp-12], 0
.stabn 68,0,319,.L_51EC-_UPDATESEARCH@4
.L_51ED:
	push 0
	push 0
	push 11
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,321,.L_51ED-_UPDATESEARCH@4
.L_51EE:
	push 0
	push 0
	push 388
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,322,.L_51EE-_UPDATESEARCH@4
.L_51EF:
	push dword ptr [_G_HSEARCH]
	call _GetDC@4
	mov dword ptr [ebp-16], eax
.stabn 68,0,324,.L_51EF-_UPDATESEARCH@4
.L_51F0:
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-24], 0
.stabn 68,0,326,.L_51F0-_UPDATESEARCH@4
.L_51F1:
	push dword ptr [_G_HFONTSEARCH]
	push dword ptr [ebp-16]
	call _SelectObject@8
.stabn 68,0,327,.L_51F1-_UPDATESEARCH@4
.L_51F2:
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
.stabn 68,0,329,.L_51F2-_UPDATESEARCH@4
.L_51F3:
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
.stabn 68,0,330,.L_51F3-_UPDATESEARCH@4
.L_51F4:
	mov dword ptr [_G_IFILTEREDCOUNT], 0
.stabn 68,0,331,.L_51F4-_UPDATESEARCH@4
.L_51F5:
.L_5154:
	mov dword ptr [ebp-100], 0
.L_5158:
.L_5159:
.stabn 68,0,332,.L_51F5-_UPDATESEARCH@4
.L_51F6:
	push dword ptr [ebp-8]
	push dword ptr [ebp+8]
	call _SEARCHPART@8
	mov dword ptr [ebp-8], eax
.stabn 68,0,333,.L_51F6-_UPDATESEARCH@4
.L_51F7:
	cmp dword ptr [ebp-8], 0
	jge .L_515B
.L_515C:
	jmp .L_5157
.L_515B:
.L_515D:
.stabn 68,0,334,.L_51F7-_UPDATESEARCH@4
.L_51F8:
	mov eax, dword ptr [ebp-8]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ebx, dword ptr [_G_PPARTSNAMES]
	add ebx, dword ptr [eax]
	mov dword ptr [ebp-104], ebx
.stabn 68,0,335,.L_51F8-_UPDATESEARCH@4
.L_51F9:
	push 0
	push 65535
	mov ebx, dword ptr [ebp-104]
	lea eax, [ebx+128]
	push eax
	push -1
	lea eax, [ebp-116]
	push eax
	call _fb_StrInit@20
.stabn 68,0,336,.L_51F9-_UPDATESEARCH@4
.L_51FA:
	push dword ptr [ebp-104]
	call _ISPARTFILTERED@4
	test al, al
	je .L_515F
.L_5160:
.stabn 68,0,337,.L_51FA-_UPDATESEARCH@4
.L_51FB:
	movsx eax, byte ptr [_G_DOFILTERDUMP]
	test eax, eax
	je .L_5162
.L_5163:
.stabn 68,0,338,.L_51FB-_UPDATESEARCH@4
.L_51FC:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 1
	je .L_5165
.L_5166:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP]
	push ebx
	call _fb_StrConcatAssign@20
.L_5165:
.L_5167:
.stabn 68,0,342,.L_51FC-_UPDATESEARCH@4
.L_51FD:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 2
	je .L_5169
.L_516A:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+12]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+12]
	push eax
	call _fb_StrConcatAssign@20
.L_5169:
.L_516B:
.stabn 68,0,342,.L_51FD-_UPDATESEARCH@4
.L_51FE:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 4
	je .L_516D
.L_516E:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+24]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+24]
	push ebx
	call _fb_StrConcatAssign@20
.L_516D:
.L_516F:
.stabn 68,0,342,.L_51FE-_UPDATESEARCH@4
.L_51FF:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 8
	je .L_5171
.L_5172:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+36]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+36]
	push eax
	call _fb_StrConcatAssign@20
.L_5171:
.L_5173:
.stabn 68,0,342,.L_51FF-_UPDATESEARCH@4
.L_5200:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 16
	je .L_5175
.L_5176:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+48]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+48]
	push ebx
	call _fb_StrConcatAssign@20
.L_5175:
.L_5177:
.stabn 68,0,342,.L_5200-_UPDATESEARCH@4
.L_5201:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32
	je .L_5179
.L_517A:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+60]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+60]
	push eax
	call _fb_StrConcatAssign@20
.L_5179:
.L_517B:
.stabn 68,0,342,.L_5201-_UPDATESEARCH@4
.L_5202:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 64
	je .L_517D
.L_517E:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+72]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+72]
	push ebx
	call _fb_StrConcatAssign@20
.L_517D:
.L_517F:
.stabn 68,0,342,.L_5202-_UPDATESEARCH@4
.L_5203:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 128
	je .L_5181
.L_5182:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+84]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+84]
	push eax
	call _fb_StrConcatAssign@20
.L_5181:
.L_5183:
.stabn 68,0,342,.L_5203-_UPDATESEARCH@4
.L_5204:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 256
	je .L_5185
.L_5186:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+96]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+96]
	push ebx
	call _fb_StrConcatAssign@20
.L_5185:
.L_5187:
.stabn 68,0,342,.L_5204-_UPDATESEARCH@4
.L_5205:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 512
	je .L_5189
.L_518A:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+108]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+108]
	push eax
	call _fb_StrConcatAssign@20
.L_5189:
.L_518B:
.stabn 68,0,342,.L_5205-_UPDATESEARCH@4
.L_5206:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 1024
	je .L_518D
.L_518E:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+120]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+120]
	push ebx
	call _fb_StrConcatAssign@20
.L_518D:
.L_518F:
.stabn 68,0,342,.L_5206-_UPDATESEARCH@4
.L_5207:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 2048
	je .L_5191
.L_5192:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+132]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+132]
	push eax
	call _fb_StrConcatAssign@20
.L_5191:
.L_5193:
.stabn 68,0,342,.L_5207-_UPDATESEARCH@4
.L_5208:
	mov eax, dword ptr [ebp-104]
	movzx ebx, word ptr [eax+16]
	and ebx, dword ptr [_G_FILTERFLAGS]
	and ebx, 16384
	je .L_5195
.L_5196:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea ebx, [_TFILTEREDDUMP+144]
	push ebx
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	push -1
	lea ebx, [_TFILTEREDDUMP+144]
	push ebx
	call _fb_StrConcatAssign@20
.L_5195:
.L_5197:
.stabn 68,0,342,.L_5208-_UPDATESEARCH@4
.L_5209:
	mov ebx, dword ptr [ebp-104]
	movzx eax, word ptr [ebx+16]
	and eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32768
	je .L_5199
.L_519A:
	push 0
	push 2
	push offset _Lt_24A8
	push -1
	lea eax, [_TFILTEREDDUMP+156]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	lea eax, [ebp-116]
	push eax
	push -1
	lea eax, [_TFILTEREDDUMP+156]
	push eax
	call _fb_StrConcatAssign@20
.L_5199:
.L_519B:
.stabn 68,0,342,.L_5209-_UPDATESEARCH@4
.L_520A:
.L_519C:
.L_5162:
.L_5161:
	inc dword ptr [_G_IFILTEREDCOUNT]
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
	jmp .L_5156
.stabn 68,0,344,.L_520A-_UPDATESEARCH@4
.L_520B:
.L_519D:
.L_515F:
.L_515E:
	push 0
	push -1
	lea eax, [ebp-120]
	push eax
	push dword ptr [ebp-8]
	call _GETPARTDESCRIPTION@8
	push eax
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrInit@20
.stabn 68,0,347,.L_520B-_UPDATESEARCH@4
.L_520C:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32768
	test eax, eax
	je .L_51A0
	mov eax, dword ptr [ebp-132]
	movzx ebx, byte ptr [eax]
	cmp ebx, 61
	je .L_519E
	mov ebx, dword ptr [ebp-132]
	movzx eax, byte ptr [ebx]
	cmp eax, 95
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-136], ebx
	jmp .L_51E9
.L_519E:
	mov dword ptr [ebp-136], -1
.L_51E9:
	mov ebx, dword ptr [ebp-136]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-140], ebx
	jmp .L_51E8
.L_51A0:
	mov dword ptr [ebp-140], 0
.L_51E8:
	cmp dword ptr [ebp-140], 0
	je .L_51A3
.L_51A4:
	inc dword ptr [_G_IFILTEREDCOUNT]
	lea ebx, [ebp-132]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-116]
	push ebx
	call _fb_StrDelete@4
	jmp .L_5156
.L_51A3:
.L_51A5:
.stabn 68,0,349,.L_520C-_UPDATESEARCH@4
.L_520F:
	mov ebx, dword ptr [_CFG_MAXSEARCHPARTS]
	cmp dword ptr [ebp-100], ebx
	jl .L_51A7
.L_51A8:
	lea ebx, [ebp-132]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-116]
	push ebx
	call _fb_StrDelete@4
	jmp .L_5156
.L_51A7:
.L_51A9:
.stabn 68,0,350,.L_520F-_UPDATESEARCH@4
.L_5210:
	movsx ebx, byte ptr [ebp-120]
	test ebx, ebx
	je .L_51AB
.L_51AC:
.stabn 68,0,357,.L_5210-_UPDATESEARCH@4
.L_5211:
	mov dword ptr [ebp-1172], 0
.stabn 68,0,358,.L_5211-_UPDATESEARCH@4
.L_5212:
.L_51AD:
	mov dword ptr [ebp-1172], 0
	push -1
	lea ebx, [ebp-116]
	push ebx
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-1176], eax
	jmp .L_51AF
.L_51B2:
.L_51B3:
.stabn 68,0,359,.L_5212-_UPDATESEARCH@4
.L_5213:
	mov eax, dword ptr [ebp-116]
	add eax, dword ptr [ebp-1172]
	movzx bx, byte ptr [eax]
	lea eax, [ebp-1164]
	mov ecx, dword ptr [ebp-1172]
	sal ecx, 2
	add eax, ecx
	mov word ptr [eax], bx
.stabn 68,0,360,.L_5213-_UPDATESEARCH@4
.L_5214:
	lea ebx, [ebp-1164]
	mov eax, dword ptr [ebp-1172]
	sal eax, 2
	add ebx, eax
	mov word ptr [ebx+2], 818
.stabn 68,0,361,.L_5214-_UPDATESEARCH@4
.L_5215:
.L_51B4:
.L_51B0:
	inc dword ptr [ebp-1172]
.L_51AF:
	mov ebx, dword ptr [ebp-1176]
	cmp dword ptr [ebp-1172], ebx
	jle .L_51B2
.L_51B1:
.L_51B5:
.stabn 68,0,362,.L_5215-_UPDATESEARCH@4
.L_5216:
	lea ebx, [ebp-1164]
	mov eax, dword ptr [ebp-1172]
	sal eax, 2
	add ebx, eax
	mov word ptr [ebx], 0
.stabn 68,0,363,.L_5216-_UPDATESEARCH@4
.L_5217:
.L_51B6:
	jmp .L_51AA
.L_51AB:
.L_51B7:
.stabn 68,0,364,.L_5217-_UPDATESEARCH@4
.L_5218:
	push -1
	lea ebx, [ebp-116]
	push ebx
	push 512
	lea ebx, [ebp-1164]
	push ebx
	call _fb_WstrAssignFromA@16
.stabn 68,0,365,.L_5218-_UPDATESEARCH@4
.L_5219:
.L_51B8:
.L_51AA:
	lea ebx, [ebp-32]
	push ebx
	push -1
	lea ebx, [ebp-116]
	push ebx
	call _fb_StrLen@8
	push eax
	push dword ptr [ebp-116]
	push dword ptr [ebp-16]
	call _GetTextExtentPoint32A@16
.stabn 68,0,368,.L_5219-_UPDATESEARCH@4
.L_521A:
	cmp dword ptr [ebp-24], 0
	jne .L_51BA
.L_51BB:
	push -1
	lea eax, [ebp-116]
	push eax
	call _fb_StrLen@8
	add eax, dword ptr [ebp-32]
	dec eax
	push -1
	lea ebx, [ebp-116]
	push ebx
	mov ebx, eax
	call _fb_StrLen@8
	mov ecx, eax
	push eax
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	pop eax
	mov dword ptr [ebp-24], ebx
.L_51BA:
.L_51BC:
.stabn 68,0,369,.L_521A-_UPDATESEARCH@4
.L_521B:
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [ebp-32], ebx
	jle .L_51BE
.L_51BF:
	mov ebx, dword ptr [ebp-32]
	mov dword ptr [ebp-20], ebx
.L_51BE:
.L_51C0:
.stabn 68,0,370,.L_521B-_UPDATESEARCH@4
.L_521C:
	lea ebx, [ebp-1164]
	push ebx
	push 0
	push 384
	push dword ptr [_G_HSEARCH]
	call _SendMessageW@16
	mov dword ptr [ebp-1168], eax
.stabn 68,0,372,.L_521C-_UPDATESEARCH@4
.L_521D:
	push dword ptr [ebp-8]
	push dword ptr [ebp-1168]
	push 410
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,373,.L_521D-_UPDATESEARCH@4
.L_521E:
	cmp dword ptr [ebp-12], 0
	jne .L_51C2
.L_51C3:
	push 0
	push -1
	lea eax, [ebp-132]
	push eax
	push -1
	lea eax, [ebp-44]
	push eax
	call _fb_StrAssign@20
.L_51C2:
.L_51C4:
.stabn 68,0,374,.L_521E-_UPDATESEARCH@4
.L_521F:
	inc dword ptr [ebp-12]
.stabn 68,0,375,.L_521F-_UPDATESEARCH@4
.L_5220:
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-116]
	push eax
	call _fb_StrDelete@4
.L_51C5:
.L_5156:
	inc dword ptr [ebp-100]
.L_5155:
	cmp dword ptr [ebp-100], 16777216
	jle .L_5158
.L_5157:
.L_51C6:
.stabn 68,0,376,.L_5220-_UPDATESEARCH@4
.L_5221:
	cmp dword ptr [_G_IFILTEREDCOUNT], 0
	je .L_51C8
.L_51C9:
	push 0
	push -1
	push -1
	push -1
	lea eax, [ebp-44]
	push eax
	push 12
	push offset _Lt_51CA
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push -1
	push dword ptr [_G_IFILTEREDCOUNT]
	call _fb_IntToStr@4
	push eax
	push 2
	push offset _Lt_4AC0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	lea eax, [ebp-108]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	lea eax, [ebp-132]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-44]
	push eax
	call _fb_StrAssign@20
.L_51C8:
.L_51CE:
.stabn 68,0,378,.L_5221-_UPDATESEARCH@4
.L_5222:
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	push 0
	push -1
	push -1
	lea eax, [ebp-44]
	push eax
	push 2
	push offset _Lt_2499
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-68]
	push dword ptr [_G_HSTATUS]
	call _SetWindowTextA@8
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,379,.L_5222-_UPDATESEARCH@4
.L_5223:
	movsx eax, byte ptr [_CFG_SEARCHBOXROWS]
	cmp dword ptr [ebp-12], eax
	jle .L_51D1
	movsx eax, byte ptr [_CFG_SEARCHBOXROWS]
	mov dword ptr [ebp-72], eax
	jmp .L_51EA
.L_51D1:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-72], eax
.L_51EA:
	mov eax, dword ptr [ebp-72]
	mov dword ptr [ebp-76], eax
.stabn 68,0,382,.L_5223-_UPDATESEARCH@4
.L_5224:
	movsx eax, byte ptr [_CFG_SEARCHBOXROWS]
	add eax, dword ptr [ebp-12]
	dec eax
	movsx ebx, byte ptr [_CFG_SEARCHBOXROWS]
	cdq
	idiv ebx
	mov dword ptr [ebp-80], eax
.stabn 68,0,383,.L_5224-_UPDATESEARCH@4
.L_5225:
	movsx eax, byte ptr [_CFG_SEARCHBOXCOLS]
	dec eax
	cmp dword ptr [ebp-80], eax
	jle .L_51D3
	push 9
	call _GetSystemMetrics@4
	add eax, 2
	mov dword ptr [ebp-84], eax
	jmp .L_51EB
.L_51D3:
	mov dword ptr [ebp-84], 0
.L_51EB:
	mov eax, dword ptr [ebp-84]
	mov dword ptr [ebp-88], eax
.stabn 68,0,384,.L_5225-_UPDATESEARCH@4
.L_5226:
	movsx eax, byte ptr [_CFG_SEARCHBOXCOLS]
	dec eax
	cmp dword ptr [ebp-80], eax
	jle .L_51D6
.L_51D7:
	movsx eax, byte ptr [_CFG_SEARCHBOXCOLS]
	dec eax
	mov dword ptr [ebp-80], eax
.L_51D6:
.L_51D8:
.stabn 68,0,385,.L_5226-_UPDATESEARCH@4
.L_5227:
	cmp dword ptr [ebp-88], 0
	je .L_51DA
.L_51DB:
.stabn 68,0,386,.L_5227-_UPDATESEARCH@4
.L_5228:
	push -16
	push dword ptr [_G_HSEARCH]
	call _GetWindowLongA@8
	or eax, 1048576
	push eax
	push -16
	push dword ptr [_G_HSEARCH]
	call _SetWindowLongA@12
.stabn 68,0,387,.L_5228-_UPDATESEARCH@4
.L_5229:
.L_51DC:
	jmp .L_51D9
.L_51DA:
.L_51DD:
.stabn 68,0,388,.L_5229-_UPDATESEARCH@4
.L_522A:
	push -16
	push dword ptr [_G_HSEARCH]
	call _GetWindowLongA@8
	and eax, -1048577
	push eax
	push -16
	push dword ptr [_G_HSEARCH]
	call _SetWindowLongA@12
.stabn 68,0,389,.L_522A-_UPDATESEARCH@4
.L_522B:
.L_51DE:
.L_51D9:
	push 22
	mov eax, dword ptr [_G_SEARCHROWHEI]
	imul eax, dword ptr [ebp-76]
	add eax, dword ptr [ebp-88]
	mov ebx, dword ptr [_G_SEARCHROWHEI]
	mov ecx, 8
	push eax
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	pop eax
	add eax, ebx
	push eax
	mov eax, dword ptr [ebp-24]
	add eax, dword ptr [ebp-20]
	imul eax, dword ptr [ebp-80]
	push eax
	push 0
	push 0
	push 0
	push dword ptr [_G_HSEARCH]
	call _SetWindowPos@28
.stabn 68,0,391,.L_522B-_UPDATESEARCH@4
.L_522C:
	mov eax, dword ptr [_G_RCCURSOR]
	mov dword ptr [ebp-96], eax
	mov eax, dword ptr [_G_RCCURSOR+4]
	mov dword ptr [ebp-92], eax
.stabn 68,0,393,.L_522C-_UPDATESEARCH@4
.L_522D:
	lea eax, [ebp-96]
	push eax
	push dword ptr [_G_HCON]
	call _ClientToScreen@8
.stabn 68,0,394,.L_522D-_UPDATESEARCH@4
.L_522E:
	push offset _G_RCSEARCH
	push dword ptr [_G_HSEARCH]
	call _GetWindowRect@8
.stabn 68,0,395,.L_522E-_UPDATESEARCH@4
.L_522F:
	mov eax, dword ptr [_G_RCSEARCH]
	sub dword ptr [_G_RCSEARCH+8], eax
	mov eax, dword ptr [_G_RCSEARCH+4]
	sub dword ptr [_G_RCSEARCH+12], eax
.stabn 68,0,396,.L_522F-_UPDATESEARCH@4
.L_5230:
	push 20
	push dword ptr [_G_RCSEARCH+12]
	push dword ptr [_G_RCSEARCH+8]
	push dword ptr [ebp-92]
	push dword ptr [ebp-96]
	push 0
	push dword ptr [_G_HCONTAINER]
	call _SetWindowPos@28
.stabn 68,0,397,.L_5230-_UPDATESEARCH@4
.L_5231:
	push 0
	push 4294967295
	push 11
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,399,.L_5231-_UPDATESEARCH@4
.L_5232:
	cmp dword ptr [ebp-12], 0
	je .L_51E0
.L_51E1:
.stabn 68,0,400,.L_5232-_UPDATESEARCH@4
.L_5233:
	push 0
	mov eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-24]
	mov ebx, eax
	push ebx
	push 405
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,401,.L_5233-_UPDATESEARCH@4
.L_5234:
	push 0
	push -1
	push 5
	push offset _Lt_4686
	push -1
	push dword ptr [ebp+8]
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea ebx, [ebp-120]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrInit@20
.stabn 68,0,402,.L_5234-_UPDATESEARCH@4
.L_5235:
	push dword ptr [ebp-108]
	push 0
	push 418
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-124], eax
.stabn 68,0,403,.L_5235-_UPDATESEARCH@4
.L_5236:
	cmp dword ptr [ebp-124], -1
	je .L_51E4
.L_51E5:
	push dword ptr [ebp-124]
	push dword ptr [ebp-124]
	push 390
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.L_51E4:
.L_51E6:
.stabn 68,0,404,.L_5236-_UPDATESEARCH@4
.L_5237:
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
.L_51E7:
.L_51E0:
.L_51DF:
.stabn 68,0,405,.L_5237-_UPDATESEARCH@4
.L_5238:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-44]
	push eax
	call _fb_StrDelete@4
	jmp .L_5153
.stabn 68,0,407,.L_5238-_UPDATESEARCH@4
.L_5239:
	lea eax, [ebp-44]
	push eax
	call _fb_StrDelete@4
.L_5153:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,408,.L_5153-_UPDATESEARCH@4
	.stabs "IPART:1",128,0,0,-8
	.stabs "IFOUND:1",128,0,0,-12
	.stabs "HDC:311=*19",128,0,0,-16
	.stabs "IBIGWID:1",128,0,0,-20
	.stabs "ICHARWID:1",128,0,0,-24
	.stabs "TSIZE:71",128,0,0,-32
	.stabs "SSHOWDESC:13",128,0,0,-44
	.stabs "IROWS:1",128,0,0,-76
	.stabs "ICOLS:1",128,0,0,-80
	.stabs "ISCROLLHEI:1",128,0,0,-88
	.stabs "RCPT:154",128,0,0,-96
	.stabn 192,0,0,.L_5152-_UPDATESEARCH@4
	.stabs "N:1",128,0,0,-100
	.stabn 192,0,0,.L_5154-_UPDATESEARCH@4
	.stabs "PPART:312=*278",128,0,0,-104
	.stabs "SNAME:13",128,0,0,-116
	.stabs "BISUNNOFICIAL:2",128,0,0,-120
	.stabs "SDESC:13",128,0,0,-132
	.stabs "WNAME:6",128,0,0,-1164
	.stabs "IIDX:1",128,0,0,-1168
	.stabn 192,0,0,.L_5159-_UPDATESEARCH@4
	.stabn 192,0,0,.L_515C-_UPDATESEARCH@4
	.stabn 224,0,0,.L_515D-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5160-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5163-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5166-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5167-_UPDATESEARCH@4
	.stabn 192,0,0,.L_516A-_UPDATESEARCH@4
	.stabn 224,0,0,.L_516B-_UPDATESEARCH@4
	.stabn 192,0,0,.L_516E-_UPDATESEARCH@4
	.stabn 224,0,0,.L_516F-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5172-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5173-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5176-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5177-_UPDATESEARCH@4
	.stabn 192,0,0,.L_517A-_UPDATESEARCH@4
	.stabn 224,0,0,.L_517B-_UPDATESEARCH@4
	.stabn 192,0,0,.L_517E-_UPDATESEARCH@4
	.stabn 224,0,0,.L_517F-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5182-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5183-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5186-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5187-_UPDATESEARCH@4
	.stabn 192,0,0,.L_518A-_UPDATESEARCH@4
	.stabn 224,0,0,.L_518B-_UPDATESEARCH@4
	.stabn 192,0,0,.L_518E-_UPDATESEARCH@4
	.stabn 224,0,0,.L_518F-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5192-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5193-_UPDATESEARCH@4
	.stabn 192,0,0,.L_5196-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5197-_UPDATESEARCH@4
	.stabn 192,0,0,.L_519A-_UPDATESEARCH@4
	.stabn 224,0,0,.L_519B-_UPDATESEARCH@4
	.stabn 224,0,0,.L_519C-_UPDATESEARCH@4
	.stabn 224,0,0,.L_519D-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51A4-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51A5-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51A8-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51A9-_UPDATESEARCH@4
	.stabs "N:1",128,0,0,-1172
	.stabn 192,0,0,.L_51AC-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51AD-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51B3-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51B4-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51B5-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51B6-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51B7-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51B8-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51BB-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51BC-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51BF-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51C0-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51C3-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51C4-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51C5-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51C6-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51C9-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51CE-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51D7-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51D8-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51DB-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51DC-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51DD-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51DE-_UPDATESEARCH@4
	.stabs "SSTEMP:13",128,0,0,-108
	.stabs "IIDX:1",128,0,0,-124
	.stabn 192,0,0,.L_51E1-_UPDATESEARCH@4
	.stabn 192,0,0,.L_51E5-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51E6-_UPDATESEARCH@4
	.stabn 224,0,0,.L_51E7-_UPDATESEARCH@4
	.stabn 224,0,0,.L_5153-_UPDATESEARCH@4
.L_523A:
	.stabs "",36,0,0,.L_523A-_UPDATESEARCH@4
	.stabs "SHOWDUMPTEXTFILE:F7",36,0,409,_SHOWDUMPTEXTFILE@4
	.stabs "DUMMY:p313=*7",160,0,0,8
.balign 16

.globl _SHOWDUMPTEXTFILE@4
_SHOWDUMPTEXTFILE@4:
	push ebp
	mov ebp, esp
	sub esp, 24
	.stabn 68,0,409,_SHOWDUMPTEXTFILE@4-_SHOWDUMPTEXTFILE@4
.L_523B:
.L_523F:
	push 0
	push -1
	push 19
	push offset _Lt_523D
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,410,.L_523F-_SHOWDUMPTEXTFILE@4
.L_5240:
	lea eax, [ebp-12]
	push eax
	call _fb_Shell@4
.stabn 68,0,411,.L_5240-_SHOWDUMPTEXTFILE@4
.L_5241:
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.L_523C:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,412,.L_523C-_SHOWDUMPTEXTFILE@4
	.stabs "SDUMPFILE:13",128,0,0,-12
	.stabn 192,0,0,.L_523B-_SHOWDUMPTEXTFILE@4
	.stabn 224,0,0,.L_523C-_SHOWDUMPTEXTFILE@4
.L_5242:
	.stabs "",36,0,0,.L_5242-_SHOWDUMPTEXTFILE@4
	.stabs "DUMPFILTEREDPARTS:F7",36,0,413,_DUMPFILTEREDPARTS@4
	.stabs "SSEARCH:v13",160,0,0,8
.balign 16

.globl _DUMPFILTEREDPARTS@4
_DUMPFILTEREDPARTS@4:
	push ebp
	mov ebp, esp
	sub esp, 32
	.stabn 68,0,413,_DUMPFILTEREDPARTS@4-_DUMPFILTEREDPARTS@4
.L_5243:
.L_52C0:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	cmp eax, 2
	jge .L_5246
.L_5247:
	jmp .L_5244
.L_5246:
.L_5248:
.stabn 68,0,414,.L_52C0-_DUMPFILTEREDPARTS@4
.L_52C1:
	mov byte ptr [_G_DOFILTERDUMP], 1
	push dword ptr [ebp+8]
	call _UPDATESEARCH@4
	mov byte ptr [_G_DOFILTERDUMP], 0
.stabn 68,0,415,.L_52C1-_DUMPFILTEREDPARTS@4
.L_52C2:
	push 0
	push -1
	push 19
	push offset _Lt_523D
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,416,.L_52C2-_DUMPFILTEREDPARTS@4
.L_52C3:
	call _fb_FileFree@0
	mov dword ptr [ebp-28], eax
.stabn 68,0,417,.L_52C3-_DUMPFILTEREDPARTS@4
.L_52C4:
	push 0
	push dword ptr [ebp-28]
	push 0
	push 0
	push 3
	lea eax, [ebp-12]
	push eax
	call _fb_FileOpen@24
	test eax, eax
	je .L_524B
.L_524C:
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
	jmp .L_5244
.L_524B:
.L_524D:
.stabn 68,0,418,.L_52C4-_DUMPFILTEREDPARTS@4
.L_52C5:
.L_524E:
	push -1
	lea eax, [_TFILTEREDDUMP]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5250
.L_5251:
.stabn 68,0,426,.L_52C5-_DUMPFILTEREDPARTS@4
.L_52C6:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 7
	push offset _Lt_5255
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52C6-_DUMPFILTEREDPARTS@4
.L_52C7:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52C7-_DUMPFILTEREDPARTS@4
.L_52C8:
.L_5256:
.L_5250:
.L_524F:
	push -1
	lea eax, [_TFILTEREDDUMP+12]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5258
.L_5259:
.stabn 68,0,426,.L_52C8-_DUMPFILTEREDPARTS@4
.L_52C9:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 7
	push offset _Lt_525D
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+12]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52C9-_DUMPFILTEREDPARTS@4
.L_52CA:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+12]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52CA-_DUMPFILTEREDPARTS@4
.L_52CB:
.L_525E:
.L_5258:
.L_5257:
	push -1
	lea eax, [_TFILTEREDDUMP+24]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5260
.L_5261:
.stabn 68,0,426,.L_52CB-_DUMPFILTEREDPARTS@4
.L_52CC:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 12
	push offset _Lt_5265
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+24]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52CC-_DUMPFILTEREDPARTS@4
.L_52CD:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+24]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52CD-_DUMPFILTEREDPARTS@4
.L_52CE:
.L_5266:
.L_5260:
.L_525F:
	push -1
	lea eax, [_TFILTEREDDUMP+36]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5268
.L_5269:
.stabn 68,0,426,.L_52CE-_DUMPFILTEREDPARTS@4
.L_52CF:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 6
	push offset _Lt_526D
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+36]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52CF-_DUMPFILTEREDPARTS@4
.L_52D0:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+36]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52D0-_DUMPFILTEREDPARTS@4
.L_52D1:
.L_526E:
.L_5268:
.L_5267:
	push -1
	lea eax, [_TFILTEREDDUMP+48]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5270
.L_5271:
.stabn 68,0,426,.L_52D1-_DUMPFILTEREDPARTS@4
.L_52D2:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 10
	push offset _Lt_5275
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+48]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52D2-_DUMPFILTEREDPARTS@4
.L_52D3:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+48]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52D3-_DUMPFILTEREDPARTS@4
.L_52D4:
.L_5276:
.L_5270:
.L_526F:
	push -1
	lea eax, [_TFILTEREDDUMP+60]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5278
.L_5279:
.stabn 68,0,426,.L_52D4-_DUMPFILTEREDPARTS@4
.L_52D5:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 12
	push offset _Lt_527D
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+60]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52D5-_DUMPFILTEREDPARTS@4
.L_52D6:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+60]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52D6-_DUMPFILTEREDPARTS@4
.L_52D7:
.L_527E:
.L_5278:
.L_5277:
	push -1
	lea eax, [_TFILTEREDDUMP+72]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5280
.L_5281:
.stabn 68,0,426,.L_52D7-_DUMPFILTEREDPARTS@4
.L_52D8:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 10
	push offset _Lt_5285
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+72]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52D8-_DUMPFILTEREDPARTS@4
.L_52D9:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+72]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52D9-_DUMPFILTEREDPARTS@4
.L_52DA:
.L_5286:
.L_5280:
.L_527F:
	push -1
	lea eax, [_TFILTEREDDUMP+84]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5288
.L_5289:
.stabn 68,0,426,.L_52DA-_DUMPFILTEREDPARTS@4
.L_52DB:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 9
	push offset _Lt_528D
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+84]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52DB-_DUMPFILTEREDPARTS@4
.L_52DC:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+84]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52DC-_DUMPFILTEREDPARTS@4
.L_52DD:
.L_528E:
.L_5288:
.L_5287:
	push -1
	lea eax, [_TFILTEREDDUMP+96]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5290
.L_5291:
.stabn 68,0,426,.L_52DD-_DUMPFILTEREDPARTS@4
.L_52DE:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 11
	push offset _Lt_5295
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+96]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52DE-_DUMPFILTEREDPARTS@4
.L_52DF:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+96]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52DF-_DUMPFILTEREDPARTS@4
.L_52E0:
.L_5296:
.L_5290:
.L_528F:
	push -1
	lea eax, [_TFILTEREDDUMP+108]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5298
.L_5299:
.stabn 68,0,426,.L_52E0-_DUMPFILTEREDPARTS@4
.L_52E1:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 9
	push offset _Lt_529D
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+108]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52E1-_DUMPFILTEREDPARTS@4
.L_52E2:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+108]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52E2-_DUMPFILTEREDPARTS@4
.L_52E3:
.L_529E:
.L_5298:
.L_5297:
	push -1
	lea eax, [_TFILTEREDDUMP+120]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_52A0
.L_52A1:
.stabn 68,0,426,.L_52E3-_DUMPFILTEREDPARTS@4
.L_52E4:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 9
	push offset _Lt_52A5
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+120]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52E4-_DUMPFILTEREDPARTS@4
.L_52E5:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+120]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52E5-_DUMPFILTEREDPARTS@4
.L_52E6:
.L_52A6:
.L_52A0:
.L_529F:
	push -1
	lea eax, [_TFILTEREDDUMP+132]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_52A8
.L_52A9:
.stabn 68,0,426,.L_52E6-_DUMPFILTEREDPARTS@4
.L_52E7:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 8
	push offset _Lt_52AD
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+132]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52E7-_DUMPFILTEREDPARTS@4
.L_52E8:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+132]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52E8-_DUMPFILTEREDPARTS@4
.L_52E9:
.L_52AE:
.L_52A8:
.L_52A7:
	push -1
	lea eax, [_TFILTEREDDUMP+144]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_52B0
.L_52B1:
.stabn 68,0,426,.L_52E9-_DUMPFILTEREDPARTS@4
.L_52EA:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 10
	push offset _Lt_52B5
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+144]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52EA-_DUMPFILTEREDPARTS@4
.L_52EB:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+144]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52EB-_DUMPFILTEREDPARTS@4
.L_52EC:
.L_52B6:
.L_52B0:
.L_52AF:
	push -1
	lea eax, [_TFILTEREDDUMP+156]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_52B8
.L_52B9:
.stabn 68,0,426,.L_52EC-_DUMPFILTEREDPARTS@4
.L_52ED:
	mov eax, dword ptr [ebp-28]
	mov dword ptr [ebp-32], eax
	push 0
	push 8
	push offset _Lt_52BD
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
	push 1
	lea eax, [_TFILTEREDDUMP+156]
	push eax
	push dword ptr [ebp-32]
	call _fb_PrintString@12
.stabn 68,0,426,.L_52ED-_DUMPFILTEREDPARTS@4
.L_52EE:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [_TFILTEREDDUMP+156]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,426,.L_52EE-_DUMPFILTEREDPARTS@4
.L_52EF:
.L_52BE:
.L_52B8:
.L_52B7:
.L_52BF:
	push dword ptr [ebp-28]
	call _fb_FileClose@4
.stabn 68,0,428,.L_52EF-_DUMPFILTEREDPARTS@4
.L_52F0:
	push 0
	push 0
	push offset _SHOWDUMPTEXTFILE@4
	call _fb_ThreadCreate@12
	push eax
	call _fb_ThreadDetach@4
.stabn 68,0,429,.L_52F0-_DUMPFILTEREDPARTS@4
.L_52F1:
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.L_5244:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,430,.L_5244-_DUMPFILTEREDPARTS@4
	.stabs "SDUMPFILE:13",128,0,0,-12
	.stabs "F:1",128,0,0,-28
	.stabn 192,0,0,.L_5243-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5247-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5248-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_524C-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_524D-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_524E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5251-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5256-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5259-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_525E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5261-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5266-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5269-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_526E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5271-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5276-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5279-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_527E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5281-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5286-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5289-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_528E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5291-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5296-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_5299-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_529E-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_52A1-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_52A6-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_52A9-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_52AE-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_52B1-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_52B6-_DUMPFILTEREDPARTS@4
	.stabn 192,0,0,.L_52B9-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_52BE-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_52BF-_DUMPFILTEREDPARTS@4
	.stabn 224,0,0,.L_5244-_DUMPFILTEREDPARTS@4
.L_52F2:
	.stabs "",36,0,0,.L_52F2-_DUMPFILTEREDPARTS@4
	.stabs "HANDLETOKENS:F1",36,0,439,_HANDLETOKENS@8
	.stabs "STEXT:v13",160,0,0,8
	.stabs "FBARRAY1:Tt315=s36DATA:316=*13,0,32;PTR:317=*13,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:318=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "SEARCHQUERYCONTEXT:Tt314=s100BCHANGED:2,0,8;BRECALCTOKENS:2,8,8;ITOKCNT:2,16,8;ICURTOK:2,24,8;IMAXTOK:2,32,8;ICUR:1,64,32;ITOKSTART:1,96,32;ITOKEND:1,128,32;IROW:1,160,32;ICOL:1,192,32;SCAPTION:13,224,96;SSTATUSTEXT:13,320,96;STOKEN:13,416,96;STOKENTXT:315,512,288;;",128,0,0,0
	.stabs "TCTX:v314",160,0,0,12
.balign 16

.globl _HANDLETOKENS@8
_HANDLETOKENS@8:
	push ebp
	mov ebp, esp
	sub esp, 176
	push ebx
	.stabn 68,0,439,_HANDLETOKENS@8-_HANDLETOKENS@8
	mov dword ptr [ebp-4], 0
.L_5300:
.L_53D9:
	mov dword ptr [ebp-4], 0
.stabn 68,0,440,.L_53D9-_HANDLETOKENS@8
.L_53DA:
	mov byte ptr [ebp-8], 0
.stabn 68,0,441,.L_53DA-_HANDLETOKENS@8
.L_53DB:
.L_5302:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-12], eax
.stabn 68,0,442,.L_53DB-_HANDLETOKENS@8
.L_53DC:
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_5304
	mov ebx, dword ptr [ebp-12]
	movsx eax, byte ptr [ebx+1]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-16], eax
	jmp .L_53D1
.L_5304:
	mov dword ptr [ebp-16], -1
.L_53D1:
	cmp dword ptr [ebp-16], 0
	je .L_5307
.L_5308:
.stabn 68,0,444,.L_53DC-_HANDLETOKENS@8
.L_53DE:
	mov eax, dword ptr [ebp-12]
	mov byte ptr [eax+1], 0
.stabn 68,0,445,.L_53DE-_HANDLETOKENS@8
.L_53DF:
	mov dword ptr [ebp-20], 1
	mov dword ptr [ebp-24], 0
.stabn 68,0,446,.L_53DF-_HANDLETOKENS@8
.L_53E0:
	mov eax, dword ptr [ebp-12]
	mov byte ptr [eax+2], 0
	mov eax, dword ptr [ebp-12]
	mov byte ptr [eax+3], 0
.stabn 68,0,447,.L_53E0-_HANDLETOKENS@8
.L_53E1:
.L_5309:
.L_530C:
.L_530D:
	push dword ptr [ebp-20]
	push dword ptr [ebp+8]
	call _fb_ASC@8
	cmp eax, 32
	jne .L_530E
.L_530F:
	inc dword ptr [ebp-20]
.L_5310:
	jmp .L_530D
.L_530E:
.stabn 68,0,449,.L_53E1-_HANDLETOKENS@8
.L_53E2:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-24], eax
.stabn 68,0,450,.L_53E2-_HANDLETOKENS@8
.L_53E3:
.L_5311:
	push dword ptr [ebp-20]
	push dword ptr [ebp+8]
	call _fb_ASC@8
	cmp eax, 32
	je .L_5313
	push dword ptr [ebp-20]
	push dword ptr [ebp+8]
	call _fb_ASC@8
	test eax, eax
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-140], ebx
	jmp .L_53D2
.L_5313:
	mov dword ptr [ebp-140], 0
.L_53D2:
	cmp dword ptr [ebp-140], 0
	je .L_5312
.L_5315:
	inc dword ptr [ebp-20]
.L_5316:
	jmp .L_5311
.L_5312:
.stabn 68,0,451,.L_53E3-_HANDLETOKENS@8
.L_53E5:
	mov ebx, dword ptr [ebp-24]
	cmp dword ptr [ebp-20], ebx
	je .L_5318
.L_5319:
.stabn 68,0,452,.L_53E5-_HANDLETOKENS@8
.L_53E6:
	mov ebx, dword ptr [ebp-12]
	mov eax, dword ptr [ebx+8]
	inc eax
	mov ebx, dword ptr [ebp-24]
	cmp eax, ebx
	jl .L_531A
	mov ebx, dword ptr [ebp-12]
	mov eax, dword ptr [ebx+8]
	cmp eax, dword ptr [ebp-20]
	setle al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-144], eax
	jmp .L_53D3
.L_531A:
	mov dword ptr [ebp-144], 0
.L_53D3:
	cmp dword ptr [ebp-144], 0
	je .L_531D
.L_531E:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [ebp-12]
	mov cl, byte ptr [eax+2]
	mov byte ptr [ebx+3], cl
.L_531D:
.L_531F:
.stabn 68,0,453,.L_53E6-_HANDLETOKENS@8
.L_53E8:
	push 0
	push -1
	mov ecx, dword ptr [ebp-20]
	sub ecx, dword ptr [ebp-24]
	push ecx
	push dword ptr [ebp-24]
	push dword ptr [ebp+8]
	call _fb_StrMid@12
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	add eax, 64
	mov ecx, dword ptr [ebp-12]
	movsx ebx, byte ptr [ecx+2]
	imul ebx, 12
	mov ecx, dword ptr [eax]
	add ecx, ebx
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,454,.L_53E8-_HANDLETOKENS@8
.L_53E9:
	mov ecx, dword ptr [ebp-12]
	movsx ebx, byte ptr [ecx+2]
	inc ebx
	mov cl, bl
	mov ebx, dword ptr [ebp-12]
	mov byte ptr [ebx+2], cl
.stabn 68,0,455,.L_53E9-_HANDLETOKENS@8
.L_53EA:
	mov ecx, dword ptr [ebp-12]
	movsx ebx, byte ptr [ecx+2]
	mov ecx, dword ptr [ebp-12]
	movsx eax, byte ptr [ecx+4]
	cmp ebx, eax
	jne .L_5321
.L_5322:
.stabn 68,0,456,.L_53EA-_HANDLETOKENS@8
.L_53EB:
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax+4]
	add ebx, 8
	mov al, bl
	mov ebx, dword ptr [ebp-12]
	mov byte ptr [ebx+4], al
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax+4]
	dec ebx
	push ebx
	push 0
	push 1
	push -1
	push -1
	push 12
	mov ebx, dword ptr [ebp-12]
	lea eax, [ebx+64]
	push eax
	call _fb_ArrayRedimPresvEx
	add esp, 28
.stabn 68,0,457,.L_53EB-_HANDLETOKENS@8
.L_53EC:
.L_5323:
.L_5321:
.L_5320:
.L_5324:
.L_5318:
.L_5317:
.L_5325:
.L_530B:
	push dword ptr [ebp-20]
	push dword ptr [ebp+8]
	call _fb_ASC@8
	test eax, eax
	jne .L_5309
.L_530A:
.stabn 68,0,460,.L_53EC-_HANDLETOKENS@8
.L_53ED:
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax+3]
	test ebx, ebx
	je .L_5326
	push 2
	push offset _Lt_26D3
	push -1
	mov ebx, dword ptr [ebp-12]
	add ebx, 64
	mov eax, dword ptr [ebp-12]
	movsx ecx, byte ptr [eax+3]
	imul ecx, 12
	mov eax, dword ptr [ebx]
	add eax, ecx
	add eax, -12
	push eax
	call _fb_StrCompare@16
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-28], eax
	jmp .L_53D4
.L_5326:
	mov dword ptr [ebp-28], 0
.L_53D4:
	cmp dword ptr [ebp-28], 0
	je .L_5329
.L_532A:
	mov byte ptr [ebp-8], 1
.L_5329:
.L_532B:
.stabn 68,0,462,.L_53ED-_HANDLETOKENS@8
.L_53EF:
	push 0
	push -1
	push 3
	push offset _Lt_532E
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+16]
	call _fb_IntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_24F0
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+12]
	call _fb_IntToStr@4
	push eax
	push -1
	push 3
	push offset _Lt_532D
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	movsx ecx, byte ptr [eax+3]
	push ecx
	call _fb_IntToStr@4
	push eax
	push -1
	push 2
	push offset _Lt_4AC0
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	movsx ecx, byte ptr [eax+2]
	push ecx
	call _fb_IntToStr@4
	push eax
	push -1
	push 12
	push offset _Lt_532C
	push -1
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+8]
	call _fb_IntToStr@4
	push eax
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-40]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	lea eax, [ebp-52]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	lea eax, [ebp-64]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	lea eax, [ebp-88]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	lea eax, [ebp-100]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	lea eax, [ebp-136]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,465,.L_53EF-_HANDLETOKENS@8
.L_53F0:
.L_5338:
	mov dword ptr [ebp-20], 0
	mov ecx, dword ptr [ebp-12]
	movsx eax, byte ptr [ecx+2]
	dec eax
	mov dword ptr [ebp-140], eax
	jmp .L_533A
.L_533D:
.L_533E:
.stabn 68,0,466,.L_53F0-_HANDLETOKENS@8
.L_53F1:
	cmp dword ptr [ebp-20], 0
	je .L_5340
.L_5341:
	push 0
	push -1
	push 2
	push offset _Lt_5342
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea ecx, [ebp-152]
	push ecx
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	call _fb_StrAssign@20
.L_5340:
.L_5344:
.stabn 68,0,467,.L_53F1-_HANDLETOKENS@8
.L_53F2:
	mov ecx, dword ptr [ebp-12]
	movsx eax, byte ptr [ecx+3]
	cmp dword ptr [ebp-20], eax
	jne .L_5346
.L_5347:
.stabn 68,0,468,.L_53F2-_HANDLETOKENS@8
.L_53F3:
	push 0
	push -1
	push -1
	push 3
	push offset _Lt_5349
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	add eax, 64
	mov ecx, dword ptr [ebp-20]
	imul ecx, 12
	mov ebx, dword ptr [eax]
	add ebx, ecx
	push ebx
	push 3
	push offset _Lt_5348
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea ebx, [ebp-152]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ebx, [eax+28]
	push ebx
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea ebx, [ebp-176]
	push ebx
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ebx, [eax+28]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,469,.L_53F3-_HANDLETOKENS@8
.L_53F4:
.L_534D:
	jmp .L_5345
.L_5346:
.L_534E:
.stabn 68,0,470,.L_53F4-_HANDLETOKENS@8
.L_53F5:
	push 0
	push -1
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	mov ebx, dword ptr [ebp-12]
	add ebx, 64
	mov eax, dword ptr [ebp-20]
	imul eax, 12
	mov ecx, dword ptr [ebx]
	add ecx, eax
	push ecx
	push 2
	push offset _Lt_2653
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	lea ecx, [ebp-152]
	push ecx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	lea eax, [ebp-164]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	lea ecx, [ebp-176]
	push ecx
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,471,.L_53F5-_HANDLETOKENS@8
.L_53F6:
.L_5352:
.L_5345:
.L_5353:
.L_533B:
	inc dword ptr [ebp-20]
.L_533A:
	mov ecx, dword ptr [ebp-140]
	cmp dword ptr [ebp-20], ecx
	jle .L_533D
.L_533C:
.L_5354:
.stabn 68,0,473,.L_53F6-_HANDLETOKENS@8
.L_53F7:
.L_5355:
.L_5307:
.L_5306:
	movsx ecx, byte ptr [_G_SEARCHCHANGED]
	test ecx, ecx
	je .L_5357
.L_5358:
.stabn 68,0,477,.L_53F7-_HANDLETOKENS@8
.L_53F8:
	mov byte ptr [_G_SEARCHCHANGED], 0
.stabn 68,0,478,.L_53F8-_HANDLETOKENS@8
.L_53F9:
	push 0
	push 0
	push 392
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-20], eax
.stabn 68,0,479,.L_53F9-_HANDLETOKENS@8
.L_53FA:
	push 0
	push dword ptr [ebp-20]
	push 409
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-24], eax
.stabn 68,0,480,.L_53FA-_HANDLETOKENS@8
.L_53FB:
	mov eax, dword ptr [ebp-24]
	sal eax, 2
	add eax, dword ptr [_G_LPARTINDEX]
	mov ecx, dword ptr [_G_PPARTSNAMES]
	add ecx, dword ptr [eax]
	mov dword ptr [ebp-28], ecx
	push 0
	push 65535
	mov ecx, dword ptr [ebp-28]
	lea eax, [ecx+128]
	push eax
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrInit@20
.stabn 68,0,481,.L_53FB-_HANDLETOKENS@8
.L_53FC:
	push 0
	push -1
	push -1
	push 1
	push offset _Lt_2563
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-40]
	push eax
	call _fb_StrInstrRev@12
	dec eax
	push eax
	lea eax, [ebp-40]
	push eax
	call _fb_LEFT@8
	push eax
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,482,.L_53FC-_HANDLETOKENS@8
.L_53FD:
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	push 0
	push -1
	mov byte ptr [ebp-44], 0
	lea eax, [ebp-44]
	push eax
	push dword ptr [ebp-24]
	call _GETPARTDESCRIPTION@8
	push eax
	push -1
	lea eax, [ebp-56]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-56]
	push dword ptr [_G_HSTATUS]
	call _SetWindowTextA@8
	lea eax, [ebp-56]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,483,.L_53FD-_HANDLETOKENS@8
.L_53FE:
	push 0
	push -1
	push -1
	push -1
	mov eax, dword ptr [ebp-12]
	mov ecx, dword ptr [eax+16]
	inc ecx
	push ecx
	push dword ptr [ebp+8]
	call _fb_StrMid@12
	push eax
	push -1
	push -1
	lea eax, [ebp-40]
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	mov ecx, dword ptr [eax+12]
	dec ecx
	push ecx
	push dword ptr [ebp+8]
	call _fb_LEFT@8
	push eax
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	lea eax, [ebp-68]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	lea eax, [ebp-80]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	push dword ptr [ebp+8]
	call _fb_StrAssign@20
.stabn 68,0,484,.L_53FE-_HANDLETOKENS@8
.L_53FF:
	push 0
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+20]
	push 187
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	mov dword ptr [ebp-84], eax
.stabn 68,0,487,.L_53FF-_HANDLETOKENS@8
.L_5400:
	push 0
	lea eax, [ebp-40]
	push eax
	mov eax, dword ptr [ebp-12]
	mov ecx, dword ptr [eax+16]
	add ecx, dword ptr [ebp-84]
	push ecx
	mov ecx, dword ptr [ebp-12]
	mov eax, dword ptr [ecx+12]
	add eax, dword ptr [ebp-84]
	dec eax
	push eax
	push dword ptr [_G_TMAINCTX+264]
	call _RICHEDIT_REPLACE@20
.stabn 68,0,488,.L_5400-_HANDLETOKENS@8
.L_5401:
	mov eax, dword ptr [ebp-12]
	push -1
	lea ecx, [ebp-40]
	push ecx
	mov ebx, eax
	call _fb_StrLen@8
	add eax, dword ptr [ebx+12]
	dec eax
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+8], eax
.stabn 68,0,491,.L_5401-_HANDLETOKENS@8
.L_5402:
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax]
	test ebx, ebx
	jne .L_535E
.L_535F:
	mov ebx, dword ptr [ebp-12]
	mov byte ptr [ebx], -1
.L_535E:
.L_5360:
.stabn 68,0,492,.L_5402-_HANDLETOKENS@8
.L_5403:
	lea ebx, [ebp-40]
	push ebx
	call _fb_StrDelete@4
.L_5361:
.L_5357:
.L_5356:
.stabn 68,0,493,.L_5403-_HANDLETOKENS@8
.L_5404:
	mov ebx, dword ptr [ebp-12]
	movsx eax, byte ptr [ebx]
	test eax, eax
	je .L_5363
.L_5364:
.stabn 68,0,495,.L_5404-_HANDLETOKENS@8
.L_5405:
	mov eax, dword ptr [ebp-12]
	movsx ebx, byte ptr [eax]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,497,.L_5405-_HANDLETOKENS@8
.L_5406:
	mov ebx, dword ptr [ebp-12]
	push dword ptr [ebx+8]
	push 1
	push offset _Lt_2499
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	call _fb_StrInstrRev@12
	inc eax
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+12], eax
.stabn 68,0,500,.L_5406-_HANDLETOKENS@8
.L_5407:
	push 1
	push offset _Lt_2499
	call _fb_StrAllocTempDescZEx@8
	push eax
	push dword ptr [ebp+8]
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [eax+8]
	inc ebx
	push ebx
	call _fb_StrInstr@12
	dec eax
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+16], eax
.stabn 68,0,501,.L_5407-_HANDLETOKENS@8
.L_5408:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [eax+16], 0
	jg .L_5366
.L_5367:
	push -1
	push dword ptr [ebp+8]
	call _fb_StrLen@8
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+16], eax
.L_5366:
.L_5368:
.stabn 68,0,502,.L_5408-_HANDLETOKENS@8
.L_5409:
	push 0
	push -1
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [ebp-12]
	mov ecx, dword ptr [eax+16]
	sub ecx, dword ptr [ebx+12]
	inc ecx
	push ecx
	mov ecx, dword ptr [ebp-12]
	push dword ptr [ecx+12]
	push dword ptr [ebp+8]
	call _fb_StrMid@12
	push eax
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+52]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,503,.L_5409-_HANDLETOKENS@8
.L_540A:
	mov ecx, dword ptr [ebp-12]
	movsx eax, byte ptr [ecx]
	cmp eax, 1
	jne .L_536A
.L_536B:
.stabn 68,0,507,.L_540A-_HANDLETOKENS@8
.L_540B:
	lea eax, [ebp-76]
	push eax
	push 0
	push 1076
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,513,.L_540B-_HANDLETOKENS@8
.L_540C:
	push dword ptr [ebp-76]
	push offset _G_RCCURSOR
	push 214
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,514,.L_540C-_HANDLETOKENS@8
.L_540D:
	movzx eax, byte ptr [_G_TMAINCTX+828]
	add eax, dword ptr [_G_RCCURSOR]
	inc eax
	mov dword ptr [_G_RCCURSOR], eax
.stabn 68,0,515,.L_540D-_HANDLETOKENS@8
.L_540E:
	movzx eax, byte ptr [_G_TMAINCTX+829]
	add eax, dword ptr [_G_RCCURSOR+4]
	inc eax
	mov dword ptr [_G_RCCURSOR+4], eax
.stabn 68,0,516,.L_540E-_HANDLETOKENS@8
.L_540F:
	movsx eax, byte ptr [ebp-8]
	test eax, eax
	jne .L_536C
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+52]
	push ecx
	call _fb_StrLen@8
	cmp eax, 1
	setg al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-80], eax
	jmp .L_53D5
.L_536C:
	mov dword ptr [ebp-80], 0
.L_53D5:
	cmp dword ptr [ebp-80], 0
	je .L_536E
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+52]
	push ecx
	call _UPDATESEARCH@4
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-84], eax
	jmp .L_53D6
.L_536E:
	mov dword ptr [ebp-84], 0
.L_53D6:
	cmp dword ptr [ebp-84], 0
	je .L_5370
	mov dword ptr [ebp-88], 8
	jmp .L_53D7
.L_5370:
	mov dword ptr [ebp-88], 0
.L_53D7:
	mov eax, dword ptr [ebp-88]
	mov dword ptr [_G_SEARCHVIS], eax
.stabn 68,0,518,.L_540F-_HANDLETOKENS@8
.L_5412:
	push dword ptr [_G_SEARCHVIS]
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,519,.L_5412-_HANDLETOKENS@8
.L_5413:
	cmp dword ptr [_G_SEARCHVIS], 0
	jne .L_5373
.L_5374:
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+40]
	push dword ptr [_G_HSTATUS]
	call _SetWindowTextA@8
.L_5373:
.L_5375:
.stabn 68,0,520,.L_5413-_HANDLETOKENS@8
.L_5414:
.L_5376:
.L_536A:
.L_5369:
	mov eax, dword ptr [ebp-12]
	mov byte ptr [eax], 0
.stabn 68,0,523,.L_5414-_HANDLETOKENS@8
.L_5415:
	push 0
	push 10
	push offset _Lt_5377
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrInit@20
.stabn 68,0,525,.L_5415-_HANDLETOKENS@8
.L_5416:
	cmp dword ptr [_G_FILTERFLAGS], 0
	je .L_5378
	push dword ptr [_G_HCONTAINER]
	call _IsWindowVisible@4
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-32], eax
	jmp .L_53D8
.L_5378:
	mov dword ptr [ebp-32], 0
.L_53D8:
	cmp dword ptr [ebp-32], 0
	je .L_537B
.L_537C:
.stabn 68,0,526,.L_5416-_HANDLETOKENS@8
.L_5418:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 1
	je .L_537E
.L_537F:
	push 0
	push 7
	push offset _Lt_5380
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_537E:
.L_5381:
.stabn 68,0,528,.L_5418-_HANDLETOKENS@8
.L_5419:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 2
	je .L_5383
.L_5384:
	push 0
	push 7
	push offset _Lt_5385
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_5383:
.L_5386:
.stabn 68,0,528,.L_5419-_HANDLETOKENS@8
.L_541A:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 4
	je .L_5388
.L_5389:
	push 0
	push 12
	push offset _Lt_538A
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_5388:
.L_538B:
.stabn 68,0,528,.L_541A-_HANDLETOKENS@8
.L_541B:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 8
	je .L_538D
.L_538E:
	push 0
	push 6
	push offset _Lt_538F
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_538D:
.L_5390:
.stabn 68,0,528,.L_541B-_HANDLETOKENS@8
.L_541C:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 16
	je .L_5392
.L_5393:
	push 0
	push 10
	push offset _Lt_5394
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_5392:
.L_5395:
.stabn 68,0,528,.L_541C-_HANDLETOKENS@8
.L_541D:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32
	je .L_5397
.L_5398:
	push 0
	push 12
	push offset _Lt_5399
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_5397:
.L_539A:
.stabn 68,0,528,.L_541D-_HANDLETOKENS@8
.L_541E:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 64
	je .L_539C
.L_539D:
	push 0
	push 10
	push offset _Lt_539E
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_539C:
.L_539F:
.stabn 68,0,528,.L_541E-_HANDLETOKENS@8
.L_541F:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 128
	je .L_53A1
.L_53A2:
	push 0
	push 9
	push offset _Lt_53A3
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53A1:
.L_53A4:
.stabn 68,0,528,.L_541F-_HANDLETOKENS@8
.L_5420:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 256
	je .L_53A6
.L_53A7:
	push 0
	push 11
	push offset _Lt_53A8
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53A6:
.L_53A9:
.stabn 68,0,528,.L_5420-_HANDLETOKENS@8
.L_5421:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 512
	je .L_53AB
.L_53AC:
	push 0
	push 9
	push offset _Lt_53AD
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53AB:
.L_53AE:
.stabn 68,0,528,.L_5421-_HANDLETOKENS@8
.L_5422:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 1024
	je .L_53B0
.L_53B1:
	push 0
	push 9
	push offset _Lt_53B2
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53B0:
.L_53B3:
.stabn 68,0,528,.L_5422-_HANDLETOKENS@8
.L_5423:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 2048
	je .L_53B5
.L_53B6:
	push 0
	push 8
	push offset _Lt_53B7
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53B5:
.L_53B8:
.stabn 68,0,528,.L_5423-_HANDLETOKENS@8
.L_5424:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 16384
	je .L_53BA
.L_53BB:
	push 0
	push 10
	push offset _Lt_53BC
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53BA:
.L_53BD:
.stabn 68,0,528,.L_5424-_HANDLETOKENS@8
.L_5425:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, 32768
	je .L_53BF
.L_53C0:
	push 0
	push 8
	push offset _Lt_53C1
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53BF:
.L_53C2:
.stabn 68,0,528,.L_5425-_HANDLETOKENS@8
.L_5426:
.L_53C3:
.L_537B:
.L_537A:
	push 10
	push offset _Lt_5377
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_53C5
.L_53C6:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrAssign@20
.L_53C7:
	jmp .L_53C4
.L_53C5:
.L_53C8:
	push 0
	push 2
	push offset _Lt_4AC0
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	push dword ptr [_G_IFILTEREDCOUNT]
	call _fb_IntToStr@4
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push 11
	push offset _Lt_53C9
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcatAssign@20
.L_53C4:
.L_53CA:
.stabn 68,0,530,.L_5426-_HANDLETOKENS@8
.L_5427:
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	push 0
	push -1
	push -1
	lea eax, [ebp-28]
	push eax
	push -1
	push 2
	push offset _Lt_53CB
	push -1
	mov eax, dword ptr [ebp-12]
	lea ecx, [eax+28]
	push ecx
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	lea ecx, [ebp-44]
	push ecx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-68]
	call _GetConsoleWindow@0
	push eax
	call _SetWindowTextA@8
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,531,.L_5427-_HANDLETOKENS@8
.L_5428:
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
.L_53CF:
.L_5363:
.L_5362:
.stabn 68,0,533,.L_5428-_HANDLETOKENS@8
.L_5429:
.L_53D0:
.L_5301:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,535,.L_5301-_HANDLETOKENS@8
	.stabs "BDONTSEARCH:2",128,0,0,-8
	.stabn 192,0,0,.L_5300-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5302-_HANDLETOKENS@8
	.stabs "I:1",128,0,0,-20
	.stabs "ISTART:1",128,0,0,-24
	.stabn 192,0,0,.L_5308-_HANDLETOKENS@8
	.stabn 192,0,0,.L_530C-_HANDLETOKENS@8
	.stabn 192,0,0,.L_530F-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5310-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5315-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5316-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5319-_HANDLETOKENS@8
	.stabn 192,0,0,.L_531E-_HANDLETOKENS@8
	.stabn 224,0,0,.L_531F-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5322-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5323-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5324-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5325-_HANDLETOKENS@8
	.stabn 192,0,0,.L_532A-_HANDLETOKENS@8
	.stabn 224,0,0,.L_532B-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5338-_HANDLETOKENS@8
	.stabn 192,0,0,.L_533E-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5341-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5344-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5347-_HANDLETOKENS@8
	.stabn 224,0,0,.L_534D-_HANDLETOKENS@8
	.stabn 192,0,0,.L_534E-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5352-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5353-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5354-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5355-_HANDLETOKENS@8
	.stabs "ISEL:1",128,0,0,-20
	.stabs "IPART:1",128,0,0,-24
	.stabs "PPART:319=*278",128,0,0,-28
	.stabs "SPART:13",128,0,0,-40
	.stabs "IROWBEGIN:1",128,0,0,-84
	.stabn 192,0,0,.L_5358-_HANDLETOKENS@8
	.stabn 192,0,0,.L_535F-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5360-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5361-_HANDLETOKENS@8
	.stabs "SFILTERS:13",128,0,0,-28
	.stabn 192,0,0,.L_5364-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5367-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5368-_HANDLETOKENS@8
	.stabs "_CHARRANGE:Tt320=s8CPMIN:1,0,32;CPMAX:1,32,32;;",128,0,0,0
	.stabs "TSELRANGE:320",128,0,0,-76
	.stabn 192,0,0,.L_536B-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5374-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5375-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5376-_HANDLETOKENS@8
	.stabn 192,0,0,.L_537C-_HANDLETOKENS@8
	.stabn 192,0,0,.L_537F-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5381-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5384-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5386-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5389-_HANDLETOKENS@8
	.stabn 224,0,0,.L_538B-_HANDLETOKENS@8
	.stabn 192,0,0,.L_538E-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5390-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5393-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5395-_HANDLETOKENS@8
	.stabn 192,0,0,.L_5398-_HANDLETOKENS@8
	.stabn 224,0,0,.L_539A-_HANDLETOKENS@8
	.stabn 192,0,0,.L_539D-_HANDLETOKENS@8
	.stabn 224,0,0,.L_539F-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53A2-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53A4-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53A7-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53A9-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53AC-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53AE-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53B1-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53B3-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53B6-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53B8-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53BB-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53BD-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53C0-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53C2-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53C3-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53C6-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53C7-_HANDLETOKENS@8
	.stabn 192,0,0,.L_53C8-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53CA-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53CF-_HANDLETOKENS@8
	.stabn 224,0,0,.L_53D0-_HANDLETOKENS@8
	.stabn 224,0,0,.L_5301-_HANDLETOKENS@8
.L_542A:
	.stabs "",36,0,0,.L_542A-_HANDLETOKENS@8
	.stabs "SEARCHADDPARTSUFFIX:F7",36,0,536,_SEARCHADDPARTSUFFIX@8
	.stabs "STEXT:v13",160,0,0,8
	.stabs "TCTX:v314",160,0,0,12
.balign 16

.globl _SEARCHADDPARTSUFFIX@8
_SEARCHADDPARTSUFFIX@8:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,536,_SEARCHADDPARTSUFFIX@8-_SEARCHADDPARTSUFFIX@8
.L_542B:
.L_545C:
.L_542D:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-4], eax
.stabn 68,0,537,.L_545C-_SEARCHADDPARTSUFFIX@8
.L_545D:
	cmp dword ptr [_G_SEARCHVIS], 0
	je .L_542F
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-4]
	mov ecx, dword ptr [ebx+16]
	cmp ecx, dword ptr [eax+8]
	sete cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-8], ecx
	jmp .L_545B
.L_542F:
	mov dword ptr [ebp-8], 0
.L_545B:
	cmp dword ptr [ebp-8], 0
	je .L_5432
.L_5433:
.stabn 68,0,538,.L_545D-_SEARCHADDPARTSUFFIX@8
.L_545F:
	push 0
	push 0
	push 392
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-12], eax
.stabn 68,0,539,.L_545F-_SEARCHADDPARTSUFFIX@8
.L_5460:
	cmp dword ptr [ebp-12], -1
	je .L_5435
.L_5436:
.stabn 68,0,540,.L_5460-_SEARCHADDPARTSUFFIX@8
.L_5461:
	push 0
	push dword ptr [ebp-12]
	push 409
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-16], eax
.stabn 68,0,541,.L_5461-_SEARCHADDPARTSUFFIX@8
.L_5462:
	push 0
	push -1
	mov byte ptr [ebp-20], 0
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-16]
	call _GETPARTDESCRIPTION@8
	push eax
	push -1
	lea eax, [ebp-32]
	push eax
	call _fb_StrInit@20
.stabn 68,0,542,.L_5462-_SEARCHADDPARTSUFFIX@8
.L_5463:
.L_5438:
	mov dword ptr [ebp-36], 0
	push -1
	lea eax, [ebp-32]
	push eax
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-40], eax
	jmp .L_543A
.L_543D:
.L_543E:
.stabn 68,0,543,.L_5463-_SEARCHADDPARTSUFFIX@8
.L_5464:
.L_543F:
	mov eax, dword ptr [ebp-32]
	add eax, dword ptr [ebp-36]
	mov cl, byte ptr [eax]
	mov byte ptr [ebp-44], cl
.stabn 68,0,544,.L_5464-_SEARCHADDPARTSUFFIX@8
.L_5465:
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 48
	jb .L_5444
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 57
	jbe .L_5443
.L_5444:
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 65
	jb .L_5445
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 90
	jbe .L_5443
.L_5445:
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 97
	jb .L_5442
	movzx ecx, byte ptr [ebp-44]
	cmp ecx, 122
	ja .L_5442
.L_5443:
.L_5446:
	jmp .L_543C
.stabn 68,0,545,.L_5465-_SEARCHADDPARTSUFFIX@8
.L_5466:
.L_5447:
.L_5442:
.L_5440:
.L_5448:
	mov ecx, dword ptr [ebp-32]
	add ecx, dword ptr [ebp-36]
	mov byte ptr [ecx], 32
.stabn 68,0,547,.L_5466-_SEARCHADDPARTSUFFIX@8
.L_5467:
.L_5449:
.L_543B:
	inc dword ptr [ebp-36]
.L_543A:
	mov ecx, dword ptr [ebp-40]
	cmp dword ptr [ebp-36], ecx
	jle .L_543D
.L_543C:
.L_544A:
.stabn 68,0,548,.L_5467-_SEARCHADDPARTSUFFIX@8
.L_5468:
	push 5
	push offset _Lt_544B
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-32]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	jne .L_544D
.L_544E:
.stabn 68,0,549,.L_5468-_SEARCHADDPARTSUFFIX@8
.L_5469:
	push 6
	push offset _Lt_4F96
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-32]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_5450
.L_5451:
.stabn 68,0,550,.L_5469-_SEARCHADDPARTSUFFIX@8
.L_546A:
	push 0
	push 2
	push offset _Lt_5452
	push -1
	push dword ptr [ebp+8]
	call _fb_StrConcatByref@20
.stabn 68,0,551,.L_546A-_SEARCHADDPARTSUFFIX@8
.L_546B:
.L_5453:
	jmp .L_544F
.L_5450:
	push 6
	push offset _Lt_4F8F
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-32]
	push eax
	push 1
	call _fb_StrInstr@12
	test eax, eax
	je .L_5454
.L_5455:
.stabn 68,0,552,.L_546B-_SEARCHADDPARTSUFFIX@8
.L_546C:
	push 0
	push 2
	push offset _Lt_419F
	push -1
	push dword ptr [ebp+8]
	call _fb_StrConcatByref@20
.stabn 68,0,553,.L_546C-_SEARCHADDPARTSUFFIX@8
.L_546D:
.L_5456:
.L_5454:
.L_544F:
.L_5457:
.L_544D:
.L_544C:
	lea eax, [ebp-32]
	push eax
	call _fb_StrDelete@4
.L_5458:
.L_5435:
.L_5434:
.stabn 68,0,556,.L_546D-_SEARCHADDPARTSUFFIX@8
.L_546E:
.L_5459:
.L_5432:
.L_5431:
.L_545A:
.L_542C:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,559,.L_542C-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_542B-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_542D-_SEARCHADDPARTSUFFIX@8
	.stabs "ISEL:1",128,0,0,-12
	.stabn 192,0,0,.L_5433-_SEARCHADDPARTSUFFIX@8
	.stabs "IPART:1",128,0,0,-16
	.stabs "SDESC:13",128,0,0,-32
	.stabn 192,0,0,.L_5436-_SEARCHADDPARTSUFFIX@8
	.stabs "N:1",128,0,0,-36
	.stabn 192,0,0,.L_5438-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_543E-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_543F-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_5446-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5447-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5448-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5449-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_544A-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_544E-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_5451-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5453-_SEARCHADDPARTSUFFIX@8
	.stabn 192,0,0,.L_5455-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5456-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5457-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5458-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_5459-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_545A-_SEARCHADDPARTSUFFIX@8
	.stabn 224,0,0,.L_542C-_SEARCHADDPARTSUFFIX@8
.L_546F:
	.stabs "",36,0,0,.L_546F-_SEARCHADDPARTSUFFIX@8
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_5478
.L_5478:
	.stabs "LOGERROR:F7",36,0,126,_LOGERROR@4
	.stabs "SERROR:v13",160,0,0,8
.balign 16

.globl _LOGERROR@4
_LOGERROR@4:
	push ebp
	mov ebp, esp
	sub esp, 56
	.stabn 68,0,126,_LOGERROR@4-_LOGERROR@4
.L_5470:
.L_5479:
##   var f = freefile()
	call _fb_FileFree@0
	mov dword ptr [ebp-4], eax
.stabn 68,0,127,.L_5479-_LOGERROR@4
.L_547A:
##   open exepath+"\FatalErrors.log" for append as #f
	push 0
	push dword ptr [ebp-4]
	push 0
	push 0
	push 4
	push 17
	push offset _Lt_5472
	push -1
	call _fb_ExePath@0
	push eax
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	lea eax, [ebp-16]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_FileOpen@24
.stabn 68,0,128,.L_547A-_LOGERROR@4
.L_547B:
##   print #f, date() + " " + time() + sError
	mov eax, dword ptr [ebp-4]
	mov dword ptr [ebp-20], eax
	push 1
	push -1
	push dword ptr [ebp+8]
	push -1
	push -1
	call _fb_Time@0
	push eax
	push -1
	push 2
	push offset _Lt_2499
	push -1
	call _fb_Date@0
	push eax
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	lea eax, [ebp-32]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	lea eax, [ebp-44]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	lea eax, [ebp-56]
	push eax
	call _fb_StrConcat@20
	push eax
	push dword ptr [ebp-20]
	call _fb_PrintString@12
.stabn 68,0,129,.L_547B-_LOGERROR@4
.L_547C:
##   close #f   
	push dword ptr [ebp-4]
	call _fb_FileClose@4
.stabn 68,0,130,.L_547C-_LOGERROR@4
.L_547D:
##   puts(sError)
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	call _puts
	add esp, 4
.stabn 68,0,131,.L_547D-_LOGERROR@4
.L_547E:
##   SetWindowText( CTL(wcStatus) [Macro Expansion: g_tMainCtx.hCtl(wcStatus).hwnd ]  , sError )   
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	push dword ptr [_G_TMAINCTX+696]
	call _SetWindowTextA@8
.stabn 68,0,132,.L_547E-_LOGERROR@4
.L_547F:
##   MessageBox( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  , sError , NULL , MB_ICONERROR )
	push 16
	push 0
	mov eax, dword ptr [ebp+8]
	push dword ptr [eax]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
.stabn 68,0,133,.L_547F-_LOGERROR@4
.L_5480:
.L_5471:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,134,.L_5471-_LOGERROR@4
	.stabs "F:1",128,0,0,-4
	.stabn 192,0,0,.L_5470-_LOGERROR@4
	.stabn 224,0,0,.L_5471-_LOGERROR@4
.L_5481:
	.stabs "",36,0,0,.L_5481-_LOGERROR@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSMENU.BAS",132,0,0,.L_54C0
.L_54C0:
	.stabs "__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12:F321=*7",36,0,96,__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabs "HMENU:p322=*7",160,0,0,8
	.stabs "STEXT:v13",160,0,0,12
	.stabs "IID:p1",160,0,0,16
.balign 16

.globl __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12:
	push ebp
	mov ebp, esp
	sub esp, 60
	push ebx
	.stabn 68,0,96,__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-4], 0
.L_54B0:
.L_54C1:
	push dword ptr [ebp+8]
	call _IsMenu@4
	test eax, eax
	jne .L_54B3
.L_54B4:
	mov dword ptr [ebp-4], 0
	jmp .L_54B1
.L_54B3:
.L_54B5:
.stabn 68,0,97,.L_54C1-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C2:
	call _CreatePopupMenu@0
	mov dword ptr [ebp-8], eax
.stabn 68,0,98,.L_54C2-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C3:
	mov dword ptr [ebp-56], 48
	lea eax, [ebp-52]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 11
	rep stosd
	pop edi
	pop eax
.stabn 68,0,100,.L_54C3-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C4:
.L_54B7:
	mov dword ptr [ebp-52], 70
.stabn 68,0,102,.L_54C4-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C5:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-36], eax
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-40], eax
.stabn 68,0,103,.L_54C5-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C6:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-20], ebx
.stabn 68,0,104,.L_54C6-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C7:
.L_54B8:
	lea ebx, [ebp-56]
	push ebx
	push -1
	push 4294967295
	push dword ptr [ebp+8]
	call _InsertMenuItemA@16
.stabn 68,0,106,.L_54C7-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54C8:
	mov ebx, dword ptr [_G_WNDMENU]
	cmp ebx, dword ptr [ebp+8]
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	test ebx, ebx
	je .L_54B9
	cmp dword ptr [_G_TMAINCTX+24], 0
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-60], ebx
	jmp .L_54BF
.L_54B9:
	mov dword ptr [ebp-60], 0
.L_54BF:
	cmp dword ptr [ebp-60], 0
	je .L_54BC
.L_54BD:
	push dword ptr [_G_TMAINCTX+24]
	call _DrawMenuBar@4
.L_54BC:
.L_54BE:
.stabn 68,0,107,.L_54C8-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54CB:
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,108,.L_54CB-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54CC:
.L_54B1:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,109,.L_54B1-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabs "HMENU__:Tt324=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "HRESULT:323=*324",128,0,0,-8
	.stabs "TAGMENUITEMINFOA:Tt325=s48CBSIZE:8,0,32;FMASK:8,32,32;FTYPE:8,64,32;FSTATE:8,96,32;WID:8,128,32;HSUBMENU:326=*324,160,32;HBMPCHECKED:327=*27,192,32;HBMPUNCHECKED:328=*27,224,32;DWITEMDATA:8,256,32;DWTYPEDATA:329=*4,288,32;CCH:8,320,32;HBMPITEM:330=*27,352,32;;",128,0,0,0
	.stabs "TITEM:325",128,0,0,-56
	.stabn 192,0,0,.L_54B0-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 192,0,0,.L_54B4-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 224,0,0,.L_54B5-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 192,0,0,.L_54B7-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 224,0,0,.L_54B8-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 192,0,0,.L_54BD-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 224,0,0,.L_54BE-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabn 224,0,0,.L_54B1-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
.L_54CD:
	.stabs "",36,0,0,.L_54CD-__ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	.stabs "__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20:F1",36,0,110,__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabs "HMENU:p331=*7",160,0,0,8
	.stabs "IID:p1",160,0,0,12
	.stabs "STEXT:v13",160,0,0,16
	.stabs "PEVENT:p332=*7",160,0,0,20
	.stabs "BSTATE:p1",160,0,0,24
.balign 16

.globl __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20:
	push ebp
	mov ebp, esp
	sub esp, 60
	push ebx
	.stabn 68,0,110,__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	mov dword ptr [ebp-4], 0
.L_54CE:
.L_54DF:
	push dword ptr [ebp+8]
	call _IsMenu@4
	test eax, eax
	jne .L_54D1
.L_54D2:
	mov dword ptr [ebp-4], -1
	jmp .L_54CF
.L_54D1:
.L_54D3:
.stabn 68,0,111,.L_54DF-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E0:
	mov dword ptr [ebp-52], 48
	lea eax, [ebp-48]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 11
	rep stosd
	pop edi
	pop eax
.stabn 68,0,112,.L_54E0-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E1:
	mov dword ptr [ebp-48], 51
.stabn 68,0,113,.L_54E1-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E2:
	push -1
	push dword ptr [ebp+16]
	call _fb_StrLen@8
	test eax, eax
	je .L_54D7
	mov eax, dword ptr [ebp+24]
	and eax, 512
	je .L_54D5
	mov dword ptr [ebp-56], 512
	jmp .L_54DE
.L_54D5:
	mov dword ptr [ebp-56], 0
.L_54DE:
	mov eax, dword ptr [ebp-56]
	mov dword ptr [ebp-60], eax
	jmp .L_54DD
.L_54D7:
	mov dword ptr [ebp-60], 2048
.L_54DD:
	mov eax, dword ptr [ebp-60]
	mov dword ptr [ebp-44], eax
.stabn 68,0,114,.L_54E2-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E3:
	mov eax, dword ptr [ebp+24]
	and eax, -513
	mov ebx, eax
	mov dword ptr [ebp-40], ebx
.stabn 68,0,115,.L_54E3-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E4:
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [ebp-36], ebx
.stabn 68,0,116,.L_54E4-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E5:
	mov ebx, dword ptr [ebp+20]
	mov dword ptr [ebp-20], ebx
.stabn 68,0,117,.L_54E5-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E6:
	push -1
	push dword ptr [ebp+16]
	call _fb_StrLen@8
	test eax, eax
	je .L_54DA
.L_54DB:
	mov eax, dword ptr [ebp+16]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-16], ebx
.L_54DA:
.L_54DC:
.stabn 68,0,118,.L_54E6-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E7:
	lea ebx, [ebp-52]
	push ebx
	push -1
	push 4294967295
	push dword ptr [ebp+8]
	call _InsertMenuItemA@16
.stabn 68,0,119,.L_54E7-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E8:
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,121,.L_54E8-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54E9:
.L_54CF:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,122,.L_54CF-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabs "TITEM:325",128,0,0,-52
	.stabn 192,0,0,.L_54CE-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabn 192,0,0,.L_54D2-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabn 224,0,0,.L_54D3-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabn 192,0,0,.L_54DB-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabn 224,0,0,.L_54DC-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabn 224,0,0,.L_54CF-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
.L_54EA:
	.stabs "",36,0,0,.L_54EA-__ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	.stabs "__ZN4MENU9MENUSTATEEPvii@12:F1",36,0,124,__ZN4MENU9MENUSTATEEPvii@12
	.stabs "HMENU:p333=*7",160,0,0,8
	.stabs "IID:p1",160,0,0,12
	.stabs "BSTATE:p1",160,0,0,16
.balign 16

.globl __ZN4MENU9MENUSTATEEPvii@12
__ZN4MENU9MENUSTATEEPvii@12:
	push ebp
	mov ebp, esp
	sub esp, 52
	.stabn 68,0,124,__ZN4MENU9MENUSTATEEPvii@12-__ZN4MENU9MENUSTATEEPvii@12
	mov dword ptr [ebp-4], 0
.L_54EB:
.L_54F2:
	push dword ptr [ebp+8]
	call _IsMenu@4
	test eax, eax
	jne .L_54EE
.L_54EF:
	mov dword ptr [ebp-4], -1
	jmp .L_54EC
.L_54EE:
.L_54F0:
.stabn 68,0,125,.L_54F2-__ZN4MENU9MENUSTATEEPvii@12
.L_54F3:
	mov dword ptr [ebp-52], 48
	mov dword ptr [ebp-48], 1
	lea eax, [ebp-44]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 10
	rep stosd
	pop edi
	pop eax
.stabn 68,0,126,.L_54F3-__ZN4MENU9MENUSTATEEPvii@12
.L_54F4:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-40], eax
.stabn 68,0,127,.L_54F4-__ZN4MENU9MENUSTATEEPvii@12
.L_54F5:
	lea eax, [ebp-52]
	push eax
	push 0
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _SetMenuItemInfoA@16
.stabn 68,0,128,.L_54F5-__ZN4MENU9MENUSTATEEPvii@12
.L_54F6:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-4], eax
.stabn 68,0,129,.L_54F6-__ZN4MENU9MENUSTATEEPvii@12
.L_54F7:
.L_54EC:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,130,.L_54EC-__ZN4MENU9MENUSTATEEPvii@12
	.stabs "TITEM:325",128,0,0,-52
	.stabn 192,0,0,.L_54EB-__ZN4MENU9MENUSTATEEPvii@12
	.stabn 192,0,0,.L_54EF-__ZN4MENU9MENUSTATEEPvii@12
	.stabn 224,0,0,.L_54F0-__ZN4MENU9MENUSTATEEPvii@12
	.stabn 224,0,0,.L_54EC-__ZN4MENU9MENUSTATEEPvii@12
.L_54F8:
	.stabs "",36,0,0,.L_54F8-__ZN4MENU9MENUSTATEEPvii@12
	.stabs "__ZN4MENU8MENUTEXTEPviR8FBSTRING@12:F1",36,0,131,__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabs "HMENU:p334=*7",160,0,0,8
	.stabs "IID:p1",160,0,0,12
	.stabs "STEXT:v13",160,0,0,16
.balign 16

.globl __ZN4MENU8MENUTEXTEPviR8FBSTRING@12
__ZN4MENU8MENUTEXTEPviR8FBSTRING@12:
	push ebp
	mov ebp, esp
	sub esp, 52
	push ebx
	.stabn 68,0,131,__ZN4MENU8MENUTEXTEPviR8FBSTRING@12-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	mov dword ptr [ebp-4], 0
.L_54F9:
.L_5500:
	push dword ptr [ebp+8]
	call _IsMenu@4
	test eax, eax
	jne .L_54FC
.L_54FD:
	mov dword ptr [ebp-4], -1
	jmp .L_54FA
.L_54FC:
.L_54FE:
.stabn 68,0,132,.L_5500-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5501:
	mov dword ptr [ebp-52], 48
	mov dword ptr [ebp-48], 16
	lea eax, [ebp-44]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 10
	rep stosd
	pop edi
	pop eax
.stabn 68,0,133,.L_5501-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5502:
	lea eax, [ebp-52]
	push eax
	push 0
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _GetMenuItemInfoA@16
.stabn 68,0,134,.L_5502-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5503:
	mov eax, dword ptr [ebp+16]
	mov ebx, dword ptr [eax]
	mov dword ptr [ebp-16], ebx
.stabn 68,0,135,.L_5503-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5504:
	lea ebx, [ebp-52]
	push ebx
	push 0
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _SetMenuItemInfoA@16
.stabn 68,0,136,.L_5504-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5505:
	push -1
	push dword ptr [ebp+16]
	call _fb_StrLen@8
	mov dword ptr [ebp-4], eax
.stabn 68,0,137,.L_5505-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5506:
.L_54FA:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,138,.L_54FA-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabs "TITEM:325",128,0,0,-52
	.stabn 192,0,0,.L_54F9-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabn 192,0,0,.L_54FD-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabn 224,0,0,.L_54FE-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabn 224,0,0,.L_54FA-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
.L_5507:
	.stabs "",36,0,0,.L_5507-__ZN4MENU8MENUTEXTEPviR8FBSTRING@12
	.stabs "__ZN4MENU9ISCHECKEDEi@4:F16",36,0,139,__ZN4MENU9ISCHECKEDEi@4
	.stabs "IID:p1",160,0,0,8
.balign 16

.globl __ZN4MENU9ISCHECKEDEi@4
__ZN4MENU9ISCHECKEDEi@4:
	push ebp
	mov ebp, esp
	sub esp, 4
	push ebx
	.stabn 68,0,139,__ZN4MENU9ISCHECKEDEi@4-__ZN4MENU9ISCHECKEDEi@4
	mov byte ptr [ebp-4], 0
.L_5508:
.L_550A:
	push 0
	push dword ptr [ebp+8]
	push dword ptr [_G_WNDMENU]
	call _GetMenuState@12
	and eax, 8
	test eax, eax
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	cmp ebx, 0
	setne al
	mov byte ptr [ebp-4], al
.stabn 68,0,140,.L_550A-__ZN4MENU9ISCHECKEDEi@4
.L_550C:
.L_5509:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,141,.L_5509-__ZN4MENU9ISCHECKEDEi@4
	.stabn 192,0,0,.L_5508-__ZN4MENU9ISCHECKEDEi@4
	.stabn 224,0,0,.L_5509-__ZN4MENU9ISCHECKEDEi@4
.L_550D:
	.stabs "",36,0,0,.L_550D-__ZN4MENU9ISCHECKEDEi@4
	.stabs "__ZN4MENU7TRIGGEREt@4:F7",36,0,142,__ZN4MENU7TRIGGEREt@4
	.stabs "IID:p6",160,0,0,8
.balign 16

.globl __ZN4MENU7TRIGGEREt@4
__ZN4MENU7TRIGGEREt@4:
	push ebp
	mov ebp, esp
	.stabn 68,0,142,__ZN4MENU7TRIGGEREt@4-__ZN4MENU7TRIGGEREt@4
.L_550E:
.L_5510:
	push dword ptr [_G_WNDMENU]
	movzx eax, word ptr [ebp+8]
	push eax
	push 287
	push dword ptr [_G_TMAINCTX+24]
	call _SendMessageA@16
.stabn 68,0,143,.L_5510-__ZN4MENU7TRIGGEREt@4
.L_5511:
	push 0
	movzx eax, word ptr [ebp+8]
	push eax
	push 273
	push dword ptr [_G_TMAINCTX+24]
	call _SendMessageA@16
.stabn 68,0,144,.L_5511-__ZN4MENU7TRIGGEREt@4
.L_5512:
.L_550F:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,145,.L_550F-__ZN4MENU7TRIGGEREt@4
	.stabn 192,0,0,.L_550E-__ZN4MENU7TRIGGEREt@4
	.stabn 224,0,0,.L_550F-__ZN4MENU7TRIGGEREt@4
.L_5513:
	.stabs "",36,0,0,.L_5513-__ZN4MENU7TRIGGEREt@4
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSVIEWER.BAS",132,0,0,.L_5517
.L_5517:
	.stabs "__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8:F16",36,0,8,__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	.stabs "SCONTENTS:v13",160,0,0,8
	.stabs "SNAME:v13",160,0,0,12
.balign 16

.globl __ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,8,__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	mov byte ptr [ebp-4], 0
.L_5515:
.L_5518:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexLock@4
.stabn 68,0,9,.L_5518-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_5519:
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	push offset __ZN6VIEWER10G_SGFXFILEE
	call _fb_StrAssign@20
	push 0
	push -1
	push dword ptr [ebp+12]
	push -1
	push offset __ZN6VIEWER11G_SFILENAMEE
	call _fb_StrAssign@20
.stabn 68,0,10,.L_5519-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_551A:
	mov byte ptr [__ZN6VIEWER10G_LOADFILEE], 1
.stabn 68,0,11,.L_551A-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_551B:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexUnlock@4
.stabn 68,0,12,.L_551B-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_551C:
	mov byte ptr [ebp-4], 1
.stabn 68,0,13,.L_551C-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_551D:
.L_5516:
	mov al, byte ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,14,.L_5516-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	.stabn 192,0,0,.L_5515-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	.stabn 224,0,0,.L_5516-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
.L_551E:
	.stabs "",36,0,0,.L_551E-__ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	.stabs "__ZN6VIEWER8LOADFILEER8FBSTRING@4:F16",36,0,15,__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl __ZN6VIEWER8LOADFILEER8FBSTRING@4
__ZN6VIEWER8LOADFILEER8FBSTRING@4:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,15,__ZN6VIEWER8LOADFILEER8FBSTRING@4-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	mov byte ptr [ebp-4], 0
.L_551F:
.L_552A:
	mov byte ptr [ebp-8], 0
.stabn 68,0,16,.L_552A-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_552B:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexLock@4
.stabn 68,0,17,.L_552B-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_552C:
.L_5521:
.L_5524:
	mov byte ptr [__ZN6VIEWER10G_LOADFILEE], 0
.stabn 68,0,19,.L_552C-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_552D:
	push 1
	push offset __ZN6VIEWER10G_SGFXFILEE
	push dword ptr [ebp+8]
	call _LOADFILE@12
	movzx ebx, al
	neg ebx
	test ebx, ebx
	jne .L_5526
.L_5527:
	jmp .L_5522
.L_5526:
.L_5528:
.stabn 68,0,20,.L_552D-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_552E:
	mov byte ptr [ebp-8], 1
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	push offset __ZN6VIEWER11G_SFILENAMEE
	call _fb_StrAssign@20
.stabn 68,0,21,.L_552E-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_552F:
	mov byte ptr [__ZN6VIEWER10G_LOADFILEE], 1
	jmp .L_5522
.stabn 68,0,22,.L_552F-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_5530:
.L_5529:
.L_5523:
	jmp .L_5521
.L_5522:
.stabn 68,0,23,.L_5530-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_5531:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexUnlock@4
.stabn 68,0,24,.L_5531-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_5532:
	mov bl, byte ptr [ebp-8]
	mov byte ptr [ebp-4], bl
.stabn 68,0,25,.L_5532-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_5533:
.L_5520:
	mov al, byte ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,26,.L_5520-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabs "BLOADRESULT:16",128,0,0,-8
	.stabn 192,0,0,.L_551F-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabn 192,0,0,.L_5524-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabn 192,0,0,.L_5527-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabn 224,0,0,.L_5528-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabn 224,0,0,.L_5529-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabn 224,0,0,.L_5520-__ZN6VIEWER8LOADFILEER8FBSTRING@4
.L_5534:
	.stabs "",36,0,0,.L_5534-__ZN6VIEWER8LOADFILEER8FBSTRING@4
	.stabs "__ZN6VIEWER10MAINTHREADEPv@4:F7",36,0,28,__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "HREADYEVENT:p335=*7",160,0,0,8
.balign 16

.globl __ZN6VIEWER10MAINTHREADEPv@4
__ZN6VIEWER10MAINTHREADEPv@4:
	push ebp
	mov ebp, esp
	sub esp, 388
	push ebx
	push esi
	push edi
	.stabn 68,0,28,__ZN6VIEWER10MAINTHREADEPv@4-__ZN6VIEWER10MAINTHREADEPv@4
.L_5535:
.L_56C8:
	call _fb_MutexCreate@0
	mov dword ptr [__ZN6VIEWER7G_MUTEXE], eax
.stabn 68,0,30,.L_56C8-__ZN6VIEWER10MAINTHREADEPv@4
.L_56C9:
	mov dword ptr [ebp-4], 0
	mov dword ptr [ebp-8], 0
	push 0
	push offset _Lt_0000
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov dword ptr [ebp-24], 0
	lea eax, [ebp-24]
	push eax
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-20]
	push eax
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-16]
	push eax
	mov dword ptr [ebp-12], 0
	lea eax, [ebp-12]
	push eax
	lea eax, [ebp-8]
	push eax
	lea eax, [ebp-4]
	push eax
	call _fb_GfxScreenInfo32@28
.stabn 68,0,31,.L_56C9-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CA:
	push dword ptr [ebp-8]
	push dword ptr [ebp-4]
	call _INITOPENGL@8
	mov dword ptr [_G_GFXHWND], eax
.stabn 68,0,32,.L_56CA-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CB:
	push 22
	push 300
	push 400
	push 0
	push 0
	push 0
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,33,.L_56CB-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CC:
	push 0
	push dword ptr [_G_GFXHWND]
	call _ShowWindow@8
.stabn 68,0,34,.L_56CC-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CD:
	cmp dword ptr [ebp+8], 0
	je .L_553C
.L_553D:
	push dword ptr [ebp+8]
	call _SetEvent@4
.L_553C:
.L_553E:
.stabn 68,0,35,.L_56CD-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CE:
	push dword ptr [_G_HRESIZEEVENT]
	call _SetEvent@4
.stabn 68,0,36,.L_56CE-__ZN6VIEWER10MAINTHREADEPv@4
.L_56CF:
	mov dword ptr [ebp-28], -1
	mov dword ptr [ebp-32], -1
.stabn 68,0,38,.L_56CF-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D0:
	mov dword ptr [ebp-36], 0
.stabn 68,0,39,.L_56D0-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D1:
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-52], 0
.stabn 68,0,40,.L_56D1-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D2:
	lea eax, [ebp-76]
	push eax
	call __ZN8PARTSIZEC1Ev
	add esp, 4
.stabn 68,0,41,.L_56D2-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D3:
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-84], -1
.stabn 68,0,42,.L_56D3-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D4:
	mov byte ptr [ebp-88], 0
.stabn 68,0,44,.L_56D4-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D5:
	mov byte ptr [ebp-92], 0
	mov byte ptr [ebp-96], 0
	mov byte ptr [ebp-100], 0
.stabn 68,0,45,.L_56D5-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D6:
	mov byte ptr [ebp-104], 0
.stabn 68,0,46,.L_56D6-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D7:
	mov dword ptr [ebp-108], 0
.stabn 68,0,47,.L_56D7-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D8:
	push dword ptr [_Lt_56B8]
	pop dword ptr [ebp-112]
	push dword ptr [_Lt_56B9]
	pop dword ptr [ebp-116]
.stabn 68,0,48,.L_56D8-__ZN6VIEWER10MAINTHREADEPv@4
.L_56D9:
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-128], 0
	push dword ptr [_Lt_56BA]
	pop dword ptr [ebp-132]
.stabn 68,0,49,.L_56D9-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DA:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-140], 0
.stabn 68,0,50,.L_56DA-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DB:
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-148], -1
.stabn 68,0,51,.L_56DB-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DC:
	mov dword ptr [ebp-268], 0
	mov dword ptr [ebp-264], 0
	mov dword ptr [ebp-260], 0
	mov dword ptr [ebp-256], 24
	mov dword ptr [ebp-252], 0
	mov dword ptr [ebp-248], 8
	lea eax, [ebp-244]
	push eax
	mov edi, eax
	xor eax, eax
	mov ecx, 24
	rep stosd
	pop eax
.stabn 68,0,53,.L_56DC-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DD:
.L_553F:
	movsx eax, byte ptr [_G_DOQUIT]
	test eax, eax
	jne .L_5540
.L_5541:
.stabn 68,0,55,.L_56DD-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DE:
.L_5542:
	lea eax, [ebp-288]
	push eax
	call _fb_GfxEvent@4
	test eax, eax
	je .L_5543
.L_5544:
.stabn 68,0,58,.L_56DE-__ZN6VIEWER10MAINTHREADEPv@4
.L_56DF:
.L_5545:
	mov eax, dword ptr [ebp-288]
	mov dword ptr [ebp-356], eax
.stabn 68,0,59,.L_56DF-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E0:
	cmp dword ptr [ebp-356], 4
	jne .L_5548
.L_5549:
.L_554A:
.stabn 68,0,60,.L_56E0-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E1:
	cmp byte ptr [ebp-92], 0
	je .L_554C
.L_554D:
	fild dword ptr [ebp-276]
	fadd dword ptr [ebp-112]
	fstp dword ptr [ebp-112]
	fild dword ptr [ebp-272]
	fadd dword ptr [ebp-116]
	fstp dword ptr [ebp-116]
.L_554C:
.L_554E:
.stabn 68,0,61,.L_56E1-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E2:
	cmp byte ptr [ebp-96], 0
	je .L_5550
.L_5551:
	fld dword ptr [ebp-120]
	fild dword ptr [ebp-276]
	fmul dword ptr [ebp-52]
	fdiv qword ptr [_Lt_38CA]
	fxch st(1)
	faddp
	fstp dword ptr [ebp-120]
	fld dword ptr [ebp-124]
	fild dword ptr [ebp-272]
	fmul dword ptr [ebp-52]
	fdiv qword ptr [_Lt_38CA]
	fxch st(1)
	faddp
	fstp dword ptr [ebp-124]
.L_5550:
.L_5552:
.stabn 68,0,62,.L_56E2-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E3:
.L_5553:
	jmp .L_5546
.L_5548:
	cmp dword ptr [ebp-356], 8
	jne .L_5554
.L_5555:
.L_5556:
.stabn 68,0,63,.L_56E3-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E4:
	mov eax, dword ptr [ebp-284]
	sub eax, dword ptr [ebp-140]
	mov dword ptr [ebp-136], eax
.stabn 68,0,64,.L_56E4-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E5:
	fild dword ptr [ebp-136]
	fdiv qword ptr [_Lt_56BB]
	fadd qword ptr [_Lt_56BC]
	fstp dword ptr [ebp-132]
.stabn 68,0,65,.L_56E5-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E6:
.L_5557:
	jmp .L_5546
.L_5554:
	cmp dword ptr [ebp-356], 5
	jne .L_5558
.L_5559:
.L_555A:
.stabn 68,0,66,.L_56E6-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E7:
	cmp dword ptr [ebp-284], 4
	jne .L_555C
.L_555D:
.stabn 68,0,67,.L_56E7-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E8:
	mov eax, dword ptr [ebp-136]
	mov dword ptr [ebp-140], eax
	push dword ptr [_Lt_56BA]
	pop dword ptr [ebp-132]
.stabn 68,0,68,.L_56E8-__ZN6VIEWER10MAINTHREADEPv@4
.L_56E9:
	push dword ptr [_Lt_56B8]
	pop dword ptr [ebp-112]
	push dword ptr [_Lt_56B9]
	pop dword ptr [ebp-116]
.stabn 68,0,69,.L_56E9-__ZN6VIEWER10MAINTHREADEPv@4
.L_56EA:
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-120]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-124]
.stabn 68,0,70,.L_56EA-__ZN6VIEWER10MAINTHREADEPv@4
.L_56EB:
.L_555E:
.L_555C:
.L_555B:
	cmp dword ptr [ebp-284], 1
	jne .L_5560
.L_5561:
	mov byte ptr [ebp-92], 1
.L_5560:
.L_5562:
.stabn 68,0,72,.L_56EB-__ZN6VIEWER10MAINTHREADEPv@4
.L_56EC:
	cmp dword ptr [ebp-284], 2
	jne .L_5564
.L_5565:
	mov byte ptr [ebp-96], 1
.L_5564:
.L_5566:
.stabn 68,0,73,.L_56EC-__ZN6VIEWER10MAINTHREADEPv@4
.L_56ED:
.L_5567:
	jmp .L_5546
.L_5558:
	cmp dword ptr [ebp-356], 6
	jne .L_5568
.L_5569:
.L_556A:
.stabn 68,0,74,.L_56ED-__ZN6VIEWER10MAINTHREADEPv@4
.L_56EE:
	cmp dword ptr [ebp-284], 1
	jne .L_556C
.L_556D:
	mov byte ptr [ebp-92], 0
.L_556C:
.L_556E:
.stabn 68,0,75,.L_56EE-__ZN6VIEWER10MAINTHREADEPv@4
.L_56EF:
	cmp dword ptr [ebp-284], 2
	jne .L_5570
.L_5571:
	mov byte ptr [ebp-96], 0
.L_5570:
.L_5572:
.stabn 68,0,76,.L_56EF-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F0:
.L_5573:
	jmp .L_5546
.L_5568:
	cmp dword ptr [ebp-356], 1
	jne .L_5574
.L_5575:
.L_5576:
.stabn 68,0,77,.L_56F0-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F1:
.L_5577:
	mov eax, dword ptr [ebp-280]
	mov dword ptr [ebp-360], eax
.stabn 68,0,78,.L_56F1-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F2:
	cmp dword ptr [ebp-360], 8
	jne .L_557A
.L_557B:
.L_557C:
.stabn 68,0,79,.L_56F2-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F3:
	movsx eax, byte ptr [ebp-104]
	test eax, eax
	je .L_557E
.L_557F:
.stabn 68,0,80,.L_56F3-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F4:
	mov dword ptr [ebp-84], -1
.stabn 68,0,81,.L_56F4-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F5:
	push dword ptr [ebp-84]
	push offset _Lt_5580
	call _printf
	add esp, 8
.stabn 68,0,82,.L_56F5-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F6:
	lea eax, [ebp-384]
	push eax
	call __ZN8PARTSIZEC1Ev
	add esp, 4
.stabn 68,0,83,.L_56F6-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F7:
	push 0
	mov dword ptr [ebp-388], -1
	lea eax, [ebp-388]
	push eax
	push dword ptr [ebp-84]
	lea eax, [ebp-384]
	push eax
	push dword ptr [ebp-36]
	call _SIZEMODEL@20
.stabn 68,0,84,.L_56F7-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F8:
	lea eax, [ebp-76]
	lea ebx, [ebp-384]
	mov edi, eax
	mov esi, ebx
	mov ecx, 6
	rep movsd
.stabn 68,0,85,.L_56F8-__ZN6VIEWER10MAINTHREADEPv@4
.L_56F9:
.L_5582:
	jmp .L_557D
.L_557E:
.L_5583:
.stabn 68,0,86,.L_56F9-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FA:
	mov dword ptr [ebp-148], -1
.stabn 68,0,87,.L_56FA-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FB:
	push dword ptr [ebp-148]
	push offset _Lt_5584
	call _printf
	add esp, 8
.stabn 68,0,88,.L_56FB-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FC:
.L_5585:
.L_557D:
.L_5586:
	jmp .L_5578
.L_557A:
	cmp dword ptr [ebp-360], 61
	je .L_5589
.L_558A:
	cmp dword ptr [ebp-360], 43
	jne .L_5587
.L_5589:
.L_558B:
.stabn 68,0,90,.L_56FC-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FD:
	movsx ebx, byte ptr [ebp-104]
	test ebx, ebx
	je .L_558D
.L_558E:
.stabn 68,0,91,.L_56FD-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FE:
	mov ebx, dword ptr [ebp-84]
	add ebx, 2
	mov eax, dword ptr [ebp-80]
	inc eax
	mov ecx, eax
	push eax
	mov eax, ebx
	cdq
	idiv ecx
	mov eax, edx
	mov ebx, eax
	pop eax
	dec ebx
	mov dword ptr [ebp-84], ebx
.stabn 68,0,92,.L_56FE-__ZN6VIEWER10MAINTHREADEPv@4
.L_56FF:
	push dword ptr [ebp-84]
	push offset _Lt_5580
	call _printf
	add esp, 8
.stabn 68,0,93,.L_56FF-__ZN6VIEWER10MAINTHREADEPv@4
.L_5700:
	lea ebx, [ebp-384]
	push ebx
	call __ZN8PARTSIZEC1Ev
	add esp, 4
.stabn 68,0,94,.L_5700-__ZN6VIEWER10MAINTHREADEPv@4
.L_5701:
	push 0
	mov dword ptr [ebp-388], -1
	lea ebx, [ebp-388]
	push ebx
	push dword ptr [ebp-84]
	lea ebx, [ebp-384]
	push ebx
	push dword ptr [ebp-36]
	call _SIZEMODEL@20
.stabn 68,0,95,.L_5701-__ZN6VIEWER10MAINTHREADEPv@4
.L_5702:
	lea ebx, [ebp-76]
	lea eax, [ebp-384]
	mov edi, ebx
	mov esi, eax
	mov ecx, 6
	rep movsd
.stabn 68,0,96,.L_5702-__ZN6VIEWER10MAINTHREADEPv@4
.L_5703:
.L_5590:
	jmp .L_558C
.L_558D:
.L_5591:
.stabn 68,0,97,.L_5703-__ZN6VIEWER10MAINTHREADEPv@4
.L_5704:
	mov eax, dword ptr [ebp-148]
	add eax, 2
	mov ebx, dword ptr [ebp-144]
	inc ebx
	cdq
	idiv ebx
	mov eax, edx
	dec eax
	mov dword ptr [ebp-148], eax
.stabn 68,0,98,.L_5704-__ZN6VIEWER10MAINTHREADEPv@4
.L_5705:
	push dword ptr [ebp-148]
	push offset _Lt_5584
	call _printf
	add esp, 8
.stabn 68,0,99,.L_5705-__ZN6VIEWER10MAINTHREADEPv@4
.L_5706:
.L_5592:
.L_558C:
.L_5593:
	jmp .L_5578
.L_5587:
	cmp dword ptr [ebp-360], 45
	je .L_5595
.L_5596:
	cmp dword ptr [ebp-360], 95
	jne .L_5594
.L_5595:
.L_5597:
.stabn 68,0,101,.L_5706-__ZN6VIEWER10MAINTHREADEPv@4
.L_5707:
	movsx eax, byte ptr [ebp-104]
	test eax, eax
	je .L_5599
.L_559A:
.stabn 68,0,102,.L_5707-__ZN6VIEWER10MAINTHREADEPv@4
.L_5708:
	mov eax, dword ptr [ebp-80]
	add eax, dword ptr [ebp-84]
	inc eax
	mov ebx, dword ptr [ebp-80]
	inc ebx
	cdq
	idiv ebx
	mov eax, edx
	dec eax
	mov dword ptr [ebp-84], eax
.stabn 68,0,103,.L_5708-__ZN6VIEWER10MAINTHREADEPv@4
.L_5709:
	push dword ptr [ebp-84]
	push offset _Lt_5580
	call _printf
	add esp, 8
.stabn 68,0,104,.L_5709-__ZN6VIEWER10MAINTHREADEPv@4
.L_570A:
	lea eax, [ebp-384]
	push eax
	call __ZN8PARTSIZEC1Ev
	add esp, 4
.stabn 68,0,105,.L_570A-__ZN6VIEWER10MAINTHREADEPv@4
.L_570B:
	push 0
	mov dword ptr [ebp-388], -1
	lea eax, [ebp-388]
	push eax
	push dword ptr [ebp-84]
	lea eax, [ebp-384]
	push eax
	push dword ptr [ebp-36]
	call _SIZEMODEL@20
.stabn 68,0,106,.L_570B-__ZN6VIEWER10MAINTHREADEPv@4
.L_570C:
	lea eax, [ebp-76]
	lea ebx, [ebp-384]
	mov edi, eax
	mov esi, ebx
	mov ecx, 6
	rep movsd
.stabn 68,0,107,.L_570C-__ZN6VIEWER10MAINTHREADEPv@4
.L_570D:
.L_559C:
	jmp .L_5598
.L_5599:
.L_559D:
.stabn 68,0,108,.L_570D-__ZN6VIEWER10MAINTHREADEPv@4
.L_570E:
	mov ebx, dword ptr [ebp-144]
	add ebx, dword ptr [ebp-148]
	inc ebx
	mov eax, dword ptr [ebp-144]
	inc eax
	mov ecx, eax
	push eax
	mov eax, ebx
	cdq
	idiv ecx
	mov eax, edx
	mov ebx, eax
	pop eax
	dec ebx
	mov dword ptr [ebp-148], ebx
.stabn 68,0,109,.L_570E-__ZN6VIEWER10MAINTHREADEPv@4
.L_570F:
	push dword ptr [ebp-148]
	push offset _Lt_5584
	call _printf
	add esp, 8
.stabn 68,0,110,.L_570F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5710:
.L_559E:
.L_5598:
.L_559F:
	jmp .L_5578
.L_5594:
	cmp dword ptr [ebp-360], 19
	jne .L_55A0
.L_55A2:
.L_55A3:
.stabn 68,0,112,.L_5710-__ZN6VIEWER10MAINTHREADEPv@4
.L_5711:
	cmp dword ptr [ebp-148], 0
	jl .L_55A5
.L_55A6:
.stabn 68,0,113,.L_5711-__ZN6VIEWER10MAINTHREADEPv@4
.L_5712:
.L_55A7:
	mov ebx, dword ptr [ebp-148]
	imul ebx, 56
	mov eax, dword ptr [ebp-36]
	add eax, ebx
	lea ebx, [eax+44]
	mov dword ptr [ebp-364], ebx
.stabn 68,0,116,.L_5712-__ZN6VIEWER10MAINTHREADEPv@4
.L_5713:
	mov ebx, dword ptr [ebp-364]
	movzx eax, byte ptr [ebx]
	cmp eax, 1
	jne .L_55AA
.L_55AB:
.stabn 68,0,117,.L_5713-__ZN6VIEWER10MAINTHREADEPv@4
.L_5714:
	push 0
	push -1
	mov eax, dword ptr [ebp-364]
	push dword ptr [eax+52]
	call _GETPARTNAMEBYINDEX@4
	push eax
	push -1
	lea eax, [ebp-376]
	push eax
	call _fb_StrInit@20
.stabn 68,0,118,.L_5714-__ZN6VIEWER10MAINTHREADEPv@4
.L_5715:
	lea eax, [ebp-376]
	push eax
	call _FINDSHADOWFILE@4
	test eax, eax
	je .L_55AD
.L_55AE:
.stabn 68,0,119,.L_5715-__ZN6VIEWER10MAINTHREADEPv@4
.L_5716:
	push -1
	lea eax, [ebp-376]
	push eax
	push 15
	push offset _Lt_55AF
	mov dword ptr [ebp-388], 0
	mov dword ptr [ebp-384], 0
	mov dword ptr [ebp-380], 0
	lea eax, [ebp-388]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_Shell@4
.stabn 68,0,120,.L_5716-__ZN6VIEWER10MAINTHREADEPv@4
.L_5717:
.L_55B1:
	jmp .L_55AC
.L_55AD:
.L_55B2:
.stabn 68,0,121,.L_5717-__ZN6VIEWER10MAINTHREADEPv@4
.L_5718:
	push 48
	push offset _Lt_55B3
	push dword ptr [ebp-376]
	push dword ptr [_G_GFXHWND]
	call _MessageBoxA@16
.stabn 68,0,122,.L_5718-__ZN6VIEWER10MAINTHREADEPv@4
.L_5719:
.L_55B4:
.L_55AC:
	lea eax, [ebp-376]
	push eax
	call _fb_StrDelete@4
.L_55B5:
.L_55AA:
.L_55A9:
.stabn 68,0,124,.L_5719-__ZN6VIEWER10MAINTHREADEPv@4
.L_571A:
.L_55B6:
.L_55B7:
.L_55A5:
.L_55A4:
.L_55B8:
	jmp .L_5578
.L_55A0:
	cmp dword ptr [ebp-360], 13
	jne .L_55B9
.L_55BB:
.L_55BC:
.stabn 68,0,127,.L_571A-__ZN6VIEWER10MAINTHREADEPv@4
.L_571B:
	cmp dword ptr [ebp-148], 0
	jl .L_55BE
.L_55BF:
.stabn 68,0,128,.L_571B-__ZN6VIEWER10MAINTHREADEPv@4
.L_571C:
.L_55C0:
	mov eax, dword ptr [ebp-148]
	imul eax, 56
	mov ebx, dword ptr [ebp-36]
	add ebx, eax
	lea eax, [ebx+44]
	mov dword ptr [ebp-364], eax
.stabn 68,0,129,.L_571C-__ZN6VIEWER10MAINTHREADEPv@4
.L_571D:
	mov eax, dword ptr [ebp-364]
	movzx ebx, byte ptr [eax]
	cmp ebx, 1
	jne .L_55C3
.L_55C4:
.stabn 68,0,130,.L_571D-__ZN6VIEWER10MAINTHREADEPv@4
.L_571E:
	push 0
	push -1
	mov ebx, dword ptr [ebp-364]
	push dword ptr [ebx+52]
	call _GETPARTNAMEBYINDEX@4
	push eax
	push -1
	lea eax, [ebp-376]
	push eax
	call _fb_StrInit@20
.stabn 68,0,131,.L_571E-__ZN6VIEWER10MAINTHREADEPv@4
.L_571F:
	lea eax, [ebp-376]
	push eax
	call _FINDFILE@4
	test eax, eax
	je .L_55C6
.L_55C7:
.stabn 68,0,132,.L_571F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5720:
	push -1
	lea eax, [ebp-376]
	push eax
	push 15
	push offset _Lt_55AF
	mov dword ptr [ebp-388], 0
	mov dword ptr [ebp-384], 0
	mov dword ptr [ebp-380], 0
	lea eax, [ebp-388]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_Shell@4
.stabn 68,0,133,.L_5720-__ZN6VIEWER10MAINTHREADEPv@4
.L_5721:
.L_55C9:
	jmp .L_55C5
.L_55C6:
.L_55CA:
.stabn 68,0,134,.L_5721-__ZN6VIEWER10MAINTHREADEPv@4
.L_5722:
	push 48
	push offset _Lt_55CB
	push dword ptr [ebp-376]
	push dword ptr [_G_GFXHWND]
	call _MessageBoxA@16
.stabn 68,0,135,.L_5722-__ZN6VIEWER10MAINTHREADEPv@4
.L_5723:
.L_55CC:
.L_55C5:
	lea eax, [ebp-376]
	push eax
	call _fb_StrDelete@4
.L_55CD:
.L_55C3:
.L_55C2:
.stabn 68,0,137,.L_5723-__ZN6VIEWER10MAINTHREADEPv@4
.L_5724:
.L_55CE:
.L_55CF:
.L_55BE:
.L_55BD:
.L_55D0:
.L_55B9:
.L_5578:
.L_55D1:
.L_55D2:
	mov eax, dword ptr [ebp-284]
	mov dword ptr [ebp-360], eax
.stabn 68,0,141,.L_5724-__ZN6VIEWER10MAINTHREADEPv@4
.L_5725:
	cmp dword ptr [ebp-360], 42
	jne .L_55D5
.L_55D6:
.L_55D7:
	movsx eax, byte ptr [ebp-104]
	or eax, 1
	mov bl, al
	mov byte ptr [ebp-104], bl
.stabn 68,0,142,.L_5725-__ZN6VIEWER10MAINTHREADEPv@4
.L_5726:
.L_55D8:
	jmp .L_55D3
.L_55D5:
	cmp dword ptr [ebp-360], 54
	jne .L_55D9
.L_55DA:
.L_55DB:
	movsx ebx, byte ptr [ebp-104]
	or ebx, 2
	mov al, bl
	mov byte ptr [ebp-104], al
.stabn 68,0,143,.L_5726-__ZN6VIEWER10MAINTHREADEPv@4
.L_5727:
.L_55DC:
	jmp .L_55D3
.L_55D9:
	cmp dword ptr [ebp-360], 15
	jne .L_55DD
.L_55DE:
.L_55DF:
	mov al, byte ptr [ebp-88]
	xor al, 1
	mov byte ptr [ebp-88], al
.stabn 68,0,144,.L_5727-__ZN6VIEWER10MAINTHREADEPv@4
.L_5728:
.L_55E0:
	jmp .L_55D3
.L_55DD:
	cmp dword ptr [ebp-360], 57
	jne .L_55E1
.L_55E2:
.L_55E3:
	mov al, byte ptr [__ZN6VIEWER14BSHOWCOLLISIONE]
	xor al, 1
	mov byte ptr [__ZN6VIEWER14BSHOWCOLLISIONE], al
.stabn 68,0,145,.L_5728-__ZN6VIEWER10MAINTHREADEPv@4
.L_5729:
.L_55E4:
	jmp .L_55D3
.L_55E1:
	cmp dword ptr [ebp-360], 83
	jne .L_55E5
.L_55E6:
.L_55E7:
.stabn 68,0,146,.L_5729-__ZN6VIEWER10MAINTHREADEPv@4
.L_572A:
	movsx eax, byte ptr [ebp-104]
	test eax, eax
	je .L_55E9
.L_55EA:
.stabn 68,0,147,.L_572A-__ZN6VIEWER10MAINTHREADEPv@4
.L_572B:
	mov eax, dword ptr [ebp-136]
	mov dword ptr [ebp-140], eax
	push dword ptr [_Lt_56BA]
	pop dword ptr [ebp-132]
.stabn 68,0,148,.L_572B-__ZN6VIEWER10MAINTHREADEPv@4
.L_572C:
	push dword ptr [_Lt_56B8]
	pop dword ptr [ebp-112]
	push dword ptr [_Lt_56B9]
	pop dword ptr [ebp-116]
.stabn 68,0,149,.L_572C-__ZN6VIEWER10MAINTHREADEPv@4
.L_572D:
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-120]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-124]
.stabn 68,0,150,.L_572D-__ZN6VIEWER10MAINTHREADEPv@4
.L_572E:
.L_55EB:
.L_55E9:
.L_55E8:
.L_55EC:
.L_55E5:
.L_55D3:
.L_55ED:
.L_55EE:
	jmp .L_5546
.L_5574:
	cmp dword ptr [ebp-356], 2
	jne .L_55EF
.L_55F0:
.L_55F1:
.stabn 68,0,153,.L_572E-__ZN6VIEWER10MAINTHREADEPv@4
.L_572F:
.L_55F2:
	mov eax, dword ptr [ebp-284]
	mov dword ptr [ebp-360], eax
.stabn 68,0,154,.L_572F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5730:
	cmp dword ptr [ebp-360], 42
	jne .L_55F5
.L_55F6:
.L_55F7:
	movsx eax, byte ptr [ebp-104]
	and eax, -2
	mov bl, al
	mov byte ptr [ebp-104], bl
.stabn 68,0,155,.L_5730-__ZN6VIEWER10MAINTHREADEPv@4
.L_5731:
.L_55F8:
	jmp .L_55F3
.L_55F5:
	cmp dword ptr [ebp-360], 54
	jne .L_55F9
.L_55FA:
.L_55FB:
	movsx ebx, byte ptr [ebp-104]
	and ebx, -3
	mov al, bl
	mov byte ptr [ebp-104], al
.stabn 68,0,156,.L_5731-__ZN6VIEWER10MAINTHREADEPv@4
.L_5732:
.L_55FC:
.L_55F9:
.L_55F3:
.L_55FD:
.L_55FE:
	jmp .L_5546
.L_55EF:
	cmp dword ptr [ebp-356], 13
	jne .L_55FF
.L_5600:
.L_5601:
.stabn 68,0,158,.L_5732-__ZN6VIEWER10MAINTHREADEPv@4
.L_5733:
	push 30001
	call __ZN4MENU7TRIGGEREt@4
.stabn 68,0,159,.L_5733-__ZN6VIEWER10MAINTHREADEPv@4
.L_5734:
.L_5602:
.L_55FF:
.L_5546:
.L_5603:
.L_5604:
	jmp .L_5542
.L_5543:
.stabn 68,0,161,.L_5734-__ZN6VIEWER10MAINTHREADEPv@4
.L_5735:
.L_5605:
	push dword ptr [_G_GFXHWND]
	call _IsWindowVisible@4
	test eax, eax
	jne .L_5606
.L_5607:
.stabn 68,0,163,.L_5735-__ZN6VIEWER10MAINTHREADEPv@4
.L_5736:
	push -1
	push -1
	call _fb_GfxFlip@8
	push 1
	push 10
	call _fb_SleepEx@8
.stabn 68,0,164,.L_5736-__ZN6VIEWER10MAINTHREADEPv@4
.L_5737:
.L_5608:
	jmp .L_5605
.L_5606:
.stabn 68,0,165,.L_5737-__ZN6VIEWER10MAINTHREADEPv@4
.L_5738:
	push -1
	push -1
	call _fb_GfxFlip@8
.stabn 68,0,166,.L_5738-__ZN6VIEWER10MAINTHREADEPv@4
.L_5739:
	call _fb_Timer@0
	fsub qword ptr [_Lt_573A]
	fabs
	fld qword ptr [_Lt_38CB]
	fcomip st, st(1)
	fstp st(0)
	jae .L_560A
.L_560B:
	call _fb_Timer@0
	fstp qword ptr [_Lt_573A]
.L_560A:
.L_560C:
.stabn 68,0,169,.L_5739-__ZN6VIEWER10MAINTHREADEPv@4
.L_573B:
.L_560D:
	call _fb_Timer@0
	fsub qword ptr [_Lt_573A]
	fld qword ptr [_Lt_56BD]
	fcomip st, st(1)
	fstp st(0)
	jbe .L_560E
.L_560F:
.stabn 68,0,170,.L_573B-__ZN6VIEWER10MAINTHREADEPv@4
.L_573C:
	push 1
	push 1
	call _fb_SleepEx@8
.stabn 68,0,171,.L_573C-__ZN6VIEWER10MAINTHREADEPv@4
.L_573D:
.L_5610:
	jmp .L_560D
.L_560E:
.stabn 68,0,172,.L_573D-__ZN6VIEWER10MAINTHREADEPv@4
.L_573E:
	fld qword ptr [_Lt_56BD]
	fadd qword ptr [_Lt_573A]
	fstp qword ptr [_Lt_573A]
.stabn 68,0,173,.L_573E-__ZN6VIEWER10MAINTHREADEPv@4
.L_573F:
	inc dword ptr [ebp-108]
.stabn 68,0,175,.L_573F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5740:
	call _fb_Timer@0
	fsub qword ptr [_Lt_5741]
	fabs
	fld qword ptr [_Lt_38CB]
	fcomip st, st(1)
	fstp st(0)
	jae .L_5612
.L_5613:
.stabn 68,0,176,.L_5740-__ZN6VIEWER10MAINTHREADEPv@4
.L_5742:
	call _fb_Timer@0
	fstp qword ptr [_Lt_5741]
.stabn 68,0,177,.L_5742-__ZN6VIEWER10MAINTHREADEPv@4
.L_5743:
	push -1
	push dword ptr [ebp-108]
	call _fb_IntToStr@4
	push eax
	push 6
	push offset _Lt_5614
	mov dword ptr [ebp-364], 0
	mov dword ptr [ebp-360], 0
	mov dword ptr [ebp-356], 0
	lea eax, [ebp-364]
	push eax
	call _fb_StrConcat@20
	push eax
	call _fb_GfxSetWindowTitle@4
	mov dword ptr [ebp-108], 0
.stabn 68,0,178,.L_5743-__ZN6VIEWER10MAINTHREADEPv@4
.L_5744:
.L_5616:
	jmp .L_5611
.L_5612:
.L_5617:
.stabn 68,0,179,.L_5744-__ZN6VIEWER10MAINTHREADEPv@4
.L_5745:
	push 1
	call _fb_Sleep@4
.stabn 68,0,180,.L_5745-__ZN6VIEWER10MAINTHREADEPv@4
.L_5746:
.L_5618:
.L_5611:
	movsx eax, byte ptr [__ZN6VIEWER10G_LOADFILEE]
	test eax, eax
	je .L_561A
.L_561B:
.stabn 68,0,183,.L_5746-__ZN6VIEWER10MAINTHREADEPv@4
.L_5747:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexLock@4
.stabn 68,0,184,.L_5747-__ZN6VIEWER10MAINTHREADEPv@4
.L_5748:
.L_561C:
	push offset _Lt_56BE
	call __setjmp
	add esp, 4
	test eax, eax
	je .L_5623
.L_5624:
	jmp .L_5625
.L_5623:
.L_5626:
.stabn 68,0,185,.L_5748-__ZN6VIEWER10MAINTHREADEPv@4
.L_5749:
push offset 2f
.stabn 68,0,185,.L_5749-__ZN6VIEWER10MAINTHREADEPv@4
.L_574A:
push 1 
.stabn 68,0,185,.L_574A-__ZN6VIEWER10MAINTHREADEPv@4
.L_574B:
call _AddVectoredExceptionHandler@8
.stabn 68,0,185,.L_574B-__ZN6VIEWER10MAINTHREADEPv@4
.L_574C:
jmp 1f
.stabn 68,0,185,.L_574C-__ZN6VIEWER10MAINTHREADEPv@4
.L_574D:
2: 
.stabn 68,0,185,.L_574D-__ZN6VIEWER10MAINTHREADEPv@4
.L_574E:
mov eax, [esp+4] 
.stabn 68,0,185,.L_574E-__ZN6VIEWER10MAINTHREADEPv@4
.L_574F:
mov eax, [eax+4] 
.stabn 68,0,185,.L_574F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5750:
sub dword ptr [eax+196], 12 
.stabn 68,0,185,.L_5750-__ZN6VIEWER10MAINTHREADEPv@4
.L_5751:
mov dword ptr [eax+184], offset _longjmp
.stabn 68,0,185,.L_5751-__ZN6VIEWER10MAINTHREADEPv@4
.L_5752:
mov eax, [eax+196]
.stabn 68,0,185,.L_5752-__ZN6VIEWER10MAINTHREADEPv@4
.L_5753:
mov dword ptr [eax+4], offset _Lt_56BE
.stabn 68,0,185,.L_5753-__ZN6VIEWER10MAINTHREADEPv@4
.L_5754:
mov dword ptr [eax+8], 1 
.stabn 68,0,185,.L_5754-__ZN6VIEWER10MAINTHREADEPv@4
.L_5755:
mov eax, -1 
.stabn 68,0,185,.L_5755-__ZN6VIEWER10MAINTHREADEPv@4
.L_5756:
ret 4
.stabn 68,0,185,.L_5756-__ZN6VIEWER10MAINTHREADEPv@4
.L_5757:
1:
.stabn 68,0,185,.L_5757-__ZN6VIEWER10MAINTHREADEPv@4
.L_5758:
mov [_Lt_56BF], eax
.stabn 68,0,185,.L_5758-__ZN6VIEWER10MAINTHREADEPv@4
.L_5759:
.L_5627:
.L_5628:
.L_562B:
	mov byte ptr [__ZN6VIEWER10G_LOADFILEE], 0
.stabn 68,0,187,.L_5759-__ZN6VIEWER10MAINTHREADEPv@4
.L_575A:
	cmp dword ptr [ebp-36], 0
	je .L_562D
.L_562E:
.stabn 68,0,188,.L_575A-__ZN6VIEWER10MAINTHREADEPv@4
.L_575B:
	lea eax, [ebp-36]
	push eax
	call _FREEMODEL@4
.stabn 68,0,189,.L_575B-__ZN6VIEWER10MAINTHREADEPv@4
.L_575C:
	cmp dword ptr [ebp-28], 0
	jl .L_5630
.L_5631:
	push 1
	push dword ptr [ebp-28]
	call _glDeleteLists@8
	mov dword ptr [ebp-28], -1
.L_5630:
.L_5632:
.stabn 68,0,190,.L_575C-__ZN6VIEWER10MAINTHREADEPv@4
.L_575D:
	cmp dword ptr [ebp-32], 0
	jl .L_5634
.L_5635:
	push 2
	push dword ptr [ebp-32]
	call _glDeleteLists@8
	mov dword ptr [ebp-32], -1
.L_5634:
.L_5636:
.stabn 68,0,191,.L_575D-__ZN6VIEWER10MAINTHREADEPv@4
.L_575E:
.L_5637:
.L_562D:
.L_562C:
	mov dword ptr [_G_TOTALLINES], 0
	mov dword ptr [_G_TOTALOPTIS], 0
	mov dword ptr [_G_TOTALTRIGS], 0
	mov dword ptr [_G_TOTALQUADS], 0
.stabn 68,0,193,.L_575E-__ZN6VIEWER10MAINTHREADEPv@4
.L_575F:
	push 1
	push -1
	push offset __ZN6VIEWER11G_SFILENAMEE
	push dword ptr [__ZN6VIEWER10G_SGFXFILEE]
	call _LOADMODEL@16
	mov dword ptr [ebp-36], eax
.stabn 68,0,195,.L_575F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5760:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	push offset __ZN6VIEWER10G_SGFXFILEE
	call _fb_StrAssign@20
	cmp dword ptr [ebp-36], 0
	jne .L_5639
.L_563A:
	jmp .L_5629
.L_5639:
.L_563B:
.stabn 68,0,196,.L_5760-__ZN6VIEWER10MAINTHREADEPv@4
.L_5761:
	push 1
	call _glGenLists@4
	mov dword ptr [ebp-28], eax
.stabn 68,0,197,.L_5761-__ZN6VIEWER10MAINTHREADEPv@4
.L_5762:
	push 4864
	push dword ptr [ebp-28]
	call _glNewList@8
.stabn 68,0,198,.L_5762-__ZN6VIEWER10MAINTHREADEPv@4
.L_5763:
	push 0
	push -1
	push 1885360192
	push 0
	push dword ptr [ebp-36]
	call _RENDERMODEL@20
.stabn 68,0,199,.L_5763-__ZN6VIEWER10MAINTHREADEPv@4
.L_5764:
	call _glEndList@0
.stabn 68,0,200,.L_5764-__ZN6VIEWER10MAINTHREADEPv@4
.L_5765:
	push 2
	call _glGenLists@4
	mov dword ptr [ebp-32], eax
.stabn 68,0,201,.L_5765-__ZN6VIEWER10MAINTHREADEPv@4
.L_5766:
	push 4864
	push dword ptr [ebp-32]
	call _glNewList@8
.stabn 68,0,202,.L_5766-__ZN6VIEWER10MAINTHREADEPv@4
.L_5767:
	push 0
	push -1
	push 1885360192
	push -1
	push dword ptr [ebp-36]
	call _RENDERMODEL@20
.stabn 68,0,203,.L_5767-__ZN6VIEWER10MAINTHREADEPv@4
.L_5768:
	call _glEndList@0
.stabn 68,0,204,.L_5768-__ZN6VIEWER10MAINTHREADEPv@4
.L_5769:
	push 4864
	mov eax, dword ptr [ebp-32]
	inc eax
	mov ebx, eax
	push ebx
	call _glNewList@8
.stabn 68,0,205,.L_5769-__ZN6VIEWER10MAINTHREADEPv@4
.L_576A:
	push 0
	push -2
	push 1885360192
	push -1
	push dword ptr [ebp-36]
	call _RENDERMODEL@20
.stabn 68,0,206,.L_576A-__ZN6VIEWER10MAINTHREADEPv@4
.L_576B:
	call _glEndList@0
.stabn 68,0,207,.L_576B-__ZN6VIEWER10MAINTHREADEPv@4
.L_576C:
	push -1
	push offset __ZN6VIEWER11G_SFILENAMEE
	push -1
	push offset _Lt_576D
	call _fb_StrCompare@16
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-356], eax
.stabn 68,0,209,.L_576C-__ZN6VIEWER10MAINTHREADEPv@4
.L_576F:
	cmp dword ptr [ebp-356], 0
	je .L_563D
.L_563E:
.stabn 68,0,210,.L_576F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5770:
	push dword ptr [_Lt_56BA]
	pop dword ptr [ebp-132]
	push dword ptr [_Lt_56B8]
	pop dword ptr [ebp-112]
	push dword ptr [_Lt_56B9]
	pop dword ptr [ebp-116]
.stabn 68,0,211,.L_5770-__ZN6VIEWER10MAINTHREADEPv@4
.L_5771:
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-140], 0
.stabn 68,0,212,.L_5771-__ZN6VIEWER10MAINTHREADEPv@4
.L_5772:
	push 0
	push -1
	push offset __ZN6VIEWER11G_SFILENAMEE
	push -1
	push offset _Lt_576D
	call _fb_StrAssign@20
.stabn 68,0,213,.L_5772-__ZN6VIEWER10MAINTHREADEPv@4
.L_5773:
.L_563F:
.L_563D:
.L_563C:
	mov dword ptr [ebp-80], 0
	mov eax, dword ptr [ebp-36]
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-144], ebx
.stabn 68,0,216,.L_5773-__ZN6VIEWER10MAINTHREADEPv@4
.L_5774:
	mov dword ptr [ebp-84], -1
	mov dword ptr [ebp-148], -1
.stabn 68,0,217,.L_5774-__ZN6VIEWER10MAINTHREADEPv@4
.L_5775:
	push 0
	lea ebx, [ebp-80]
	push ebx
	push -1
	lea ebx, [ebp-76]
	push ebx
	push dword ptr [ebp-36]
	call _SIZEMODEL@20
.stabn 68,0,218,.L_5775-__ZN6VIEWER10MAINTHREADEPv@4
.L_5776:
.L_5640:
	fld dword ptr [ebp-72]
	fadd dword ptr [ebp-76]
	fdiv qword ptr [_Lt_4139]
	fstp dword ptr [ebp-40]
.stabn 68,0,220,.L_5776-__ZN6VIEWER10MAINTHREADEPv@4
.L_5777:
	fld dword ptr [ebp-64]
	fadd dword ptr [ebp-68]
	fdiv qword ptr [_Lt_4139]
	fstp dword ptr [ebp-44]
.stabn 68,0,221,.L_5777-__ZN6VIEWER10MAINTHREADEPv@4
.L_5778:
	fld dword ptr [ebp-56]
	fadd dword ptr [ebp-60]
	fdiv qword ptr [_Lt_4139]
	fstp dword ptr [ebp-48]
.stabn 68,0,222,.L_5778-__ZN6VIEWER10MAINTHREADEPv@4
.L_5779:
	fld dword ptr [ebp-40]
	fsub dword ptr [ebp-76]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_5642
.L_5643:
	fld dword ptr [ebp-40]
	fsub dword ptr [ebp-76]
	fabs
	fstp dword ptr [ebp-52]
.L_5642:
.L_5644:
.stabn 68,0,223,.L_5779-__ZN6VIEWER10MAINTHREADEPv@4
.L_577A:
	fld dword ptr [ebp-44]
	fsub dword ptr [ebp-68]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_5646
.L_5647:
	fld dword ptr [ebp-44]
	fsub dword ptr [ebp-68]
	fabs
	fstp dword ptr [ebp-52]
.L_5646:
.L_5648:
.stabn 68,0,224,.L_577A-__ZN6VIEWER10MAINTHREADEPv@4
.L_577B:
	fld dword ptr [ebp-48]
	fsub dword ptr [ebp-60]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_564A
.L_564B:
	fld dword ptr [ebp-48]
	fsub dword ptr [ebp-60]
	fabs
	fstp dword ptr [ebp-52]
.L_564A:
.L_564C:
.stabn 68,0,225,.L_577B-__ZN6VIEWER10MAINTHREADEPv@4
.L_577C:
	fld dword ptr [ebp-40]
	fsub dword ptr [ebp-72]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_564E
.L_564F:
	fld dword ptr [ebp-40]
	fsub dword ptr [ebp-72]
	fabs
	fstp dword ptr [ebp-52]
.L_564E:
.L_5650:
.stabn 68,0,226,.L_577C-__ZN6VIEWER10MAINTHREADEPv@4
.L_577D:
	fld dword ptr [ebp-44]
	fsub dword ptr [ebp-64]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_5652
.L_5653:
	fld dword ptr [ebp-44]
	fsub dword ptr [ebp-64]
	fabs
	fstp dword ptr [ebp-52]
.L_5652:
.L_5654:
.stabn 68,0,227,.L_577D-__ZN6VIEWER10MAINTHREADEPv@4
.L_577E:
	fld dword ptr [ebp-48]
	fsub dword ptr [ebp-56]
	fabs
	fld dword ptr [ebp-52]
	fcomip st, st(1)
	fstp st(0)
	jae .L_5656
.L_5657:
	fld dword ptr [ebp-48]
	fsub dword ptr [ebp-56]
	fabs
	fstp dword ptr [ebp-52]
.L_5656:
.L_5658:
.stabn 68,0,228,.L_577E-__ZN6VIEWER10MAINTHREADEPv@4
.L_577F:
	cmp dword ptr [ebp-356], 0
	je .L_565A
.L_565B:
.stabn 68,0,238,.L_577F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5780:
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-120]
.stabn 68,0,239,.L_5780-__ZN6VIEWER10MAINTHREADEPv@4
.L_5781:
	fld dword ptr [ebp-64]
	fadd dword ptr [ebp-68]
	sub esp, 4
	fistp dword ptr [esp]
	pop ebx
	mov ecx, -2
	mov eax, ebx
	cdq
	idiv ecx
	mov ebx, eax
	push ebx
	fild dword ptr [esp]
	add esp, 4
	fstp dword ptr [ebp-124]
.stabn 68,0,240,.L_5781-__ZN6VIEWER10MAINTHREADEPv@4
.L_5782:
	fld dword ptr [ebp-56]
	fsub dword ptr [ebp-60]
	fstp dword ptr [ebp-128]
.stabn 68,0,241,.L_5782-__ZN6VIEWER10MAINTHREADEPv@4
.L_5783:
	fld dword ptr [ebp-128]
	fsqrt
	fmul dword ptr [_Lt_56C0]
	fstp dword ptr [ebp-128]
.stabn 68,0,242,.L_5783-__ZN6VIEWER10MAINTHREADEPv@4
.L_5784:
.L_565C:
.L_565A:
.L_5659:
.L_565D:
	push 0
	lea ebx, [ebp-268]
	push ebx
	push dword ptr [ebp-36]
	call _CHECKCOLLISIONMODEL@12
.stabn 68,0,246,.L_5784-__ZN6VIEWER10MAINTHREADEPv@4
.L_5785:
	jmp .L_5629
.stabn 68,0,251,.L_5785-__ZN6VIEWER10MAINTHREADEPv@4
.L_5786:
.L_565E:
.L_562A:
	jmp .L_5628
.L_5629:
.stabn 68,0,253,.L_5786-__ZN6VIEWER10MAINTHREADEPv@4
.L_5787:
.L_565F:
.L_5660:
	jmp .L_5661
.stabn 68,0,254,.L_5787-__ZN6VIEWER10MAINTHREADEPv@4
.L_5788:
.L_5625:
.L_5662:
	mov dword ptr [ebp-364], 0
	mov dword ptr [ebp-360], 0
	mov dword ptr [ebp-356], 0
	push 0
	push 27
	push offset _Lt_5663
	push -1
	lea ebx, [ebp-364]
	push ebx
	call _fb_StrAssign@20
	lea ebx, [ebp-364]
	push ebx
	call _LOGERROR@4
	lea ebx, [ebp-364]
	push ebx
	call _fb_StrDelete@4
.stabn 68,0,255,.L_5788-__ZN6VIEWER10MAINTHREADEPv@4
.L_5789:
.L_5665:
.L_5661:
.L_5666:
push [_Lt_56BF]
.stabn 68,0,257,.L_5789-__ZN6VIEWER10MAINTHREADEPv@4
.L_578A:
call _RemoveVectoredExceptionHandler@4
.stabn 68,0,257,.L_578A-__ZN6VIEWER10MAINTHREADEPv@4
.L_578B:
.L_5667:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexUnlock@4
.stabn 68,0,258,.L_578B-__ZN6VIEWER10MAINTHREADEPv@4
.L_578C:
.L_5668:
.L_561A:
.L_5619:
	push 0
	push dword ptr [_G_HRESIZEEVENT]
	call _WaitForSingleObject@8
	test eax, eax
	jne .L_566A
.L_566B:
.stabn 68,0,263,.L_578C-__ZN6VIEWER10MAINTHREADEPv@4
.L_578D:
	mov dword ptr [ebp-368], 0
	mov dword ptr [ebp-364], 0
	mov dword ptr [ebp-360], 0
	mov dword ptr [ebp-356], 0
	lea eax, [ebp-368]
	push eax
	push dword ptr [_G_GFXHWND]
	call _GetClientRect@8
.stabn 68,0,264,.L_578D-__ZN6VIEWER10MAINTHREADEPv@4
.L_578E:
	mov eax, dword ptr [ebp-360]
	mov dword ptr [ebp-372], eax
	mov eax, dword ptr [ebp-356]
	mov dword ptr [ebp-376], eax
.stabn 68,0,265,.L_578E-__ZN6VIEWER10MAINTHREADEPv@4
.L_578F:
	push dword ptr [__ZN3GFX9G_ICLIHEIE]
	push dword ptr [__ZN3GFX9G_ICLIWIDE]
	push 0
	push 0
	call _glViewport@16
.stabn 68,0,266,.L_578F-__ZN6VIEWER10MAINTHREADEPv@4
.L_5790:
	push 5889
	call _glMatrixMode@4
.stabn 68,0,267,.L_5790-__ZN6VIEWER10MAINTHREADEPv@4
.L_5791:
	call _glLoadIdentity@0
.stabn 68,0,268,.L_5791-__ZN6VIEWER10MAINTHREADEPv@4
.L_5792:
	push dword ptr [_Lt_38CA+4]
	push dword ptr [_Lt_38CA]
	push dword ptr [_Lt_38CB+4]
	push dword ptr [_Lt_38CB]
	fild dword ptr [__ZN3GFX9G_ICLIWIDE]
	fild dword ptr [__ZN3GFX9G_ICLIHEIE]
	fxch st(1)
	fdivrp
	sub esp,8
	fstp qword ptr [esp]
	push dword ptr [_Lt_38CC+4]
	push dword ptr [_Lt_38CC]
	call _gluPerspective@32
.stabn 68,0,269,.L_5792-__ZN6VIEWER10MAINTHREADEPv@4
.L_5793:
	push 5888
	call _glMatrixMode@4
.stabn 68,0,270,.L_5793-__ZN6VIEWER10MAINTHREADEPv@4
.L_5794:
.L_566C:
.L_566A:
.L_5669:
	push 16640
	call _glClear@4
.stabn 68,0,273,.L_5794-__ZN6VIEWER10MAINTHREADEPv@4
.L_5795:
	call _glLoadIdentity@0
.stabn 68,0,274,.L_5795-__ZN6VIEWER10MAINTHREADEPv@4
.L_5796:
	cmp dword ptr [ebp-36], 0
	jne .L_566E
.L_566F:
	jmp .L_553F
.L_566E:
.L_5670:
.stabn 68,0,276,.L_5796-__ZN6VIEWER10MAINTHREADEPv@4
.L_5797:
	push dword ptr [_Lt_38D5]
	push dword ptr [_Lt_38D2]
	push dword ptr [_Lt_38D2]
	call _glScalef@12
.stabn 68,0,278,.L_5797-__ZN6VIEWER10MAINTHREADEPv@4
.L_5798:
	lea eax, [ebp-304]
	mov dword ptr [ebp-340], eax
	lea eax, [ebp-304]
	mov dword ptr [ebp-336], eax
	mov dword ptr [ebp-332], 16
	mov dword ptr [ebp-328], 4
	mov dword ptr [ebp-324], 1
	mov dword ptr [ebp-320], 49
	mov dword ptr [ebp-316], 4
	mov dword ptr [ebp-312], 0
	mov dword ptr [ebp-308], 3
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-304]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-300]
	push dword ptr [_Lt_3912]
	pop dword ptr [ebp-296]
	push dword ptr [_Lt_38D3]
	pop dword ptr [ebp-292]
.stabn 68,0,281,.L_5798-__ZN6VIEWER10MAINTHREADEPv@4
.L_5799:
	lea eax, [ebp-304]
	push eax
	push 4611
	push 16384
	call _glLightfv@12
.stabn 68,0,282,.L_5799-__ZN6VIEWER10MAINTHREADEPv@4
.L_579A:
	fld dword ptr [_Lt_4045]
	fadd dword ptr [ebp-132]
	fmul dword ptr [ebp-128]
	sub esp,4
	fstp dword ptr [esp]
	push dword ptr [ebp-124]
	fld dword ptr [ebp-120]
	fchs
	sub esp,4
	fstp dword ptr [esp]
	call _glTranslatef@12
.stabn 68,0,283,.L_579A-__ZN6VIEWER10MAINTHREADEPv@4
.L_579B:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_44AD]
	push dword ptr [ebp-116]
	call _glRotatef@16
.stabn 68,0,284,.L_579B-__ZN6VIEWER10MAINTHREADEPv@4
.L_579C:
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_44AD]
	push dword ptr [_Lt_3912]
	push dword ptr [ebp-112]
	call _glRotatef@16
.stabn 68,0,285,.L_579C-__ZN6VIEWER10MAINTHREADEPv@4
.L_579D:
	push 2896
	call _glDisable@4
.stabn 68,0,287,.L_579D-__ZN6VIEWER10MAINTHREADEPv@4
.L_579E:
.L_5672:
	push offset _Lt_56C1
	call __setjmp
	add esp, 4
	test eax, eax
	je .L_5677
.L_5678:
	jmp .L_5679
.L_5677:
.L_567A:
.stabn 68,0,289,.L_579E-__ZN6VIEWER10MAINTHREADEPv@4
.L_579F:
push offset 2f
.stabn 68,0,289,.L_579F-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A0:
push 1 
.stabn 68,0,289,.L_57A0-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A1:
call _AddVectoredExceptionHandler@8
.stabn 68,0,289,.L_57A1-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A2:
jmp 1f
.stabn 68,0,289,.L_57A2-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A3:
2: 
.stabn 68,0,289,.L_57A3-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A4:
mov eax, [esp+4] 
.stabn 68,0,289,.L_57A4-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A5:
mov eax, [eax+4] 
.stabn 68,0,289,.L_57A5-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A6:
sub dword ptr [eax+196], 12 
.stabn 68,0,289,.L_57A6-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A7:
mov dword ptr [eax+184], offset _longjmp
.stabn 68,0,289,.L_57A7-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A8:
mov eax, [eax+196]
.stabn 68,0,289,.L_57A8-__ZN6VIEWER10MAINTHREADEPv@4
.L_57A9:
mov dword ptr [eax+4], offset _Lt_56C1
.stabn 68,0,289,.L_57A9-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AA:
mov dword ptr [eax+8], 1 
.stabn 68,0,289,.L_57AA-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AB:
mov eax, -1 
.stabn 68,0,289,.L_57AB-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AC:
ret 4
.stabn 68,0,289,.L_57AC-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AD:
1:
.stabn 68,0,289,.L_57AD-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AE:
mov [_Lt_56C2], eax
.stabn 68,0,289,.L_57AE-__ZN6VIEWER10MAINTHREADEPv@4
.L_57AF:
.L_567B:
	cmp dword ptr [ebp-148], 0
	jge .L_567D
.L_567E:
.stabn 68,0,290,.L_57AF-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B0:
	push dword ptr [ebp-28]
	call _glCallList@4
.stabn 68,0,291,.L_57B0-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B1:
.L_567F:
	jmp .L_567C
.L_567D:
.L_5680:
.stabn 68,0,292,.L_57B1-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B2:
	push 0
	push dword ptr [ebp-148]
	push 1885360192
	push 0
	push dword ptr [ebp-36]
	call _RENDERMODEL@20
.stabn 68,0,293,.L_57B2-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B3:
.L_5681:
.L_567C:
	mov eax, dword ptr [ebp-148]
	test eax, eax
	setge al
	shr eax, 1
	sbb eax, eax
	mov ebx, dword ptr [ebp-32]
	sub ebx, eax
	mov ecx, ebx
	push ecx
	call _glCallList@4
.stabn 68,0,295,.L_57B3-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B5:
.L_5682:
.L_5683:
	jmp .L_5684
.stabn 68,0,296,.L_57B5-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B6:
.L_5679:
.L_5685:
	mov dword ptr [ebp-364], 0
	mov dword ptr [ebp-360], 0
	mov dword ptr [ebp-356], 0
	push 0
	push 24
	push offset _Lt_5686
	push -1
	lea ecx, [ebp-364]
	push ecx
	call _fb_StrAssign@20
	lea ecx, [ebp-364]
	push ecx
	call _LOGERROR@4
	lea ecx, [ebp-364]
	push ecx
	call _fb_StrDelete@4
.stabn 68,0,297,.L_57B6-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B7:
.L_5688:
.L_5684:
.L_5689:
push [_Lt_56C2]
.stabn 68,0,299,.L_57B7-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B8:
call _RemoveVectoredExceptionHandler@4
.stabn 68,0,299,.L_57B8-__ZN6VIEWER10MAINTHREADEPv@4
.L_57B9:
.L_568A:
	push 2896
	call _glEnable@4
.stabn 68,0,301,.L_57B9-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BA:
	push 0
	call _glDepthMask@4
.stabn 68,0,344,.L_57BA-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BB:
	cmp byte ptr [ebp-88], 0
	je .L_568C
.L_568D:
.stabn 68,0,345,.L_57BB-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BC:
	push dword ptr [_Lt_56C3]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	call _glColor4f@16
.stabn 68,0,346,.L_57BC-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BD:
.L_568E:
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebp-56]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebp-60]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebp-64]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebp-68]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebp-72]
	sub esp,4
	fstp dword ptr [esp]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebp-76]
	sub esp,4
	fstp dword ptr [esp]
	call _DRAWLIMITSCUBE@24
.stabn 68,0,348,.L_57BD-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BE:
.L_568F:
.L_5690:
.L_568C:
.L_568B:
	push 1
	lea ecx, [ebp-268]
	push ecx
	call _fb_ArrayUBound@8
	mov dword ptr [ebp-344], eax
.stabn 68,0,352,.L_57BE-__ZN6VIEWER10MAINTHREADEPv@4
.L_57BF:
	movzx eax, byte ptr [__ZN6VIEWER14BSHOWCOLLISIONE]
	neg eax
	test eax, eax
	je .L_5691
	mov eax, dword ptr [ebp-344]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-348], eax
	jmp .L_56C4
.L_5691:
	mov dword ptr [ebp-348], 0
.L_56C4:
	cmp dword ptr [ebp-348], 0
	je .L_5693
	push 4
	push offset _Lt_4686
	call _fb_StrAllocTempDescZEx@8
	push eax
	push offset __ZN6VIEWER11G_SFILENAMEE
	push 1
	call _fb_StrInstr@12
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-352], eax
	jmp .L_56C5
.L_5693:
	mov dword ptr [ebp-352], 0
.L_56C5:
	cmp dword ptr [ebp-352], 0
	je .L_5696
.L_5697:
.stabn 68,0,353,.L_57BF-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C2:
	push 2882
	call _glEnable@4
.stabn 68,0,354,.L_57C2-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C3:
	call _fb_Timer@0
	fmul qword ptr [_Lt_56C6]
	sub esp, 4
	fistp dword ptr [esp]
	pop eax
	and eax, 7
	mov dword ptr [ebp-356], eax
.stabn 68,0,356,.L_57C3-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C4:
.L_5699:
	mov dword ptr [ebp-360], 0
.L_569D:
.L_569E:
.stabn 68,0,357,.L_57C4-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C5:
	mov eax, dword ptr [ebp-360]
	and eax, 1
	je .L_569F
	mov dword ptr [ebp-368], 336860180
	mov dword ptr [ebp-364], 336860180
	jmp .L_56C7
.L_569F:
	mov dword ptr [ebp-368], 1094795585
	mov dword ptr [ebp-364], 1094795585
.L_56C7:
	mov ecx, dword ptr [ebp-368]
	mov eax, dword ptr [ebp-364]
	mov dword ptr [ebp-376], ecx
	mov dword ptr [ebp-372], eax
.stabn 68,0,358,.L_57C5-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C6:
	mov ecx, dword ptr [ebp-356]
	add ecx, dword ptr [ebp-360]
	and ecx, 7
	mov ebx, dword ptr [ebp-376]
	mov eax, dword ptr [ebp-372]
	push eax
	push ebx
	mov eax, [esp+0]
	mov edx, [esp+4]
	shrd eax, edx, cl
	sar  edx, cl
	test cl, 32
	jz .L_57C7
	mov eax, edx
	sar edx, 31
.L_57C7:
	mov [esp+4], edx
	mov [esp+0], eax
	pop ebx
	pop eax
	mov ecx, ebx
	mov ebx, dword ptr [ebp-360]
	mov dword ptr [_Lt_57C8+ebx*4], ecx
.stabn 68,0,359,.L_57C6-__ZN6VIEWER10MAINTHREADEPv@4
.L_57C9:
.L_56A1:
.L_569B:
	inc dword ptr [ebp-360]
.L_569A:
	cmp dword ptr [ebp-360], 31
	jle .L_569D
.L_569C:
.L_56A2:
.stabn 68,0,360,.L_57C9-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CA:
	push offset _Lt_57C8
	call _glPolygonStipple@4
.stabn 68,0,361,.L_57CA-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CB:
	mov ecx, dword ptr [ebp-356]
	and ecx, 2
	je .L_56A4
.L_56A5:
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_38D3]
	call _glColor4f@16
.L_56A6:
	jmp .L_56A3
.L_56A4:
.L_56A7:
	push dword ptr [_Lt_38D3]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	push dword ptr [_Lt_3912]
	call _glColor4f@16
.L_56A3:
.L_56A8:
.stabn 68,0,362,.L_57CB-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CC:
.L_56A9:
	mov dword ptr [ebp-360], 0
	mov ecx, dword ptr [ebp-344]
	dec ecx
	mov dword ptr [ebp-364], ecx
	jmp .L_56AB
.L_56AE:
.L_56AF:
.stabn 68,0,363,.L_57CC-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CD:
.L_56B0:
	mov ecx, dword ptr [ebp-360]
	imul ecx, 24
	add ecx, dword ptr [ebp-268]
	lea ebx, [ecx]
	mov dword ptr [ebp-368], ebx
.stabn 68,0,364,.L_57CD-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CE:
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebx+20]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebx+16]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebx+12]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebx+8]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_38D3]
	fadd dword ptr [ebx+4]
	sub esp,4
	fstp dword ptr [esp]
	mov ebx, dword ptr [ebp-368]
	fld dword ptr [_Lt_44AD]
	fadd dword ptr [ebx]
	sub esp,4
	fstp dword ptr [esp]
	call _DRAWLIMITSCUBE@24
.stabn 68,0,365,.L_57CE-__ZN6VIEWER10MAINTHREADEPv@4
.L_57CF:
.L_56B2:
.L_56B3:
.L_56AC:
	inc dword ptr [ebp-360]
.L_56AB:
	mov ebx, dword ptr [ebp-364]
	cmp dword ptr [ebp-360], ebx
	jle .L_56AE
.L_56AD:
.L_56B4:
.stabn 68,0,367,.L_57CF-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D0:
	push 2882
	call _glDisable@4
.stabn 68,0,368,.L_57D0-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D1:
.L_56B5:
.L_5696:
.L_5695:
	push 1
	call _glDepthMask@4
.stabn 68,0,370,.L_57D1-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D2:
.L_56B6:
	jmp .L_553F
.L_5540:
.stabn 68,0,374,.L_57D2-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D3:
	push dword ptr [__ZN6VIEWER7G_MUTEXE]
	call _fb_MutexDestroy@4
.stabn 68,0,376,.L_57D3-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D4:
	push 0
	push offset __ZN8PARTSIZEC1Ev
	lea ebx, [ebp-268]
	push ebx
	call _fb_ArrayEraseObj@12
.L_5536:
	pop edi
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,378,.L_5536-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "SCRWID:1",128,0,0,-4
	.stabs "SCRHEI:1",128,0,0,-8
	.stabs "IMODEL:1",128,0,0,-28
	.stabs "IBORDERS:1",128,0,0,-32
	.stabs "PMODEL:336=*101",128,0,0,-36
	.stabs "XMID:11",128,0,0,-40
	.stabs "YMID:11",128,0,0,-44
	.stabs "ZMID:11",128,0,0,-48
	.stabs "G_ZFAR:11",128,0,0,-52
	.stabs "TSZ:102",128,0,0,-76
	.stabs "G_PARTCOUNT:1",128,0,0,-80
	.stabs "G_CURPART:1",128,0,0,-84
	.stabs "BBOUNDINGBOX:16",128,0,0,-88
	.stabs "BLEFTPRESSED:16",128,0,0,-92
	.stabs "BRIGHTPRESSED:16",128,0,0,-96
	.stabs "BWHEELPRESSED:16",128,0,0,-100
	.stabs "BSHIFTPRESSED:2",128,0,0,-104
	.stabs "IFPS:1",128,0,0,-108
	.stabs "FROTATIONX:11",128,0,0,-112
	.stabs "FROTATIONY:11",128,0,0,-116
	.stabs "FPOSITIONX:11",128,0,0,-120
	.stabs "FPOSITIONY:11",128,0,0,-124
	.stabs "FPOSITIONZ:11",128,0,0,-128
	.stabs "FZOOM:11",128,0,0,-132
	.stabs "IWHEEL:1",128,0,0,-136
	.stabs "IPREVWHEEL:1",128,0,0,-140
	.stabs "G_DRAWCOUNT:1",128,0,0,-144
	.stabs "G_CURDRAW:1",128,0,0,-148
	.stabs "FBARRAY:Tt337=s120DATA:338=*102,0,32;PTR:339=*102,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:340=ar1;0;0;70,192,768;;",128,0,0,0
	.stabs "ATCOLLISION:337",128,0,0,-268
	.stabn 192,0,0,.L_5535-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_553D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_553E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "EVENT:Tt341=s20TYPE:1,0,32;SCANCODE:1,32,32;ASCII:1,64,32;X:1,32,32;Y:1,64,32;DX:1,96,32;DY:1,128,32;BUTTON:1,32,32;Z:1,32,32;W:1,32,32;;",128,0,0,0
	.stabs "E:341",128,0,0,-288
	.stabs "DLIMITFPS:V12",40,0,0,_Lt_573A
	.stabs "DFPS:V12",40,0,0,_Lt_5741
	.stabs "LIGHTPOS:342=ar1;0;3;11",128,0,0,-304
	.stabs "ICOLLISIONS:1",128,0,0,-344
	.stabn 192,0,0,.L_5541-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5544-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5545-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_554A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_554D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_554E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5551-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5552-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5553-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5556-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5557-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_555A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_555D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_555E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5561-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5562-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5565-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5566-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5567-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_556A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_556D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_556E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5571-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5572-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5573-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5576-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5577-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_557C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "TSZTEMP:102",128,0,0,-384
	.stabn 192,0,0,.L_557F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5582-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5583-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5585-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5586-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_558B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "TSZTEMP:102",128,0,0,-384
	.stabn 192,0,0,.L_558E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5590-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5591-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5592-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5593-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5597-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "TSZTEMP:102",128,0,0,-384
	.stabn 192,0,0,.L_559A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_559C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_559D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_559E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_559F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55A3-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55A6-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55A7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "SFILE:13",128,0,0,-376
	.stabn 192,0,0,.L_55AB-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55AE-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B1-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55B2-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B4-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B5-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B6-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55B8-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55BC-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55BF-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55C0-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "SFILE:13",128,0,0,-376
	.stabn 192,0,0,.L_55C4-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55C7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55C9-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55CA-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55CC-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55CD-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55CE-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55CF-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55D0-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55D1-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55D2-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55D7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55D8-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55DB-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55DC-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55DF-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55E0-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55E3-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55E4-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55E7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55EA-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55EB-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55EC-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55ED-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55EE-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55F1-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55F2-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55F7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55F8-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_55FB-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55FC-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55FD-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_55FE-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5601-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5602-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5603-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5604-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5607-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5608-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_560B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_560C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_560F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5610-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5613-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5616-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5617-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5618-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_561B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "JMP_BUF:Tt343=s64__OPAQUE:344=ar1;0;15;1,0,512;;",128,0,0,0
	.stabs "__ENV:V343",40,0,0,_Lt_56BE
	.stabs "__VEH:V345=*7",40,0,0,_Lt_56BF
	.stabn 192,0,0,.L_561C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5624-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5626-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5627-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "SPREVFILENAME:V13",40,0,0,_Lt_576D
	.stabs "BRESETATTRIBUTES:1",128,0,0,-356
	.stabn 192,0,0,.L_562B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_562E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5631-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5632-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5635-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5636-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5637-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_563A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_563B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_563E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_563F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5640-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5643-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5644-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5647-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5648-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_564B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_564C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_564F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5650-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5653-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5654-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5657-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5658-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_565B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_565C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_565D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_565E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_565F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5660-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5662-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5665-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5666-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5667-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5668-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "TRC:23",128,0,0,-368
	.stabs "G_ICLIWID:1",128,0,0,-372
	.stabs "G_ICLIHEI:1",128,0,0,-376
	.stabn 192,0,0,.L_566B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_566C-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_566F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5670-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "__ENV:V343",40,0,0,_Lt_56C1
	.stabs "__VEH:V346=*7",40,0,0,_Lt_56C2
	.stabn 192,0,0,.L_5672-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5678-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_567A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_567B-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_567E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_567F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5680-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5681-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5682-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5683-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_5685-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5688-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5689-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_568A-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_568D-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_568E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_568F-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5690-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "ASTIPPLE:V347=ar1;0;31;8",40,0,0,_Lt_57C8
	.stabs "IMOVE:1",128,0,0,-356
	.stabn 192,0,0,.L_5697-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "IY:1",128,0,0,-360
	.stabn 192,0,0,.L_5699-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "IN:9",128,0,0,-376
	.stabn 192,0,0,.L_569E-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56A1-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56A2-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_56A5-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56A6-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_56A7-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56A8-__ZN6VIEWER10MAINTHREADEPv@4
	.stabs "I:1",128,0,0,-360
	.stabn 192,0,0,.L_56A9-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_56AF-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 192,0,0,.L_56B0-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56B2-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56B3-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56B4-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56B5-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_56B6-__ZN6VIEWER10MAINTHREADEPv@4
	.stabn 224,0,0,.L_5536-__ZN6VIEWER10MAINTHREADEPv@4
.L_57D5:
	.stabs "",36,0,0,.L_57D5-__ZN6VIEWER10MAINTHREADEPv@4

.section .bss
.balign 8
	.lcomm	_Lt_573A,8
.balign 8
	.lcomm	_Lt_5741,8
.balign 4
	.lcomm	_Lt_56BE,64
.balign 4
	.lcomm	_Lt_56BF,4
.balign 4
	.lcomm	_Lt_576D,12
.balign 4
	.lcomm	_Lt_56C1,64
.balign 4
	.lcomm	_Lt_56C2,4
.balign 4
	.lcomm	_Lt_57C8,128

.section .text
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSACTIONS.BAS",132,0,0,.L_57DB
.L_57DB:
	.stabs "NOTIFYSELCHANGE:F7",36,0,1,_NOTIFYSELCHANGE@4
	.stabs "IID:p1",160,0,0,8
.balign 16

.globl _NOTIFYSELCHANGE@4
_NOTIFYSELCHANGE@4:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,1,_NOTIFYSELCHANGE@4-_NOTIFYSELCHANGE@4
.L_57D6:
.L_57DC:
	mov eax, dword ptr [ebp+8]
	imul eax, 48
	mov ebx, offset _G_TMAINCTX
	add ebx, eax
	mov eax, dword ptr [ebx+24]
	mov dword ptr [ebp-4], eax
	push dword ptr [ebp-4]
	call _GetParent@4
	mov dword ptr [ebp-8], eax
.stabn 68,0,2,.L_57DC-_NOTIFYSELCHANGE@4
.L_57DD:
	lea eax, [ebp-32]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 6
	rep stosd
	pop edi
	pop eax
.stabn 68,0,3,.L_57DD-_NOTIFYSELCHANGE@4
.L_57DE:
	lea eax, [ebp-20]
	push eax
	push 0
	push 1076
	push dword ptr [ebp-4]
	call _SendMessageA@16
.stabn 68,0,4,.L_57DE-_NOTIFYSELCHANGE@4
.L_57DF:
	push 0
	push 0
	push 1090
	push dword ptr [ebp-4]
	call _SendMessageA@16
	mov word ptr [ebp-12], ax
.stabn 68,0,5,.L_57DF-_NOTIFYSELCHANGE@4
.L_57E0:
.L_57D8:
	lea eax, [ebp-32]
	mov dword ptr [ebp-36], eax
.stabn 68,0,6,.L_57E0-_NOTIFYSELCHANGE@4
.L_57E1:
	mov eax, dword ptr [ebp-36]
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [eax], ebx
	mov ebx, dword ptr [ebp-36]
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebx+4], eax
	mov eax, dword ptr [ebp-36]
	mov dword ptr [eax+8], 1794
.stabn 68,0,7,.L_57E1-_NOTIFYSELCHANGE@4
.L_57E2:
.L_57DA:
	lea eax, [ebp-32]
	push eax
	push dword ptr [ebp+8]
	push 78
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,9,.L_57E2-_NOTIFYSELCHANGE@4
.L_57E3:
.L_57D7:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,10,.L_57D7-_NOTIFYSELCHANGE@4
	.stabs "HCTL:348=*21",128,0,0,-4
	.stabs "HPARENT:349=*21",128,0,0,-8
	.stabs "TAGNMHDR:Tt351=s12HWNDFROM:352=*21,0,32;IDFROM:8,32,32;CODE:8,64,32;;",128,0,0,0
	.stabs "_SELCHANGE:Tt350=s24NMHDR:351,0,96;CHRG:320,96,64;SELTYP:6,160,16;;",128,0,0,0
	.stabs "TSELCHANGE:350",128,0,0,-32
	.stabn 192,0,0,.L_57D6-_NOTIFYSELCHANGE@4
	.stabn 192,0,0,.L_57D8-_NOTIFYSELCHANGE@4
	.stabn 224,0,0,.L_57DA-_NOTIFYSELCHANGE@4
	.stabn 224,0,0,.L_57D7-_NOTIFYSELCHANGE@4
.L_57E4:
	.stabs "",36,0,0,.L_57E4-_NOTIFYSELCHANGE@4
	.stabs "LOADFILEINTOEDITOR:F16",36,0,12,_LOADFILEINTOEDITOR@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl _LOADFILEINTOEDITOR@4
_LOADFILEINTOEDITOR@4:
	push ebp
	mov ebp, esp
	sub esp, 88
	.stabn 68,0,12,_LOADFILEINTOEDITOR@4-_LOADFILEINTOEDITOR@4
	mov byte ptr [ebp-4], 0
.L_57E5:
.L_57F3:
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
.stabn 68,0,14,.L_57F3-_LOADFILEINTOEDITOR@4
.L_57F4:
	lea eax, [ebp-16]
	push eax
	push dword ptr [ebp+8]
	call _LOADSCRIPTFILE@8
	test al, al
	jne .L_57E8
.L_57E9:
.stabn 68,0,15,.L_57F4-_LOADFILEINTOEDITOR@4
.L_57F5:
	push 16
	push 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	push dword ptr [ebp+8]
	push 19
	push offset _Lt_57EA
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	lea eax, [ebp-64]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	lea eax, [ebp-76]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-88]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,16,.L_57F5-_LOADFILEINTOEDITOR@4
.L_57F6:
	mov byte ptr [ebp-4], 0
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_57E6
.stabn 68,0,17,.L_57F6-_LOADFILEINTOEDITOR@4
.L_57F7:
.L_57EE:
.L_57E8:
.L_57E7:
	push dword ptr [ebp-16]
	push dword ptr [_G_TMAINCTX+264]
	call _SetWindowTextA@8
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,20,.L_57F7-_LOADFILEINTOEDITOR@4
.L_57F8:
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	push offset _G_CURRENTFILEPATH
	call _fb_StrAssign@20
.stabn 68,0,21,.L_57F8-_LOADFILEINTOEDITOR@4
.L_57F9:
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	push 0
	push -1
	push -1
	push dword ptr [ebp+8]
	push -1
	push 4
	push offset _Lt_57EF
	push -1
	push offset _SAPPNAME
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-40]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-52]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-52]
	push dword ptr [_G_TMAINCTX+24]
	call _SetWindowTextA@8
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,22,.L_57F9-_LOADFILEINTOEDITOR@4
.L_57FA:
	push dword ptr [_G_TMAINCTX+168]
	call _SetFocus@4
.stabn 68,0,24,.L_57FA-_LOADFILEINTOEDITOR@4
.L_57FB:
	push 0
	push 0
	push 185
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,25,.L_57FB-_LOADFILEINTOEDITOR@4
.L_57FC:
	mov byte ptr [ebp-4], 1
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_57E6
.stabn 68,0,26,.L_57FC-_LOADFILEINTOEDITOR@4
.L_57FD:
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
.L_57E6:
	mov al, byte ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,27,.L_57E6-_LOADFILEINTOEDITOR@4
	.stabs "SSCRIPT:13",128,0,0,-16
	.stabn 192,0,0,.L_57E5-_LOADFILEINTOEDITOR@4
	.stabn 192,0,0,.L_57E9-_LOADFILEINTOEDITOR@4
	.stabn 224,0,0,.L_57EE-_LOADFILEINTOEDITOR@4
	.stabn 224,0,0,.L_57E6-_LOADFILEINTOEDITOR@4
.L_57FE:
	.stabs "",36,0,0,.L_57FE-_LOADFILEINTOEDITOR@4
	.stabs "UPDATEMAINWINDOWCAPTION:F7",36,0,31,_UPDATEMAINWINDOWCAPTION@0
.balign 16

.globl _UPDATEMAINWINDOWCAPTION@0
_UPDATEMAINWINDOWCAPTION@0:
	push ebp
	mov ebp, esp
	sub esp, 132
	push ebx
	.stabn 68,0,31,_UPDATEMAINWINDOWCAPTION@0-_UPDATEMAINWINDOWCAPTION@0
.L_57FF:
.L_5811:
.L_5801:
	mov eax, dword ptr [_G_ICURTAB]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,32,.L_5811-_UPDATEMAINWINDOWCAPTION@0
.L_5812:
	push -1
	mov ebx, dword ptr [ebp-4]
	lea eax, [ebx+4]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5804
.L_5805:
.stabn 68,0,33,.L_5812-_UPDATEMAINWINDOWCAPTION@0
.L_5813:
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+4]
	push ebx
	push -1
	push 4
	push offset _Lt_57EF
	push -1
	push offset _SAPPNAME
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	lea ebx, [ebp-16]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-28]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-40]
	push dword ptr [_G_TMAINCTX+24]
	call _SetWindowTextA@8
	lea eax, [ebp-40]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,34,.L_5813-_UPDATEMAINWINDOWCAPTION@0
.L_5814:
.L_5809:
	jmp .L_5803
.L_5804:
.L_580A:
.stabn 68,0,35,.L_5814-_UPDATEMAINWINDOWCAPTION@0
.L_5815:
	mov byte ptr [ebp-68], 0
.stabn 68,0,36,.L_5815-_UPDATEMAINWINDOWCAPTION@0
.L_5816:
	mov dword ptr [ebp-96], 1
	lea eax, [ebp-92]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 6
	rep stosd
	pop edi
	pop eax
.stabn 68,0,37,.L_5816-_UPDATEMAINWINDOWCAPTION@0
.L_5817:
	lea eax, [ebp-68]
	mov dword ptr [ebp-84], eax
	mov dword ptr [ebp-80], 63
.stabn 68,0,38,.L_5817-_UPDATEMAINWINDOWCAPTION@0
.L_5818:
	lea eax, [ebp-96]
	push eax
	push dword ptr [_G_ICURTAB]
	push 4869
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,39,.L_5818-_UPDATEMAINWINDOWCAPTION@0
.L_5819:
	push 0
	push -1
	push 64
	lea eax, [ebp-68]
	push eax
	call _fb_StrLen@8
	add eax, -4
	push eax
	lea eax, [ebp-68]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_LEFT@8
	push eax
	push 64
	lea eax, [ebp-68]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,40,.L_5819-_UPDATEMAINWINDOWCAPTION@0
.L_581A:
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push -1
	push 64
	lea eax, [ebp-68]
	push eax
	push -1
	push 4
	push offset _Lt_57EF
	push -1
	push offset _SAPPNAME
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	lea eax, [ebp-108]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	lea eax, [ebp-120]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-132]
	push dword ptr [_G_TMAINCTX+24]
	call _SetWindowTextA@8
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,41,.L_581A-_UPDATEMAINWINDOWCAPTION@0
.L_581B:
.L_580F:
.L_5803:
.L_5810:
.L_5800:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,44,.L_5800-_UPDATEMAINWINDOWCAPTION@0
	.stabn 192,0,0,.L_57FF-_UPDATEMAINWINDOWCAPTION@0
	.stabn 192,0,0,.L_5801-_UPDATEMAINWINDOWCAPTION@0
	.stabn 192,0,0,.L_5805-_UPDATEMAINWINDOWCAPTION@0
	.stabn 224,0,0,.L_5809-_UPDATEMAINWINDOWCAPTION@0
	.stabs "ZNAME:4",128,0,0,-68
	.stabs "TAGTCITEMA:Tt353=s28MASK:8,0,32;DWSTATE:8,32,32;DWSTATEMASK:8,64,32;PSZTEXT:354=*4,96,32;CCHTEXTMAX:1,128,32;IIMAGE:1,160,32;LPARAM:1,192,32;;",128,0,0,0
	.stabs "TITEM:353",128,0,0,-96
	.stabn 192,0,0,.L_580A-_UPDATEMAINWINDOWCAPTION@0
	.stabn 224,0,0,.L_580F-_UPDATEMAINWINDOWCAPTION@0
	.stabn 224,0,0,.L_5810-_UPDATEMAINWINDOWCAPTION@0
	.stabn 224,0,0,.L_5800-_UPDATEMAINWINDOWCAPTION@0
.L_581C:
	.stabs "",36,0,0,.L_581C-_UPDATEMAINWINDOWCAPTION@0
	.stabs "UPDATETABCLOSEBUTTON:F7",36,0,45,_UPDATETABCLOSEBUTTON@0
.balign 16

.globl _UPDATETABCLOSEBUTTON@0
_UPDATETABCLOSEBUTTON@0:
	push ebp
	mov ebp, esp
	sub esp, 100
	push ebx
	.stabn 68,0,45,_UPDATETABCLOSEBUTTON@0-_UPDATETABCLOSEBUTTON@0
.L_581D:
.L_582B:
	lea eax, [ebp-16]
	mov dword ptr [ebp-52], eax
	lea eax, [ebp-16]
	mov dword ptr [ebp-48], eax
	mov dword ptr [ebp-44], 16
	mov dword ptr [ebp-40], 8
	mov dword ptr [ebp-36], 1
	mov dword ptr [ebp-32], 49
	mov dword ptr [ebp-28], 2
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 1
.stabn 68,0,46,.L_582B-_UPDATETABCLOSEBUTTON@0
.L_582C:
	lea eax, [ebp-68]
	push eax
	push dword ptr [_G_TMAINCTX+24]
	call _GetClientRect@8
.stabn 68,0,47,.L_582C-_UPDATETABCLOSEBUTTON@0
.L_582D:
	lea eax, [ebp-16]
	push eax
	push dword ptr [_G_ICURTAB]
	push 4874
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,48,.L_582D-_UPDATETABCLOSEBUTTON@0
.L_582E:
	push 0
	push 0
	push 49
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
	mov dword ptr [ebp-72], eax
.stabn 68,0,49,.L_582E-_UPDATETABCLOSEBUTTON@0
.L_582F:
	cmp dword ptr [ebp-72], 0
	jne .L_5821
.L_5822:
	push 0
	call _fb_End@4
.L_5821:
.L_5823:
.stabn 68,0,50,.L_582F-_UPDATETABCLOSEBUTTON@0
.L_5830:
	push 0
	call _GetDC@4
	mov dword ptr [ebp-76], eax
	push dword ptr [ebp-72]
	push dword ptr [ebp-76]
	call _SelectObject@8
.stabn 68,0,51,.L_5830-_UPDATETABCLOSEBUTTON@0
.L_5831:
	lea eax, [ebp-84]
	push eax
	push 4
	push offset _Lt_5824
	push dword ptr [ebp-76]
	call _GetTextExtentPoint32A@16
.stabn 68,0,52,.L_5831-_UPDATETABCLOSEBUTTON@0
.L_5832:
	movsx eax, word ptr [_G_TMAINCTX+156]
	add dword ptr [ebp-8], eax
.stabn 68,0,53,.L_5832-_UPDATETABCLOSEBUTTON@0
.L_5833:
.L_5825:
	lea eax, [_G_TMAINCTX+72]
	mov dword ptr [ebp-88], eax
.stabn 68,0,54,.L_5833-_UPDATETABCLOSEBUTTON@0
.L_5834:
	mov eax, dword ptr [ebp-88]
	movsx ebx, word ptr [eax+40]
	mov eax, dword ptr [ebp-8]
	sub eax, ebx
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+36], ax
	mov ax, word ptr [ebp-84]
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+40], ax
	mov ax, word ptr [ebp-80]
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+42], ax
.stabn 68,0,55,.L_5834-_UPDATETABCLOSEBUTTON@0
.L_5835:
	mov eax, dword ptr [ebp-88]
	movsx ebx, word ptr [eax+36]
	imul ebx, 100
	mov eax, ebx
	cdq
	idiv dword ptr [ebp-60]
	mov ebx, eax
	mov dword ptr [ebp-92], ebx
	mov ebx, dword ptr [ebp-88]
	movsx eax, word ptr [ebx+40]
	imul eax, 100
	cdq
	idiv dword ptr [ebp-60]
	mov dword ptr [ebp-96], eax
	mov eax, dword ptr [ebp-88]
	movsx ebx, word ptr [eax+42]
	imul ebx, 100
	mov eax, ebx
	cdq
	idiv dword ptr [ebp-56]
	mov ebx, eax
	mov dword ptr [ebp-100], ebx
.stabn 68,0,56,.L_5835-_UPDATETABCLOSEBUTTON@0
.L_5836:
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+16], 0
	mov ebx, dword ptr [ebp-88]
	movzx eax, word ptr [ebx+16]
	and eax, 4294950912
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+16], ax
	mov eax, dword ptr [ebp-88]
	movzx ebx, word ptr [eax+16]
	and ebx, 4294950911
	or ebx, 16384
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+16], bx
	mov ebx, dword ptr [ebp-88]
	movzx eax, word ptr [ebx+16]
	and eax, 4294934527
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+16], ax
	mov eax, dword ptr [ebp-92]
	sal eax, 7
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+18], ax
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+24], 0
	mov eax, dword ptr [ebp-88]
	movzx ebx, word ptr [eax+24]
	and ebx, 4294950912
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+24], bx
	mov ebx, dword ptr [ebp-88]
	movzx eax, word ptr [ebx+24]
	and eax, 4294950911
	or eax, 16384
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+24], ax
	mov eax, dword ptr [ebp-88]
	movzx ebx, word ptr [eax+24]
	and ebx, 4294934527
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+24], bx
	mov ebx, dword ptr [ebp-96]
	sal ebx, 7
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+26], bx
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+28], 0
	mov ebx, dword ptr [ebp-88]
	movzx eax, word ptr [ebx+28]
	and eax, 4294950912
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+28], ax
	mov eax, dword ptr [ebp-88]
	movzx ebx, word ptr [eax+28]
	and ebx, 4294950911
	or ebx, 16384
	mov eax, dword ptr [ebp-88]
	mov word ptr [eax+28], bx
	mov ebx, dword ptr [ebp-88]
	movzx eax, word ptr [ebx+28]
	and eax, 4294934527
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+28], ax
	mov eax, dword ptr [ebp-100]
	sal eax, 7
	mov ebx, dword ptr [ebp-88]
	mov word ptr [ebx+30], ax
.stabn 68,0,57,.L_5836-_UPDATETABCLOSEBUTTON@0
.L_5837:
	push 20
	mov eax, dword ptr [ebp-88]
	movsx ebx, word ptr [eax+42]
	push ebx
	mov ebx, dword ptr [ebp-88]
	movsx eax, word ptr [ebx+40]
	push eax
	mov eax, dword ptr [ebp-88]
	movsx ebx, word ptr [eax+38]
	push ebx
	mov ebx, dword ptr [ebp-88]
	movsx eax, word ptr [ebx+36]
	push eax
	push 0
	push dword ptr [_G_TMAINCTX+72]
	call _SetWindowPos@28
.stabn 68,0,58,.L_5837-_UPDATETABCLOSEBUTTON@0
.L_5838:
	push -1
	push 0
	push dword ptr [_G_TMAINCTX+72]
	call _InvalidateRect@12
.stabn 68,0,59,.L_5838-_UPDATETABCLOSEBUTTON@0
.L_5839:
.L_582A:
	push dword ptr [ebp-76]
	push 0
	call _ReleaseDC@8
.stabn 68,0,61,.L_5839-_UPDATETABCLOSEBUTTON@0
.L_583A:
.L_581E:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,62,.L_581E-_UPDATETABCLOSEBUTTON@0
	.stabs "TPT:355=ar1;0;1;154",128,0,0,-16
	.stabs "TRC:23",128,0,0,-68
	.stabs "HFONT:356=*55",128,0,0,-72
	.stabs "HDC:357=*19",128,0,0,-76
	.stabs "TSZ:71",128,0,0,-84
	.stabn 192,0,0,.L_581D-_UPDATETABCLOSEBUTTON@0
	.stabn 192,0,0,.L_5822-_UPDATETABCLOSEBUTTON@0
	.stabn 224,0,0,.L_5823-_UPDATETABCLOSEBUTTON@0
	.stabs "FPX:1",128,0,0,-92
	.stabs "FW:1",128,0,0,-96
	.stabs "FH:1",128,0,0,-100
	.stabn 192,0,0,.L_5825-_UPDATETABCLOSEBUTTON@0
	.stabn 224,0,0,.L_582A-_UPDATETABCLOSEBUTTON@0
	.stabn 224,0,0,.L_581E-_UPDATETABCLOSEBUTTON@0
.L_583B:
	.stabs "",36,0,0,.L_583B-_UPDATETABCLOSEBUTTON@0
	.stabs "CHANGETOTAB:F7",36,0,63,_CHANGETOTAB@8
	.stabs "INEWTAB:p1",160,0,0,8
	.stabs "BFORCE:p16",160,0,0,12
.balign 16

.globl _CHANGETOTAB@8
_CHANGETOTAB@8:
	push ebp
	mov ebp, esp
	sub esp, 44
	push ebx
	.stabn 68,0,63,_CHANGETOTAB@8-_CHANGETOTAB@8
.L_583C:
.L_5852:
	cmp dword ptr [ebp+8], 0
	jl .L_583E
	mov eax, dword ptr [ebp+8]
	cmp eax, dword ptr [_G_ITABCOUNT]
	setge al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-4], eax
	jmp .L_5851
.L_583E:
	mov dword ptr [ebp-4], -1
.L_5851:
	cmp dword ptr [ebp-4], 0
	je .L_5841
.L_5842:
	push offset _Lt_5843
	call _puts
	add esp, 4
	jmp .L_583D
.L_5841:
.L_5844:
.stabn 68,0,64,.L_5852-_CHANGETOTAB@8
.L_5854:
.L_5845:
	mov eax, dword ptr [ebp+8]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax]
	mov dword ptr [ebp-8], ebx
.stabn 68,0,67,.L_5854-_CHANGETOTAB@8
.L_5855:
	mov ebx, dword ptr [_G_TMAINCTX+264]
	mov dword ptr [ebp-12], ebx
	mov ebx, dword ptr [ebp-8]
	push dword ptr [ebx]
	call _GetParent@4
	mov dword ptr [ebp-16], eax
.stabn 68,0,68,.L_5855-_CHANGETOTAB@8
.L_5856:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax]
	cmp dword ptr [ebp-12], ebx
	jne .L_5848
.L_5849:
	call _UPDATETABCLOSEBUTTON@0
	jmp .L_583D
.L_5848:
.L_584A:
.stabn 68,0,69,.L_5856-_CHANGETOTAB@8
.L_5857:
	push 0
	push 0
	push 184
	push dword ptr [ebp-12]
	call _SendMessageA@16
	mov dword ptr [ebp-20], eax
.stabn 68,0,70,.L_5857-_CHANGETOTAB@8
.L_5858:
	push 0
	push 0
	push 184
	mov eax, dword ptr [ebp-8]
	push dword ptr [eax]
	call _SendMessageA@16
	mov dword ptr [ebp-24], eax
.stabn 68,0,71,.L_5858-_CHANGETOTAB@8
.L_5859:
	movsx eax, byte ptr [_G_TMAINCTX+310]
	imul eax, 20
	mov ebx, offset _G_TMAINCTX
	add ebx, eax
	mov eax, dword ptr [ebx+792]
	mov dword ptr [ebp-28], eax
.stabn 68,0,72,.L_5859-_CHANGETOTAB@8
.L_585A:
	mov eax, dword ptr [ebp-8]
	mov ebx, dword ptr [eax]
	mov dword ptr [_G_TMAINCTX+264], ebx
	mov ebx, dword ptr [ebp+8]
	mov dword ptr [_G_ICURTAB], ebx
.stabn 68,0,73,.L_585A-_CHANGETOTAB@8
.L_585B:
	push 0
	push -12
	push dword ptr [ebp-12]
	call _SetWindowLongA@12
	push 5
	push -12
	mov ebx, dword ptr [ebp-8]
	push dword ptr [ebx]
	call _SetWindowLongA@12
.stabn 68,0,75,.L_585B-_CHANGETOTAB@8
.L_585C:
	lea ebx, [ebp-44]
	push ebx
	push dword ptr [ebp-12]
	call _GetWindowRect@8
.stabn 68,0,76,.L_585C-_CHANGETOTAB@8
.L_585D:
	lea ebx, [ebp-44]
	push ebx
	push dword ptr [ebp-16]
	call _ScreenToClient@8
.stabn 68,0,77,.L_585D-_CHANGETOTAB@8
.L_585E:
	lea ebx, [ebp-44]
	add ebx, 8
	push ebx
	push dword ptr [ebp-16]
	call _ScreenToClient@8
.stabn 68,0,78,.L_585E-_CHANGETOTAB@8
.L_585F:
	mov byte ptr [_G_BCHANGINGFONT], 1
.stabn 68,0,79,.L_585F-_CHANGETOTAB@8
.L_5860:
	push 0
	push dword ptr [ebp-28]
	push 48
	mov ebx, dword ptr [ebp-8]
	push dword ptr [ebx]
	call _SendMessageA@16
.stabn 68,0,80,.L_5860-_CHANGETOTAB@8
.L_5861:
	mov byte ptr [_G_BCHANGINGFONT], 0
.stabn 68,0,81,.L_5861-_CHANGETOTAB@8
.L_5862:
	push 68
	mov ebx, dword ptr [ebp-32]
	sub ebx, dword ptr [ebp-40]
	push ebx
	mov ebx, dword ptr [ebp-36]
	sub ebx, dword ptr [ebp-44]
	push ebx
	push dword ptr [ebp-40]
	push dword ptr [ebp-44]
	push 0
	mov ebx, dword ptr [ebp-8]
	push dword ptr [ebx]
	call _SetWindowPos@28
.stabn 68,0,82,.L_5862-_CHANGETOTAB@8
.L_5863:
	push 0
	push dword ptr [ebp-12]
	call _ShowWindow@8
.stabn 68,0,83,.L_5863-_CHANGETOTAB@8
.L_5864:
	push 0
	push -1
	mov ebx, dword ptr [ebp-8]
	lea eax, [ebx+4]
	push eax
	push -1
	push offset _G_CURRENTFILEPATH
	call _fb_StrAssign@20
.stabn 68,0,84,.L_5864-_CHANGETOTAB@8
.L_5865:
	push 0
	push dword ptr [ebp+8]
	push 4876
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,85,.L_5865-_CHANGETOTAB@8
.L_5866:
	call _UPDATEMAINWINDOWCAPTION@0
.stabn 68,0,86,.L_5866-_CHANGETOTAB@8
.L_5867:
	push dword ptr [_G_TMAINCTX+264]
	call _SetFocus@4
.stabn 68,0,88,.L_5867-_CHANGETOTAB@8
.L_5868:
	call _UPDATETABCLOSEBUTTON@0
.stabn 68,0,89,.L_5868-_CHANGETOTAB@8
.L_5869:
	push 0
	push dword ptr [ebp-20]
	push 185
	push dword ptr [ebp-12]
	call _SendMessageA@16
.stabn 68,0,90,.L_5869-_CHANGETOTAB@8
.L_586A:
	push 0
	push dword ptr [ebp-24]
	push 185
	mov eax, dword ptr [ebp-8]
	push dword ptr [eax]
	call _SendMessageA@16
.stabn 68,0,91,.L_586A-_CHANGETOTAB@8
.L_586B:
.L_584B:
	push 0
	push 0
	push 4868
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
	cmp dword ptr [_G_ITABCOUNT], eax
	je .L_584D
.L_584E:
	push offset _Lt_584F
	call _puts
	add esp, 4
.L_584D:
.L_5850:
.stabn 68,0,94,.L_586B-_CHANGETOTAB@8
.L_586C:
.L_583D:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,95,.L_583D-_CHANGETOTAB@8
	.stabn 192,0,0,.L_583C-_CHANGETOTAB@8
	.stabn 192,0,0,.L_5842-_CHANGETOTAB@8
	.stabn 224,0,0,.L_5844-_CHANGETOTAB@8
	.stabs "HWNDOLD:358=*21",128,0,0,-12
	.stabs "HPARENT:359=*21",128,0,0,-16
	.stabs "IMODIFYOLD:1",128,0,0,-20
	.stabs "IMODIFYNEW:1",128,0,0,-24
	.stabs "HFONT:360=*55",128,0,0,-28
	.stabs "TRC:23",128,0,0,-44
	.stabn 192,0,0,.L_5845-_CHANGETOTAB@8
	.stabn 192,0,0,.L_5849-_CHANGETOTAB@8
	.stabn 224,0,0,.L_584A-_CHANGETOTAB@8
	.stabn 224,0,0,.L_584B-_CHANGETOTAB@8
	.stabn 192,0,0,.L_584E-_CHANGETOTAB@8
	.stabn 224,0,0,.L_5850-_CHANGETOTAB@8
	.stabn 224,0,0,.L_583D-_CHANGETOTAB@8
.L_586D:
	.stabs "",36,0,0,.L_586D-_CHANGETOTAB@8
	.stabs "CLONEHWND:F361=*21",36,0,96,_CLONEHWND@8
	.stabs "HWND:p362=*21",160,0,0,8
	.stabs "IINCSTYLES:p1",160,0,0,12
.balign 16

.globl _CLONEHWND@8
_CLONEHWND@8:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,96,_CLONEHWND@8-_CLONEHWND@8
	mov dword ptr [ebp-4], 0
.L_586E:
.L_5870:
	push -32
	push dword ptr [ebp+8]
	call _GetClassLongA@8
	mov dword ptr [ebp-8], eax
.stabn 68,0,97,.L_5870-_CLONEHWND@8
.L_5871:
	push -6
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-12], eax
.stabn 68,0,98,.L_5871-_CLONEHWND@8
.L_5872:
	push -8
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-16], eax
.stabn 68,0,99,.L_5872-_CLONEHWND@8
.L_5873:
	push -16
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-20], eax
.stabn 68,0,100,.L_5873-_CLONEHWND@8
.L_5874:
	push -20
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	mov dword ptr [ebp-24], eax
.stabn 68,0,101,.L_5874-_CLONEHWND@8
.L_5875:
	push 0
	push dword ptr [ebp-12]
	push 0
	push dword ptr [ebp-16]
	push 0
	push 0
	push 0
	push 0
	mov eax, dword ptr [ebp-20]
	or eax, dword ptr [ebp+12]
	mov ebx, eax
	push ebx
	push 0
	push dword ptr [ebp-8]
	push dword ptr [ebp-24]
	call _CreateWindowExA@48
	mov dword ptr [ebp-4], eax
.stabn 68,0,102,.L_5875-_CLONEHWND@8
.L_5876:
.L_586F:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,103,.L_586F-_CLONEHWND@8
	.stabs "WCLASS:363=*4",128,0,0,-8
	.stabs "HINST:364=*297",128,0,0,-12
	.stabs "HPARENT:365=*21",128,0,0,-16
	.stabs "LSTYLE:1",128,0,0,-20
	.stabs "LSTYLEEX:1",128,0,0,-24
	.stabn 192,0,0,.L_586E-_CLONEHWND@8
	.stabn 224,0,0,.L_586F-_CLONEHWND@8
.L_5877:
	.stabs "",36,0,0,.L_5877-_CLONEHWND@8
	.stabs "GETNEWTABNAME:F13",36,0,108,_GETNEWTABNAME@4
	.stabs "BRESET:p16",160,0,0,8
.balign 16

.globl _GETNEWTABNAME@4
_GETNEWTABNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 36
	.stabn 68,0,108,_GETNEWTABNAME@4-_GETNEWTABNAME@4
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
.L_5879:
.L_5887:
	inc dword ptr [_Lt_5888]
.stabn 68,0,109,.L_5887-_GETNEWTABNAME@4
.L_5889:
	cmp dword ptr [_G_ITABCOUNT], 1
	jne .L_587C
.L_587D:
	mov dword ptr [_Lt_5888], 1
.L_587C:
.L_587E:
.stabn 68,0,110,.L_5889-_GETNEWTABNAME@4
.L_588A:
	cmp byte ptr [ebp+8], 0
	je .L_5880
.L_5881:
	mov dword ptr [_Lt_5888], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
	jmp .L_587A
.L_5880:
.L_5882:
.stabn 68,0,111,.L_588A-_GETNEWTABNAME@4
.L_588B:
	push 0
	push -1
	cmp dword ptr [_Lt_5888], 1
	jne .L_5883
	push 0
	push 9
	push offset _Lt_5878
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrInit@20
	jmp .L_5886
.L_5883:
	push 0
	push -1
	push -1
	push dword ptr [_Lt_5888]
	call _fb_IntToStr@4
	push eax
	push 9
	push offset _Lt_5878
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-24]
	push eax
	call _fb_StrInit@20
.L_5886:
	lea eax, [ebp-24]
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-24]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,112,.L_588B-_GETNEWTABNAME@4
.L_588C:
.L_587A:
	lea eax, [ebp-12]
	push eax
	call _fb_StrAllocTempResult@4
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,113,.L_587A-_GETNEWTABNAME@4
	.stabs "INUM:V1",40,0,0,_Lt_5888
	.stabn 192,0,0,.L_5879-_GETNEWTABNAME@4
	.stabn 192,0,0,.L_587D-_GETNEWTABNAME@4
	.stabn 224,0,0,.L_587E-_GETNEWTABNAME@4
	.stabn 192,0,0,.L_5881-_GETNEWTABNAME@4
	.stabn 224,0,0,.L_5882-_GETNEWTABNAME@4
	.stabn 224,0,0,.L_587A-_GETNEWTABNAME@4
.L_588D:
	.stabs "",36,0,0,.L_588D-_GETNEWTABNAME@4

.section .bss
.balign 4
	.lcomm	_Lt_5888,4

.section .text
	.stabs "UPDATETABNAME:F7",36,0,114,_UPDATETABNAME@4
	.stabs "ITAB:p1",160,0,0,8
.balign 16

.globl _UPDATETABNAME@4
_UPDATETABNAME@4:
	push ebp
	mov ebp, esp
	sub esp, 52
	push ebx
	.stabn 68,0,114,_UPDATETABNAME@4-_UPDATETABNAME@4
.L_588E:
.L_58A6:
	mov eax, dword ptr [_G_ITABCOUNT]
	cmp dword ptr [ebp+8], eax
	jb .L_5891
.L_5892:
	jmp .L_588F
.L_5891:
.L_5893:
.stabn 68,0,115,.L_58A6-_UPDATETABNAME@4
.L_58A7:
.L_5894:
	mov eax, dword ptr [ebp+8]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,116,.L_58A7-_UPDATETABNAME@4
.L_58A8:
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
.stabn 68,0,117,.L_58A8-_UPDATETABNAME@4
.L_58A9:
	push -1
	mov ebx, dword ptr [ebp-4]
	lea eax, [ebx+4]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5897
.L_5898:
.stabn 68,0,118,.L_58A9-_UPDATETABNAME@4
.L_58AA:
	push -1
	push 1
	push offset _Lt_2642
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-48], eax
	push -1
	push 1
	push offset _Lt_2643
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-52], eax
.stabn 68,0,119,.L_58AA-_UPDATETABNAME@4
.L_58AB:
	mov eax, dword ptr [ebp-48]
	cmp dword ptr [ebp-52], eax
	jle .L_589A
.L_589B:
	mov eax, dword ptr [ebp-52]
	mov dword ptr [ebp-48], eax
.L_589A:
.L_589C:
.stabn 68,0,120,.L_58AB-_UPDATETABNAME@4
.L_58AC:
	push 0
	push -1
	push -1
	mov eax, dword ptr [ebp-48]
	inc eax
	push eax
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,121,.L_58AC-_UPDATETABNAME@4
.L_58AD:
.L_589D:
	jmp .L_5896
.L_5897:
.L_589E:
.stabn 68,0,122,.L_58AD-_UPDATETABNAME@4
.L_58AE:
	push 0
	push -1
	push 0
	call _GETNEWTABNAME@4
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,123,.L_58AE-_UPDATETABNAME@4
.L_58AF:
.L_589F:
.L_5896:
	push 0
	push -1
	push 4
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrConcatAssign@20
.stabn 68,0,125,.L_58AF-_UPDATETABNAME@4
.L_58B0:
	mov dword ptr [ebp-44], 1
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-32], eax
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], -1
	mov dword ptr [ebp-20], 0
.stabn 68,0,126,.L_58B0-_UPDATETABNAME@4
.L_58B1:
	lea eax, [ebp-44]
	push eax
	push dword ptr [ebp+8]
	push 4870
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,127,.L_58B1-_UPDATETABNAME@4
.L_58B2:
	mov eax, dword ptr [_G_ICURTAB]
	cmp dword ptr [ebp+8], eax
	jne .L_58A2
.L_58A3:
	call _UPDATEMAINWINDOWCAPTION@0
.L_58A2:
.L_58A4:
.stabn 68,0,128,.L_58B2-_UPDATETABNAME@4
.L_58B3:
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
.L_58A5:
.stabn 68,0,129,.L_58B3-_UPDATETABNAME@4
.L_58B4:
.L_588F:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,130,.L_588F-_UPDATETABNAME@4
	.stabn 192,0,0,.L_588E-_UPDATETABNAME@4
	.stabn 192,0,0,.L_5892-_UPDATETABNAME@4
	.stabn 224,0,0,.L_5893-_UPDATETABNAME@4
	.stabs "SFILE:13",128,0,0,-16
	.stabs "TITEM:353",128,0,0,-44
	.stabn 192,0,0,.L_5894-_UPDATETABNAME@4
	.stabs "IPOS:1",128,0,0,-48
	.stabs "IPOS2:1",128,0,0,-52
	.stabn 192,0,0,.L_5898-_UPDATETABNAME@4
	.stabn 192,0,0,.L_589B-_UPDATETABNAME@4
	.stabn 224,0,0,.L_589C-_UPDATETABNAME@4
	.stabn 224,0,0,.L_589D-_UPDATETABNAME@4
	.stabn 192,0,0,.L_589E-_UPDATETABNAME@4
	.stabn 224,0,0,.L_589F-_UPDATETABNAME@4
	.stabn 192,0,0,.L_58A3-_UPDATETABNAME@4
	.stabn 224,0,0,.L_58A4-_UPDATETABNAME@4
	.stabn 224,0,0,.L_58A5-_UPDATETABNAME@4
	.stabn 224,0,0,.L_588F-_UPDATETABNAME@4
.L_58B5:
	.stabs "",36,0,0,.L_58B5-_UPDATETABNAME@4
	.stabs "NEWTAB:F1",36,0,131,_NEWTAB@12
	.stabs "SNEWFILE:v13",160,0,0,8
	.stabs "ILINKED:p1",160,0,0,12
	.stabs "IREPLACETAB:p1",160,0,0,16
.balign 16

.globl _NEWTAB@12
_NEWTAB@12:
	push ebp
	mov ebp, esp
	sub esp, 468
	push ebx
	.stabn 68,0,131,_NEWTAB@12-_NEWTAB@12
	mov dword ptr [ebp-4], 0
.L_58B6:
.L_591E:
	mov eax, dword ptr [_G_ICURTAB]
	mov dword ptr [ebp-8], eax
	push 0
	push -1
	push dword ptr [ebp+8]
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrInit@20
.stabn 68,0,132,.L_591E-_NEWTAB@12
.L_591F:
	cmp dword ptr [ebp+16], -1
	jle .L_58B9
.L_58BA:
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-8], eax
.L_58B9:
.L_58BB:
.stabn 68,0,133,.L_591F-_NEWTAB@12
.L_5920:
	cmp dword ptr [ebp+12], -1
	jge .L_58BD
.L_58BE:
	mov dword ptr [ebp+12], -1
.L_58BF:
	jmp .L_58BC
.L_58BD:
.L_58C0:
	mov eax, dword ptr [_G_ITABCOUNT]
	cmp dword ptr [ebp+12], eax
	jl .L_58C2
.L_58C3:
	mov dword ptr [ebp+12], -1
.L_58C2:
.L_58C4:
.L_58BC:
.L_58C5:
.stabn 68,0,135,.L_5920-_NEWTAB@12
.L_5921:
	mov eax, dword ptr [_G_ICURTAB]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	mov ebx, dword ptr [eax+16]
	cmp ebx, -1
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-24], ebx
.stabn 68,0,138,.L_5921-_NEWTAB@12
.L_5923:
	push 0
	push 0
	push 184
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-28], eax
.stabn 68,0,139,.L_5923-_NEWTAB@12
.L_5925:
	push -1
	mov eax, dword ptr [_G_ICURTAB]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrLen@8
	mov dword ptr [ebp-32], eax
.stabn 68,0,140,.L_5925-_NEWTAB@12
.L_5926:
	cmp dword ptr [ebp+16], -1
	jne .L_58CC
	cmp dword ptr [ebp+12], -1
	jne .L_58C6
	mov eax, dword ptr [ebp-24]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-36], eax
	jmp .L_5918
.L_58C6:
	mov dword ptr [ebp-36], -1
.L_5918:
	cmp dword ptr [ebp-36], 0
	jne .L_58C8
	mov eax, dword ptr [ebp-32]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-40], eax
	jmp .L_5919
.L_58C8:
	mov dword ptr [ebp-40], -1
.L_5919:
	cmp dword ptr [ebp-40], 0
	jne .L_58CA
	mov eax, dword ptr [ebp-28]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_591A
.L_58CA:
	mov dword ptr [ebp-44], -1
.L_591A:
	mov eax, dword ptr [ebp-44]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_5917
.L_58CC:
	mov dword ptr [ebp-48], 0
.L_5917:
	cmp dword ptr [ebp-48], 0
	je .L_58CF
.L_58D0:
.stabn 68,0,141,.L_5926-_NEWTAB@12
.L_592B:
	push 0
	push 0
	push 4868
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
	mov dword ptr [ebp-8], eax
.stabn 68,0,143,.L_592B-_NEWTAB@12
.L_592C:
	push dword ptr [_G_ITABCOUNT]
	push 0
	push 1
	push offset __ZN9TABSTRUCTD1Ev
	push offset __ZN9TABSTRUCTC1Ev
	push 20
	push offset _G_TTABS
	call _fb_ArrayRedimPresvObj
	add esp, 28
	inc dword ptr [_G_ITABCOUNT]
.stabn 68,0,144,.L_592C-_NEWTAB@12
.L_592D:
	cmp dword ptr [ebp+12], -1
	je .L_58D2
.L_58D3:
.stabn 68,0,145,.L_592D-_NEWTAB@12
.L_592E:
	mov eax, dword ptr [ebp+12]
	inc eax
	mov dword ptr [ebp-8], eax
.stabn 68,0,146,.L_592E-_NEWTAB@12
.L_592F:
.L_58D4:
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	cmp dword ptr [ebp-8], eax
	jge .L_58D6
	mov eax, dword ptr [ebp-8]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	mov ebx, dword ptr [ebp+12]
	cmp ebx, dword ptr [eax+16]
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_591B
.L_58D6:
	mov dword ptr [ebp-88], 0
.L_591B:
	cmp dword ptr [ebp-88], 0
	je .L_58D5
.L_58D8:
.stabn 68,0,147,.L_592F-_NEWTAB@12
.L_5931:
	inc dword ptr [ebp-8]
.stabn 68,0,148,.L_5931-_NEWTAB@12
.L_5932:
.L_58D9:
	jmp .L_58D4
.L_58D5:
.stabn 68,0,149,.L_5932-_NEWTAB@12
.L_5933:
.L_58DA:
	mov dword ptr [ebp-92], 0
	mov ebx, dword ptr [_G_ITABCOUNT]
	add ebx, -2
	mov dword ptr [ebp-96], ebx
	jmp .L_58DC
.L_58DF:
.L_58E0:
.stabn 68,0,150,.L_5933-_NEWTAB@12
.L_5934:
	mov ebx, dword ptr [ebp-92]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	mov eax, dword ptr [ebp+12]
	cmp dword ptr [ebx+16], eax
	jle .L_58E2
.L_58E3:
	mov eax, dword ptr [ebp-92]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	inc dword ptr [eax+16]
.L_58E2:
.L_58E4:
.stabn 68,0,151,.L_5934-_NEWTAB@12
.L_5935:
.L_58E5:
.L_58DD:
	inc dword ptr [ebp-92]
.L_58DC:
	mov eax, dword ptr [ebp-96]
	cmp dword ptr [ebp-92], eax
	jle .L_58DF
.L_58DE:
.L_58E6:
.stabn 68,0,152,.L_5935-_NEWTAB@12
.L_5936:
.L_58E7:
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	mov dword ptr [ebp-92], eax
	mov eax, dword ptr [ebp+12]
	inc eax
	mov dword ptr [ebp-96], eax
	jmp .L_58E9
.L_58EC:
.L_58ED:
.stabn 68,0,153,.L_5936-_NEWTAB@12
.L_5937:
	mov eax, dword ptr [ebp-92]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax-20]
	push ebx
	mov ebx, dword ptr [ebp-92]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	lea eax, [ebx]
	push eax
	call __ZN9TABSTRUCTaSERKS_
	add esp, 8
.stabn 68,0,154,.L_5937-_NEWTAB@12
.L_5938:
.L_58EE:
.L_58EA:
	dec dword ptr [ebp-92]
.L_58E9:
	mov eax, dword ptr [ebp-96]
	cmp dword ptr [ebp-92], eax
	jge .L_58EC
.L_58EB:
.L_58EF:
.stabn 68,0,155,.L_5938-_NEWTAB@12
.L_5939:
.L_58F0:
.L_58D2:
.L_58D1:
	mov dword ptr [ebp-52], 3158404
.stabn 68,0,157,.L_5939-_NEWTAB@12
.L_593A:
	push dword ptr [ebp-52]
	push dword ptr [_G_TMAINCTX+264]
	call _CLONEHWND@8
	mov dword ptr [ebp-56], eax
.stabn 68,0,158,.L_593A-_NEWTAB@12
.L_593B:
	push offset _Lt_58F1
	push offset _Lt_58F1
	push dword ptr [ebp-56]
	call _SetWindowTheme@12
.stabn 68,0,159,.L_593B-_NEWTAB@12
.L_593C:
	mov eax, dword ptr [ebp-8]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	mov ebx, dword ptr [ebp-56]
	mov dword ptr [eax], ebx
.stabn 68,0,160,.L_593C-_NEWTAB@12
.L_593D:
	push 16777216
	push 0
	push 1077
	push dword ptr [ebp-56]
	call _SendMessageA@16
.stabn 68,0,161,.L_593D-_NEWTAB@12
.L_593E:
	push 589828
	push 0
	push 1093
	push dword ptr [ebp-56]
	call _SendMessageA@16
.stabn 68,0,162,.L_593E-_NEWTAB@12
.L_593F:
	push 0
	push 0
	push 185
	push dword ptr [ebp-56]
	call _SendMessageA@16
.stabn 68,0,163,.L_593F-_NEWTAB@12
.L_5940:
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	mov ebx, offset _Lt_58F3
	mov dword ptr [ebp-72], ebx
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], -1
	mov dword ptr [ebp-60], 0
.stabn 68,0,164,.L_5940-_NEWTAB@12
.L_5941:
	lea ebx, [ebp-84]
	push ebx
	push dword ptr [ebp-8]
	push 4871
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,165,.L_5941-_NEWTAB@12
.L_5942:
.L_58F4:
.L_58CF:
.L_58F5:
.stabn 68,0,166,.L_5942-_NEWTAB@12
.L_5943:
.L_58F6:
.L_58CE:
.L_58F7:
	mov ebx, dword ptr [ebp-8]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	lea eax, [ebx]
	mov dword ptr [ebp-52], eax
.stabn 68,0,170,.L_5943-_NEWTAB@12
.L_5944:
	mov eax, dword ptr [ebp-52]
	mov ebx, dword ptr [ebp+12]
	mov dword ptr [eax+16], ebx
.stabn 68,0,171,.L_5944-_NEWTAB@12
.L_5945:
	cmp dword ptr [ebp+12], -1
	je .L_58FA
.L_58FB:
.stabn 68,0,172,.L_5945-_NEWTAB@12
.L_5946:
	mov dword ptr [ebp-464], 1
	mov dword ptr [ebp-460], 0
	mov dword ptr [ebp-456], 0
	lea ebx, [ebp-436]
	mov dword ptr [ebp-452], ebx
	mov dword ptr [ebp-448], 384
	mov dword ptr [ebp-444], -1
	mov dword ptr [ebp-440], 0
.stabn 68,0,174,.L_5946-_NEWTAB@12
.L_5947:
	lea ebx, [ebp-464]
	push ebx
	push dword ptr [ebp+12]
	push 4869
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,175,.L_5947-_NEWTAB@12
.L_5948:
	push 0
	push -1
	push 384
	lea ebx, [ebp-436]
	push ebx
	call _fb_StrLen@8
	add eax, -4
	push eax
	lea eax, [ebp-436]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_LEFT@8
	push eax
	push 384
	lea eax, [ebp-436]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,176,.L_5948-_NEWTAB@12
.L_5949:
	push -1
	push 1
	push offset _Lt_2563
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-436]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-468], eax
	cmp dword ptr [ebp-468], 0
	jne .L_58FE
.L_58FF:
	push 384
	lea eax, [ebp-436]
	push eax
	call _fb_StrLen@8
	inc eax
	mov dword ptr [ebp-468], eax
.L_58FE:
.L_5900:
.stabn 68,0,177,.L_5949-_NEWTAB@12
.L_594A:
	push 0
	push -1
	mov eax, dword ptr [ebp-468]
	dec eax
	push eax
	lea eax, [ebp-436]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_LEFT@8
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	push 0
	push 3
	push offset _Lt_5901
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrConcatAssign@20
	push 0
	push -1
	push -1
	push dword ptr [ebp-468]
	lea eax, [ebp-436]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrConcatAssign@20
.stabn 68,0,178,.L_594A-_NEWTAB@12
.L_594B:
.L_5902:
	jmp .L_58F9
.L_58FA:
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5903
.L_5904:
.stabn 68,0,179,.L_594B-_NEWTAB@12
.L_594C:
	push -1
	push 1
	push offset _Lt_2642
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-56], eax
	push -1
	push 1
	push offset _Lt_2643
	call _fb_StrAllocTempDescZEx@8
	push eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrInstrRev@12
	mov dword ptr [ebp-60], eax
.stabn 68,0,180,.L_594C-_NEWTAB@12
.L_594D:
	mov eax, dword ptr [ebp-56]
	cmp dword ptr [ebp-60], eax
	jle .L_5906
.L_5907:
	mov eax, dword ptr [ebp-60]
	mov dword ptr [ebp-56], eax
.L_5906:
.L_5908:
.stabn 68,0,181,.L_594D-_NEWTAB@12
.L_594E:
	push 0
	push -1
	lea eax, [ebp-20]
	push eax
	push -1
	mov eax, dword ptr [ebp-52]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,182,.L_594E-_NEWTAB@12
.L_594F:
	push 0
	push -1
	push -1
	mov ebx, dword ptr [ebp-56]
	inc ebx
	push ebx
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrMid@12
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,183,.L_594F-_NEWTAB@12
.L_5950:
.L_5909:
	jmp .L_58F9
.L_5903:
.L_590A:
.stabn 68,0,184,.L_5950-_NEWTAB@12
.L_5951:
	mov byte ptr [ebp-116], 0
.stabn 68,0,185,.L_5951-_NEWTAB@12
.L_5952:
	mov dword ptr [ebp-144], 1
	lea eax, [ebp-140]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 6
	rep stosd
	pop edi
	pop eax
.stabn 68,0,186,.L_5952-_NEWTAB@12
.L_5953:
	lea eax, [ebp-116]
	mov dword ptr [ebp-132], eax
	mov dword ptr [ebp-128], 63
.stabn 68,0,187,.L_5953-_NEWTAB@12
.L_5954:
	lea eax, [ebp-144]
	push eax
	push dword ptr [ebp-8]
	push 4869
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,188,.L_5954-_NEWTAB@12
.L_5955:
	push 0
	push -1
	push 9
	push offset _Lt_5878
	push -1
	push 8
	lea eax, [ebp-116]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_LEFT@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_590C
	push -1
	push 4
	call _fb_SPACE@4
	push eax
	push -1
	push 4
	lea eax, [ebp-116]
	push eax
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_RIGHT@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-148], eax
	jmp .L_591C
.L_590C:
	mov dword ptr [ebp-148], 0
.L_591C:
	cmp dword ptr [ebp-148], 0
	je .L_590E
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-160]
	push eax
	call _fb_StrInit@20
	jmp .L_591D
.L_590E:
	push 0
	push -1
	push 0
	call _GETNEWTABNAME@4
	push eax
	push -1
	lea eax, [ebp-160]
	push eax
	call _fb_StrInit@20
.L_591D:
	lea eax, [ebp-160]
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-160]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,190,.L_5955-_NEWTAB@12
.L_5957:
	push 0
	push 1
	push offset _Lt_0000
	push -1
	mov eax, dword ptr [ebp-52]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,192,.L_5957-_NEWTAB@12
.L_5958:
.L_5910:
.L_58F9:
	push -1
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrLen@8
	test eax, eax
	je .L_5912
.L_5913:
.stabn 68,0,194,.L_5958-_NEWTAB@12
.L_5959:
	push 0
	push -1
	push 4
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrConcatAssign@20
.stabn 68,0,195,.L_5959-_NEWTAB@12
.L_595A:
	mov dword ptr [ebp-80], 1
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-68], eax
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], -1
	mov dword ptr [ebp-56], 0
.stabn 68,0,196,.L_595A-_NEWTAB@12
.L_595B:
	lea eax, [ebp-80]
	push eax
	push dword ptr [ebp-8]
	push 4870
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,197,.L_595B-_NEWTAB@12
.L_595C:
.L_5915:
.L_5912:
.L_5911:
.L_5916:
	push -1
	push 0
	push dword ptr [_G_TMAINCTX+120]
	call _InvalidateRect@12
.stabn 68,0,200,.L_595C-_NEWTAB@12
.L_595D:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
	jmp .L_58B7
.stabn 68,0,201,.L_595D-_NEWTAB@12
.L_595E:
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
.L_58B7:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,202,.L_58B7-_NEWTAB@12
	.stabs "INEWTAB:1",128,0,0,-8
	.stabs "SFILE:13",128,0,0,-20
	.stabs "BISLINKED:1",128,0,0,-24
	.stabs "BHASTEXT:1",128,0,0,-28
	.stabs "BHAVENAME:1",128,0,0,-32
	.stabn 192,0,0,.L_58B6-_NEWTAB@12
	.stabn 192,0,0,.L_58BA-_NEWTAB@12
	.stabn 224,0,0,.L_58BB-_NEWTAB@12
	.stabn 192,0,0,.L_58BE-_NEWTAB@12
	.stabn 224,0,0,.L_58BF-_NEWTAB@12
	.stabn 192,0,0,.L_58C0-_NEWTAB@12
	.stabn 192,0,0,.L_58C3-_NEWTAB@12
	.stabn 224,0,0,.L_58C4-_NEWTAB@12
	.stabn 224,0,0,.L_58C5-_NEWTAB@12
	.stabs "CSTYLE:1",128,0,0,-52
	.stabs "HWND:366=*21",128,0,0,-56
	.stabs "TITEM:353",128,0,0,-84
	.stabn 192,0,0,.L_58D0-_NEWTAB@12
	.stabn 192,0,0,.L_58D3-_NEWTAB@12
	.stabn 192,0,0,.L_58D8-_NEWTAB@12
	.stabn 224,0,0,.L_58D9-_NEWTAB@12
	.stabs "N:1",128,0,0,-92
	.stabn 192,0,0,.L_58DA-_NEWTAB@12
	.stabn 192,0,0,.L_58E0-_NEWTAB@12
	.stabn 192,0,0,.L_58E3-_NEWTAB@12
	.stabn 224,0,0,.L_58E4-_NEWTAB@12
	.stabn 224,0,0,.L_58E5-_NEWTAB@12
	.stabn 224,0,0,.L_58E6-_NEWTAB@12
	.stabs "N:1",128,0,0,-92
	.stabn 192,0,0,.L_58E7-_NEWTAB@12
	.stabn 192,0,0,.L_58ED-_NEWTAB@12
	.stabn 224,0,0,.L_58EE-_NEWTAB@12
	.stabn 224,0,0,.L_58EF-_NEWTAB@12
	.stabn 224,0,0,.L_58F0-_NEWTAB@12
	.stabn 224,0,0,.L_58F4-_NEWTAB@12
	.stabn 192,0,0,.L_58F5-_NEWTAB@12
	.stabn 224,0,0,.L_58F6-_NEWTAB@12
	.stabn 192,0,0,.L_58F7-_NEWTAB@12
	.stabs "ZNAME:4",128,0,0,-436
	.stabs "TITEM:353",128,0,0,-464
	.stabs "IPOSI:1",128,0,0,-468
	.stabn 192,0,0,.L_58FB-_NEWTAB@12
	.stabn 192,0,0,.L_58FF-_NEWTAB@12
	.stabn 224,0,0,.L_5900-_NEWTAB@12
	.stabn 224,0,0,.L_5902-_NEWTAB@12
	.stabs "IPOS:1",128,0,0,-56
	.stabs "IPOS2:1",128,0,0,-60
	.stabn 192,0,0,.L_5904-_NEWTAB@12
	.stabn 192,0,0,.L_5907-_NEWTAB@12
	.stabn 224,0,0,.L_5908-_NEWTAB@12
	.stabn 224,0,0,.L_5909-_NEWTAB@12
	.stabs "ZNAME:4",128,0,0,-116
	.stabs "TITEM:353",128,0,0,-144
	.stabn 192,0,0,.L_590A-_NEWTAB@12
	.stabn 224,0,0,.L_5910-_NEWTAB@12
	.stabs "TITEM:353",128,0,0,-80
	.stabn 192,0,0,.L_5913-_NEWTAB@12
	.stabn 224,0,0,.L_5915-_NEWTAB@12
	.stabn 224,0,0,.L_5916-_NEWTAB@12
	.stabn 224,0,0,.L_58B7-_NEWTAB@12
.L_595F:
	.stabs "",36,0,0,.L_595F-_NEWTAB@12
	.stabs "LOADSCRIPT:F7",36,0,203,_LOADSCRIPT@4
	.stabs "SFILE:v13",160,0,0,8
.balign 16

.globl _LOADSCRIPT@4
_LOADSCRIPT@4:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,203,_LOADSCRIPT@4-_LOADSCRIPT@4
.L_5960:
.L_5972:
	push 0
	push -1
	push 0
	push dword ptr [ebp+8]
	call _fb_StrLcase2@8
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,204,.L_5972-_LOADSCRIPT@4
.L_5973:
.L_5962:
	mov dword ptr [ebp-16], 0
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	mov dword ptr [ebp-20], eax
	jmp .L_5964
.L_5967:
.L_5968:
.stabn 68,0,205,.L_5973-_LOADSCRIPT@4
.L_5974:
.L_5969:
	mov eax, dword ptr [ebp-16]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax]
	mov dword ptr [ebp-24], ebx
.stabn 68,0,206,.L_5974-_LOADSCRIPT@4
.L_5975:
	push -1
	lea ebx, [ebp-12]
	push ebx
	push -1
	push 0
	mov ebx, dword ptr [ebp-24]
	lea eax, [ebx+4]
	push eax
	call _fb_StrLcase2@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_596C
.L_596D:
.stabn 68,0,208,.L_5975-_LOADSCRIPT@4
.L_5976:
	push 0
	push dword ptr [ebp-16]
	call _CHANGETOTAB@8
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
	jmp .L_5961
.stabn 68,0,209,.L_5976-_LOADSCRIPT@4
.L_5977:
.L_596E:
.L_596C:
.L_596B:
.L_596F:
.L_5970:
.L_5965:
	inc dword ptr [ebp-16]
.L_5964:
	mov eax, dword ptr [ebp-20]
	cmp dword ptr [ebp-16], eax
	jle .L_5967
.L_5966:
.L_5971:
.stabn 68,0,212,.L_5977-_LOADSCRIPT@4
.L_5978:
	push 0
	push -1
	push -1
	push dword ptr [ebp+8]
	call _NEWTAB@12
	push eax
	call _CHANGETOTAB@8
.stabn 68,0,213,.L_5978-_LOADSCRIPT@4
.L_5979:
	push dword ptr [ebp+8]
	call _LOADFILEINTOEDITOR@4
.stabn 68,0,214,.L_5979-_LOADSCRIPT@4
.L_597A:
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.L_5961:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,215,.L_5961-_LOADSCRIPT@4
	.stabs "SFILEL:13",128,0,0,-12
	.stabn 192,0,0,.L_5960-_LOADSCRIPT@4
	.stabs "N:1",128,0,0,-16
	.stabn 192,0,0,.L_5962-_LOADSCRIPT@4
	.stabn 192,0,0,.L_5968-_LOADSCRIPT@4
	.stabn 192,0,0,.L_5969-_LOADSCRIPT@4
	.stabn 192,0,0,.L_596D-_LOADSCRIPT@4
	.stabn 224,0,0,.L_596E-_LOADSCRIPT@4
	.stabn 224,0,0,.L_596F-_LOADSCRIPT@4
	.stabn 224,0,0,.L_5970-_LOADSCRIPT@4
	.stabn 224,0,0,.L_5971-_LOADSCRIPT@4
	.stabn 224,0,0,.L_5961-_LOADSCRIPT@4
.L_597B:
	.stabs "",36,0,0,.L_597B-_LOADSCRIPT@4
	.stabs "FILE_NEW:F7",36,0,217,_FILE_NEW@0
.balign 16

.globl _FILE_NEW@0
_FILE_NEW@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,217,_FILE_NEW@0-_FILE_NEW@0
.L_597C:
.L_597F:
	push 0
	push -1
	push -1
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-12]
	push eax
	call _NEWTAB@12
	push eax
	call _CHANGETOTAB@8
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,218,.L_597F-_FILE_NEW@0
.L_5980:
.L_597D:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,219,.L_597D-_FILE_NEW@0
	.stabn 192,0,0,.L_597C-_FILE_NEW@0
	.stabn 224,0,0,.L_597D-_FILE_NEW@0
.L_5981:
	.stabs "",36,0,0,.L_5981-_FILE_NEW@0
	.stabs "FILE_OPEN:F7",36,0,220,_FILE_OPEN@0
.balign 16

.globl _FILE_OPEN@0
_FILE_OPEN@0:
	push ebp
	mov ebp, esp
	sub esp, 156
	push ebx
	.stabn 68,0,220,_FILE_OPEN@0-_FILE_OPEN@0
.L_5982:
.L_59A8:
	lea eax, [ebp-88]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 22
	rep stosd
	pop edi
	pop eax
.stabn 68,0,222,.L_59A8-_FILE_OPEN@0
.L_59A9:
	push 65536
	call _malloc
	add esp, 4
	mov dword ptr [ebp-92], eax
	mov eax, dword ptr [ebp-92]
	mov byte ptr [eax], 0
.stabn 68,0,223,.L_59A9-_FILE_OPEN@0
.L_59AA:
.L_5984:
.L_5987:
.L_5988:
	mov dword ptr [ebp-88], 88
.stabn 68,0,226,.L_59AA-_FILE_OPEN@0
.L_59AB:
	mov eax, dword ptr [_G_TMAINCTX+24]
	mov dword ptr [ebp-84], eax
.stabn 68,0,227,.L_59AB-_FILE_OPEN@0
.L_59AC:
	mov eax, offset _Lt_598D
	mov dword ptr [ebp-76], eax
.stabn 68,0,228,.L_59AC-_FILE_OPEN@0
.L_59AD:
	mov dword ptr [ebp-64], 0
.stabn 68,0,232,.L_59AD-_FILE_OPEN@0
.L_59AE:
	mov word ptr [ebp-30], 0
.stabn 68,0,233,.L_59AE-_FILE_OPEN@0
.L_59AF:
	mov eax, dword ptr [ebp-92]
	mov dword ptr [ebp-60], eax
.stabn 68,0,234,.L_59AF-_FILE_OPEN@0
.L_59B0:
	mov dword ptr [ebp-56], 65536
.stabn 68,0,235,.L_59B0-_FILE_OPEN@0
.L_59B1:
	mov dword ptr [ebp-44], 0
.stabn 68,0,236,.L_59B1-_FILE_OPEN@0
.L_59B2:
	mov dword ptr [ebp-40], 0
.stabn 68,0,237,.L_59B2-_FILE_OPEN@0
.L_59B3:
	mov eax, offset _Lt_598E
	mov dword ptr [ebp-28], eax
.stabn 68,0,238,.L_59B3-_FILE_OPEN@0
.L_59B4:
	mov dword ptr [ebp-36], 530952
.stabn 68,0,239,.L_59B4-_FILE_OPEN@0
.L_59B5:
	lea eax, [ebp-88]
	push eax
	call _GetOpenFileNameA@4
	test eax, eax
	jne .L_5990
.L_5991:
	jmp .L_5985
.L_5990:
.L_5992:
.stabn 68,0,240,.L_59B5-_FILE_OPEN@0
.L_59B6:
	movzx eax, word ptr [ebp-30]
	test eax, eax
	jne .L_5994
.L_5995:
.stabn 68,0,241,.L_59B6-_FILE_OPEN@0
.L_59B7:
	push 0
	push -1
	push 2
	push offset _Lt_2642
	push 0
	push dword ptr [ebp-60]
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	lea eax, [ebp-116]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrInit@20
	movzx eax, word ptr [ebp-32]
	mov ebx, dword ptr [ebp-60]
	add ebx, eax
	mov dword ptr [ebp-120], ebx
.stabn 68,0,242,.L_59B7-_FILE_OPEN@0
.L_59B8:
.L_5997:
.L_599A:
	push 0
	push 0
	push dword ptr [ebp-120]
	push -1
	lea ebx, [ebp-132]
	push ebx
	call _fb_StrInit@20
	push -1
	lea ebx, [ebp-132]
	push ebx
	call _fb_StrLen@8
	mov ebx, dword ptr [ebp-120]
	add ebx, eax
	inc ebx
	mov dword ptr [ebp-120], ebx
.stabn 68,0,244,.L_59B8-_FILE_OPEN@0
.L_59B9:
	push -1
	lea ebx, [ebp-132]
	push ebx
	call _fb_StrLen@8
	test eax, eax
	jne .L_599C
.L_599D:
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
	jmp .L_5998
.L_599C:
.L_599E:
.stabn 68,0,245,.L_59B9-_FILE_OPEN@0
.L_59BA:
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	push 0
	push -1
	push -1
	lea eax, [ebp-132]
	push eax
	push -1
	lea eax, [ebp-104]
	push eax
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	lea eax, [ebp-144]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-156]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-156]
	push eax
	call _LOADSCRIPT@4
	lea eax, [ebp-156]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,246,.L_59BA-_FILE_OPEN@0
.L_59BB:
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
.L_59A1:
.L_5999:
	jmp .L_5997
.L_5998:
.stabn 68,0,247,.L_59BB-_FILE_OPEN@0
.L_59BC:
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
.L_59A2:
	jmp .L_5993
.L_5994:
.L_59A3:
.stabn 68,0,248,.L_59BC-_FILE_OPEN@0
.L_59BD:
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	push 0
	push 0
	push dword ptr [ebp-60]
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-104]
	push eax
	call _LOADSCRIPT@4
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,249,.L_59BD-_FILE_OPEN@0
.L_59BE:
.L_59A5:
.L_5993:
	jmp .L_5985
.stabn 68,0,251,.L_59BE-_FILE_OPEN@0
.L_59BF:
.L_59A6:
.L_59A7:
.L_5986:
	jmp .L_5984
.L_5985:
.stabn 68,0,253,.L_59BF-_FILE_OPEN@0
.L_59C0:
	push dword ptr [ebp-92]
	call _free
	add esp, 4
.stabn 68,0,254,.L_59C0-_FILE_OPEN@0
.L_59C1:
.L_5983:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,255,.L_5983-_FILE_OPEN@0
	.stabs "TAGOFNA:Tt367=s88LSTRUCTSIZE:8,0,32;HWNDOWNER:368=*21,32,32;HINSTANCE:369=*297,64,32;LPSTRFILTER:370=*4,96,32;LPSTRCUSTOMFILTER:371=*4,128,32;NMAXCUSTFILTER:8,160,32;NFILTERINDEX:8,192,32;LPSTRFILE:372=*4,224,32;NMAXFILE:8,256,32;LPSTRFILETITLE:373=*4,288,32;NMAXFILETITLE:8,320,32;LPSTRINITIALDIR:374=*4,352,32;LPSTRTITLE:375=*4,384,32;FLAGS:8,416,32;NFILEOFFSET:6,448,16;NFILEEXTENSION:6,464,16;LPSTRDEFEXT:376=*4,480,32;LCUSTDATA:1,512,32;LPFNHOOK:377=*378=f8,544,32;LPTEMPLATENAME:379=*4,576,32;PVRESERVED:380=*7,608,32;DWRESERVED:8,640,32;FLAGSEX:8,672,32;;",128,0,0,0
	.stabs "TOPEN:367",128,0,0,-88
	.stabs "PZFILE:381=*4",128,0,0,-92
	.stabn 192,0,0,.L_5982-_FILE_OPEN@0
	.stabn 192,0,0,.L_5987-_FILE_OPEN@0
	.stabn 192,0,0,.L_5988-_FILE_OPEN@0
	.stabn 192,0,0,.L_5991-_FILE_OPEN@0
	.stabn 224,0,0,.L_5992-_FILE_OPEN@0
	.stabs "SPATH:13",128,0,0,-104
	.stabs "PZFILE:382=*4",128,0,0,-120
	.stabn 192,0,0,.L_5995-_FILE_OPEN@0
	.stabs "SFILE:13",128,0,0,-132
	.stabn 192,0,0,.L_599A-_FILE_OPEN@0
	.stabn 192,0,0,.L_599D-_FILE_OPEN@0
	.stabn 224,0,0,.L_599E-_FILE_OPEN@0
	.stabn 224,0,0,.L_59A1-_FILE_OPEN@0
	.stabn 224,0,0,.L_59A2-_FILE_OPEN@0
	.stabn 192,0,0,.L_59A3-_FILE_OPEN@0
	.stabn 224,0,0,.L_59A5-_FILE_OPEN@0
	.stabn 224,0,0,.L_59A6-_FILE_OPEN@0
	.stabn 224,0,0,.L_59A7-_FILE_OPEN@0
	.stabn 224,0,0,.L_5983-_FILE_OPEN@0
.L_59C2:
	.stabs "",36,0,0,.L_59C2-_FILE_OPEN@0
	.stabs "FILE_SAVE:F7",36,0,256,_FILE_SAVE@0
.balign 16

.globl _FILE_SAVE@0
_FILE_SAVE@0:
	push ebp
	mov ebp, esp
	sub esp, 60
	push ebx
	.stabn 68,0,256,_FILE_SAVE@0-_FILE_SAVE@0
.L_59C3:
.L_59D7:
	push dword ptr [_G_CURRENTFILEPATH]
	call _GetFileAttributesA@4
	cmp eax, 4294967295
	jne .L_59C6
.L_59C7:
.stabn 68,0,257,.L_59D7-_FILE_SAVE@0
.L_59D8:
	call _FILE_SAVEAS@0
	jmp .L_59C4
.stabn 68,0,258,.L_59D8-_FILE_SAVE@0
.L_59D9:
.L_59C8:
.L_59C6:
.L_59C5:
	push dword ptr [_G_TMAINCTX+264]
	call _GetWindowTextLengthA@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,260,.L_59D9-_FILE_SAVE@0
.L_59DA:
	push 0
	push -1
	push dword ptr [ebp-4]
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrInit@20
.stabn 68,0,261,.L_59DA-_FILE_SAVE@0
.L_59DB:
	mov eax, dword ptr [ebp-4]
	inc eax
	push eax
	push dword ptr [ebp-16]
	push dword ptr [_G_TMAINCTX+264]
	call _GetWindowTextA@12
	mov ebx, dword ptr [ebp-4]
	cmp eax, ebx
	je .L_59CA
.L_59CB:
.stabn 68,0,262,.L_59DB-_FILE_SAVE@0
.L_59DC:
	push offset _Lt_59CC
	call _puts
	add esp, 4
.stabn 68,0,263,.L_59DC-_FILE_SAVE@0
.L_59DD:
	lea ebx, [ebp-16]
	push ebx
	call _fb_StrDelete@4
	jmp .L_59C4
.stabn 68,0,264,.L_59DD-_FILE_SAVE@0
.L_59DE:
.L_59CD:
.L_59CA:
.L_59C9:
	call _fb_FileFree@0
	mov dword ptr [ebp-20], eax
.stabn 68,0,268,.L_59DE-_FILE_SAVE@0
.L_59DF:
	push 0
	push dword ptr [ebp-20]
	push 0
	push 0
	push 3
	push offset _G_CURRENTFILEPATH
	call _fb_FileOpen@24
	test eax, eax
	je .L_59CF
.L_59D0:
.stabn 68,0,269,.L_59DF-_FILE_SAVE@0
.L_59E0:
	push 16
	push 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	push offset _G_CURRENTFILEPATH
	push 19
	push offset _Lt_59D1
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-36]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	lea eax, [ebp-48]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-60]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,270,.L_59E0-_FILE_SAVE@0
.L_59E1:
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
	jmp .L_59C4
.stabn 68,0,271,.L_59E1-_FILE_SAVE@0
.L_59E2:
.L_59D5:
.L_59CF:
.L_59CE:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [ebp-24], eax
	push 0
	lea eax, [ebp-16]
	push eax
	push dword ptr [ebp-24]
	call _fb_PrintString@12
.stabn 68,0,273,.L_59E2-_FILE_SAVE@0
.L_59E3:
	push dword ptr [ebp-20]
	call _fb_FileClose@4
.stabn 68,0,274,.L_59E3-_FILE_SAVE@0
.L_59E4:
	push 0
	push -1
	push offset _G_CURRENTFILEPATH
	push -1
	mov eax, dword ptr [_G_ICURTAB]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax+4]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,275,.L_59E4-_FILE_SAVE@0
.L_59E5:
	push dword ptr [_G_ICURTAB]
	call _UPDATETABNAME@4
.stabn 68,0,276,.L_59E5-_FILE_SAVE@0
.L_59E6:
	lea ebx, [ebp-16]
	push ebx
	call _fb_StrDelete@4
.L_59C4:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,277,.L_59C4-_FILE_SAVE@0
	.stabs "IMAXLEN:1",128,0,0,-4
	.stabs "SSCRIPT:13",128,0,0,-16
	.stabs "F:1",128,0,0,-20
	.stabn 192,0,0,.L_59C3-_FILE_SAVE@0
	.stabn 192,0,0,.L_59C7-_FILE_SAVE@0
	.stabn 224,0,0,.L_59C8-_FILE_SAVE@0
	.stabn 192,0,0,.L_59CB-_FILE_SAVE@0
	.stabn 224,0,0,.L_59CD-_FILE_SAVE@0
	.stabn 192,0,0,.L_59D0-_FILE_SAVE@0
	.stabn 224,0,0,.L_59D5-_FILE_SAVE@0
	.stabn 224,0,0,.L_59C4-_FILE_SAVE@0
.L_59E7:
	.stabs "",36,0,0,.L_59E7-_FILE_SAVE@0
	.stabs "FILE_SAVEAS:F7",36,0,278,_FILE_SAVEAS@0
.balign 16

.globl _FILE_SAVEAS@0
_FILE_SAVEAS@0:
	push ebp
	mov ebp, esp
	sub esp, 32920
	.stabn 68,0,278,_FILE_SAVEAS@0-_FILE_SAVEAS@0
.L_59E8:
.L_59FA:
	lea eax, [ebp-88]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 22
	rep stosd
	pop edi
	pop eax
.stabn 68,0,279,.L_59FA-_FILE_SAVEAS@0
.L_59FB:
	mov byte ptr [ebp-32856], 0
.stabn 68,0,280,.L_59FB-_FILE_SAVEAS@0
.L_59FC:
.L_59EA:
	mov dword ptr [ebp-88], 88
.stabn 68,0,282,.L_59FC-_FILE_SAVEAS@0
.L_59FD:
	mov eax, dword ptr [_G_TMAINCTX+24]
	mov dword ptr [ebp-84], eax
.stabn 68,0,283,.L_59FD-_FILE_SAVEAS@0
.L_59FE:
	mov eax, offset _Lt_59EB
	mov dword ptr [ebp-76], eax
.stabn 68,0,284,.L_59FE-_FILE_SAVEAS@0
.L_59FF:
	mov dword ptr [ebp-64], 0
.stabn 68,0,285,.L_59FF-_FILE_SAVEAS@0
.L_5A00:
	lea eax, [ebp-32856]
	mov dword ptr [ebp-60], eax
.stabn 68,0,286,.L_5A00-_FILE_SAVEAS@0
.L_5A01:
	mov dword ptr [ebp-56], 32767
.stabn 68,0,287,.L_5A01-_FILE_SAVEAS@0
.L_5A02:
	mov dword ptr [ebp-44], 0
.stabn 68,0,288,.L_5A02-_FILE_SAVEAS@0
.L_5A03:
	mov dword ptr [ebp-40], 0
.stabn 68,0,289,.L_5A03-_FILE_SAVEAS@0
.L_5A04:
	mov dword ptr [ebp-36], 2048
.stabn 68,0,290,.L_5A04-_FILE_SAVEAS@0
.L_5A05:
	mov eax, offset _Lt_598E
	mov dword ptr [ebp-28], eax
.stabn 68,0,291,.L_5A05-_FILE_SAVEAS@0
.L_5A06:
	lea eax, [ebp-88]
	push eax
	call _GetSaveFileNameA@4
	test eax, eax
	jne .L_59ED
.L_59EE:
	jmp .L_59E9
.L_59ED:
.L_59EF:
.stabn 68,0,292,.L_5A06-_FILE_SAVEAS@0
.L_5A07:
	push 1
	push 2
	push offset _Lt_26E0
	push -1
	push 0
	push dword ptr [ebp-60]
	push 2
	push offset _Lt_26CA
	mov dword ptr [ebp-32868], 0
	mov dword ptr [ebp-32864], 0
	mov dword ptr [ebp-32860], 0
	lea eax, [ebp-32868]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-32880], 0
	mov dword ptr [ebp-32876], 0
	mov dword ptr [ebp-32872], 0
	lea eax, [ebp-32880]
	push eax
	call _fb_StrConcat@20
	push eax
	push 0
	call _fb_PrintString@12
.stabn 68,0,293,.L_5A07-_FILE_SAVEAS@0
.L_5A08:
	call _fb_FileFree@0
	mov dword ptr [ebp-32884], eax
.stabn 68,0,294,.L_5A08-_FILE_SAVEAS@0
.L_5A09:
	push 0
	push dword ptr [ebp-32884]
	push 0
	push 0
	push 3
	push dword ptr [ebp-60]
	call _fb_StrAllocTempDescZ@4
	push eax
	call _fb_FileOpen@24
	test eax, eax
	je .L_59F3
.L_59F4:
.stabn 68,0,295,.L_5A09-_FILE_SAVEAS@0
.L_5A0A:
	push 16
	push 0
	mov dword ptr [ebp-32920], 0
	mov dword ptr [ebp-32916], 0
	mov dword ptr [ebp-32912], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push 0
	push dword ptr [ebp-60]
	push 19
	push offset _Lt_59D1
	mov dword ptr [ebp-32896], 0
	mov dword ptr [ebp-32892], 0
	mov dword ptr [ebp-32888], 0
	lea eax, [ebp-32896]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-32908], 0
	mov dword ptr [ebp-32904], 0
	mov dword ptr [ebp-32900], 0
	lea eax, [ebp-32908]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-32920]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-32920]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-32920]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,296,.L_5A0A-_FILE_SAVEAS@0
.L_5A0B:
	jmp .L_59E9
.stabn 68,0,297,.L_5A0B-_FILE_SAVEAS@0
.L_5A0C:
.L_59F8:
.L_59F3:
.L_59F2:
	push dword ptr [ebp-32884]
	call _fb_FileClose@4
.stabn 68,0,299,.L_5A0C-_FILE_SAVEAS@0
.L_5A0D:
	push 0
	push 0
	push dword ptr [ebp-60]
	push -1
	push offset _G_CURRENTFILEPATH
	call _fb_StrAssign@20
.stabn 68,0,300,.L_5A0D-_FILE_SAVEAS@0
.L_5A0E:
	call _FILE_SAVE@0
.stabn 68,0,301,.L_5A0E-_FILE_SAVEAS@0
.L_5A0F:
.L_59F9:
.L_59E9:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,303,.L_59E9-_FILE_SAVEAS@0
	.stabs "TOPEN:367",128,0,0,-88
	.stabs "ZFILE:4",128,0,0,-32856
	.stabn 192,0,0,.L_59E8-_FILE_SAVEAS@0
	.stabs "F:1",128,0,0,-32884
	.stabn 192,0,0,.L_59EA-_FILE_SAVEAS@0
	.stabn 192,0,0,.L_59EE-_FILE_SAVEAS@0
	.stabn 224,0,0,.L_59EF-_FILE_SAVEAS@0
	.stabn 192,0,0,.L_59F4-_FILE_SAVEAS@0
	.stabn 224,0,0,.L_59F8-_FILE_SAVEAS@0
	.stabn 224,0,0,.L_59F9-_FILE_SAVEAS@0
	.stabn 224,0,0,.L_59E9-_FILE_SAVEAS@0
.L_5A10:
	.stabs "",36,0,0,.L_5A10-_FILE_SAVEAS@0
	.stabs "FILE_EXIT:F7",36,0,304,_FILE_EXIT@0
.balign 16

.globl _FILE_EXIT@0
_FILE_EXIT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,304,_FILE_EXIT@0-_FILE_EXIT@0
.L_5A11:
.L_5A13:
	push 0
	push 0
	push 16
	push dword ptr [_G_TMAINCTX+24]
	call _SendMessageA@16
.stabn 68,0,305,.L_5A13-_FILE_EXIT@0
.L_5A14:
.L_5A12:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,306,.L_5A12-_FILE_EXIT@0
	.stabn 192,0,0,.L_5A11-_FILE_EXIT@0
	.stabn 224,0,0,.L_5A12-_FILE_EXIT@0
.L_5A15:
	.stabs "",36,0,0,.L_5A15-_FILE_EXIT@0
	.stabs "FILE_CLOSE:F7",36,0,307,_FILE_CLOSE@0
.balign 16

.globl _FILE_CLOSE@0
_FILE_CLOSE@0:
	push ebp
	mov ebp, esp
	sub esp, 36
	push ebx
	.stabn 68,0,307,_FILE_CLOSE@0-_FILE_CLOSE@0
.L_5A16:
.L_5A48:
	push 0
	push 0
	push 184
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	test eax, eax
	je .L_5A19
.L_5A1A:
.stabn 68,0,309,.L_5A48-_FILE_CLOSE@0
.L_5A49:
	push 292
	push offset _Lt_5A1C
	push offset _Lt_5A1B
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	cmp eax, 6
	je .L_5A1E
.L_5A1F:
	jmp .L_5A17
.L_5A1E:
.L_5A20:
.stabn 68,0,311,.L_5A49-_FILE_CLOSE@0
.L_5A4A:
.L_5A21:
.L_5A19:
.L_5A18:
	cmp dword ptr [_G_ITABCOUNT], 1
	jne .L_5A23
.L_5A24:
.stabn 68,0,314,.L_5A4A-_FILE_CLOSE@0
.L_5A4B:
	push offset _Lt_5A25
	call _puts
	add esp, 4
.stabn 68,0,315,.L_5A4B-_FILE_CLOSE@0
.L_5A4C:
	push 1
	call _GETNEWTABNAME@4
	push eax
	call _fb_hStrDelTemp@4
	mov dword ptr [_G_ICURTAB], 0
.stabn 68,0,316,.L_5A4C-_FILE_CLOSE@0
.L_5A4D:
	push dword ptr [_G_ICURTAB]
	push -1
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-32]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-32]
	push eax
	call _NEWTAB@12
	mov dword ptr [ebp-36], eax
	lea eax, [ebp-32]
	push eax
	call _fb_StrDelete@4
	push offset _Lt_0000
	push dword ptr [_G_TMAINCTX+264]
	call _SetWindowTextA@8
.stabn 68,0,317,.L_5A4D-_FILE_CLOSE@0
.L_5A4E:
	cmp dword ptr [_G_ITABCOUNT], 1
	jne .L_5A28
.L_5A29:
	push 0
	push dword ptr [ebp-36]
	call _CHANGETOTAB@8
.L_5A28:
.L_5A2A:
.stabn 68,0,319,.L_5A4E-_FILE_CLOSE@0
.L_5A4F:
	jmp .L_5A17
.stabn 68,0,320,.L_5A4F-_FILE_CLOSE@0
.L_5A50:
.L_5A2B:
.L_5A23:
.L_5A22:
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	cmp dword ptr [_G_ICURTAB], eax
	jne .L_5A2C
	mov eax, dword ptr [_G_ICURTAB]
	dec eax
	mov dword ptr [ebp-4], eax
	jmp .L_5A46
.L_5A2C:
	mov eax, dword ptr [_G_ICURTAB]
	mov dword ptr [ebp-4], eax
.L_5A46:
	mov eax, dword ptr [ebp-4]
	mov dword ptr [ebp-8], eax
.stabn 68,0,323,.L_5A50-_FILE_CLOSE@0
.L_5A51:
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	cmp dword ptr [_G_ICURTAB], eax
	jne .L_5A2E
	mov eax, dword ptr [_G_ICURTAB]
	dec eax
	mov dword ptr [ebp-12], eax
	jmp .L_5A47
.L_5A2E:
	mov eax, dword ptr [_G_ICURTAB]
	inc eax
	mov dword ptr [ebp-12], eax
.L_5A47:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-16], eax
.stabn 68,0,324,.L_5A51-_FILE_CLOSE@0
.L_5A52:
	mov eax, dword ptr [_G_ICURTAB]
	mov dword ptr [ebp-20], eax
.stabn 68,0,326,.L_5A52-_FILE_CLOSE@0
.L_5A53:
	push 0
	push dword ptr [ebp-16]
	call _CHANGETOTAB@8
.stabn 68,0,327,.L_5A53-_FILE_CLOSE@0
.L_5A54:
	push 0
	push 0
	push 1093
	mov eax, dword ptr [ebp-20]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	push dword ptr [eax]
	call _SendMessageA@16
.stabn 68,0,329,.L_5A54-_FILE_CLOSE@0
.L_5A55:
	mov eax, dword ptr [ebp-20]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	push dword ptr [eax]
	call _DestroyWindow@4
.stabn 68,0,330,.L_5A55-_FILE_CLOSE@0
.L_5A56:
.L_5A30:
	mov dword ptr [ebp-24], 0
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	mov dword ptr [ebp-28], eax
	jmp .L_5A32
.L_5A35:
.L_5A36:
.stabn 68,0,332,.L_5A56-_FILE_CLOSE@0
.L_5A57:
	mov eax, dword ptr [ebp-24]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	mov ebx, dword ptr [ebp-20]
	cmp dword ptr [eax+16], ebx
	jle .L_5A38
.L_5A39:
	mov ebx, dword ptr [ebp-24]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	dec dword ptr [ebx+16]
.L_5A38:
.L_5A3A:
.stabn 68,0,333,.L_5A57-_FILE_CLOSE@0
.L_5A58:
.L_5A3B:
.L_5A33:
	inc dword ptr [ebp-24]
.L_5A32:
	mov ebx, dword ptr [ebp-28]
	cmp dword ptr [ebp-24], ebx
	jle .L_5A35
.L_5A34:
.L_5A3C:
.stabn 68,0,334,.L_5A58-_FILE_CLOSE@0
.L_5A59:
.L_5A3D:
	mov ebx, dword ptr [ebp-20]
	inc ebx
	mov dword ptr [ebp-24], ebx
	mov ebx, dword ptr [_G_ITABCOUNT]
	dec ebx
	mov dword ptr [ebp-28], ebx
	jmp .L_5A3F
.L_5A42:
.L_5A43:
.stabn 68,0,335,.L_5A59-_FILE_CLOSE@0
.L_5A5A:
	mov ebx, dword ptr [ebp-24]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	lea eax, [ebx]
	push eax
	mov eax, dword ptr [ebp-24]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	lea ebx, [eax-20]
	push ebx
	call __ZN9TABSTRUCTaSERKS_
	add esp, 8
.stabn 68,0,336,.L_5A5A-_FILE_CLOSE@0
.L_5A5B:
.L_5A44:
.L_5A40:
	inc dword ptr [ebp-24]
.L_5A3F:
	mov ebx, dword ptr [ebp-28]
	cmp dword ptr [ebp-24], ebx
	jle .L_5A42
.L_5A41:
.L_5A45:
.stabn 68,0,337,.L_5A5B-_FILE_CLOSE@0
.L_5A5C:
	push 0
	push dword ptr [ebp-20]
	push 4872
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,339,.L_5A5C-_FILE_CLOSE@0
.L_5A5D:
	push -1
	push 0
	push dword ptr [_G_TMAINCTX+120]
	call _InvalidateRect@12
.stabn 68,0,340,.L_5A5D-_FILE_CLOSE@0
.L_5A5E:
	dec dword ptr [_G_ITABCOUNT]
	push dword ptr [_G_ITABCOUNT]
	push 0
	push 1
	push offset __ZN9TABSTRUCTD1Ev
	push offset __ZN9TABSTRUCTC1Ev
	push 20
	push offset _G_TTABS
	call _fb_ArrayRedimPresvObj
	add esp, 28
.stabn 68,0,342,.L_5A5E-_FILE_CLOSE@0
.L_5A5F:
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-20], ebx
.stabn 68,0,344,.L_5A5F-_FILE_CLOSE@0
.L_5A60:
	call _UPDATETABCLOSEBUTTON@0
.stabn 68,0,345,.L_5A60-_FILE_CLOSE@0
.L_5A61:
.L_5A17:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,347,.L_5A17-_FILE_CLOSE@0
	.stabs "INEWTAB:1",128,0,0,-8
	.stabs "ICHGTAB:1",128,0,0,-16
	.stabs "ICURTAB:1",128,0,0,-20
	.stabn 192,0,0,.L_5A16-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A1A-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A1F-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A20-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A21-_FILE_CLOSE@0
	.stabs "INEWTAB:1",128,0,0,-36
	.stabn 192,0,0,.L_5A24-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A29-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A2A-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A2B-_FILE_CLOSE@0
	.stabs "N:1",128,0,0,-24
	.stabn 192,0,0,.L_5A30-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A36-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A39-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A3A-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A3B-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A3C-_FILE_CLOSE@0
	.stabs "N:1",128,0,0,-24
	.stabn 192,0,0,.L_5A3D-_FILE_CLOSE@0
	.stabn 192,0,0,.L_5A43-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A44-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A45-_FILE_CLOSE@0
	.stabn 224,0,0,.L_5A17-_FILE_CLOSE@0
.L_5A62:
	.stabs "",36,0,0,.L_5A62-_FILE_CLOSE@0
	.stabs "FILE_QUIT:F16",36,0,348,_FILE_QUIT@0
.balign 16

.globl _FILE_QUIT@0
_FILE_QUIT@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,348,_FILE_QUIT@0-_FILE_QUIT@0
	mov byte ptr [ebp-4], 0
.L_5A63:
.L_5A85:
.L_5A65:
	mov eax, dword ptr [_G_ITABCOUNT]
	dec eax
	mov dword ptr [ebp-8], eax
	jmp .L_5A66
.L_5A69:
.L_5A6A:
.stabn 68,0,349,.L_5A85-_FILE_QUIT@0
.L_5A86:
	push 0
	push dword ptr [ebp-8]
	call _CHANGETOTAB@8
.stabn 68,0,350,.L_5A86-_FILE_QUIT@0
.L_5A87:
	push 0
	push 0
	push 184
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	test eax, eax
	je .L_5A6C
.L_5A6D:
.stabn 68,0,351,.L_5A87-_FILE_QUIT@0
.L_5A88:
.L_5A6E:
	push 35
	push offset _Lt_5A70
	push offset _Lt_5A6F
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	mov dword ptr [ebp-12], eax
.stabn 68,0,353,.L_5A88-_FILE_QUIT@0
.L_5A89:
	cmp dword ptr [ebp-12], 6
	jne .L_5A73
.L_5A74:
.L_5A75:
	call _FILE_SAVE@0
.stabn 68,0,354,.L_5A89-_FILE_QUIT@0
.L_5A8A:
.L_5A76:
	jmp .L_5A71
.L_5A73:
	cmp dword ptr [ebp-12], 7
	jne .L_5A77
.L_5A78:
.L_5A79:
	push 0
	push 0
	push 185
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	call _FILE_CLOSE@0
.stabn 68,0,355,.L_5A8A-_FILE_QUIT@0
.L_5A8B:
.L_5A7A:
	jmp .L_5A71
.L_5A77:
	cmp dword ptr [ebp-12], 2
	jne .L_5A7B
.L_5A7C:
.L_5A7D:
	mov byte ptr [ebp-4], 0
	jmp .L_5A64
.stabn 68,0,356,.L_5A8B-_FILE_QUIT@0
.L_5A8C:
.L_5A7E:
.L_5A7B:
.L_5A71:
.L_5A7F:
.L_5A80:
	jmp .L_5A6B
.L_5A6C:
.L_5A81:
.stabn 68,0,358,.L_5A8C-_FILE_QUIT@0
.L_5A8D:
	call _FILE_CLOSE@0
.stabn 68,0,359,.L_5A8D-_FILE_QUIT@0
.L_5A8E:
.L_5A82:
.L_5A6B:
.L_5A83:
.L_5A67:
	dec dword ptr [ebp-8]
.L_5A66:
	cmp dword ptr [ebp-8], 0
	jge .L_5A69
.L_5A68:
.L_5A84:
.stabn 68,0,361,.L_5A8E-_FILE_QUIT@0
.L_5A8F:
	mov byte ptr [ebp-4], 1
.stabn 68,0,362,.L_5A8F-_FILE_QUIT@0
.L_5A90:
.L_5A64:
	mov al, byte ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,363,.L_5A64-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A63-_FILE_QUIT@0
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_5A65-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A6A-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A6D-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A6E-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A75-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A76-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A79-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A7A-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A7D-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A7E-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A7F-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A80-_FILE_QUIT@0
	.stabn 192,0,0,.L_5A81-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A82-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A83-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A84-_FILE_QUIT@0
	.stabn 224,0,0,.L_5A64-_FILE_QUIT@0
.L_5A91:
	.stabs "",36,0,0,.L_5A91-_FILE_QUIT@0
	.stabs "DO_COMPILE:F7",36,0,365,_DO_COMPILE@0
.balign 16

.globl _DO_COMPILE@0
_DO_COMPILE@0:
	push ebp
	mov ebp, esp
	sub esp, 104
	push ebx
	.stabn 68,0,365,_DO_COMPILE@0-_DO_COMPILE@0
.L_5A92:
.L_5ABD:
	push offset _Lt_5A94
	push dword ptr [_G_TMAINCTX+696]
	call _SetWindowTextA@8
.stabn 68,0,366,.L_5ABD-_DO_COMPILE@0
.L_5ABE:
	push dword ptr [_G_TMAINCTX+264]
	call _GetWindowTextLengthA@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,367,.L_5ABE-_DO_COMPILE@0
.L_5ABF:
	push 0
	push -1
	push dword ptr [ebp-4]
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrInit@20
.stabn 68,0,368,.L_5ABF-_DO_COMPILE@0
.L_5AC0:
	mov eax, dword ptr [ebp-4]
	inc eax
	push eax
	push dword ptr [ebp-16]
	push dword ptr [_G_TMAINCTX+264]
	call _GetWindowTextA@12
	mov ebx, dword ptr [ebp-4]
	cmp eax, ebx
	je .L_5A96
.L_5A97:
.stabn 68,0,369,.L_5AC0-_DO_COMPILE@0
.L_5AC1:
	push offset _Lt_59CC
	call _puts
	add esp, 4
.stabn 68,0,370,.L_5AC1-_DO_COMPILE@0
.L_5AC2:
	push offset _Lt_5A98
	push dword ptr [_G_TMAINCTX+696]
	call _SetWindowTextA@8
.stabn 68,0,371,.L_5AC2-_DO_COMPILE@0
.L_5AC3:
	lea ebx, [ebp-16]
	push ebx
	call _fb_StrDelete@4
	jmp .L_5A93
.stabn 68,0,372,.L_5AC3-_DO_COMPILE@0
.L_5AC4:
.L_5A99:
.L_5A96:
.L_5A95:
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
.stabn 68,0,374,.L_5AC4-_DO_COMPILE@0
.L_5AC5:
	push 0
	push -1
	lea ebx, [ebp-40]
	push ebx
	lea ebx, [ebp-16]
	push ebx
	call _LEGOSCRIPTTOLDRAW@8
	push eax
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,375,.L_5AC5-_DO_COMPILE@0
.L_5AC6:
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_5A9A
	push 0
	push -1
	lea eax, [ebp-28]
	push eax
	push -1
	lea eax, [ebp-52]
	push eax
	call _fb_StrInit@20
	jmp .L_5AB9
.L_5A9A:
	push 0
	push -1
	lea eax, [ebp-40]
	push eax
	push -1
	lea eax, [ebp-52]
	push eax
	call _fb_StrInit@20
.L_5AB9:
	push dword ptr [ebp-52]
	push dword ptr [_G_TMAINCTX+600]
	call _SetWindowTextA@8
	lea eax, [ebp-52]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,376,.L_5AC6-_DO_COMPILE@0
.L_5AC7:
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_5A9C
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrLen@8
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-56], eax
	jmp .L_5ABA
.L_5A9C:
	mov dword ptr [ebp-56], -1
.L_5ABA:
	cmp dword ptr [ebp-56], 0
	je .L_5A9F
.L_5AA0:
.stabn 68,0,377,.L_5AC7-_DO_COMPILE@0
.L_5AC9:
	push 4
	push offset _Lt_5AA1
	push -1
	push 0
	push 3
	push offset _G_CURRENTFILEPATH
	call _fb_RIGHT@8
	push eax
	call _fb_StrLcase2@8
	push eax
	call _fb_StrCompare@16
	test eax, eax
	jne .L_5AA3
.L_5AA4:
.stabn 68,0,378,.L_5AC9-_DO_COMPILE@0
.L_5ACA:
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	push 0
	push -1
	push 5
	push offset _Lt_5AA5
	push -1
	push -1
	push offset _G_CURRENTFILEPATH
	call _fb_StrLen@8
	add eax, -3
	push eax
	push offset _G_CURRENTFILEPATH
	call _fb_LEFT@8
	push eax
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	lea eax, [ebp-92]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-104]
	push eax
	lea eax, [ebp-28]
	push eax
	call __ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,379,.L_5ACA-_DO_COMPILE@0
.L_5ACB:
.L_5AA8:
	jmp .L_5AA2
.L_5AA3:
.L_5AA9:
.stabn 68,0,380,.L_5ACB-_DO_COMPILE@0
.L_5ACC:
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	push 0
	push -1
	push 5
	push offset _Lt_5AA5
	push -1
	push offset _G_CURRENTFILEPATH
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	lea eax, [ebp-92]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-104]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-104]
	push eax
	lea eax, [ebp-28]
	push eax
	call __ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	lea eax, [ebp-104]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,381,.L_5ACC-_DO_COMPILE@0
.L_5ACD:
.L_5AAC:
.L_5AA2:
.L_5AAD:
.L_5A9F:
.L_5A9E:
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5AAF
.L_5AB0:
	push 0
	push 0
	push 245
	push dword ptr [_G_TMAINCTX+312]
	call _SendMessageA@16
.L_5AAF:
.L_5AB1:
.stabn 68,0,384,.L_5ACD-_DO_COMPILE@0
.L_5ACE:
	push -1
	lea eax, [ebp-28]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5AB7
	push 0
	push 7
	push offset _Lt_5AB2
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrInit@20
	jmp .L_5ABB
.L_5AB7:
	push 0
	push -1
	push -1
	lea eax, [ebp-40]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_5AB5
	push 0
	push 14
	push offset _Lt_5AB3
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrInit@20
	jmp .L_5ABC
.L_5AB5:
	push 0
	push 21
	push offset _Lt_5AB4
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrInit@20
.L_5ABC:
	lea eax, [ebp-68]
	push eax
	push -1
	lea eax, [ebp-80]
	push eax
	call _fb_StrInit@20
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
.L_5ABB:
	push dword ptr [ebp-80]
	push dword ptr [_G_TMAINCTX+696]
	call _SetWindowTextA@8
	lea eax, [ebp-80]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,385,.L_5ACE-_DO_COMPILE@0
.L_5ACF:
	lea eax, [ebp-40]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-28]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
.L_5A93:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,387,.L_5A93-_DO_COMPILE@0
	.stabs "IMAXLEN:1",128,0,0,-4
	.stabs "SSCRIPT:13",128,0,0,-16
	.stabs "SOUTPUT:13",128,0,0,-28
	.stabs "SERROR:13",128,0,0,-40
	.stabn 192,0,0,.L_5A92-_DO_COMPILE@0
	.stabn 192,0,0,.L_5A97-_DO_COMPILE@0
	.stabn 224,0,0,.L_5A99-_DO_COMPILE@0
	.stabn 192,0,0,.L_5AA0-_DO_COMPILE@0
	.stabn 192,0,0,.L_5AA4-_DO_COMPILE@0
	.stabn 224,0,0,.L_5AA8-_DO_COMPILE@0
	.stabn 192,0,0,.L_5AA9-_DO_COMPILE@0
	.stabn 224,0,0,.L_5AAC-_DO_COMPILE@0
	.stabn 224,0,0,.L_5AAD-_DO_COMPILE@0
	.stabn 192,0,0,.L_5AB0-_DO_COMPILE@0
	.stabn 224,0,0,.L_5AB1-_DO_COMPILE@0
	.stabn 224,0,0,.L_5A93-_DO_COMPILE@0
.L_5AD0:
	.stabs "",36,0,0,.L_5AD0-_DO_COMPILE@0
	.stabs "BUTTON_COMPILE:F7",36,0,388,_BUTTON_COMPILE@0
.balign 16

.globl _BUTTON_COMPILE@0
_BUTTON_COMPILE@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	push esi
	push edi
	.stabn 68,0,388,_BUTTON_COMPILE@0-_BUTTON_COMPILE@0
.L_5AD1:
.L_5AE8:
.L_5AD3:
	push offset _Lt_5AE6
	call __setjmp
	add esp, 4
	test eax, eax
	je .L_5AD8
.L_5AD9:
	jmp .L_5ADA
.L_5AD8:
.L_5ADB:
.stabn 68,0,389,.L_5AE8-_BUTTON_COMPILE@0
.L_5AE9:
push offset 2f
.stabn 68,0,389,.L_5AE9-_BUTTON_COMPILE@0
.L_5AEA:
push 1 
.stabn 68,0,389,.L_5AEA-_BUTTON_COMPILE@0
.L_5AEB:
call _AddVectoredExceptionHandler@8
.stabn 68,0,389,.L_5AEB-_BUTTON_COMPILE@0
.L_5AEC:
jmp 1f
.stabn 68,0,389,.L_5AEC-_BUTTON_COMPILE@0
.L_5AED:
2: 
.stabn 68,0,389,.L_5AED-_BUTTON_COMPILE@0
.L_5AEE:
mov eax, [esp+4] 
.stabn 68,0,389,.L_5AEE-_BUTTON_COMPILE@0
.L_5AEF:
mov eax, [eax+4] 
.stabn 68,0,389,.L_5AEF-_BUTTON_COMPILE@0
.L_5AF0:
sub dword ptr [eax+196], 12 
.stabn 68,0,389,.L_5AF0-_BUTTON_COMPILE@0
.L_5AF1:
mov dword ptr [eax+184], offset _longjmp
.stabn 68,0,389,.L_5AF1-_BUTTON_COMPILE@0
.L_5AF2:
mov eax, [eax+196]
.stabn 68,0,389,.L_5AF2-_BUTTON_COMPILE@0
.L_5AF3:
mov dword ptr [eax+4], offset _Lt_5AE6
.stabn 68,0,389,.L_5AF3-_BUTTON_COMPILE@0
.L_5AF4:
mov dword ptr [eax+8], 1 
.stabn 68,0,389,.L_5AF4-_BUTTON_COMPILE@0
.L_5AF5:
mov eax, -1 
.stabn 68,0,389,.L_5AF5-_BUTTON_COMPILE@0
.L_5AF6:
ret 4
.stabn 68,0,389,.L_5AF6-_BUTTON_COMPILE@0
.L_5AF7:
1:
.stabn 68,0,389,.L_5AF7-_BUTTON_COMPILE@0
.L_5AF8:
mov [_Lt_5AE7], eax
.stabn 68,0,389,.L_5AF8-_BUTTON_COMPILE@0
.L_5AF9:
.L_5ADC:
	call _DO_COMPILE@0
.stabn 68,0,390,.L_5AF9-_BUTTON_COMPILE@0
.L_5AFA:
.L_5ADD:
.L_5ADE:
	jmp .L_5ADF
.stabn 68,0,391,.L_5AFA-_BUTTON_COMPILE@0
.L_5AFB:
.L_5ADA:
.L_5AE0:
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	mov dword ptr [ebp-4], 0
	push 0
	push 23
	push offset _Lt_5AE1
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-12]
	push eax
	call _LOGERROR@4
	lea eax, [ebp-12]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,392,.L_5AFB-_BUTTON_COMPILE@0
.L_5AFC:
.L_5AE3:
.L_5ADF:
.L_5AE4:
push [_Lt_5AE7]
.stabn 68,0,394,.L_5AFC-_BUTTON_COMPILE@0
.L_5AFD:
call _RemoveVectoredExceptionHandler@4
.stabn 68,0,394,.L_5AFD-_BUTTON_COMPILE@0
.L_5AFE:
.L_5AE5:
.L_5AD2:
	pop edi
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,395,.L_5AD2-_BUTTON_COMPILE@0
	.stabn 192,0,0,.L_5AD1-_BUTTON_COMPILE@0
	.stabs "__ENV:V343",40,0,0,_Lt_5AE6
	.stabs "__VEH:V383=*7",40,0,0,_Lt_5AE7
	.stabn 192,0,0,.L_5AD3-_BUTTON_COMPILE@0
	.stabn 192,0,0,.L_5AD9-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5ADB-_BUTTON_COMPILE@0
	.stabn 192,0,0,.L_5ADC-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5ADD-_BUTTON_COMPILE@0
	.stabn 192,0,0,.L_5ADE-_BUTTON_COMPILE@0
	.stabn 192,0,0,.L_5AE0-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5AE3-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5AE4-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5AE5-_BUTTON_COMPILE@0
	.stabn 224,0,0,.L_5AD2-_BUTTON_COMPILE@0
.L_5AFF:
	.stabs "",36,0,0,.L_5AFF-_BUTTON_COMPILE@0

.section .bss
.balign 4
	.lcomm	_Lt_5AE6,64
.balign 4
	.lcomm	_Lt_5AE7,4

.section .text
	.stabs "OUTPUT_SETMODE:F7",36,0,396,_OUTPUT_SETMODE@0
.balign 16

.globl _OUTPUT_SETMODE@0
_OUTPUT_SETMODE@0:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,396,_OUTPUT_SETMODE@0-_OUTPUT_SETMODE@0
.L_5B00:
.L_5B12:
	push 0
	push 0
	push 240
	push dword ptr [_G_TMAINCTX+312]
	call _SendMessageA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,397,.L_5B12-_OUTPUT_SETMODE@0
.L_5B13:
	mov eax, dword ptr [ebp-4]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	push eax
	push dword ptr [_G_TMAINCTX+408]
	call _EnableWindow@8
.stabn 68,0,398,.L_5B13-_OUTPUT_SETMODE@0
.L_5B15:
	mov eax, dword ptr [ebp-4]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	push eax
	push dword ptr [_G_TMAINCTX+456]
	call _EnableWindow@8
.stabn 68,0,399,.L_5B15-_OUTPUT_SETMODE@0
.L_5B17:
	cmp dword ptr [ebp-4], 0
	je .L_5B02
	mov dword ptr [ebp-8], 8
	jmp .L_5B0E
.L_5B02:
	mov dword ptr [ebp-8], 0
.L_5B0E:
	push dword ptr [ebp-8]
	push dword ptr [_G_TMAINCTX+600]
	call _ShowWindow@8
.stabn 68,0,400,.L_5B17-_OUTPUT_SETMODE@0
.L_5B18:
	cmp dword ptr [ebp-4], 0
	jne .L_5B04
	mov dword ptr [ebp-12], 8
	jmp .L_5B0F
.L_5B04:
	mov dword ptr [ebp-12], 0
.L_5B0F:
	push dword ptr [ebp-12]
	push dword ptr [_G_TMAINCTX+648]
	call _ShowWindow@8
.stabn 68,0,401,.L_5B18-_OUTPUT_SETMODE@0
.L_5B19:
	call _GetFocus@0
	mov dword ptr [ebp-16], eax
.stabn 68,0,402,.L_5B19-_OUTPUT_SETMODE@0
.L_5B1A:
	mov eax, dword ptr [_G_TMAINCTX+312]
	cmp dword ptr [ebp-16], eax
	je .L_5B06
	mov eax, dword ptr [ebp-16]
	cmp eax, dword ptr [_G_TMAINCTX+360]
	sete bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-20], ebx
	jmp .L_5B10
.L_5B06:
	mov dword ptr [ebp-20], -1
.L_5B10:
	cmp dword ptr [ebp-20], 0
	je .L_5B09
.L_5B0A:
.stabn 68,0,403,.L_5B1A-_OUTPUT_SETMODE@0
.L_5B1C:
	cmp dword ptr [ebp-4], 0
	je .L_5B0B
	mov ebx, dword ptr [_G_TMAINCTX+600]
	mov dword ptr [ebp-24], ebx
	jmp .L_5B11
.L_5B0B:
	mov ebx, dword ptr [_G_TMAINCTX+648]
	mov dword ptr [ebp-24], ebx
.L_5B11:
	push dword ptr [ebp-24]
	call _SetFocus@4
.stabn 68,0,404,.L_5B1C-_OUTPUT_SETMODE@0
.L_5B1D:
.L_5B0D:
.L_5B09:
.L_5B08:
.L_5B01:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,406,.L_5B01-_OUTPUT_SETMODE@0
	.stabs "IOUTPUT:1",128,0,0,-4
	.stabs "HFOCUS:384=*21",128,0,0,-16
	.stabn 192,0,0,.L_5B00-_OUTPUT_SETMODE@0
	.stabn 192,0,0,.L_5B0A-_OUTPUT_SETMODE@0
	.stabn 224,0,0,.L_5B0D-_OUTPUT_SETMODE@0
	.stabn 224,0,0,.L_5B01-_OUTPUT_SETMODE@0
.L_5B1E:
	.stabs "",36,0,0,.L_5B1E-_OUTPUT_SETMODE@0
	.stabs "OUTPUT_QUERYEXECUTE:F7",36,0,407,_OUTPUT_QUERYEXECUTE@0
.balign 16

.globl _OUTPUT_QUERYEXECUTE@0
_OUTPUT_QUERYEXECUTE@0:
	push ebp
	mov ebp, esp
	sub esp, 84
	push ebx
	.stabn 68,0,407,_OUTPUT_QUERYEXECUTE@0-_OUTPUT_QUERYEXECUTE@0
.L_5B1F:
.L_5B34:
	mov eax, dword ptr [_G_ICURTAB]
	mov dword ptr [ebp-4], eax
	mov dword ptr [ebp-8], 0
.stabn 68,0,408,.L_5B34-_OUTPUT_QUERYEXECUTE@0
.L_5B35:
	mov eax, dword ptr [ebp-4]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	cmp dword ptr [eax+16], -1
	je .L_5B22
.L_5B23:
.stabn 68,0,410,.L_5B35-_OUTPUT_QUERYEXECUTE@0
.L_5B36:
	mov eax, dword ptr [ebp-4]
	mov dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp-4]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	mov ebx, dword ptr [eax+16]
	mov dword ptr [ebp-4], ebx
.stabn 68,0,411,.L_5B36-_OUTPUT_QUERYEXECUTE@0
.L_5B37:
.L_5B24:
	jmp .L_5B21
.L_5B22:
.L_5B25:
.stabn 68,0,412,.L_5B37-_OUTPUT_QUERYEXECUTE@0
.L_5B38:
	mov ebx, dword ptr [_G_ITABCOUNT]
	dec ebx
	cmp dword ptr [ebp-4], ebx
	jge .L_5B26
	mov ebx, dword ptr [ebp-4]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	mov eax, dword ptr [ebp-4]
	cmp eax, dword ptr [ebx+36]
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-72], eax
	jmp .L_5B33
.L_5B26:
	mov dword ptr [ebp-72], 0
.L_5B33:
	cmp dword ptr [ebp-72], 0
	je .L_5B29
.L_5B2A:
.stabn 68,0,413,.L_5B38-_OUTPUT_QUERYEXECUTE@0
.L_5B3A:
	mov eax, dword ptr [ebp-4]
	inc eax
	mov dword ptr [ebp-8], eax
.stabn 68,0,414,.L_5B3A-_OUTPUT_QUERYEXECUTE@0
.L_5B3B:
.L_5B2B:
	jmp .L_5B28
.L_5B29:
.L_5B2C:
.stabn 68,0,415,.L_5B3B-_OUTPUT_QUERYEXECUTE@0
.L_5B3C:
	push -1
	push dword ptr [ebp-4]
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-84]
	push eax
	call _NEWTAB@12
	mov dword ptr [ebp-8], eax
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,416,.L_5B3C-_OUTPUT_QUERYEXECUTE@0
.L_5B3D:
.L_5B2E:
.L_5B28:
.L_5B2F:
.L_5B21:
	push 0
	push -1
	push 0
	push 0
	push 14
	push dword ptr [_G_TMAINCTX+648]
	call _SendMessageA@16
	push eax
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrInit@20
.stabn 68,0,420,.L_5B3D-_OUTPUT_QUERYEXECUTE@0
.L_5B3E:
	push dword ptr [ebp-20]
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrLen@8
	inc eax
	mov ebx, eax
	push ebx
	push 13
	push dword ptr [_G_TMAINCTX+648]
	call _SendMessageA@16
.stabn 68,0,421,.L_5B3E-_OUTPUT_QUERYEXECUTE@0
.L_5B3F:
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea ebx, [ebp-20]
	push ebx
	push 2
	push offset _Lt_2653
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	lea ebx, [ebp-32]
	push ebx
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	lea eax, [ebp-44]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-56]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-56]
	call _puts
	add esp, 4
	lea eax, [ebp-56]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,422,.L_5B3F-_OUTPUT_QUERYEXECUTE@0
.L_5B40:
	push 0
	push -1
	push 0
	push 0
	push 14
	mov eax, dword ptr [ebp-4]
	imul eax, 20
	add eax, dword ptr [_G_TTABS]
	push dword ptr [eax]
	call _SendMessageA@16
	push eax
	call _fb_SPACE@4
	push eax
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrInit@20
.stabn 68,0,423,.L_5B40-_OUTPUT_QUERYEXECUTE@0
.L_5B41:
	push dword ptr [ebp-68]
	push -1
	lea eax, [ebp-68]
	push eax
	call _fb_StrLen@8
	inc eax
	mov ebx, eax
	push ebx
	push 13
	mov ebx, dword ptr [ebp-4]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	push dword ptr [ebx]
	call _SendMessageA@16
.stabn 68,0,424,.L_5B41-_OUTPUT_QUERYEXECUTE@0
.L_5B42:
	push dword ptr [ebp-68]
	push 0
	push 12
	mov ebx, dword ptr [ebp-8]
	imul ebx, 20
	add ebx, dword ptr [_G_TTABS]
	push dword ptr [ebx]
	call _SendMessageA@16
.stabn 68,0,426,.L_5B42-_OUTPUT_QUERYEXECUTE@0
.L_5B43:
	push 0
	push dword ptr [ebp-8]
	call _CHANGETOTAB@8
.stabn 68,0,428,.L_5B43-_OUTPUT_QUERYEXECUTE@0
.L_5B44:
	lea ebx, [ebp-68]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-20]
	push ebx
	call _fb_StrDelete@4
.L_5B20:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,429,.L_5B20-_OUTPUT_QUERYEXECUTE@0
	.stabs "ICURTAB:1",128,0,0,-4
	.stabs "INEWTAB:1",128,0,0,-8
	.stabs "SQUERY:13",128,0,0,-20
	.stabs "STEXT:13",128,0,0,-68
	.stabn 192,0,0,.L_5B1F-_OUTPUT_QUERYEXECUTE@0
	.stabn 192,0,0,.L_5B23-_OUTPUT_QUERYEXECUTE@0
	.stabn 224,0,0,.L_5B24-_OUTPUT_QUERYEXECUTE@0
	.stabn 192,0,0,.L_5B25-_OUTPUT_QUERYEXECUTE@0
	.stabn 192,0,0,.L_5B2A-_OUTPUT_QUERYEXECUTE@0
	.stabn 224,0,0,.L_5B2B-_OUTPUT_QUERYEXECUTE@0
	.stabn 192,0,0,.L_5B2C-_OUTPUT_QUERYEXECUTE@0
	.stabn 224,0,0,.L_5B2E-_OUTPUT_QUERYEXECUTE@0
	.stabn 224,0,0,.L_5B2F-_OUTPUT_QUERYEXECUTE@0
	.stabn 224,0,0,.L_5B20-_OUTPUT_QUERYEXECUTE@0
.L_5B45:
	.stabs "",36,0,0,.L_5B45-_OUTPUT_QUERYEXECUTE@0
	.stabs "OUTPUT_LOAD:F7",36,0,430,_OUTPUT_LOAD@0
.balign 16

.globl _OUTPUT_LOAD@0
_OUTPUT_LOAD@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,430,_OUTPUT_LOAD@0-_OUTPUT_LOAD@0
.L_5B46:
.L_5B49:
	push offset _Lt_5B48
	call _puts
	add esp, 4
.stabn 68,0,431,.L_5B49-_OUTPUT_LOAD@0
.L_5B4A:
.L_5B47:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,432,.L_5B47-_OUTPUT_LOAD@0
	.stabn 192,0,0,.L_5B46-_OUTPUT_LOAD@0
	.stabn 224,0,0,.L_5B47-_OUTPUT_LOAD@0
.L_5B4B:
	.stabs "",36,0,0,.L_5B4B-_OUTPUT_LOAD@0
	.stabs "OUTPUT_SAVE:F7",36,0,433,_OUTPUT_SAVE@0
.balign 16

.globl _OUTPUT_SAVE@0
_OUTPUT_SAVE@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,433,_OUTPUT_SAVE@0-_OUTPUT_SAVE@0
.L_5B4C:
.L_5B4F:
	push offset _Lt_5B4E
	call _puts
	add esp, 4
.stabn 68,0,434,.L_5B4F-_OUTPUT_SAVE@0
.L_5B50:
.L_5B4D:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,435,.L_5B4D-_OUTPUT_SAVE@0
	.stabn 192,0,0,.L_5B4C-_OUTPUT_SAVE@0
	.stabn 224,0,0,.L_5B4D-_OUTPUT_SAVE@0
.L_5B51:
	.stabs "",36,0,0,.L_5B51-_OUTPUT_SAVE@0
	.stabs "OUTPUT_SHOWHIDE:F7",36,0,436,_OUTPUT_SHOWHIDE@0
.balign 16

.globl _OUTPUT_SHOWHIDE@0
_OUTPUT_SHOWHIDE@0:
	push ebp
	mov ebp, esp
	sub esp, 56
	push ebx
	.stabn 68,0,436,_OUTPUT_SHOWHIDE@0-_OUTPUT_SHOWHIDE@0
.L_5B52:
.L_5B78:
	push 0
	push 0
	push 240
	push dword ptr [_G_TMAINCTX+552]
	call _SendMessageA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,437,.L_5B78-_OUTPUT_SHOWHIDE@0
.L_5B79:
	cmp dword ptr [ebp-4], 0
	je .L_5B56
	mov word ptr [ebp-8], 0
	movzx eax, word ptr [ebp-8]
	and eax, 4294950912
	mov word ptr [ebp-8], ax
	movzx eax, word ptr [ebp-8]
	and eax, 4294950911
	or eax, 16384
	mov word ptr [ebp-8], ax
	movzx eax, word ptr [ebp-8]
	and eax, 4294934527
	mov word ptr [ebp-8], ax
	mov word ptr [ebp-6], 6784
	jmp .L_5B72
.L_5B56:
	mov word ptr [ebp-8], 0
	movzx eax, word ptr [ebp-8]
	and eax, 4294950912
	or eax, 16383
	mov word ptr [ebp-8], ax
	movzx eax, word ptr [ebp-8]
	and eax, 4294950911
	or eax, 16384
	mov word ptr [ebp-8], ax
	movzx eax, word ptr [ebp-8]
	and eax, 4294934527
	or eax, 32768
	mov word ptr [ebp-8], ax
	mov word ptr [ebp-6], -640
.L_5B72:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_TMAINCTX+292], eax
.stabn 68,0,438,.L_5B79-_OUTPUT_SHOWHIDE@0
.L_5B7A:
	mov eax, dword ptr [_G_TMAINCTX+292]
	mov dword ptr [_G_TMAINCTX+244], eax
.stabn 68,0,439,.L_5B7A-_OUTPUT_SHOWHIDE@0
.L_5B7B:
	cmp dword ptr [ebp-4], 0
	je .L_5B5A
	mov word ptr [ebp-12], 0
	movzx eax, word ptr [ebp-12]
	and eax, 4294950912
	or eax, 12
	mov word ptr [ebp-12], ax
	movzx eax, word ptr [ebp-12]
	and eax, 4294950911
	or eax, 16384
	mov word ptr [ebp-12], ax
	movzx eax, word ptr [ebp-12]
	and eax, 4294934527
	or eax, 32768
	mov word ptr [ebp-12], ax
	mov word ptr [ebp-10], -512
	jmp .L_5B73
.L_5B5A:
	mov word ptr [ebp-12], 0
	movzx eax, word ptr [ebp-12]
	and eax, 4294950912
	or eax, 12
	mov word ptr [ebp-12], ax
	movzx eax, word ptr [ebp-12]
	and eax, 4294950911
	or eax, 16384
	mov word ptr [ebp-12], ax
	movzx eax, word ptr [ebp-12]
	and eax, 4294934527
	or eax, 32768
	mov word ptr [ebp-12], ax
	mov word ptr [ebp-10], -384
.L_5B73:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [_G_TMAINCTX+568], eax
.stabn 68,0,440,.L_5B7B-_OUTPUT_SHOWHIDE@0
.L_5B7C:
.L_5B5C:
	mov dword ptr [ebp-48], 6
.L_5B60:
.L_5B61:
.stabn 68,0,441,.L_5B7C-_OUTPUT_SHOWHIDE@0
.L_5B7D:
	cmp dword ptr [ebp-4], 0
	je .L_5B62
	mov dword ptr [ebp-52], 8
	jmp .L_5B74
.L_5B62:
	mov dword ptr [ebp-52], 0
.L_5B74:
	push dword ptr [ebp-52]
	mov eax, dword ptr [ebp-48]
	imul eax, 48
	mov ebx, offset _G_TMAINCTX
	add ebx, eax
	push dword ptr [ebx+24]
	call _ShowWindow@8
.stabn 68,0,442,.L_5B7D-_OUTPUT_SHOWHIDE@0
.L_5B7E:
.L_5B64:
.L_5B5E:
	inc dword ptr [ebp-48]
.L_5B5D:
	cmp dword ptr [ebp-48], 10
	jle .L_5B60
.L_5B5F:
.L_5B65:
.stabn 68,0,443,.L_5B7E-_OUTPUT_SHOWHIDE@0
.L_5B7F:
	cmp dword ptr [ebp-4], 0
	je .L_5B68
	push 0
	push 2
	push offset _Lt_5B66
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrInit@20
	jmp .L_5B75
.L_5B68:
	push 0
	push 2
	push offset _Lt_5B67
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrInit@20
.L_5B75:
	push dword ptr [ebp-24]
	push dword ptr [_G_TMAINCTX+552]
	call _SetWindowTextA@8
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrDelete@4
.stabn 68,0,444,.L_5B7F-_OUTPUT_SHOWHIDE@0
.L_5B80:
	mov ebx, dword ptr [_G_TMAINCTX+24]
	mov dword ptr [ebp-28], ebx
.stabn 68,0,445,.L_5B80-_OUTPUT_SHOWHIDE@0
.L_5B81:
	lea ebx, [ebp-44]
	push ebx
	push dword ptr [ebp-28]
	call _GetClientRect@8
.stabn 68,0,446,.L_5B81-_OUTPUT_SHOWHIDE@0
.L_5B82:
	push dword ptr [ebp-32]
	push dword ptr [ebp-36]
	lea ebx, [_G_TMAINCTX]
	push ebx
	push dword ptr [ebp-28]
	call _RESIZELAYOUT@16
.stabn 68,0,447,.L_5B82-_OUTPUT_SHOWHIDE@0
.L_5B83:
	call _GetFocus@0
	mov ebx, dword ptr [_G_TMAINCTX+552]
	cmp eax, ebx
	jne .L_5B6B
.L_5B6C:
.stabn 68,0,448,.L_5B83-_OUTPUT_SHOWHIDE@0
.L_5B84:
	push 0
	push 0
	push 240
	push dword ptr [_G_TMAINCTX+312]
	call _SendMessageA@16
	mov dword ptr [ebp-48], eax
.stabn 68,0,449,.L_5B84-_OUTPUT_SHOWHIDE@0
.L_5B85:
	cmp dword ptr [ebp-4], 0
	je .L_5B6F
	cmp dword ptr [ebp-48], 0
	je .L_5B6D
	mov dword ptr [ebp-52], 12
	jmp .L_5B77
.L_5B6D:
	mov dword ptr [ebp-52], 13
.L_5B77:
	mov eax, dword ptr [ebp-52]
	imul eax, 48
	mov ebx, offset _G_TMAINCTX
	add ebx, eax
	mov eax, dword ptr [ebx+24]
	mov dword ptr [ebp-56], eax
	jmp .L_5B76
.L_5B6F:
	mov eax, dword ptr [_G_TMAINCTX+264]
	mov dword ptr [ebp-56], eax
.L_5B76:
	push dword ptr [ebp-56]
	call _SetFocus@4
.stabn 68,0,450,.L_5B85-_OUTPUT_SHOWHIDE@0
.L_5B86:
.L_5B71:
.L_5B6B:
.L_5B6A:
.L_5B53:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,452,.L_5B53-_OUTPUT_SHOWHIDE@0
	.stabs "IOPEN:1",128,0,0,-4
	.stabs "HWND:385=*21",128,0,0,-28
	.stabs "RCCLI:23",128,0,0,-44
	.stabn 192,0,0,.L_5B52-_OUTPUT_SHOWHIDE@0
	.stabs "I:1",128,0,0,-48
	.stabn 192,0,0,.L_5B5C-_OUTPUT_SHOWHIDE@0
	.stabn 192,0,0,.L_5B61-_OUTPUT_SHOWHIDE@0
	.stabn 224,0,0,.L_5B64-_OUTPUT_SHOWHIDE@0
	.stabn 224,0,0,.L_5B65-_OUTPUT_SHOWHIDE@0
	.stabs "IOUTPUT:1",128,0,0,-48
	.stabn 192,0,0,.L_5B6C-_OUTPUT_SHOWHIDE@0
	.stabn 224,0,0,.L_5B71-_OUTPUT_SHOWHIDE@0
	.stabn 224,0,0,.L_5B53-_OUTPUT_SHOWHIDE@0
.L_5B87:
	.stabs "",36,0,0,.L_5B87-_OUTPUT_SHOWHIDE@0
	.stabs "EDIT_FINDREPLACEINIT:F16",36,0,458,_EDIT_FINDREPLACEINIT@4
	.stabs "BISREPLACE:p16",160,0,0,8
.balign 16

.globl _EDIT_FINDREPLACEINIT@4
_EDIT_FINDREPLACEINIT@4:
	push ebp
	mov ebp, esp
	sub esp, 65548
	.stabn 68,0,458,_EDIT_FINDREPLACEINIT@4-_EDIT_FINDREPLACEINIT@4
	mov byte ptr [ebp-4], 0
.L_5B88:
.L_5BA4:
	push 1
	push 1011
	push dword ptr [_G_WNDMENU]
	call _EnableMenuItem@12
.stabn 68,0,459,.L_5BA4-_EDIT_FINDREPLACEINIT@4
.L_5BA5:
	push 1
	push 1012
	push dword ptr [_G_WNDMENU]
	call _EnableMenuItem@12
.stabn 68,0,460,.L_5BA5-_EDIT_FINDREPLACEINIT@4
.L_5BA6:
.L_5B8A:
	cmp dword ptr [_G_TFINDREP+16], 0
	je .L_5B8C
.L_5B8D:
	mov byte ptr [ebp-4], 0
	jmp .L_5B89
.L_5B8C:
.L_5B8E:
.stabn 68,0,462,.L_5BA6-_EDIT_FINDREPLACEINIT@4
.L_5BA7:
	mov dword ptr [_G_TFINDREP], 40
.stabn 68,0,463,.L_5BA7-_EDIT_FINDREPLACEINIT@4
.L_5BA8:
	cmp dword ptr [_G_TFINDREP+4], 0
	jne .L_5B90
.L_5B91:
	mov dword ptr [_G_TFINDREP+12], 1
.L_5B90:
.L_5B92:
.stabn 68,0,464,.L_5BA8-_EDIT_FINDREPLACEINIT@4
.L_5BA9:
	mov eax, dword ptr [_G_TMAINCTX+24]
	mov dword ptr [_G_TFINDREP+4], eax
.stabn 68,0,465,.L_5BA9-_EDIT_FINDREPLACEINIT@4
.L_5BAA:
	mov dword ptr [_G_TFINDREP+8], 0
.stabn 68,0,466,.L_5BAA-_EDIT_FINDREPLACEINIT@4
.L_5BAB:
	push 1
	push 32768
	call _calloc
	add esp, 8
	mov dword ptr [_G_TFINDREP+16], eax
.stabn 68,0,467,.L_5BAB-_EDIT_FINDREPLACEINIT@4
.L_5BAC:
	mov word ptr [_G_TFINDREP+24], 32767
.stabn 68,0,468,.L_5BAC-_EDIT_FINDREPLACEINIT@4
.L_5BAD:
	cmp byte ptr [ebp+8], 0
	je .L_5B93
	push 1
	push 32768
	call _calloc
	add esp, 8
	mov dword ptr [ebp-8], eax
	jmp .L_5BA2
.L_5B93:
	mov dword ptr [ebp-8], 0
.L_5BA2:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_TFINDREP+20], eax
.stabn 68,0,469,.L_5BAD-_EDIT_FINDREPLACEINIT@4
.L_5BAE:
	cmp byte ptr [ebp+8], 0
	je .L_5B95
	mov dword ptr [ebp-12], 32767
	jmp .L_5BA3
.L_5B95:
	mov dword ptr [ebp-12], 0
.L_5BA3:
	mov ax, word ptr [ebp-12]
	mov word ptr [_G_TFINDREP+26], ax
.stabn 68,0,470,.L_5BAE-_EDIT_FINDREPLACEINIT@4
.L_5BAF:
	cmp byte ptr [ebp+8], 0
	je .L_5B98
.L_5B99:
	push 0
	push -1
	push offset _G_SLASTREPLACE
	push 0
	push dword ptr [_G_TFINDREP+20]
	call _fb_StrAssign@20
.L_5B98:
.L_5B9A:
.stabn 68,0,471,.L_5BAF-_EDIT_FINDREPLACEINIT@4
.L_5BB0:
	lea eax, [ebp-65548]
	push eax
	push 0
	push 1086
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageW@16
	test eax, eax
	je .L_5B9C
.L_5B9D:
.stabn 68,0,473,.L_5BB0-_EDIT_FINDREPLACEINIT@4
.L_5BB1:
	push 0
	lea eax, [ebp-65548]
	push eax
	push 0
	push dword ptr [_G_TFINDREP+16]
	call _fb_WstrAssignToA@16
.stabn 68,0,474,.L_5BB1-_EDIT_FINDREPLACEINIT@4
.L_5BB2:
.L_5B9E:
	jmp .L_5B9B
.L_5B9C:
.L_5B9F:
.stabn 68,0,475,.L_5BB2-_EDIT_FINDREPLACEINIT@4
.L_5BB3:
	push 0
	push -1
	push offset _G_SLASTQUERY
	push 0
	push dword ptr [_G_TFINDREP+16]
	call _fb_StrAssign@20
.stabn 68,0,476,.L_5BB3-_EDIT_FINDREPLACEINIT@4
.L_5BB4:
.L_5BA0:
.L_5B9B:
.L_5BA1:
	mov byte ptr [ebp-4], 1
.stabn 68,0,479,.L_5BB4-_EDIT_FINDREPLACEINIT@4
.L_5BB5:
.L_5B89:
	mov al, byte ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,480,.L_5B89-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B88-_EDIT_FINDREPLACEINIT@4
	.stabs "WTEMP:6",128,0,0,-65548
	.stabn 192,0,0,.L_5B8A-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B8D-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5B8E-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B91-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5B92-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B99-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5B9A-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B9D-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5B9E-_EDIT_FINDREPLACEINIT@4
	.stabn 192,0,0,.L_5B9F-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5BA0-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5BA1-_EDIT_FINDREPLACEINIT@4
	.stabn 224,0,0,.L_5B89-_EDIT_FINDREPLACEINIT@4
.L_5BB6:
	.stabs "",36,0,0,.L_5BB6-_EDIT_FINDREPLACEINIT@4
	.stabs "EDIT_FINDREPLACEACTION:F1",36,0,481,_EDIT_FINDREPLACEACTION@4
	.stabs "TAGFINDREPLACEA:Tt386=s40LSTRUCTSIZE:8,0,32;HWNDOWNER:387=*21,32,32;HINSTANCE:388=*297,64,32;FLAGS:8,96,32;LPSTRFINDWHAT:389=*4,128,32;LPSTRREPLACEWITH:390=*4,160,32;WFINDWHATLEN:6,192,16;WREPLACEWITHLEN:6,208,16;LCUSTDATA:1,224,32;LPFNHOOK:391=*392=f8,256,32;LPTEMPLATENAME:393=*4,288,32;;",128,0,0,0
	.stabs "TFINDREP:v386",160,0,0,8
.balign 16

.globl _EDIT_FINDREPLACEACTION@4
_EDIT_FINDREPLACEACTION@4:
	push ebp
	mov ebp, esp
	sub esp, 65644
	push ebx
	.stabn 68,0,481,_EDIT_FINDREPLACEACTION@4-_EDIT_FINDREPLACEACTION@4
	mov dword ptr [ebp-4], 0
.L_5BB7:
.L_5C12:
	mov eax, dword ptr [_G_TMAINCTX+264]
	mov dword ptr [ebp-8], eax
.stabn 68,0,482,.L_5C12-_EDIT_FINDREPLACEACTION@4
.L_5C13:
.L_5BB9:
	mov eax, dword ptr [ebp+8]
	mov dword ptr [ebp-12], eax
.stabn 68,0,483,.L_5C13-_EDIT_FINDREPLACEACTION@4
.L_5C14:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [eax+12]
	and ebx, 64
	je .L_5BBC
.L_5BBD:
.stabn 68,0,485,.L_5C14-_EDIT_FINDREPLACEACTION@4
.L_5C15:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebx+16], 0
	je .L_5BBF
.L_5BC0:
	mov ebx, dword ptr [ebp-12]
	push dword ptr [ebx+16]
	call _free
	add esp, 4
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+16], 0
.L_5BBF:
.L_5BC1:
.stabn 68,0,486,.L_5C15-_EDIT_FINDREPLACEACTION@4
.L_5C16:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebx+20], 0
	je .L_5BC3
.L_5BC4:
	mov ebx, dword ptr [ebp-12]
	push dword ptr [ebx+20]
	call _free
	add esp, 4
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebx+20], 0
.L_5BC3:
.L_5BC5:
.stabn 68,0,487,.L_5C16-_EDIT_FINDREPLACEACTION@4
.L_5C17:
	push 0
	push 1011
	push dword ptr [_G_WNDMENU]
	call _EnableMenuItem@12
.stabn 68,0,488,.L_5C17-_EDIT_FINDREPLACEACTION@4
.L_5C18:
	push 0
	push 1012
	push dword ptr [_G_WNDMENU]
	call _EnableMenuItem@12
.stabn 68,0,489,.L_5C18-_EDIT_FINDREPLACEACTION@4
.L_5C19:
	mov ebx, dword ptr [ebp-12]
	and dword ptr [ebx+12], 4294967231
	mov dword ptr [ebp-4], 0
	jmp .L_5BB8
.stabn 68,0,490,.L_5C19-_EDIT_FINDREPLACEACTION@4
.L_5C1A:
.L_5BC6:
.L_5BBC:
.L_5BBB:
	mov ebx, dword ptr [ebp-12]
	mov eax, dword ptr [ebx+12]
	and eax, 7
	mov dword ptr [ebp-16], eax
.stabn 68,0,492,.L_5C1A-_EDIT_FINDREPLACEACTION@4
.L_5C1B:
	lea eax, [ebp-44]
	push eax
	push 0
	push 1076
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,495,.L_5C1B-_EDIT_FINDREPLACEACTION@4
.L_5C1C:
	push 0
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+16]
	push 32767
	lea eax, [ebp-65580]
	push eax
	call _fb_WstrAssignFromA@16
.stabn 68,0,497,.L_5C1C-_EDIT_FINDREPLACEACTION@4
.L_5C1D:
	lea eax, [ebp-65580]
	mov dword ptr [ebp-28], eax
.stabn 68,0,498,.L_5C1D-_EDIT_FINDREPLACEACTION@4
.L_5C1E:
	push 0
	push 0
	push 1083
	push dword ptr [ebp-8]
	call _SendMessageA@16
	mov dword ptr [ebp-65584], eax
.stabn 68,0,500,.L_5C1E-_EDIT_FINDREPLACEACTION@4
.L_5C1F:
	mov eax, dword ptr [ebp-65584]
	and eax, -524289
	push eax
	push 0
	push 1093
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,501,.L_5C1F-_EDIT_FINDREPLACEACTION@4
.L_5C20:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [eax+12]
	and ebx, 32
	je .L_5BC8
.L_5BC9:
	push 0
	push 0
	push 11
	push dword ptr [ebp-8]
	call _SendMessageA@16
.L_5BC8:
.L_5BCA:
.stabn 68,0,502,.L_5C20-_EDIT_FINDREPLACEACTION@4
.L_5C21:
	mov dword ptr [ebp-65588], 0
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebx+20], 0
	je .L_5BCB
	mov ebx, dword ptr [ebp-12]
	push dword ptr [ebx+20]
	call _strlen
	add esp, 4
	mov dword ptr [ebp-65596], eax
	jmp .L_5C0E
.L_5BCB:
	mov dword ptr [ebp-65596], 0
.L_5C0E:
	mov eax, dword ptr [ebp-65596]
	mov dword ptr [ebp-65592], eax
.stabn 68,0,504,.L_5C21-_EDIT_FINDREPLACEACTION@4
.L_5C22:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [eax+12]
	and ebx, 16
	je .L_5BCE
.L_5BCF:
.stabn 68,0,505,.L_5C22-_EDIT_FINDREPLACEACTION@4
.L_5C23:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-36], eax
	mov eax, dword ptr [ebp-40]
	mov dword ptr [ebp-32], eax
.stabn 68,0,506,.L_5C23-_EDIT_FINDREPLACEACTION@4
.L_5C24:
	lea ebx, [ebp-36]
	push ebx
	push dword ptr [ebp-16]
	push 1103
	push dword ptr [ebp-8]
	call _SendMessageW@16
	cmp eax, -1
	je .L_5BD1
.L_5BD2:
.stabn 68,0,507,.L_5C24-_EDIT_FINDREPLACEACTION@4
.L_5C25:
	push 8
	lea eax, [ebp-44]
	push eax
	lea eax, [ebp-24]
	push eax
	call _memcmp
	add esp, 12
	test eax, eax
	jne .L_5BD4
.L_5BD5:
.stabn 68,0,508,.L_5C25-_EDIT_FINDREPLACEACTION@4
.L_5C26:
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+20]
	push 4294967295
	push 194
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,509,.L_5C26-_EDIT_FINDREPLACEACTION@4
.L_5C27:
	inc dword ptr [ebp-65588]
	mov eax, dword ptr [ebp-65592]
	add eax, dword ptr [ebp-44]
	mov dword ptr [ebp-40], eax
.stabn 68,0,510,.L_5C27-_EDIT_FINDREPLACEACTION@4
.L_5C28:
.L_5BD6:
.L_5BD4:
.L_5BD3:
.L_5BD7:
.L_5BD1:
.L_5BD0:
.L_5BD8:
.L_5BCE:
.L_5BCD:
.L_5BD9:
.L_5BDC:
	mov eax, dword ptr [ebp-16]
	and eax, 1
	test eax, eax
	je .L_5BDD
	mov eax, dword ptr [ebp-40]
	mov dword ptr [ebp-65600], eax
	jmp .L_5C0F
.L_5BDD:
	mov eax, dword ptr [ebp-44]
	mov dword ptr [ebp-65600], eax
.L_5C0F:
	mov eax, dword ptr [ebp-65600]
	mov dword ptr [ebp-36], eax
.stabn 68,0,516,.L_5C28-_EDIT_FINDREPLACEACTION@4
.L_5C29:
	mov eax, dword ptr [ebp-16]
	and eax, 1
	je .L_5BDF
	mov dword ptr [ebp-65604], -1
	jmp .L_5C10
.L_5BDF:
	mov dword ptr [ebp-65604], 0
.L_5C10:
	mov eax, dword ptr [ebp-65604]
	mov dword ptr [ebp-32], eax
.stabn 68,0,517,.L_5C29-_EDIT_FINDREPLACEACTION@4
.L_5C2A:
	lea eax, [ebp-36]
	push eax
	push dword ptr [ebp-16]
	push 1103
	push dword ptr [ebp-8]
	call _SendMessageW@16
	mov dword ptr [ebp-65608], eax
.stabn 68,0,521,.L_5C2A-_EDIT_FINDREPLACEACTION@4
.L_5C2B:
	cmp dword ptr [ebp-65608], -1
	je .L_5BE2
.L_5BE3:
.stabn 68,0,522,.L_5C2B-_EDIT_FINDREPLACEACTION@4
.L_5C2C:
	lea eax, [ebp-24]
	push eax
	push 0
	push 1079
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,525,.L_5C2C-_EDIT_FINDREPLACEACTION@4
.L_5C2D:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [eax+12]
	and ebx, 32
	je .L_5BE5
.L_5BE6:
.stabn 68,0,526,.L_5C2D-_EDIT_FINDREPLACEACTION@4
.L_5C2E:
	mov ebx, dword ptr [ebp-12]
	push dword ptr [ebx+20]
	push 4294967295
	push 194
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,527,.L_5C2E-_EDIT_FINDREPLACEACTION@4
.L_5C2F:
	inc dword ptr [ebp-65588]
	mov ebx, dword ptr [ebp-24]
	mov dword ptr [ebp-44], ebx
.stabn 68,0,528,.L_5C2F-_EDIT_FINDREPLACEACTION@4
.L_5C30:
	mov ebx, dword ptr [ebp-65592]
	add ebx, dword ptr [ebp-44]
	mov dword ptr [ebp-40], ebx
	jmp .L_5BDB
.stabn 68,0,529,.L_5C30-_EDIT_FINDREPLACEACTION@4
.L_5C31:
.L_5BE7:
.L_5BE5:
.L_5BE4:
.L_5BE8:
	jmp .L_5BE1
.L_5BE2:
.L_5BE9:
.stabn 68,0,531,.L_5C31-_EDIT_FINDREPLACEACTION@4
.L_5C32:
	mov ebx, dword ptr [ebp-12]
	mov eax, dword ptr [ebx+12]
	and eax, 32
	je .L_5BEB
.L_5BEC:
.stabn 68,0,532,.L_5C32-_EDIT_FINDREPLACEACTION@4
.L_5C33:
	push 0
	push 4294967295
	push 11
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,533,.L_5C33-_EDIT_FINDREPLACEACTION@4
.L_5C34:
	cmp dword ptr [ebp-65588], 0
	je .L_5BEE
.L_5BEF:
	push -1
	push 0
	push dword ptr [ebp-8]
	call _InvalidateRect@12
.L_5BEE:
.L_5BF0:
.stabn 68,0,534,.L_5C34-_EDIT_FINDREPLACEACTION@4
.L_5C35:
.L_5BF1:
.L_5BEB:
.L_5BEA:
	cmp dword ptr [ebp-65588], 0
	jne .L_5BF3
.L_5BF4:
.stabn 68,0,536,.L_5C35-_EDIT_FINDREPLACEACTION@4
.L_5C36:
	push 48
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [eax+20], 0
	je .L_5BF9
	push 0
	push 8
	push offset _Lt_5BF7
	push -1
	lea eax, [ebp-65620]
	push eax
	call _fb_StrInit@20
	jmp .L_5C11
.L_5BF9:
	push 0
	push 5
	push offset _Lt_5BF8
	push -1
	lea eax, [ebp-65620]
	push eax
	call _fb_StrInit@20
.L_5C11:
	push dword ptr [ebp-65620]
	push offset _Lt_5BF5
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-65620]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,537,.L_5C36-_EDIT_FINDREPLACEACTION@4
.L_5C37:
.L_5BFB:
	jmp .L_5BF2
.L_5BF3:
.L_5BFC:
.stabn 68,0,541,.L_5C37-_EDIT_FINDREPLACEACTION@4
.L_5C38:
	push 64
	push offset _Lt_5BF7
	mov dword ptr [ebp-65644], 0
	mov dword ptr [ebp-65640], 0
	mov dword ptr [ebp-65636], 0
	push 0
	push -1
	push 7
	push offset _Lt_5BFE
	push -1
	push -1
	push dword ptr [ebp-65588]
	call _fb_IntToStr@4
	push eax
	push 10
	push offset _Lt_5BFD
	mov dword ptr [ebp-65620], 0
	mov dword ptr [ebp-65616], 0
	mov dword ptr [ebp-65612], 0
	lea eax, [ebp-65620]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-65632], 0
	mov dword ptr [ebp-65628], 0
	mov dword ptr [ebp-65624], 0
	lea eax, [ebp-65632]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-65644]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-65644]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-65644]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,542,.L_5C38-_EDIT_FINDREPLACEACTION@4
.L_5C39:
.L_5C02:
.L_5BF2:
.L_5C03:
.L_5BE1:
	jmp .L_5BDA
.stabn 68,0,545,.L_5C39-_EDIT_FINDREPLACEACTION@4
.L_5C3A:
.L_5C04:
.L_5BDB:
	jmp .L_5BD9
.L_5BDA:
.stabn 68,0,546,.L_5C3A-_EDIT_FINDREPLACEACTION@4
.L_5C3B:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [eax+16], 0
	je .L_5C06
.L_5C07:
	push 0
	push 0
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+16]
	push -1
	push offset _G_SLASTQUERY
	call _fb_StrAssign@20
.L_5C06:
.L_5C08:
.stabn 68,0,548,.L_5C3B-_EDIT_FINDREPLACEACTION@4
.L_5C3C:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [eax+20], 0
	je .L_5C0A
.L_5C0B:
	push 0
	push 0
	mov eax, dword ptr [ebp-12]
	push dword ptr [eax+20]
	push -1
	push offset _G_SLASTREPLACE
	call _fb_StrAssign@20
.L_5C0A:
.L_5C0C:
.stabn 68,0,549,.L_5C3C-_EDIT_FINDREPLACEACTION@4
.L_5C3D:
	push dword ptr [ebp-65584]
	push 0
	push 1093
	push dword ptr [ebp-8]
	call _SendMessageA@16
.stabn 68,0,551,.L_5C3D-_EDIT_FINDREPLACEACTION@4
.L_5C3E:
.L_5C0D:
	mov dword ptr [ebp-4], 1
.stabn 68,0,553,.L_5C3E-_EDIT_FINDREPLACEACTION@4
.L_5C3F:
.L_5BB8:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,554,.L_5BB8-_EDIT_FINDREPLACEACTION@4
	.stabs "HCTL:394=*21",128,0,0,-8
	.stabn 192,0,0,.L_5BB7-_EDIT_FINDREPLACEACTION@4
	.stabs "BFLAGS:8",128,0,0,-16
	.stabs "_FINDTEXTEXW:Tt395=s20CHRG:320,0,64;LPSTRTEXT:396=*6,64,32;CHRGTEXT:320,96,64;;",128,0,0,0
	.stabs "TFINDEX:395",128,0,0,-36
	.stabs "TRANGE:320",128,0,0,-44
	.stabs "WTEMP:6",128,0,0,-65580
	.stabs "IMASK:1",128,0,0,-65584
	.stabs "LREPLACED:1",128,0,0,-65588
	.stabs "LREPLACELEN:1",128,0,0,-65592
	.stabn 192,0,0,.L_5BB9-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BBD-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BC0-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BC1-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BC4-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BC5-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BC6-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BC9-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BCA-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BCF-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BD2-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BD5-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BD6-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BD7-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BD8-_EDIT_FINDREPLACEACTION@4
	.stabs "IRESU:1",128,0,0,-65608
	.stabn 192,0,0,.L_5BDC-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BE3-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BE6-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BE7-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BE8-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BE9-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BEC-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BEF-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BF0-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BF1-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BF4-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BFB-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5BFC-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C02-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C03-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C04-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5C07-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C08-_EDIT_FINDREPLACEACTION@4
	.stabn 192,0,0,.L_5C0B-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C0C-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5C0D-_EDIT_FINDREPLACEACTION@4
	.stabn 224,0,0,.L_5BB8-_EDIT_FINDREPLACEACTION@4
.L_5C40:
	.stabs "",36,0,0,.L_5C40-_EDIT_FINDREPLACEACTION@4
	.stabs "FILE_IMPORT:F7",36,0,556,_FILE_IMPORT@0
.balign 16

.globl _FILE_IMPORT@0
_FILE_IMPORT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,556,_FILE_IMPORT@0-_FILE_IMPORT@0
.L_5C41:
.L_5C44:
	push offset _Lt_5C43
	call _puts
	add esp, 4
.stabn 68,0,557,.L_5C44-_FILE_IMPORT@0
.L_5C45:
.L_5C42:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,558,.L_5C42-_FILE_IMPORT@0
	.stabn 192,0,0,.L_5C41-_FILE_IMPORT@0
	.stabn 224,0,0,.L_5C42-_FILE_IMPORT@0
.L_5C46:
	.stabs "",36,0,0,.L_5C46-_FILE_IMPORT@0
	.stabs "FILE_EXPORT:F7",36,0,559,_FILE_EXPORT@0
.balign 16

.globl _FILE_EXPORT@0
_FILE_EXPORT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,559,_FILE_EXPORT@0-_FILE_EXPORT@0
.L_5C47:
.L_5C4A:
	push offset _Lt_5C49
	call _puts
	add esp, 4
.stabn 68,0,560,.L_5C4A-_FILE_EXPORT@0
.L_5C4B:
.L_5C48:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,561,.L_5C48-_FILE_EXPORT@0
	.stabn 192,0,0,.L_5C47-_FILE_EXPORT@0
	.stabn 224,0,0,.L_5C48-_FILE_EXPORT@0
.L_5C4C:
	.stabs "",36,0,0,.L_5C4C-_FILE_EXPORT@0
	.stabs "EDIT_UNDO:F7",36,0,562,_EDIT_UNDO@0
.balign 16

.globl _EDIT_UNDO@0
_EDIT_UNDO@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,562,_EDIT_UNDO@0-_EDIT_UNDO@0
.L_5C4D:
.L_5C50:
	push offset _Lt_5C4F
	call _puts
	add esp, 4
.stabn 68,0,563,.L_5C50-_EDIT_UNDO@0
.L_5C51:
.L_5C4E:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,564,.L_5C4E-_EDIT_UNDO@0
	.stabn 192,0,0,.L_5C4D-_EDIT_UNDO@0
	.stabn 224,0,0,.L_5C4E-_EDIT_UNDO@0
.L_5C52:
	.stabs "",36,0,0,.L_5C52-_EDIT_UNDO@0
	.stabs "EDIT_REDO:F7",36,0,565,_EDIT_REDO@0
.balign 16

.globl _EDIT_REDO@0
_EDIT_REDO@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,565,_EDIT_REDO@0-_EDIT_REDO@0
.L_5C53:
.L_5C56:
	push offset _Lt_5C55
	call _puts
	add esp, 4
.stabn 68,0,566,.L_5C56-_EDIT_REDO@0
.L_5C57:
.L_5C54:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,567,.L_5C54-_EDIT_REDO@0
	.stabn 192,0,0,.L_5C53-_EDIT_REDO@0
	.stabn 224,0,0,.L_5C54-_EDIT_REDO@0
.L_5C58:
	.stabs "",36,0,0,.L_5C58-_EDIT_REDO@0
	.stabs "EDIT_FIND:F7",36,0,568,_EDIT_FIND@0
.balign 16

.globl _EDIT_FIND@0
_EDIT_FIND@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,568,_EDIT_FIND@0-_EDIT_FIND@0
.L_5C59:
.L_5CA0:
	push 0
	call _EDIT_FINDREPLACEINIT@4
	test al, al
	jne .L_5C5C
.L_5C5D:
	jmp .L_5C5A
.L_5C5C:
.L_5C5E:
.stabn 68,0,569,.L_5CA0-_EDIT_FIND@0
.L_5CA1:
	push offset _G_TFINDREP
	call _FindTextA@4
	mov dword ptr [ebp-4], eax
.stabn 68,0,570,.L_5CA1-_EDIT_FIND@0
.L_5CA2:
	cmp dword ptr [ebp-4], 0
	jne .L_5C60
.L_5C61:
.stabn 68,0,571,.L_5CA2-_EDIT_FIND@0
.L_5CA3:
	call _GetLastError@0
	mov dword ptr [ebp-8], eax
	call _CommDlgExtendedError@0
	mov dword ptr [ebp-12], eax
.stabn 68,0,572,.L_5CA3-_EDIT_FIND@0
.L_5CA4:
	push dword ptr [ebp-12]
	push dword ptr [ebp-8]
	push offset _Lt_5C62
	call _printf
	add esp, 12
.stabn 68,0,573,.L_5CA4-_EDIT_FIND@0
.L_5CA5:
	cmp dword ptr [ebp-12], 6
	jne .L_5C64
.L_5C65:
	push offset _Lt_5C66
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C64:
.L_5C67:
.stabn 68,0,575,.L_5CA5-_EDIT_FIND@0
.L_5CA6:
	cmp dword ptr [ebp-12], 10
	jne .L_5C69
.L_5C6A:
	push offset _Lt_5C6B
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C69:
.L_5C6C:
.stabn 68,0,576,.L_5CA6-_EDIT_FIND@0
.L_5CA7:
	cmp dword ptr [ebp-12], 2
	jne .L_5C6E
.L_5C6F:
	push offset _Lt_5C70
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C6E:
.L_5C71:
.stabn 68,0,577,.L_5CA7-_EDIT_FIND@0
.L_5CA8:
	cmp dword ptr [ebp-12], 4
	jne .L_5C73
.L_5C74:
	push offset _Lt_5C75
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C73:
.L_5C76:
.stabn 68,0,578,.L_5CA8-_EDIT_FIND@0
.L_5CA9:
	cmp dword ptr [ebp-12], 8
	jne .L_5C78
.L_5C79:
	push offset _Lt_5C7A
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C78:
.L_5C7B:
.stabn 68,0,579,.L_5CA9-_EDIT_FIND@0
.L_5CAA:
	cmp dword ptr [ebp-12], 11
	jne .L_5C7D
.L_5C7E:
	push offset _Lt_5C7F
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C7D:
.L_5C80:
.stabn 68,0,580,.L_5CAA-_EDIT_FIND@0
.L_5CAB:
	cmp dword ptr [ebp-12], 7
	jne .L_5C82
.L_5C83:
	push offset _Lt_5C84
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C82:
.L_5C85:
.stabn 68,0,581,.L_5CAB-_EDIT_FIND@0
.L_5CAC:
	cmp dword ptr [ebp-12], 3
	jne .L_5C87
.L_5C88:
	push offset _Lt_5C89
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C87:
.L_5C8A:
.stabn 68,0,582,.L_5CAC-_EDIT_FIND@0
.L_5CAD:
	cmp dword ptr [ebp-12], 5
	jne .L_5C8C
.L_5C8D:
	push offset _Lt_5C8E
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C8C:
.L_5C8F:
.stabn 68,0,583,.L_5CAD-_EDIT_FIND@0
.L_5CAE:
	cmp dword ptr [ebp-12], 1
	jne .L_5C91
.L_5C92:
	push offset _Lt_5C93
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C91:
.L_5C94:
.stabn 68,0,584,.L_5CAE-_EDIT_FIND@0
.L_5CAF:
	cmp dword ptr [ebp-12], 9
	jne .L_5C96
.L_5C97:
	push offset _Lt_5C98
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C96:
.L_5C99:
.stabn 68,0,585,.L_5CAF-_EDIT_FIND@0
.L_5CB0:
	cmp dword ptr [ebp-12], 16385
	jne .L_5C9B
.L_5C9C:
	push offset _Lt_5C9D
	push offset _Lt_3A66
	call _printf
	add esp, 8
.L_5C9B:
.L_5C9E:
.stabn 68,0,586,.L_5CB0-_EDIT_FIND@0
.L_5CB1:
.L_5C9F:
.L_5C60:
.L_5C5F:
.L_5C5A:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,588,.L_5C5A-_EDIT_FIND@0
	.stabs "HWND:397=*21",128,0,0,-4
	.stabn 192,0,0,.L_5C59-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C5D-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C5E-_EDIT_FIND@0
	.stabs "LERR:8",128,0,0,-8
	.stabs "LEXTERR:8",128,0,0,-12
	.stabn 192,0,0,.L_5C61-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C65-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C67-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C6A-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C6C-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C6F-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C71-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C74-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C76-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C79-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C7B-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C7E-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C80-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C83-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C85-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C88-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C8A-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C8D-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C8F-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C92-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C94-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C97-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C99-_EDIT_FIND@0
	.stabn 192,0,0,.L_5C9C-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C9E-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C9F-_EDIT_FIND@0
	.stabn 224,0,0,.L_5C5A-_EDIT_FIND@0
.L_5CB2:
	.stabs "",36,0,0,.L_5CB2-_EDIT_FIND@0
	.stabs "EDIT_REPLACE:F7",36,0,589,_EDIT_REPLACE@0
.balign 16

.globl _EDIT_REPLACE@0
_EDIT_REPLACE@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,589,_EDIT_REPLACE@0-_EDIT_REPLACE@0
.L_5CB3:
.L_5CBE:
	push 1
	call _EDIT_FINDREPLACEINIT@4
	test al, al
	jne .L_5CB6
.L_5CB7:
	jmp .L_5CB4
.L_5CB6:
.L_5CB8:
.stabn 68,0,590,.L_5CBE-_EDIT_REPLACE@0
.L_5CBF:
	push offset _G_TFINDREP
	call _ReplaceTextA@4
	test eax, eax
	jne .L_5CBA
.L_5CBB:
.stabn 68,0,591,.L_5CBF-_EDIT_REPLACE@0
.L_5CC0:
	push offset _Lt_5CBC
	call _puts
	add esp, 4
.stabn 68,0,592,.L_5CC0-_EDIT_REPLACE@0
.L_5CC1:
.L_5CBD:
.L_5CBA:
.L_5CB9:
.L_5CB4:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,594,.L_5CB4-_EDIT_REPLACE@0
	.stabn 192,0,0,.L_5CB3-_EDIT_REPLACE@0
	.stabn 192,0,0,.L_5CB7-_EDIT_REPLACE@0
	.stabn 224,0,0,.L_5CB8-_EDIT_REPLACE@0
	.stabn 192,0,0,.L_5CBB-_EDIT_REPLACE@0
	.stabn 224,0,0,.L_5CBD-_EDIT_REPLACE@0
	.stabn 224,0,0,.L_5CB4-_EDIT_REPLACE@0
.L_5CC2:
	.stabs "",36,0,0,.L_5CC2-_EDIT_REPLACE@0
	.stabs "EDIT_SELECTALL:F7",36,0,595,_EDIT_SELECTALL@0
.balign 16

.globl _EDIT_SELECTALL@0
_EDIT_SELECTALL@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,595,_EDIT_SELECTALL@0-_EDIT_SELECTALL@0
.L_5CC3:
.L_5CC5:
	push -1
	push 0
	push 177
	call _GetFocus@0
	push eax
	call _SendMessageA@16
.stabn 68,0,596,.L_5CC5-_EDIT_SELECTALL@0
.L_5CC6:
.L_5CC4:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,597,.L_5CC4-_EDIT_SELECTALL@0
	.stabn 192,0,0,.L_5CC3-_EDIT_SELECTALL@0
	.stabn 224,0,0,.L_5CC4-_EDIT_SELECTALL@0
.L_5CC7:
	.stabs "",36,0,0,.L_5CC7-_EDIT_SELECTALL@0
	.stabs "EDIT_CUT:F7",36,0,598,_EDIT_CUT@0
.balign 16

.globl _EDIT_CUT@0
_EDIT_CUT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,598,_EDIT_CUT@0-_EDIT_CUT@0
.L_5CC8:
.L_5CCA:
	push 0
	push 0
	push 768
	call _GetFocus@0
	push eax
	call _SendMessageA@16
.stabn 68,0,599,.L_5CCA-_EDIT_CUT@0
.L_5CCB:
.L_5CC9:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,600,.L_5CC9-_EDIT_CUT@0
	.stabn 192,0,0,.L_5CC8-_EDIT_CUT@0
	.stabn 224,0,0,.L_5CC9-_EDIT_CUT@0
.L_5CCC:
	.stabs "",36,0,0,.L_5CCC-_EDIT_CUT@0
	.stabs "EDIT_COPY:F7",36,0,601,_EDIT_COPY@0
.balign 16

.globl _EDIT_COPY@0
_EDIT_COPY@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,601,_EDIT_COPY@0-_EDIT_COPY@0
.L_5CCD:
.L_5CCF:
	push 0
	push 0
	push 769
	call _GetFocus@0
	push eax
	call _SendMessageA@16
.stabn 68,0,602,.L_5CCF-_EDIT_COPY@0
.L_5CD0:
.L_5CCE:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,603,.L_5CCE-_EDIT_COPY@0
	.stabn 192,0,0,.L_5CCD-_EDIT_COPY@0
	.stabn 224,0,0,.L_5CCE-_EDIT_COPY@0
.L_5CD1:
	.stabs "",36,0,0,.L_5CD1-_EDIT_COPY@0
	.stabs "EDIT_PASTE:F7",36,0,604,_EDIT_PASTE@0
.balign 16

.globl _EDIT_PASTE@0
_EDIT_PASTE@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,604,_EDIT_PASTE@0-_EDIT_PASTE@0
.L_5CD2:
.L_5CD4:
	push 0
	push 0
	push 770
	call _GetFocus@0
	push eax
	call _SendMessageA@16
.stabn 68,0,605,.L_5CD4-_EDIT_PASTE@0
.L_5CD5:
.L_5CD3:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,606,.L_5CD3-_EDIT_PASTE@0
	.stabn 192,0,0,.L_5CD2-_EDIT_PASTE@0
	.stabn 224,0,0,.L_5CD3-_EDIT_PASTE@0
.L_5CD6:
	.stabs "",36,0,0,.L_5CD6-_EDIT_PASTE@0
	.stabs "CODE_CLEAROUTPUT:F7",36,0,608,_CODE_CLEAROUTPUT@0
.balign 16

.globl _CODE_CLEAROUTPUT@0
_CODE_CLEAROUTPUT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,608,_CODE_CLEAROUTPUT@0-_CODE_CLEAROUTPUT@0
.L_5CD7:
.L_5CD9:
	push offset _Lt_0000
	push dword ptr [_G_TMAINCTX+600]
	call _SetWindowTextA@8
.stabn 68,0,609,.L_5CD9-_CODE_CLEAROUTPUT@0
.L_5CDA:
.L_5CD8:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,610,.L_5CD8-_CODE_CLEAROUTPUT@0
	.stabn 192,0,0,.L_5CD7-_CODE_CLEAROUTPUT@0
	.stabn 224,0,0,.L_5CD8-_CODE_CLEAROUTPUT@0
.L_5CDB:
	.stabs "",36,0,0,.L_5CDB-_CODE_CLEAROUTPUT@0
	.stabs "COMPLETION_ENABLE:F7",36,0,612,_COMPLETION_ENABLE@0
.balign 16

.globl _COMPLETION_ENABLE@0
_COMPLETION_ENABLE@0:
	push ebp
	mov ebp, esp
	sub esp, 8
	.stabn 68,0,612,_COMPLETION_ENABLE@0-_COMPLETION_ENABLE@0
.L_5CDC:
.L_5CE6:
	push offset _Lt_5CDE
	call _puts
	add esp, 4
.stabn 68,0,613,.L_5CE6-_COMPLETION_ENABLE@0
.L_5CE7:
	mov eax, dword ptr [_G_CURITEMSTATE]
	xor eax, 8
	mov dword ptr [ebp-4], eax
.stabn 68,0,614,.L_5CE7-_COMPLETION_ENABLE@0
.L_5CE8:
	push dword ptr [ebp-4]
	push dword ptr [_G_CURITEMID]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,615,.L_5CE8-_COMPLETION_ENABLE@0
.L_5CE9:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5CDF
	mov dword ptr [ebp-8], 0
	jmp .L_5CE5
.L_5CDF:
	mov dword ptr [ebp-8], 1
.L_5CE5:
	push dword ptr [ebp-8]
	push 1020
	push dword ptr [_G_HCURMENU]
	call _EnableMenuItem@12
.stabn 68,0,616,.L_5CE9-_COMPLETION_ENABLE@0
.L_5CEA:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	test eax, eax
	jne .L_5CE2
.L_5CE3:
	push 0
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.L_5CE2:
.L_5CE4:
.stabn 68,0,617,.L_5CEA-_COMPLETION_ENABLE@0
.L_5CEB:
.L_5CDD:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,618,.L_5CDD-_COMPLETION_ENABLE@0
	.stabs "ITOGGLEDSTATE:1",128,0,0,-4
	.stabn 192,0,0,.L_5CDC-_COMPLETION_ENABLE@0
	.stabn 192,0,0,.L_5CE3-_COMPLETION_ENABLE@0
	.stabn 224,0,0,.L_5CE4-_COMPLETION_ENABLE@0
	.stabn 224,0,0,.L_5CDD-_COMPLETION_ENABLE@0
.L_5CEC:
	.stabs "",36,0,0,.L_5CEC-_COMPLETION_ENABLE@0
	.stabs "COMPLETION_CLEARFILTERS:F7",36,0,619,_COMPLETION_CLEARFILTERS@0
.balign 16

.globl _COMPLETION_CLEARFILTERS@0
_COMPLETION_CLEARFILTERS@0:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,619,_COMPLETION_CLEARFILTERS@0-_COMPLETION_CLEARFILTERS@0
.L_5CED:
.L_5CF8:
	push offset _Lt_5CEF
	call _puts
	add esp, 4
.stabn 68,0,620,.L_5CF8-_COMPLETION_CLEARFILTERS@0
.L_5CF9:
	mov dword ptr [_G_FILTERFLAGS], 0
.stabn 68,0,621,.L_5CF9-_COMPLETION_CLEARFILTERS@0
.L_5CFA:
.L_5CF0:
	mov dword ptr [ebp-4], 1023
.L_5CF4:
.L_5CF5:
.stabn 68,0,622,.L_5CFA-_COMPLETION_CLEARFILTERS@0
.L_5CFB:
	push dword ptr [_G_CURITEMSTATE]
	push dword ptr [ebp-4]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,623,.L_5CFB-_COMPLETION_CLEARFILTERS@0
.L_5CFC:
.L_5CF6:
.L_5CF2:
	inc dword ptr [ebp-4]
.L_5CF1:
	cmp dword ptr [ebp-4], 1035
	jle .L_5CF4
.L_5CF3:
.L_5CF7:
.stabn 68,0,624,.L_5CFC-_COMPLETION_CLEARFILTERS@0
.L_5CFD:
.L_5CEE:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,625,.L_5CEE-_COMPLETION_CLEARFILTERS@0
	.stabn 192,0,0,.L_5CED-_COMPLETION_CLEARFILTERS@0
	.stabs "N:1",128,0,0,-4
	.stabn 192,0,0,.L_5CF0-_COMPLETION_CLEARFILTERS@0
	.stabn 192,0,0,.L_5CF5-_COMPLETION_CLEARFILTERS@0
	.stabn 224,0,0,.L_5CF6-_COMPLETION_CLEARFILTERS@0
	.stabn 224,0,0,.L_5CF7-_COMPLETION_CLEARFILTERS@0
	.stabn 224,0,0,.L_5CEE-_COMPLETION_CLEARFILTERS@0
.L_5CFE:
	.stabs "",36,0,0,.L_5CFE-_COMPLETION_CLEARFILTERS@0
	.stabs "COMPLETION_INVERTFILTERS:F7",36,0,626,_COMPLETION_INVERTFILTERS@0
.balign 16

.globl _COMPLETION_INVERTFILTERS@0
_COMPLETION_INVERTFILTERS@0:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,626,_COMPLETION_INVERTFILTERS@0-_COMPLETION_INVERTFILTERS@0
.L_5CFF:
.L_5D0A:
	push offset _Lt_5D01
	call _puts
	add esp, 4
.stabn 68,0,627,.L_5D0A-_COMPLETION_INVERTFILTERS@0
.L_5D0B:
.L_5D02:
	mov dword ptr [ebp-4], 1023
.L_5D06:
.L_5D07:
.stabn 68,0,628,.L_5D0B-_COMPLETION_INVERTFILTERS@0
.L_5D0C:
	mov ax, word ptr [ebp-4]
	push eax
	call __ZN4MENU7TRIGGEREt@4
.stabn 68,0,629,.L_5D0C-_COMPLETION_INVERTFILTERS@0
.L_5D0D:
.L_5D08:
.L_5D04:
	inc dword ptr [ebp-4]
.L_5D03:
	cmp dword ptr [ebp-4], 1035
	jle .L_5D06
.L_5D05:
.L_5D09:
.stabn 68,0,630,.L_5D0D-_COMPLETION_INVERTFILTERS@0
.L_5D0E:
.L_5D00:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,631,.L_5D00-_COMPLETION_INVERTFILTERS@0
	.stabn 192,0,0,.L_5CFF-_COMPLETION_INVERTFILTERS@0
	.stabs "N:1",128,0,0,-4
	.stabn 192,0,0,.L_5D02-_COMPLETION_INVERTFILTERS@0
	.stabn 192,0,0,.L_5D07-_COMPLETION_INVERTFILTERS@0
	.stabn 224,0,0,.L_5D08-_COMPLETION_INVERTFILTERS@0
	.stabn 224,0,0,.L_5D09-_COMPLETION_INVERTFILTERS@0
	.stabn 224,0,0,.L_5D00-_COMPLETION_INVERTFILTERS@0
.L_5D0F:
	.stabs "",36,0,0,.L_5D0F-_COMPLETION_INVERTFILTERS@0
	.stabs "COMPLETION_TOGGLE:F7",36,0,632,_COMPLETION_TOGGLE@0
.balign 16

.globl _COMPLETION_TOGGLE@0
_COMPLETION_TOGGLE@0:
	push ebp
	mov ebp, esp
	sub esp, 8
	.stabn 68,0,632,_COMPLETION_TOGGLE@0-_COMPLETION_TOGGLE@0
.L_5D10:
.L_5D70:
	mov eax, dword ptr [_G_CURITEMSTATE]
	xor eax, 8
	mov dword ptr [ebp-4], eax
.stabn 68,0,633,.L_5D70-_COMPLETION_TOGGLE@0
.L_5D71:
	push dword ptr [ebp-4]
	push dword ptr [_G_CURITEMID]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,634,.L_5D71-_COMPLETION_TOGGLE@0
.L_5D72:
.L_5D12:
	cmp dword ptr [_G_CURITEMID], 1023
	jne .L_5D14
.L_5D15:
.L_5D16:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D17
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 32768
	mov dword ptr [ebp-8], eax
	jmp .L_5D63
.L_5D17:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -32769
	mov dword ptr [ebp-8], eax
.L_5D63:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,637,.L_5D72-_COMPLETION_TOGGLE@0
.L_5D73:
.L_5D19:
	jmp .L_5D13
.L_5D14:
	cmp dword ptr [_G_CURITEMID], 1024
	jne .L_5D1A
.L_5D1B:
.L_5D1C:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D1D
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 1
	mov dword ptr [ebp-8], eax
	jmp .L_5D64
.L_5D1D:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -2
	mov dword ptr [ebp-8], eax
.L_5D64:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,638,.L_5D73-_COMPLETION_TOGGLE@0
.L_5D74:
.L_5D1F:
	jmp .L_5D13
.L_5D1A:
	cmp dword ptr [_G_CURITEMID], 1025
	jne .L_5D20
.L_5D21:
.L_5D22:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D23
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 8
	mov dword ptr [ebp-8], eax
	jmp .L_5D65
.L_5D23:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -9
	mov dword ptr [ebp-8], eax
.L_5D65:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,639,.L_5D74-_COMPLETION_TOGGLE@0
.L_5D75:
.L_5D25:
	jmp .L_5D13
.L_5D20:
	cmp dword ptr [_G_CURITEMID], 1026
	jne .L_5D26
.L_5D27:
.L_5D28:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D29
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 128
	mov dword ptr [ebp-8], eax
	jmp .L_5D66
.L_5D29:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -129
	mov dword ptr [ebp-8], eax
.L_5D66:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,640,.L_5D75-_COMPLETION_TOGGLE@0
.L_5D76:
.L_5D2B:
	jmp .L_5D13
.L_5D26:
	cmp dword ptr [_G_CURITEMID], 1027
	jne .L_5D2C
.L_5D2D:
.L_5D2E:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D2F
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 16
	mov dword ptr [ebp-8], eax
	jmp .L_5D67
.L_5D2F:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -17
	mov dword ptr [ebp-8], eax
.L_5D67:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,641,.L_5D76-_COMPLETION_TOGGLE@0
.L_5D77:
.L_5D31:
	jmp .L_5D13
.L_5D2C:
	cmp dword ptr [_G_CURITEMID], 1028
	jne .L_5D32
.L_5D33:
.L_5D34:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D35
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 256
	mov dword ptr [ebp-8], eax
	jmp .L_5D68
.L_5D35:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -257
	mov dword ptr [ebp-8], eax
.L_5D68:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,642,.L_5D77-_COMPLETION_TOGGLE@0
.L_5D78:
.L_5D37:
	jmp .L_5D13
.L_5D32:
	cmp dword ptr [_G_CURITEMID], 1029
	jne .L_5D38
.L_5D39:
.L_5D3A:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D3B
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 32
	mov dword ptr [ebp-8], eax
	jmp .L_5D69
.L_5D3B:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -33
	mov dword ptr [ebp-8], eax
.L_5D69:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,643,.L_5D78-_COMPLETION_TOGGLE@0
.L_5D79:
.L_5D3D:
	jmp .L_5D13
.L_5D38:
	cmp dword ptr [_G_CURITEMID], 1030
	jne .L_5D3E
.L_5D3F:
.L_5D40:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D41
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 4
	mov dword ptr [ebp-8], eax
	jmp .L_5D6A
.L_5D41:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -5
	mov dword ptr [ebp-8], eax
.L_5D6A:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,644,.L_5D79-_COMPLETION_TOGGLE@0
.L_5D7A:
.L_5D43:
	jmp .L_5D13
.L_5D3E:
	cmp dword ptr [_G_CURITEMID], 1031
	jne .L_5D44
.L_5D45:
.L_5D46:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D47
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 64
	mov dword ptr [ebp-8], eax
	jmp .L_5D6B
.L_5D47:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -65
	mov dword ptr [ebp-8], eax
.L_5D6B:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,645,.L_5D7A-_COMPLETION_TOGGLE@0
.L_5D7B:
.L_5D49:
	jmp .L_5D13
.L_5D44:
	cmp dword ptr [_G_CURITEMID], 1032
	jne .L_5D4A
.L_5D4B:
.L_5D4C:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D4D
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 2
	mov dword ptr [ebp-8], eax
	jmp .L_5D6C
.L_5D4D:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -3
	mov dword ptr [ebp-8], eax
.L_5D6C:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,646,.L_5D7B-_COMPLETION_TOGGLE@0
.L_5D7C:
.L_5D4F:
	jmp .L_5D13
.L_5D4A:
	cmp dword ptr [_G_CURITEMID], 1033
	jne .L_5D50
.L_5D51:
.L_5D52:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D53
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 512
	mov dword ptr [ebp-8], eax
	jmp .L_5D6D
.L_5D53:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -513
	mov dword ptr [ebp-8], eax
.L_5D6D:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,647,.L_5D7C-_COMPLETION_TOGGLE@0
.L_5D7D:
.L_5D55:
	jmp .L_5D13
.L_5D50:
	cmp dword ptr [_G_CURITEMID], 1034
	jne .L_5D56
.L_5D57:
.L_5D58:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D59
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 2048
	mov dword ptr [ebp-8], eax
	jmp .L_5D6E
.L_5D59:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -2049
	mov dword ptr [ebp-8], eax
.L_5D6E:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,648,.L_5D7D-_COMPLETION_TOGGLE@0
.L_5D7E:
.L_5D5B:
	jmp .L_5D13
.L_5D56:
	cmp dword ptr [_G_CURITEMID], 1035
	jne .L_5D5C
.L_5D5D:
.L_5D5E:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	je .L_5D5F
	mov eax, dword ptr [_G_FILTERFLAGS]
	or eax, 1024
	mov dword ptr [ebp-8], eax
	jmp .L_5D6F
.L_5D5F:
	mov eax, dword ptr [_G_FILTERFLAGS]
	and eax, -1025
	mov dword ptr [ebp-8], eax
.L_5D6F:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_FILTERFLAGS], eax
.stabn 68,0,649,.L_5D7E-_COMPLETION_TOGGLE@0
.L_5D7F:
.L_5D61:
.L_5D5C:
.L_5D13:
.L_5D62:
.L_5D11:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,651,.L_5D11-_COMPLETION_TOGGLE@0
	.stabs "ITOGGLEDSTATE:1",128,0,0,-4
	.stabn 192,0,0,.L_5D10-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D12-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D16-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D19-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D1C-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D1F-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D22-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D25-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D28-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D2B-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D2E-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D31-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D34-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D37-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D3A-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D3D-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D40-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D43-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D46-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D49-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D4C-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D4F-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D52-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D55-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D58-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D5B-_COMPLETION_TOGGLE@0
	.stabn 192,0,0,.L_5D5E-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D61-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D62-_COMPLETION_TOGGLE@0
	.stabn 224,0,0,.L_5D11-_COMPLETION_TOGGLE@0
.L_5D80:
	.stabs "",36,0,0,.L_5D80-_COMPLETION_TOGGLE@0
	.stabs "VIEW_TOGGLEGW:F7",36,0,652,_VIEW_TOGGLEGW@0
.balign 16

.globl _VIEW_TOGGLEGW@0
_VIEW_TOGGLEGW@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,652,_VIEW_TOGGLEGW@0-_VIEW_TOGGLEGW@0
.L_5D81:
.L_5D99:
	mov eax, dword ptr [_G_CURITEMSTATE]
	xor eax, 8
	mov dword ptr [ebp-4], eax
.stabn 68,0,653,.L_5D99-_VIEW_TOGGLEGW@0
.L_5D9A:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov bl, al
	mov byte ptr [_G_SHOW3D], bl
.stabn 68,0,654,.L_5D9A-_VIEW_TOGGLEGW@0
.L_5D9C:
	cmp dword ptr [_G_GFXHWND], 0
	je .L_5D84
.L_5D85:
.stabn 68,0,655,.L_5D9C-_VIEW_TOGGLEGW@0
.L_5D9D:
	movsx ebx, byte ptr [_G_SHOW3D]
	test ebx, ebx
	je .L_5D86
	mov dword ptr [ebp-8], 8
	jmp .L_5D97
.L_5D86:
	mov dword ptr [ebp-8], 0
.L_5D97:
	push dword ptr [ebp-8]
	push dword ptr [_G_GFXHWND]
	call _ShowWindow@8
.stabn 68,0,656,.L_5D9D-_VIEW_TOGGLEGW@0
.L_5D9E:
	movsx ebx, byte ptr [_G_SHOW3D]
	test ebx, ebx
	je .L_5D89
.L_5D8A:
.stabn 68,0,657,.L_5D9E-_VIEW_TOGGLEGW@0
.L_5D9F:
	push 19
	push 0
	push 0
	push 0
	push 0
	push 4294967295
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,658,.L_5D9F-_VIEW_TOGGLEGW@0
.L_5DA0:
	push 19
	push 0
	push 0
	push 0
	push 0
	push 4294967294
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,659,.L_5DA0-_VIEW_TOGGLEGW@0
.L_5DA1:
.L_5D8B:
.L_5D89:
.L_5D88:
.L_5D8C:
.L_5D84:
.L_5D83:
	push dword ptr [ebp-4]
	push dword ptr [_G_CURITEMID]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,662,.L_5DA1-_VIEW_TOGGLEGW@0
.L_5DA2:
.L_5D8D:
	mov dword ptr [ebp-8], 1039
.L_5D91:
.L_5D92:
.stabn 68,0,663,.L_5DA2-_VIEW_TOGGLEGW@0
.L_5DA3:
	mov ebx, dword ptr [ebp-4]
	and ebx, 8
	je .L_5D93
	mov dword ptr [ebp-12], 0
	jmp .L_5D98
.L_5D93:
	mov dword ptr [ebp-12], 1
.L_5D98:
	push dword ptr [ebp-12]
	push dword ptr [ebp-8]
	push dword ptr [_G_HCURMENU]
	call _EnableMenuItem@12
.stabn 68,0,664,.L_5DA3-_VIEW_TOGGLEGW@0
.L_5DA4:
.L_5D95:
.L_5D8F:
	inc dword ptr [ebp-8]
.L_5D8E:
	cmp dword ptr [ebp-8], 1046
	jle .L_5D91
.L_5D90:
.L_5D96:
.stabn 68,0,665,.L_5DA4-_VIEW_TOGGLEGW@0
.L_5DA5:
.L_5D82:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,666,.L_5D82-_VIEW_TOGGLEGW@0
	.stabs "ITOGGLEDSTATE:1",128,0,0,-4
	.stabn 192,0,0,.L_5D81-_VIEW_TOGGLEGW@0
	.stabn 192,0,0,.L_5D85-_VIEW_TOGGLEGW@0
	.stabn 192,0,0,.L_5D8A-_VIEW_TOGGLEGW@0
	.stabn 224,0,0,.L_5D8B-_VIEW_TOGGLEGW@0
	.stabn 224,0,0,.L_5D8C-_VIEW_TOGGLEGW@0
	.stabs "N:1",128,0,0,-8
	.stabn 192,0,0,.L_5D8D-_VIEW_TOGGLEGW@0
	.stabn 192,0,0,.L_5D92-_VIEW_TOGGLEGW@0
	.stabn 224,0,0,.L_5D95-_VIEW_TOGGLEGW@0
	.stabn 224,0,0,.L_5D96-_VIEW_TOGGLEGW@0
	.stabn 224,0,0,.L_5D82-_VIEW_TOGGLEGW@0
.L_5DA6:
	.stabs "",36,0,0,.L_5DA6-_VIEW_TOGGLEGW@0
	.stabs "VIEW_TOGGLEGWDOCK:F7",36,0,667,_VIEW_TOGGLEGWDOCK@0
.balign 16

.globl _VIEW_TOGGLEGWDOCK@0
_VIEW_TOGGLEGWDOCK@0:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,667,_VIEW_TOGGLEGWDOCK@0-_VIEW_TOGGLEGWDOCK@0
.L_5DA7:
.L_5DB0:
	mov eax, dword ptr [_G_CURITEMSTATE]
	xor eax, 8
	mov dword ptr [ebp-4], eax
.stabn 68,0,668,.L_5DB0-_VIEW_TOGGLEGWDOCK@0
.L_5DB1:
	mov eax, dword ptr [ebp-4]
	and eax, 8
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov bl, al
	mov byte ptr [_G_DOCK3D], bl
.stabn 68,0,669,.L_5DB1-_VIEW_TOGGLEGWDOCK@0
.L_5DB3:
	movsx ebx, byte ptr [_G_DOCK3D]
	test ebx, ebx
	je .L_5DA9
	cmp dword ptr [_G_GFXHWND], 0
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-8], ebx
	jmp .L_5DAF
.L_5DA9:
	mov dword ptr [ebp-8], 0
.L_5DAF:
	cmp dword ptr [ebp-8], 0
	je .L_5DAC
.L_5DAD:
	call _DOCKGFXWINDOW@0
.L_5DAC:
.L_5DAE:
.stabn 68,0,670,.L_5DB3-_VIEW_TOGGLEGWDOCK@0
.L_5DB5:
	push dword ptr [ebp-4]
	push dword ptr [_G_CURITEMID]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,671,.L_5DB5-_VIEW_TOGGLEGWDOCK@0
.L_5DB6:
.L_5DA8:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,672,.L_5DA8-_VIEW_TOGGLEGWDOCK@0
	.stabs "ITOGGLEDSTATE:1",128,0,0,-4
	.stabn 192,0,0,.L_5DA7-_VIEW_TOGGLEGWDOCK@0
	.stabn 192,0,0,.L_5DAD-_VIEW_TOGGLEGWDOCK@0
	.stabn 224,0,0,.L_5DAE-_VIEW_TOGGLEGWDOCK@0
	.stabn 224,0,0,.L_5DA8-_VIEW_TOGGLEGWDOCK@0
.L_5DB7:
	.stabs "",36,0,0,.L_5DB7-_VIEW_TOGGLEGWDOCK@0
	.stabs "VIEW_TOGGLEKEY:F7",36,0,673,_VIEW_TOGGLEKEY@0
.balign 16

.globl _VIEW_TOGGLEKEY@0
_VIEW_TOGGLEKEY@0:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,673,_VIEW_TOGGLEKEY@0-_VIEW_TOGGLEKEY@0
.L_5DB8:
.L_5DD4:
	push dword ptr [_G_GFXHWND]
	call _IsWindow@4
	test eax, eax
	jne .L_5DBB
.L_5DBC:
	jmp .L_5DB9
.L_5DBB:
.L_5DBD:
.stabn 68,0,674,.L_5DD4-_VIEW_TOGGLEKEY@0
.L_5DD5:
	mov dword ptr [ebp-4], 0
	mov byte ptr [ebp-8], 0
.stabn 68,0,675,.L_5DD5-_VIEW_TOGGLEKEY@0
.L_5DD6:
.L_5DBE:
	cmp dword ptr [_G_CURITEMID], 1039
	jne .L_5DC0
.L_5DC1:
.L_5DC2:
.stabn 68,0,678,.L_5DD6-_VIEW_TOGGLEKEY@0
.L_5DD7:
	movzx eax, byte ptr [__ZN6VIEWER14BSHOWCOLLISIONE]
	neg eax
	test eax, eax
	jne .L_5DC3
	mov dword ptr [ebp-12], 8
	jmp .L_5DD3
.L_5DC3:
	mov dword ptr [ebp-12], 0
.L_5DD3:
	push dword ptr [ebp-12]
	push 1039
	push dword ptr [_G_WNDMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,679,.L_5DD7-_VIEW_TOGGLEKEY@0
.L_5DD8:
	mov dword ptr [ebp-4], 32
.stabn 68,0,680,.L_5DD8-_VIEW_TOGGLEKEY@0
.L_5DD9:
.L_5DC5:
	jmp .L_5DBF
.L_5DC0:
.L_5DC7:
	push offset _Lt_5DC8
	call _puts
	add esp, 4
	jmp .L_5DB9
.stabn 68,0,681,.L_5DD9-_VIEW_TOGGLEKEY@0
.L_5DDA:
.L_5DC9:
.L_5DC6:
.L_5DBF:
.L_5DCA:
	movsx eax, byte ptr [ebp-8]
	test eax, eax
	je .L_5DCC
.L_5DCD:
	push 0
	push 16
	push 256
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.L_5DCC:
.L_5DCE:
.stabn 68,0,684,.L_5DDA-_VIEW_TOGGLEKEY@0
.L_5DDB:
	push 0
	push dword ptr [ebp-4]
	push 256
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,685,.L_5DDB-_VIEW_TOGGLEKEY@0
.L_5DDC:
	push 0
	push dword ptr [ebp-4]
	push 257
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,686,.L_5DDC-_VIEW_TOGGLEKEY@0
.L_5DDD:
	movsx eax, byte ptr [ebp-8]
	test eax, eax
	je .L_5DD0
.L_5DD1:
	push 0
	push 16
	push 257
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.L_5DD0:
.L_5DD2:
.stabn 68,0,687,.L_5DDD-_VIEW_TOGGLEKEY@0
.L_5DDE:
.L_5DB9:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,688,.L_5DB9-_VIEW_TOGGLEKEY@0
	.stabs "VK:1",128,0,0,-4
	.stabs "SFT:2",128,0,0,-8
	.stabn 192,0,0,.L_5DB8-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DBC-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DBD-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DBE-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DC2-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DC5-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DC7-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DC9-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DCA-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DCD-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DCE-_VIEW_TOGGLEKEY@0
	.stabn 192,0,0,.L_5DD1-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DD2-_VIEW_TOGGLEKEY@0
	.stabn 224,0,0,.L_5DB9-_VIEW_TOGGLEKEY@0
.L_5DDF:
	.stabs "",36,0,0,.L_5DDF-_VIEW_TOGGLEKEY@0
	.stabs "VIEW_KEY:F7",36,0,689,_VIEW_KEY@0
.balign 16

.globl _VIEW_KEY@0
_VIEW_KEY@0:
	push ebp
	mov ebp, esp
	sub esp, 8
	.stabn 68,0,689,_VIEW_KEY@0-_VIEW_KEY@0
.L_5DE0:
.L_5E11:
	push dword ptr [_G_GFXHWND]
	call _IsWindow@4
	test eax, eax
	jne .L_5DE3
.L_5DE4:
	jmp .L_5DE1
.L_5DE3:
.L_5DE5:
.stabn 68,0,690,.L_5E11-_VIEW_KEY@0
.L_5E12:
	mov dword ptr [ebp-4], 0
	mov byte ptr [ebp-8], 0
.stabn 68,0,691,.L_5E12-_VIEW_KEY@0
.L_5E13:
.L_5DE6:
	cmp dword ptr [_G_CURITEMID], 1038
	jne .L_5DE8
.L_5DE9:
.L_5DEA:
	mov dword ptr [ebp-4], 46
	mov byte ptr [ebp-8], 1
.stabn 68,0,693,.L_5E13-_VIEW_KEY@0
.L_5E14:
.L_5DEB:
	jmp .L_5DE7
.L_5DE8:
	cmp dword ptr [_G_CURITEMID], 1040
	jne .L_5DEC
.L_5DED:
.L_5DEE:
	mov dword ptr [ebp-4], 8
.stabn 68,0,694,.L_5E14-_VIEW_KEY@0
.L_5E15:
.L_5DEF:
	jmp .L_5DE7
.L_5DEC:
	cmp dword ptr [_G_CURITEMID], 1041
	jne .L_5DF0
.L_5DF1:
.L_5DF2:
	mov dword ptr [ebp-4], 107
.stabn 68,0,695,.L_5E15-_VIEW_KEY@0
.L_5E16:
.L_5DF3:
	jmp .L_5DE7
.L_5DF0:
	cmp dword ptr [_G_CURITEMID], 1042
	jne .L_5DF4
.L_5DF5:
.L_5DF6:
	mov dword ptr [ebp-4], 109
.stabn 68,0,696,.L_5E16-_VIEW_KEY@0
.L_5E17:
.L_5DF7:
	jmp .L_5DE7
.L_5DF4:
	cmp dword ptr [_G_CURITEMID], 1044
	jne .L_5DF8
.L_5DF9:
.L_5DFA:
	mov dword ptr [ebp-4], 8
	mov byte ptr [ebp-8], 1
.stabn 68,0,697,.L_5E17-_VIEW_KEY@0
.L_5E18:
.L_5DFB:
	jmp .L_5DE7
.L_5DF8:
	cmp dword ptr [_G_CURITEMID], 1045
	jne .L_5DFC
.L_5DFD:
.L_5DFE:
	mov dword ptr [ebp-4], 107
	mov byte ptr [ebp-8], 1
.stabn 68,0,698,.L_5E18-_VIEW_KEY@0
.L_5E19:
.L_5DFF:
	jmp .L_5DE7
.L_5DFC:
	cmp dword ptr [_G_CURITEMID], 1046
	jne .L_5E00
.L_5E01:
.L_5E02:
	mov dword ptr [ebp-4], 109
	mov byte ptr [ebp-8], 1
.stabn 68,0,699,.L_5E19-_VIEW_KEY@0
.L_5E1A:
.L_5E03:
	jmp .L_5DE7
.L_5E00:
.L_5E05:
	push offset _Lt_5E06
	call _puts
	add esp, 4
	jmp .L_5DE1
.stabn 68,0,700,.L_5E1A-_VIEW_KEY@0
.L_5E1B:
.L_5E07:
.L_5E04:
.L_5DE7:
.L_5E08:
	movsx eax, byte ptr [ebp-8]
	test eax, eax
	je .L_5E0A
.L_5E0B:
	push 0
	push 16
	push 256
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.L_5E0A:
.L_5E0C:
.stabn 68,0,703,.L_5E1B-_VIEW_KEY@0
.L_5E1C:
	push 0
	push dword ptr [ebp-4]
	push 256
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,704,.L_5E1C-_VIEW_KEY@0
.L_5E1D:
	push 0
	push dword ptr [ebp-4]
	push 257
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,705,.L_5E1D-_VIEW_KEY@0
.L_5E1E:
	movsx eax, byte ptr [ebp-8]
	test eax, eax
	je .L_5E0E
.L_5E0F:
	push 0
	push 16
	push 257
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.L_5E0E:
.L_5E10:
.stabn 68,0,706,.L_5E1E-_VIEW_KEY@0
.L_5E1F:
.L_5DE1:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,707,.L_5DE1-_VIEW_KEY@0
	.stabs "VK:1",128,0,0,-4
	.stabs "SFT:2",128,0,0,-8
	.stabn 192,0,0,.L_5DE0-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DE4-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DE5-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DE6-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DEA-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DEB-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DEE-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DEF-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DF2-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DF3-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DF6-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DF7-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DFA-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DFB-_VIEW_KEY@0
	.stabn 192,0,0,.L_5DFE-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DFF-_VIEW_KEY@0
	.stabn 192,0,0,.L_5E02-_VIEW_KEY@0
	.stabn 224,0,0,.L_5E03-_VIEW_KEY@0
	.stabn 192,0,0,.L_5E05-_VIEW_KEY@0
	.stabn 224,0,0,.L_5E07-_VIEW_KEY@0
	.stabn 224,0,0,.L_5E08-_VIEW_KEY@0
	.stabn 192,0,0,.L_5E0B-_VIEW_KEY@0
	.stabn 224,0,0,.L_5E0C-_VIEW_KEY@0
	.stabn 192,0,0,.L_5E0F-_VIEW_KEY@0
	.stabn 224,0,0,.L_5E10-_VIEW_KEY@0
	.stabn 224,0,0,.L_5DE1-_VIEW_KEY@0
.L_5E20:
	.stabs "",36,0,0,.L_5E20-_VIEW_KEY@0
	.stabs "VIEW_TOGGLE:F7",36,0,708,_VIEW_TOGGLE@0
.balign 16

.globl _VIEW_TOGGLE@0
_VIEW_TOGGLE@0:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,708,_VIEW_TOGGLE@0-_VIEW_TOGGLE@0
.L_5E21:
.L_5E27:
	push dword ptr [_G_GFXHWND]
	call _IsWindow@4
	test eax, eax
	jne .L_5E24
.L_5E25:
	jmp .L_5E22
.L_5E24:
.L_5E26:
.stabn 68,0,709,.L_5E27-_VIEW_TOGGLE@0
.L_5E28:
	mov eax, dword ptr [_G_CURITEMSTATE]
	xor eax, 8
	mov dword ptr [ebp-4], eax
.stabn 68,0,711,.L_5E28-_VIEW_TOGGLE@0
.L_5E29:
	push dword ptr [ebp-4]
	push dword ptr [_G_CURITEMID]
	push dword ptr [_G_HCURMENU]
	call __ZN4MENU9MENUSTATEEPvii@12
.stabn 68,0,712,.L_5E29-_VIEW_TOGGLE@0
.L_5E2A:
	push 0
	push 9
	push 256
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,713,.L_5E2A-_VIEW_TOGGLE@0
.L_5E2B:
	push 0
	push 9
	push 257
	push dword ptr [_G_GFXHWND]
	call _SendMessageA@16
.stabn 68,0,714,.L_5E2B-_VIEW_TOGGLE@0
.L_5E2C:
.L_5E22:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,715,.L_5E22-_VIEW_TOGGLE@0
	.stabs "ITOGGLEDSTATE:1",128,0,0,-4
	.stabn 192,0,0,.L_5E21-_VIEW_TOGGLE@0
	.stabn 192,0,0,.L_5E25-_VIEW_TOGGLE@0
	.stabn 224,0,0,.L_5E26-_VIEW_TOGGLE@0
	.stabn 224,0,0,.L_5E22-_VIEW_TOGGLE@0
.L_5E2D:
	.stabs "",36,0,0,.L_5E2D-_VIEW_TOGGLE@0
	.stabs "HELP_ABOUT:F7",36,0,716,_HELP_ABOUT@0
.balign 16

.globl _HELP_ABOUT@0
_HELP_ABOUT@0:
	push ebp
	mov ebp, esp
	.stabn 68,0,716,_HELP_ABOUT@0-_HELP_ABOUT@0
.L_5E2E:
.L_5E31:
	push offset _Lt_5E30
	call _puts
	add esp, 4
.stabn 68,0,717,.L_5E31-_HELP_ABOUT@0
.L_5E32:
.L_5E2F:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,718,.L_5E2F-_HELP_ABOUT@0
	.stabn 192,0,0,.L_5E2E-_HELP_ABOUT@0
	.stabn 224,0,0,.L_5E2F-_HELP_ABOUT@0
.L_5E33:
	.stabs "",36,0,0,.L_5E33-_HELP_ABOUT@0
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_5F61
.L_5F61:
	.stabs "CREATEMAINMENU:F398=*324",36,0,140,_CREATEMAINMENU@0
.balign 16

.globl _CREATEMAINMENU@0
_CREATEMAINMENU@0:
	push ebp
	mov ebp, esp
	sub esp, 244
	.stabn 68,0,140,_CREATEMAINMENU@0-_CREATEMAINMENU@0
	mov dword ptr [ebp-4], 0
.L_5E34:
##   #macro _SubMenu( _sText... )    scope      var hMenu = Menu.AddSubMenu( hMenu , _sText )   #endmacro
##   #define _EndSubMenu() end scope   
##   #define _Separator() Menu.MenuAddEntry( hMenu )
##   #macro _Entry( _idName , _Text , _Modifiers , _Accelerator , _Callback... )            #if len(#_Accelerator)                  #if (_Modifiers and _Shift)            #define _sShift "Shift+"         #else            #define _sShift         #endif         #if (_Modifiers and _Ctrl)            #define _sCtrl "Ctrl+"         #else            #define _sCtrl         #endif         #if (_Modifiers and _Alt)            #define _sAlt "Alt+"         #else            #define _sAlt         #endif         #if _Accelerator >= VK_F1 and _Accelerator <= VK_F24            #define _sKey "F" & (_Accelerator-((VK_F1)-1))         #elseif _Accelerator >= asc("A") and _Accelerator <= asc("Z")                      #define _sKey +chr(_Accelerator)         #else            #define _sKey s##_Accelerator         #endif         const _sText2 = _Text !"\t" _sCtrl _sAlt _sShift _sKey         #undef _sCtrl         #undef _sAlt         #undef _sShift         #undef _sKey      #else         const _sText2 = _Text      #endif            Menu.MenuAddEntry( hMenu , _idName , _sText2 , _Callback )      #undef _sText2         #endmacro     
.L_5F62:
##   var hMenu = CreateMenu() : g_WndMenu = hMenu      
	call _CreateMenu@0
	mov dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_WNDMENU], eax
.stabn 68,0,184,.L_5F62-_CREATEMAINMENU@0
.L_5F63:
##   ForEachMenuEntry( _Entry ,,  _SubMenu ,, _EndSubMenu ,, _Separator )) [Macro Expansion: _SubMenu( "&File" )scope
.L_5E36:
## var hMenu = Menu.AddSubMenu( hMenu , "&File" )
	push 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	push 0
	push 6
	push offset _Lt_5E37
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-8]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-24], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
## _Entry( meFile_New , "&New" , _Ctrl FCONTROL , VK_N , @File_New )#if len($"VK_N") 
.stabn 68,0,186,.L_5F63-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_N >= VK_F1 and VK_N <= VK_F24
## #define _sKey "F" & (VK_N-((VK_F1)-1)) #elseif VK_N >= asc("A") and VK_N <= asc("Z") 
## #define _sKey +chr(VK_N)
## #else
## #define _sKey sVK_N #endif
.L_5F64:
## const _sText2 = "&New" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_N)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&New" #endif 
## Menu.MenuAddEntry( hMenu , meFile_New , _sText2 , @File_New )
	push 0
	push offset _FILE_NEW@0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	push 0
	push 12
	push offset _Lt_5E40
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-36]
	push eax
	push 1001
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F64-_CREATEMAINMENU@0
## _Entry( meFile_open , "&Open" , _Ctrl FCONTROL , VK_O , @File_Open )#if len($"VK_O") 
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_O >= VK_F1 and VK_O <= VK_F24
## #define _sKey "F" & (VK_O-((VK_F1)-1)) #elseif VK_O >= asc("A") and VK_O <= asc("Z") 
## #define _sKey +chr(VK_O)
## #else
## #define _sKey sVK_O #endif
.L_5F65:
## const _sText2 = "&Open" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_O)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Open" #endif 
## Menu.MenuAddEntry( hMenu , meFile_open , _sText2 , @File_Open )
	push 0
	push offset _FILE_OPEN@0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	push 0
	push 13
	push offset _Lt_5E47
	push -1
	lea eax, [ebp-48]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-48]
	push eax
	push 1002
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-48]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F65-_CREATEMAINMENU@0
## _Entry( meFile_Save , "&Save" , _Ctrl FCONTROL , VK_S , @File_Save )#if len($"VK_S") 
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_S >= VK_F1 and VK_S <= VK_F24
## #define _sKey "F" & (VK_S-((VK_F1)-1)) #elseif VK_S >= asc("A") and VK_S <= asc("Z") 
## #define _sKey +chr(VK_S)
## #else
## #define _sKey sVK_S #endif
.L_5F66:
## const _sText2 = "&Save" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_S)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Save" #endif 
## Menu.MenuAddEntry( hMenu , meFile_Save , _sText2 , @File_Save )
	push 0
	push offset _FILE_SAVE@0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push 13
	push offset _Lt_5E4D
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-60]
	push eax
	push 1003
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F66-_CREATEMAINMENU@0
## _Entry( meFile_SaveAs , "Save &As" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_S , @File_SaveAs )#if len($"VK_S") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_S >= VK_F1 and VK_S <= VK_F24
## #define _sKey "F" & (VK_S-((VK_F1)-1)) #elseif VK_S >= asc("A") and VK_S <= asc("Z") 
## #define _sKey +chr(VK_S)
## #else
## #define _sKey sVK_S #endif
.L_5F67:
## const _sText2 = "Save &As" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_S)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Save &As" #endif 
## Menu.MenuAddEntry( hMenu , meFile_SaveAs , _sText2 , @File_SaveAs )
	push 0
	push offset _FILE_SAVEAS@0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	push 0
	push 22
	push offset _Lt_5E54
	push -1
	lea eax, [ebp-72]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-72]
	push eax
	push 1004
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F67-_CREATEMAINMENU@0
## _Entry( meFile_Close , "&Close" , _Ctrl FCONTROL , VK_W , @File_Close )#if len($"VK_W") 
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_W >= VK_F1 and VK_W <= VK_F24
## #define _sKey "F" & (VK_W-((VK_F1)-1)) #elseif VK_W >= asc("A") and VK_W <= asc("Z") 
## #define _sKey +chr(VK_W)
## #else
## #define _sKey sVK_W #endif
.L_5F68:
## const _sText2 = "&Close" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_W)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Close" #endif 
## Menu.MenuAddEntry( hMenu , meFile_Close , _sText2 , @File_Close )
	push 0
	push offset _FILE_CLOSE@0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	push 0
	push 14
	push offset _Lt_5E5B
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-84]
	push eax
	push 1005
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F68-_CREATEMAINMENU@0
.L_5F69:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-96]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-96]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
## _Entry( meFile_Import , "&Import" , _Ctrl FCONTROL , VK_I , @File_Import )#if len($"VK_I") 
.stabn 68,0,186,.L_5F69-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_I >= VK_F1 and VK_I <= VK_F24
## #define _sKey "F" & (VK_I-((VK_F1)-1)) #elseif VK_I >= asc("A") and VK_I <= asc("Z") 
## #define _sKey +chr(VK_I)
## #else
## #define _sKey sVK_I #endif
.L_5F6A:
## const _sText2 = "&Import" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_I)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Import" #endif 
## Menu.MenuAddEntry( hMenu , meFile_Import , _sText2 , @File_Import )
	push 0
	push offset _FILE_IMPORT@0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	push 0
	push 15
	push offset _Lt_5E63
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-108]
	push eax
	push 1006
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F6A-_CREATEMAINMENU@0
## _Entry( meFile_Export , "&Export" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_I , @File_Export )#if len($"VK_I") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_I >= VK_F1 and VK_I <= VK_F24
## #define _sKey "F" & (VK_I-((VK_F1)-1)) #elseif VK_I >= asc("A") and VK_I <= asc("Z") 
## #define _sKey +chr(VK_I)
## #else
## #define _sKey sVK_I #endif
.L_5F6B:
## const _sText2 = "&Export" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_I)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Export" #endif 
## Menu.MenuAddEntry( hMenu , meFile_Export , _sText2 , @File_Export )
	push 0
	push offset _FILE_EXPORT@0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	push 0
	push 21
	push offset _Lt_5E69
	push -1
	lea eax, [ebp-120]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-120]
	push eax
	push 1007
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F6B-_CREATEMAINMENU@0
.L_5F6C:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-132]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
## _Entry( meFile_Exit , "&Quit" !"\tAlt+F4" , _Ctrl FCONTROL , VK_Q , @File_Exit )#if len($"VK_Q") 
.stabn 68,0,186,.L_5F6C-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_Q >= VK_F1 and VK_Q <= VK_F24
## #define _sKey "F" & (VK_Q-((VK_F1)-1)) #elseif VK_Q >= asc("A") and VK_Q <= asc("Z") 
## #define _sKey +chr(VK_Q)
## #else
## #define _sKey sVK_Q #endif
.L_5F6D:
## const _sText2 = "&Quit" !"\tAlt+F4" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_Q)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Quit" !"\tAlt+F4" #endif 
## Menu.MenuAddEntry( hMenu , meFile_Exit , _sText2 , @File_Exit )
	push 0
	push offset _FILE_EXIT@0
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	push 0
	push 20
	push offset _Lt_5E73
	push -1
	lea eax, [ebp-144]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-144]
	push eax
	push 1008
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-144]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F6D-_CREATEMAINMENU@0
.L_5F6E:
## _EndSubMenu()end scope  
.L_5E75:
## _SubMenu( "&Edit" )scope
.L_5E76:
## var hMenu = Menu.AddSubMenu( hMenu , "&Edit" ) 
	push 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	push 0
	push 6
	push offset _Lt_5E77
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-8]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-24], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
## _Entry( meEdit_Undo , "&Undo" !"\tCtrl+Z" , , , @Edit_Undo )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Undo" !"\tCtrl+Z" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F6E-_CREATEMAINMENU@0
.L_5F6F:
## const _sText2 = "&Undo" !"\tCtrl+Z"
## #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Undo , _sText2 , @Edit_Undo )
	push 0
	push offset _EDIT_UNDO@0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	push 0
	push 13
	push offset _Lt_5E7B
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-36]
	push eax
	push 1009
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F6F-_CREATEMAINMENU@0
## _Entry( meEdit_Redo , "&Redo" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_Z , @Edit_Redo )#if len($"VK_Z") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_Z >= VK_F1 and VK_Z <= VK_F24
## #define _sKey "F" & (VK_Z-((VK_F1)-1)) #elseif VK_Z >= asc("A") and VK_Z <= asc("Z") 
## #define _sKey +chr(VK_Z)
## #else
## #define _sKey sVK_Z #endif
.L_5F70:
## const _sText2 = "&Redo" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_Z)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Redo" #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Redo , _sText2 , @Edit_Redo )
	push 0
	push offset _EDIT_REDO@0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	push 0
	push 19
	push offset _Lt_5E82
	push -1
	lea eax, [ebp-48]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-48]
	push eax
	push 1010
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-48]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F70-_CREATEMAINMENU@0
.L_5F71:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-60]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
## _Entry( meEdit_Find , "&Find" , _Ctrl FCONTROL , VK_F , @Edit_Find )#if len($"VK_F") 
.stabn 68,0,186,.L_5F71-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_F >= VK_F1 and VK_F <= VK_F24
## #define _sKey "F" & (VK_F-((VK_F1)-1)) #elseif VK_F >= asc("A") and VK_F <= asc("Z") 
## #define _sKey +chr(VK_F)
## #else
## #define _sKey sVK_F #endif
.L_5F72:
## const _sText2 = "&Find" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_F)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Find" #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Find , _sText2 , @Edit_Find )
	push 0
	push offset _EDIT_FIND@0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	push 0
	push 13
	push offset _Lt_5E89
	push -1
	lea eax, [ebp-72]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-72]
	push eax
	push 1011
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F72-_CREATEMAINMENU@0
## _Entry( meEdit_Replace , "Rep&lace" , _Ctrl FCONTROL , VK_H , @Edit_Replace )#if len($"VK_H") 
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_H >= VK_F1 and VK_H <= VK_F24
## #define _sKey "F" & (VK_H-((VK_F1)-1)) #elseif VK_H >= asc("A") and VK_H <= asc("Z") 
## #define _sKey +chr(VK_H)
## #else
## #define _sKey sVK_H #endif
.L_5F73:
## const _sText2 = "Rep&lace" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_H)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Rep&lace" #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Replace , _sText2 , @Edit_Replace )
	push 0
	push offset _EDIT_REPLACE@0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	push 0
	push 16
	push offset _Lt_5E90
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-84]
	push eax
	push 1012
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F73-_CREATEMAINMENU@0
.L_5F74:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-96]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-96]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
## _Entry( meEdit_SelAll , "&Select All" , _Ctrl FCONTROL , VK_A , @Edit_SelectAll )#if len($"VK_A") 
.stabn 68,0,186,.L_5F74-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_A >= VK_F1 and VK_A <= VK_F24
## #define _sKey "F" & (VK_A-((VK_F1)-1)) #elseif VK_A >= asc("A") and VK_A <= asc("Z") 
## #define _sKey +chr(VK_A)
## #else
## #define _sKey sVK_A #endif
.L_5F75:
## const _sText2 = "&Select All" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_A)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Select All" #endif 
## Menu.MenuAddEntry( hMenu , meEdit_SelAll , _sText2 , @Edit_SelectAll )
	push 0
	push offset _EDIT_SELECTALL@0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	push 0
	push 19
	push offset _Lt_5E97
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-108]
	push eax
	push 1013
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F75-_CREATEMAINMENU@0
.L_5F76:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-120]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-120]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
## _Entry( meEdit_Cut , "C&ut" !"\tCtrl+X" , , , @Edit_Cut )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "C&ut" !"\tCtrl+X" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F76-_CREATEMAINMENU@0
.L_5F77:
## const _sText2 = "C&ut" !"\tCtrl+X"
## #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Cut , _sText2 , @Edit_Cut )
	push 0
	push offset _EDIT_CUT@0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push 12
	push offset _Lt_5E9C
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-132]
	push eax
	push 1014
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F77-_CREATEMAINMENU@0
## _Entry( meEdit_Copy , "&Copy" !"\tCtrl+C" , , , @Edit_Copy )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Copy" !"\tCtrl+C" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F78:
## const _sText2 = "&Copy" !"\tCtrl+C"
## #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Copy , _sText2 , @Edit_Copy )
	push 0
	push offset _EDIT_COPY@0
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	push 0
	push 13
	push offset _Lt_5EA0
	push -1
	lea eax, [ebp-144]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-144]
	push eax
	push 1015
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-144]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F78-_CREATEMAINMENU@0
## _Entry( meEdit_Paste , "&Paste" !"\tCtrl+V" , , , @Edit_Paste)#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Paste" !"\tCtrl+V" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F79:
## const _sText2 = "&Paste" !"\tCtrl+V"
## #endif 
## Menu.MenuAddEntry( hMenu , meEdit_Paste , _sText2 , @Edit_Paste )
	push 0
	push offset _EDIT_PASTE@0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	push 0
	push 14
	push offset _Lt_5EA4
	push -1
	lea eax, [ebp-156]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-156]
	push eax
	push 1016
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-156]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F79-_CREATEMAINMENU@0
.L_5F7A:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-168]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-168]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-168]
	push eax
	call _fb_StrDelete@4
## _Entry( meCode_Build , "&Build" , _Ctrl FCONTROL , VK_B , @Button_Compile )#if len($"VK_B") 
.stabn 68,0,186,.L_5F7A-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_B >= VK_F1 and VK_B <= VK_F24
## #define _sKey "F" & (VK_B-((VK_F1)-1)) #elseif VK_B >= asc("A") and VK_B <= asc("Z") 
## #define _sKey +chr(VK_B)
## #else
## #define _sKey sVK_B #endif
.L_5F7B:
## const _sText2 = "&Build" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_B)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Build" #endif 
## Menu.MenuAddEntry( hMenu , meCode_Build , _sText2 , @Button_Compile )
	push 0
	push offset _BUTTON_COMPILE@0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	push 0
	push 14
	push offset _Lt_5EAB
	push -1
	lea eax, [ebp-180]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-180]
	push eax
	push 1017
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-180]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F7B-_CREATEMAINMENU@0
## _Entry( meCode_Clear , "Cl&ear output" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_B , @Code_ClearOutput )#if len($"VK_B") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_B >= VK_F1 and VK_B <= VK_F24
## #define _sKey "F" & (VK_B-((VK_F1)-1)) #elseif VK_B >= asc("A") and VK_B <= asc("Z") 
## #define _sKey +chr(VK_B)
## #else
## #define _sKey sVK_B #endif
.L_5F7C:
## const _sText2 = "Cl&ear output" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_B)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Cl&ear output" #endif 
## Menu.MenuAddEntry( hMenu , meCode_Clear , _sText2 , @Code_ClearOutput )
	push 0
	push offset _CODE_CLEAROUTPUT@0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push 27
	push offset _Lt_5EB1
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-192]
	push eax
	push 1018
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F7C-_CREATEMAINMENU@0
.L_5F7D:
## _EndSubMenu()end scope 
.L_5EB3:
## _SubMenu( "&Completion" )scope
.L_5EB4:
## var hMenu = Menu.AddSubMenu( hMenu , "&Completion" )
	push 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	push 0
	push 12
	push offset _Lt_5EB5
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-8]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-24], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
## _Entry( meCompletion_Enable , "&Enable" , _Ctrl FCONTROL , VK_E , @Completion_Enable )#if len($"VK_E") 
.stabn 68,0,186,.L_5F7D-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_E >= VK_F1 and VK_E <= VK_F24
## #define _sKey "F" & (VK_E-((VK_F1)-1)) #elseif VK_E >= asc("A") and VK_E <= asc("Z") 
## #define _sKey +chr(VK_E)
## #else
## #define _sKey sVK_E #endif
.L_5F7E:
## const _sText2 = "&Enable" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_E)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Enable" #endif 
## Menu.MenuAddEntry( hMenu , meCompletion_Enable , _sText2 , @Completion_Enable )
	push 0
	push offset _COMPLETION_ENABLE@0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	push 0
	push 15
	push offset _Lt_5EBB
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-36]
	push eax
	push 1019
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F7E-_CREATEMAINMENU@0
.L_5F7F:
## _SubMenu( "&Filters" , sbeCompletion_Filters )scope
.L_5EBD:
## var hMenu = Menu.AddSubMenu( hMenu , "&Filters" , sbeCompletion_Filters )
	push 1020
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	push 0
	push 9
	push offset _Lt_5EBE
	push -1
	lea eax, [ebp-48]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-48]
	push eax
	push dword ptr [ebp-24]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-52], eax
	lea eax, [ebp-48]
	push eax
	call _fb_StrDelete@4
## _Entry( meCompletion_ClearFilters , "C&lear" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_C , @Completion_ClearFilters )#if len($"VK_C") 
.stabn 68,0,186,.L_5F7F-_CREATEMAINMENU@0
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_C >= VK_F1 and VK_C <= VK_F24
## #define _sKey "F" & (VK_C-((VK_F1)-1)) #elseif VK_C >= asc("A") and VK_C <= asc("Z") 
## #define _sKey +chr(VK_C)
## #else
## #define _sKey sVK_C #endif
.L_5F80:
## const _sText2 = "C&lear" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_C)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "C&lear" #endif 
## Menu.MenuAddEntry( hMenu , meCompletion_ClearFilters , _sText2 , @Completion_ClearFilters )
	push 0
	push offset _COMPLETION_CLEARFILTERS@0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	push 0
	push 20
	push offset _Lt_5EC5
	push -1
	lea eax, [ebp-64]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-64]
	push eax
	push 1021
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-64]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F80-_CREATEMAINMENU@0
## _Entry( meCompletion_InvertFilters , "&Invert" , _Ctrl+FCONTROL+_Alt FALT , VK_I , @Completion_InvertFilters )#if len($"VK_I") 
## #if (FCONTROL+FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL+FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_I >= VK_F1 and VK_I <= VK_F24
## #define _sKey "F" & (VK_I-((VK_F1)-1)) #elseif VK_I >= asc("A") and VK_I <= asc("Z") 
## #define _sKey +chr(VK_I)
## #else
## #define _sKey sVK_I #endif
.L_5F81:
## const _sText2 = "&Invert" !"\t" _sCtrl "Ctrl+" _sAlt "Alt+" _sShift  _sKey+chr(VK_I)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Invert" #endif 
## Menu.MenuAddEntry( hMenu , meCompletion_InvertFilters , _sText2 , @Completion_InvertFilters )
	push 0
	push offset _COMPLETION_INVERTFILTERS@0
	mov dword ptr [ebp-76], 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	push 0
	push 19
	push offset _Lt_5ECC
	push -1
	lea eax, [ebp-76]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-76]
	push eax
	push 1022
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-76]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F81-_CREATEMAINMENU@0
.L_5F82:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-88], 0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-88]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-88]
	push eax
	push 0
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-88]
	push eax
	call _fb_StrDelete@4
## _Entry( meFilter_Variations , "&Variations" , _Alt+FALT+_Shift FSHIFT , VK_F , @Completion_Toggle )#if len($"VK_F") 
.stabn 68,0,186,.L_5F82-_CREATEMAINMENU@0
## #if (FALT+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FALT+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_F >= VK_F1 and VK_F <= VK_F24
## #define _sKey "F" & (VK_F-((VK_F1)-1)) #elseif VK_F >= asc("A") and VK_F <= asc("Z") 
## #define _sKey +chr(VK_F)
## #else
## #define _sKey sVK_F #endif
.L_5F83:
## const _sText2 = "&Variations" !"\t" _sCtrl  _sAlt "Alt+" _sShift "Shift+" _sKey+chr(VK_F)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Variations" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Variations , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-100], 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	push 0
	push 24
	push offset _Lt_5ED3
	push -1
	lea eax, [ebp-100]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-100]
	push eax
	push 1023
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-100]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F83-_CREATEMAINMENU@0
## _Entry( meFilter_Donor , "&Donor" , _Alt FALT , VK_D , @Completion_Toggle )#if len($"VK_D") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_D >= VK_F1 and VK_D <= VK_F24
## #define _sKey "F" & (VK_D-((VK_F1)-1)) #elseif VK_D >= asc("A") and VK_D <= asc("Z") 
## #define _sKey +chr(VK_D)
## #else
## #define _sKey sVK_D #endif
.L_5F84:
## const _sText2 = "&Donor" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_D)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Donor" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Donor , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-112], 0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	push 0
	push 13
	push offset _Lt_5EDA
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-112]
	push eax
	push 1024
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F84-_CREATEMAINMENU@0
## _Entry( meFilter_Path , "&Path" , _Alt FALT , VK_P , @Completion_Toggle )#if len($"VK_P") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_P >= VK_F1 and VK_P <= VK_F24
## #define _sKey "F" & (VK_P-((VK_F1)-1)) #elseif VK_P >= asc("A") and VK_P <= asc("Z") 
## #define _sKey +chr(VK_P)
## #else
## #define _sKey sVK_P #endif
.L_5F85:
## const _sText2 = "&Path" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_P)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Path" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Path , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	push 0
	push 12
	push offset _Lt_5EE0
	push -1
	lea eax, [ebp-124]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-124]
	push eax
	push 1025
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-124]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F85-_CREATEMAINMENU@0
## _Entry( meFilter_Printed , "P&rinted" , _Alt+FALT+_Shift FSHIFT , VK_P , @Completion_Toggle )#if len($"VK_P") 
## #if (FALT+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FALT+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_P >= VK_F1 and VK_P <= VK_F24
## #define _sKey "F" & (VK_P-((VK_F1)-1)) #elseif VK_P >= asc("A") and VK_P <= asc("Z") 
## #define _sKey +chr(VK_P)
## #else
## #define _sKey sVK_P #endif
.L_5F86:
## const _sText2 = "P&rinted" !"\t" _sCtrl  _sAlt "Alt+" _sShift "Shift+" _sKey+chr(VK_P)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "P&rinted" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Printed , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-136], 0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	push 0
	push 21
	push offset _Lt_5EE6
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-136]
	push eax
	push 1026
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F86-_CREATEMAINMENU@0
## _Entry( meFilter_Shortcut , "Shortcut" , _Alt FALT , VK_S , @Completion_Toggle )#if len($"VK_S") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_S >= VK_F1 and VK_S <= VK_F24
## #define _sKey "F" & (VK_S-((VK_F1)-1)) #elseif VK_S >= asc("A") and VK_S <= asc("Z") 
## #define _sKey +chr(VK_S)
## #else
## #define _sKey sVK_S #endif
.L_5F87:
## const _sText2 = "Shortcut" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_S)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Shortcut" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Shortcut , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	push 0
	push 15
	push offset _Lt_5EEA
	push -1
	lea eax, [ebp-148]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-148]
	push eax
	push 1027
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-148]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F87-_CREATEMAINMENU@0
## _Entry( meFilter_Stickered , "Stic&kered" , _Alt FALT , VK_K , @Completion_Toggle )#if len($"VK_K") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_K >= VK_F1 and VK_K <= VK_F24
## #define _sKey "F" & (VK_K-((VK_F1)-1)) #elseif VK_K >= asc("A") and VK_K <= asc("Z") 
## #define _sKey +chr(VK_K)
## #else
## #define _sKey sVK_K #endif
.L_5F88:
## const _sText2 = "Stic&kered" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_K)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Stic&kered" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Stickered , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	push 0
	push 17
	push offset _Lt_5EF1
	push -1
	lea eax, [ebp-160]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-160]
	push eax
	push 1028
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-160]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F88-_CREATEMAINMENU@0
## _Entry( meFilter_MultiColor , "Multi&color" , _Alt FALT , VK_M , @Completion_Toggle )#if len($"VK_M") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_M >= VK_F1 and VK_M <= VK_F24
## #define _sKey "F" & (VK_M-((VK_F1)-1)) #elseif VK_M >= asc("A") and VK_M <= asc("Z") 
## #define _sKey +chr(VK_M)
## #else
## #define _sKey sVK_M #endif
.L_5F89:
## const _sText2 = "Multi&color" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_M)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Multi&color" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_MultiColor , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-172], 0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	push 0
	push 18
	push offset _Lt_5EF7
	push -1
	lea eax, [ebp-172]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-172]
	push eax
	push 1029
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-172]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F89-_CREATEMAINMENU@0
## _Entry( meFilter_PreColored , "Pre-c&olored", _Alt+FALT+_Shift FSHIFT , VK_C , @Completion_Toggle )#if len($"VK_C") 
## #if (FALT+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FALT+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_C >= VK_F1 and VK_C <= VK_F24
## #define _sKey "F" & (VK_C-((VK_F1)-1)) #elseif VK_C >= asc("A") and VK_C <= asc("Z") 
## #define _sKey +chr(VK_C)
## #else
## #define _sKey sVK_C #endif
.L_5F8A:
## const _sText2 = "Pre-c&olored" !"\t" _sCtrl  _sAlt "Alt+" _sShift "Shift+" _sKey+chr(VK_C)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "Pre-c&olored" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_PreColored , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-184], 0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	push 0
	push 25
	push offset _Lt_5EFD
	push -1
	lea eax, [ebp-184]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-184]
	push eax
	push 1030
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-184]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8A-_CREATEMAINMENU@0
## _Entry( meFilter_Template , "&Template" , _Alt FALT , VK_T , @Completion_Toggle )#if len($"VK_T") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_T >= VK_F1 and VK_T <= VK_F24
## #define _sKey "F" & (VK_T-((VK_F1)-1)) #elseif VK_T >= asc("A") and VK_T <= asc("Z") 
## #define _sKey +chr(VK_T)
## #else
## #define _sKey sVK_T #endif
.L_5F8B:
## const _sText2 = "&Template" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_T)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Template" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Template , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-196], 0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	push 0
	push 16
	push offset _Lt_5F04
	push -1
	lea eax, [ebp-196]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-196]
	push eax
	push 1031
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-196]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8B-_CREATEMAINMENU@0
## _Entry( meFilter_Alias , "&Alias" , _Alt FALT , VK_A , @Completion_Toggle )#if len($"VK_A") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_A >= VK_F1 and VK_A <= VK_F24
## #define _sKey "F" & (VK_A-((VK_F1)-1)) #elseif VK_A >= asc("A") and VK_A <= asc("Z") 
## #define _sKey +chr(VK_A)
## #else
## #define _sKey sVK_A #endif
.L_5F8C:
## const _sText2 = "&Alias" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_A)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Alias" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Alias , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-208], 0
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	push 0
	push 13
	push offset _Lt_5F09
	push -1
	lea eax, [ebp-208]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-208]
	push eax
	push 1032
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-208]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8C-_CREATEMAINMENU@0
## _Entry( meFilter_Moulded , "&Moulded" , _Alt+FALT+_Shift FSHIFT , VK_M , @Completion_Toggle )#if len($"VK_M") 
## #if (FALT+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FALT+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_M >= VK_F1 and VK_M <= VK_F24
## #define _sKey "F" & (VK_M-((VK_F1)-1)) #elseif VK_M >= asc("A") and VK_M <= asc("Z") 
## #define _sKey +chr(VK_M)
## #else
## #define _sKey sVK_M #endif
.L_5F8D:
## const _sText2 = "&Moulded" !"\t" _sCtrl  _sAlt "Alt+" _sShift "Shift+" _sKey+chr(VK_M)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Moulded" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Moulded , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-220], 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	push 0
	push 21
	push offset _Lt_5F0F
	push -1
	lea eax, [ebp-220]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-220]
	push eax
	push 1033
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-220]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8D-_CREATEMAINMENU@0
## _Entry( meFilter_Helper , "&Helper" , _Alt+FALT+_Shift FSHIFT , VK_H , @Completion_Toggle )#if len($"VK_H") 
## #if (FALT+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FALT+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_H >= VK_F1 and VK_H <= VK_F24
## #define _sKey "F" & (VK_H-((VK_F1)-1)) #elseif VK_H >= asc("A") and VK_H <= asc("Z") 
## #define _sKey +chr(VK_H)
## #else
## #define _sKey sVK_H #endif
.L_5F8E:
## const _sText2 = "&Helper" !"\t" _sCtrl  _sAlt "Alt+" _sShift "Shift+" _sKey+chr(VK_H)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Helper" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Helper , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-232], 0
	mov dword ptr [ebp-228], 0
	mov dword ptr [ebp-224], 0
	push 0
	push 20
	push offset _Lt_5F15
	push -1
	lea eax, [ebp-232]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-232]
	push eax
	push 1034
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-232]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8E-_CREATEMAINMENU@0
## _Entry( meFilter_Stickers , "&Stickers" , _Alt FALT , VK_S , @Completion_Toggle )#if len($"VK_S") 
## #if (FALT and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FALT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+" #else
## #define _sCtrl
## #endif
## #if (FALT and _Alt)FALT)
## #define _sAlt "Alt+"
## #else
## #define _sAlt #endif
## #if VK_S >= VK_F1 and VK_S <= VK_F24
## #define _sKey "F" & (VK_S-((VK_F1)-1)) #elseif VK_S >= asc("A") and VK_S <= asc("Z") 
## #define _sKey +chr(VK_S)
## #else
## #define _sKey sVK_S #endif
.L_5F8F:
## const _sText2 = "&Stickers" !"\t" _sCtrl  _sAlt "Alt+" _sShift  _sKey+chr(VK_S)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Stickers" #endif 
## Menu.MenuAddEntry( hMenu , meFilter_Stickers , _sText2 , @Completion_Toggle )
	push 0
	push offset _COMPLETION_TOGGLE@0
	mov dword ptr [ebp-244], 0
	mov dword ptr [ebp-240], 0
	mov dword ptr [ebp-236], 0
	push 0
	push 16
	push offset _Lt_5F1A
	push -1
	lea eax, [ebp-244]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-244]
	push eax
	push 1035
	push dword ptr [ebp-52]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-244]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F8F-_CREATEMAINMENU@0
.L_5F90:
## _EndSubMenu()end scope  
.L_5F1C:
## _EndSubMenu()end scope 
.L_5F1D:
## _SubMenu( "&View" )scope
.L_5F1E:
## var hMenu = Menu.AddSubMenu( hMenu , "&View" )
	push 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	push 0
	push 6
	push offset _Lt_5F1F
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-8]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-24], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
## _Entry( meView_ToggleGW , "&Graphics Window" , _Ctrl FCONTROL , VK_G , @View_ToggleGW )#if len($"VK_G") 
.stabn 68,0,186,.L_5F90-_CREATEMAINMENU@0
## #if (FCONTROL and _Shift)FSHIFT)
## #define _sShift "Shift+" #else
## #define _sShift
## #endif
## #if (FCONTROL and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_G >= VK_F1 and VK_G <= VK_F24
## #define _sKey "F" & (VK_G-((VK_F1)-1)) #elseif VK_G >= asc("A") and VK_G <= asc("Z") 
## #define _sKey +chr(VK_G)
## #else
## #define _sKey sVK_G #endif
.L_5F91:
## const _sText2 = "&Graphics Window" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift  _sKey+chr(VK_G)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Graphics Window" #endif 
## Menu.MenuAddEntry( hMenu , meView_ToggleGW , _sText2 , @View_ToggleGW )
	push 0
	push offset _VIEW_TOGGLEGW@0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	push 0
	push 24
	push offset _Lt_5F26
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-36]
	push eax
	push 1036
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
## #undef _sText2 
.stabn 68,0,186,.L_5F91-_CREATEMAINMENU@0
## _Entry( meView_ToggleGWDock , "&Dock GW in Main" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_L , @View_ToggleGWDock )#if len($"VK_L") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_L >= VK_F1 and VK_L <= VK_F24
## #define _sKey "F" & (VK_L-((VK_F1)-1)) #elseif VK_L >= asc("A") and VK_L <= asc("Z") 
## #define _sKey +chr(VK_L)
## #else
## #define _sKey sVK_L #endif
.L_5F92:
## const _sText2 = "&Dock GW in Main" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_L)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Dock GW in Main" #endif 
## Menu.MenuAddEntry( hMenu , meView_ToggleGWDock , _sText2 , @View_ToggleGWDock )
	push 0
	push offset _VIEW_TOGGLEGWDOCK@0
	mov dword ptr [ebp-48], 0
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	push 0
	push 30
	push offset _Lt_5F2E
	push -1
	lea eax, [ebp-48]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-48]
	push eax
	push 1037
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-48]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F92-_CREATEMAINMENU@0
## _Entry( meView_ResetCamera , "&Reset Camera" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_R , @View_Key )#if len($"VK_R") 
## #if (FCONTROL+FSHIFT and _Shift)FSHIFT)
## #define _sShift "Shift+"
## #else
## #define _sShift #endif
## #if (FCONTROL+FSHIFT and _Ctrl)FCONTROL)
## #define _sCtrl "Ctrl+"
## #else
## #define _sCtrl #endif
## #if (FCONTROL+FSHIFT and _Alt)FALT)
## #define _sAlt "Alt+" #else
## #define _sAlt
## #endif
## #if VK_R >= VK_F1 and VK_R <= VK_F24
## #define _sKey "F" & (VK_R-((VK_F1)-1)) #elseif VK_R >= asc("A") and VK_R <= asc("Z") 
## #define _sKey +chr(VK_R)
## #else
## #define _sKey sVK_R #endif
.L_5F93:
## const _sText2 = "&Reset Camera" !"\t" _sCtrl "Ctrl+" _sAlt  _sShift "Shift+" _sKey+chr(VK_R)
## #undef _sCtrl
## #undef _sAlt
## #undef _sShift
## #undef _sKey
## #else
## const _sText2 = "&Reset Camera" #endif 
## Menu.MenuAddEntry( hMenu , meView_ResetCamera , _sText2 , @View_Key )
	push 0
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	push 0
	push 27
	push offset _Lt_5F35
	push -1
	lea eax, [ebp-60]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-60]
	push eax
	push 1038
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-60]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F93-_CREATEMAINMENU@0
.L_5F94:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-72]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-72]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-72]
	push eax
	call _fb_StrDelete@4
## _Entry( meView_ShowCollision, "&Show Collisions" !"\tSPACE" , , , @View_ToggleKey, MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Show Collisions" !"\tSPACE" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F94-_CREATEMAINMENU@0
.L_5F95:
## const _sText2 = "&Show Collisions" !"\tSPACE"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_ShowCollision , _sText2 , @View_ToggleKey, MFS_GRAYED )
	push 3
	push offset _VIEW_TOGGLEKEY@0
	mov dword ptr [ebp-84], 0
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], 0
	push 0
	push 23
	push offset _Lt_5F3A
	push -1
	lea eax, [ebp-84]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-84]
	push eax
	push 1039
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-84]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F95-_CREATEMAINMENU@0
.L_5F96:
## _Separator()Menu.MenuAddEntry( hMenu )
	push 0
	push 0
	mov dword ptr [ebp-96], 0
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-96]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-96]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-96]
	push eax
	call _fb_StrDelete@4
## _Entry( meView_ResetView , "Reset View parts" !"\tBACKSPACE" , , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "Reset View parts" !"\tBACKSPACE" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F96-_CREATEMAINMENU@0
.L_5F97:
## const _sText2 = "Reset View parts" !"\tBACKSPACE"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_ResetView , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-108], 0
	mov dword ptr [ebp-104], 0
	mov dword ptr [ebp-100], 0
	push 0
	push 27
	push offset _Lt_5F3F
	push -1
	lea eax, [ebp-108]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-108]
	push eax
	push 1040
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-108]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F97-_CREATEMAINMENU@0
## _Entry( meView_NextPart , "View &Next part" !"\t+" , , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "View &Next part" !"\t+" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F98:
## const _sText2 = "View &Next part" !"\t+"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_NextPart , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	mov dword ptr [ebp-112], 0
	push 0
	push 18
	push offset _Lt_5F43
	push -1
	lea eax, [ebp-120]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-120]
	push eax
	push 1041
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-120]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F98-_CREATEMAINMENU@0
## _Entry( meView_PrevPart , "View &Previous part" !"\t-" , , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "View &Previous part" !"\t-" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F99:
## const _sText2 = "View &Previous part" !"\t-"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_PrevPart , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-132], 0
	mov dword ptr [ebp-128], 0
	mov dword ptr [ebp-124], 0
	push 0
	push 22
	push offset _Lt_5F47
	push -1
	lea eax, [ebp-132]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-132]
	push eax
	push 1042
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-132]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F99-_CREATEMAINMENU@0
.L_5F9A:
## _Separator()Menu.MenuAddEntry( hMenu ) 
	push 0
	push 0
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	mov dword ptr [ebp-136], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-144]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-144]
	push eax
	push 0
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-144]
	push eax
	call _fb_StrDelete@4
## _Entry( meView_ShowBox , "&Show bounding box" !"\tTAB" , , , @View_Toggle , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Show bounding box" !"\tTAB" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F9A-_CREATEMAINMENU@0
.L_5F9B:
## const _sText2 = "&Show bounding box" !"\tTAB"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_ShowBox , _sText2 , @View_Toggle , MFS_GRAYED )
	push 3
	push offset _VIEW_TOGGLE@0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	mov dword ptr [ebp-148], 0
	push 0
	push 23
	push offset _Lt_5F4C
	push -1
	lea eax, [ebp-156]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-156]
	push eax
	push 1043
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-156]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F9B-_CREATEMAINMENU@0
## _Entry( meView_ResetBox , "Reset bounding box" !"\tShift BACKSPACE", , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "Reset bounding box" !"\tShift BACKSPACE" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F9C:
## const _sText2 = "Reset bounding box" !"\tShift BACKSPACE"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_ResetBox , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-168], 0
	mov dword ptr [ebp-164], 0
	mov dword ptr [ebp-160], 0
	push 0
	push 35
	push offset _Lt_5F50
	push -1
	lea eax, [ebp-168]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-168]
	push eax
	push 1044
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-168]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F9C-_CREATEMAINMENU@0
## _Entry( meView_NextBoxPart , "Ne&xt part" !"\tShift +" , , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "Ne&xt part" !"\tShift +" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F9D:
## const _sText2 = "Ne&xt part" !"\tShift +"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_NextBoxPart , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	push 0
	push 19
	push offset _Lt_5F54
	push -1
	lea eax, [ebp-180]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-180]
	push eax
	push 1045
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-180]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F9D-_CREATEMAINMENU@0
## _Entry( meView_PrevBoxPart , "&Pre&vious part" !"\tShift -" , , , @View_Key , MFS_GRAYED )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "&Pre&vious part" !"\tShift -" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.L_5F9E:
## const _sText2 = "&Pre&vious part" !"\tShift -"
## #endif 
## Menu.MenuAddEntry( hMenu , meView_PrevBoxPart , _sText2 , @View_Key , MFS_GRAYED )
	push 3
	push offset _VIEW_KEY@0
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	push 0
	push 24
	push offset _Lt_5F58
	push -1
	lea eax, [ebp-192]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-192]
	push eax
	push 1046
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-192]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5F9E-_CREATEMAINMENU@0
.L_5F9F:
## _EndSubMenu()end scope  
.L_5F5A:
## _SubMenu( "&Help" )scope
.L_5F5B:
## var hMenu = Menu.AddSubMenu( hMenu , "&Help" ) 
	push 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	push 0
	push 6
	push offset _Lt_5F5C
	push -1
	lea eax, [ebp-20]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp-8]
	call __ZN4MENU10ADDSUBMENUEPvR8FBSTRINGi@12
	mov dword ptr [ebp-24], eax
	lea eax, [ebp-20]
	push eax
	call _fb_StrDelete@4
## _Entry( meHelp_About , "About" , , , @Help_About )#if len("") 
## #if ( and _Shift) #define _sShift "Shift+" #else #define _sShift #endif #if ( and _Ctrl) #define _sCtrl "Ctrl+" #else #define _sCtrl #endif #if ( and _Alt) #define _sAlt "Alt+" #else #define _sAlt #endif #if  >= VK_F1 and  <= VK_F24 #define _sKey "F" & (-((VK_F1)-1)) #elseif  >= asc("A") and  <= asc("Z")  #define _sKey +chr() #else #define _sKey s #endif const _sText2 = "About" !"\t" _sCtrl _sAlt _sShift _sKey #undef _sCtrl #undef _sAlt #undef _sShift #undef _sKey #else
.stabn 68,0,186,.L_5F9F-_CREATEMAINMENU@0
.L_5FA0:
## const _sText2 = "About"
## #endif 
## Menu.MenuAddEntry( hMenu , meHelp_About , _sText2 , @Help_About )
	push 0
	push offset _HELP_ABOUT@0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	push 0
	push 6
	push offset _Lt_5F5E
	push -1
	lea eax, [ebp-36]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-36]
	push eax
	push 1047
	push dword ptr [ebp-24]
	call __ZN4MENU12MENUADDENTRYEPviR8FBSTRINGS0_i@20
	lea eax, [ebp-36]
	push eax
	call _fb_StrDelete@4
## #undef _sText2
.stabn 68,0,186,.L_5FA0-_CREATEMAINMENU@0
.L_5FA1:
## _EndSubMenu()end scope  ] 
.L_5F60:
##   return hMenu
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
.stabn 68,0,188,.L_5FA1-_CREATEMAINMENU@0
.L_5FA2:
.L_5E35:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,189,.L_5E35-_CREATEMAINMENU@0
	.stabs "HMENU:399=*324",128,0,0,-8
	.stabn 192,0,0,.L_5E34-_CREATEMAINMENU@0
	.stabs "HMENU:400=*7",128,0,0,-24
	.stabn 192,0,0,.L_5E36-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5E75-_CREATEMAINMENU@0
	.stabs "HMENU:401=*7",128,0,0,-24
	.stabn 192,0,0,.L_5E76-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5EB3-_CREATEMAINMENU@0
	.stabs "HMENU:402=*7",128,0,0,-24
	.stabn 192,0,0,.L_5EB4-_CREATEMAINMENU@0
	.stabs "HMENU:403=*7",128,0,0,-52
	.stabn 192,0,0,.L_5EBD-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5F1C-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5F1D-_CREATEMAINMENU@0
	.stabs "HMENU:404=*7",128,0,0,-24
	.stabn 192,0,0,.L_5F1E-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5F5A-_CREATEMAINMENU@0
	.stabs "HMENU:405=*7",128,0,0,-24
	.stabn 192,0,0,.L_5F5B-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5F60-_CREATEMAINMENU@0
	.stabn 224,0,0,.L_5E35-_CREATEMAINMENU@0
.L_5FA3:
	.stabs "",36,0,0,.L_5FA3-_CREATEMAINMENU@0
	.stabs "LINES_DRAW:F7",36,0,196,_LINES_DRAW@8
	.stabs "HEDIT:p406=*21",160,0,0,8
	.stabs "TAGDRAWITEMSTRUCT:Tt407=s48CTLTYPE:8,0,32;CTLID:8,32,32;ITEMID:8,64,32;ITEMACTION:8,96,32;ITEMSTATE:8,128,32;HWNDITEM:408=*21,160,32;HDC:409=*19,192,32;RCITEM:23,224,128;ITEMDATA:8,352,32;;",128,0,0,0
	.stabs "TDRAW:v407",160,0,0,12
.balign 16

.globl _LINES_DRAW@8
_LINES_DRAW@8:
	push ebp
	mov ebp, esp
	sub esp, 20
	push ebx
	.stabn 68,0,196,_LINES_DRAW@8-_LINES_DRAW@8
.L_5FA4:
.L_5FA9:
##   with tDraw      
.L_5FA6:
	mov eax, dword ptr [ebp+12]
	mov dword ptr [ebp-4], eax
.stabn 68,0,197,.L_5FA9-_LINES_DRAW@8
.L_5FAA:
##      dim PT as POINT = any
##      var iCharIdx = Sendmessage( hEdit , EM_LINEINDEX  , g_iPrevTopRow , 0 )
	push 0
	push dword ptr [_G_IPREVTOPROW]
	push 187
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-16], eax
.stabn 68,0,199,.L_5FAA-_LINES_DRAW@8
.L_5FAB:
##      var iResu = SendMessage( hEdit , EM_POSFROMCHAR , cast(WPARAM,@PT) , iCharIdx )
	push dword ptr [ebp-16]
	lea eax, [ebp-12]
	push eax
	push 214
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-20], eax
.stabn 68,0,200,.L_5FAB-_LINES_DRAW@8
.L_5FAC:
##      SetTextColor( .hdc , GetSysColor(COLOR_GRAYTEXT) )
	push 17
	call _GetSysColor@4
	push eax
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax+24]
	call _SetTextColor@8
.stabn 68,0,202,.L_5FAC-_LINES_DRAW@8
.L_5FAD:
##      FillRect( .hdc , @.rcItem , cast(HBRUSH,GetSysColorBrush(COLOR_BTNFACE)) )
	push 15
	call _GetSysColorBrush@4
	push eax
	mov eax, dword ptr [ebp-4]
	lea ebx, [eax+28]
	push ebx
	mov ebx, dword ptr [ebp-4]
	push dword ptr [ebx+24]
	call _FillRect@12
.stabn 68,0,203,.L_5FAD-_LINES_DRAW@8
.L_5FAE:
##      .rcItem.top += PT.Y+2 : .rcItem.right -= 4 : .rcItem.bottom -= (4+GetSystemMetrics(SM_CYHSCROLL))
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-8]
	add eax, dword ptr [ebx+32]
	add eax, 2
	mov ebx, dword ptr [ebp-4]
	mov dword ptr [ebx+32], eax
	mov eax, dword ptr [ebp-4]
	add dword ptr [eax+36], -4
	mov eax, dword ptr [ebp-4]
	push 3
	mov ebx, eax
	call _GetSystemMetrics@4
	mov ecx, dword ptr [ebx+40]
	sub ecx, eax
	add ecx, -4
	mov eax, dword ptr [ebp-4]
	mov dword ptr [eax+40], ecx
.stabn 68,0,204,.L_5FAE-_LINES_DRAW@8
.L_5FAF:
##      DrawText( .hDC , g_zRows , -1 , @.rcItem , DT_RIGHT or DT_NOPREFIX )
	push 2050
	mov ecx, dword ptr [ebp-4]
	lea eax, [ecx+28]
	push eax
	push -1
	push offset _G_ZROWS
	mov eax, dword ptr [ebp-4]
	push dword ptr [eax+24]
	call _DrawTextA@20
.stabn 68,0,205,.L_5FAF-_LINES_DRAW@8
.L_5FB0:
##   end with
.L_5FA8:
.L_5FA5:
	pop ebx
	mov esp, ebp
	pop ebp
	ret 8
	.stabn 68,0,209,.L_5FA5-_LINES_DRAW@8
	.stabn 192,0,0,.L_5FA4-_LINES_DRAW@8
	.stabs "PT:154",128,0,0,-12
	.stabs "ICHARIDX:1",128,0,0,-16
	.stabs "IRESU:1",128,0,0,-20
	.stabn 192,0,0,.L_5FA6-_LINES_DRAW@8
	.stabn 224,0,0,.L_5FA8-_LINES_DRAW@8
	.stabn 224,0,0,.L_5FA5-_LINES_DRAW@8
.L_5FB1:
	.stabs "",36,0,0,.L_5FB1-_LINES_DRAW@8
	.stabs "RICHEDIT_REPLACE:F7",36,0,210,_RICHEDIT_REPLACE@20
	.stabs "HCTL:p410=*21",160,0,0,8
	.stabs "ISTART:p1",160,0,0,12
	.stabs "IEND:p1",160,0,0,16
	.stabs "STEXT:v13",160,0,0,20
	.stabs "BKEEPSEL:p1",160,0,0,24
.balign 16

.globl _RICHEDIT_REPLACE@20
_RICHEDIT_REPLACE@20:
	push ebp
	mov ebp, esp
	sub esp, 12
	.stabn 68,0,210,_RICHEDIT_REPLACE@20-_RICHEDIT_REPLACE@20
.L_5FB2:
.L_5FBC:
##   var iMask = SendMessage( hCtl , EM_GETEVENTMASK   , 0 , 0 )                     
	push 0
	push 0
	push 1083
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,211,.L_5FBC-_RICHEDIT_REPLACE@20
.L_5FBD:
##   dim as CHARRANGE tRange = any
##   if bKeepSel then SendMessage( hCtl , EM_EXGETSEL , 0 , cast(LPARAM,@tRange) )
	cmp dword ptr [ebp+24], 0
	je .L_5FB5
.L_5FB6:
	lea eax, [ebp-12]
	push eax
	push 0
	push 1076
	push dword ptr [ebp+8]
	call _SendMessageA@16
.L_5FB5:
.L_5FB7:
.stabn 68,0,213,.L_5FBD-_RICHEDIT_REPLACE@20
.L_5FBE:
##   SendMessage( hCtl , EM_SETEVENTMASK , 0 , iMask and (not ENM_SELCHANGE))
	mov eax, dword ptr [ebp-4]
	and eax, -524289
	push eax
	push 0
	push 1093
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,214,.L_5FBE-_RICHEDIT_REPLACE@20
.L_5FBF:
##   SendMessage( hCtl , EM_SETSEL , iStart , iEnd ) 
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push 177
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,215,.L_5FBF-_RICHEDIT_REPLACE@20
.L_5FC0:
##   SendMessage( hCtl , EM_REPLACESEL , false , cast(LPARAM,strptr(sText)) )
	mov eax, dword ptr [ebp+20]
	push dword ptr [eax]
	push 0
	push 194
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,216,.L_5FC0-_RICHEDIT_REPLACE@20
.L_5FC1:
##   if bKeepSel then SendMessage( hCtl , EM_EXSETSEL , 0 , cast(LPARAM,@tRange) )
	cmp dword ptr [ebp+24], 0
	je .L_5FB9
.L_5FBA:
	lea eax, [ebp-12]
	push eax
	push 0
	push 1079
	push dword ptr [ebp+8]
	call _SendMessageA@16
.L_5FB9:
.L_5FBB:
.stabn 68,0,217,.L_5FC1-_RICHEDIT_REPLACE@20
.L_5FC2:
##   SendMessage( hCtl , EM_SETEVENTMASK , 0 , iMask)
	push dword ptr [ebp-4]
	push 0
	push 1093
	push dword ptr [ebp+8]
	call _SendMessageA@16
.stabn 68,0,218,.L_5FC2-_RICHEDIT_REPLACE@20
.L_5FC3:
.L_5FB3:
	mov esp, ebp
	pop ebp
	ret 20
	.stabn 68,0,219,.L_5FB3-_RICHEDIT_REPLACE@20
	.stabs "IMASK:1",128,0,0,-4
	.stabs "TRANGE:320",128,0,0,-12
	.stabn 192,0,0,.L_5FB2-_RICHEDIT_REPLACE@20
	.stabn 192,0,0,.L_5FB6-_RICHEDIT_REPLACE@20
	.stabn 224,0,0,.L_5FB7-_RICHEDIT_REPLACE@20
	.stabn 192,0,0,.L_5FBA-_RICHEDIT_REPLACE@20
	.stabn 224,0,0,.L_5FBB-_RICHEDIT_REPLACE@20
	.stabn 224,0,0,.L_5FB3-_RICHEDIT_REPLACE@20
.L_5FC4:
	.stabs "",36,0,0,.L_5FC4-_RICHEDIT_REPLACE@20
	.stabs "RICHEDIT_TOPROWCHANGE:F7",36,0,220,_RICHEDIT_TOPROWCHANGE@4
	.stabs "HCTL:p411=*21",160,0,0,8
.balign 16

.globl _RICHEDIT_TOPROWCHANGE@4
_RICHEDIT_TOPROWCHANGE@4:
	push ebp
	mov ebp, esp
	sub esp, 28
	.stabn 68,0,220,_RICHEDIT_TOPROWCHANGE@4-_RICHEDIT_TOPROWCHANGE@4
.L_5FC5:
.L_5FF3:
##   var iTopRow = SendMessage( hCTL , EM_GETFIRSTVISIBLELINE , 0,0 )
	push 0
	push 0
	push 206
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,221,.L_5FF3-_RICHEDIT_TOPROWCHANGE@4
.L_5FF4:
##   var iRows = SendMessage( hCTL , EM_GETLINECOUNT , 0,0 )
	push 0
	push 0
	push 186
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-8], eax
.stabn 68,0,222,.L_5FF4-_RICHEDIT_TOPROWCHANGE@4
.L_5FF5:
##   if g_iPrevRowCount <> iRows then
	mov eax, dword ptr [ebp-8]
	cmp dword ptr [_G_IPREVROWCOUNT], eax
	je .L_5FC8
.L_5FC9:
.stabn 68,0,223,.L_5FF5-_RICHEDIT_TOPROWCHANGE@4
.L_5FF6:
##      var iRowDigits = 2
	mov dword ptr [ebp-16], 2
.stabn 68,0,224,.L_5FF6-_RICHEDIT_TOPROWCHANGE@4
.L_5FF7:
##      if iRows > 99 then iRowDigits += 1
	cmp dword ptr [ebp-8], 99
	jle .L_5FCB
.L_5FCC:
	inc dword ptr [ebp-16]
.L_5FCB:
.L_5FCD:
.stabn 68,0,225,.L_5FF7-_RICHEDIT_TOPROWCHANGE@4
.L_5FF8:
##      if iRows > 999 then iRowDigits += 1
	cmp dword ptr [ebp-8], 999
	jle .L_5FCF
.L_5FD0:
	inc dword ptr [ebp-16]
.L_5FCF:
.L_5FD1:
.stabn 68,0,226,.L_5FF8-_RICHEDIT_TOPROWCHANGE@4
.L_5FF9:
##      if iRows > 9999 then iRowDigits += 1
	cmp dword ptr [ebp-8], 9999
	jle .L_5FD3
.L_5FD4:
	inc dword ptr [ebp-16]
.L_5FD3:
.L_5FD5:
.stabn 68,0,227,.L_5FF9-_RICHEDIT_TOPROWCHANGE@4
.L_5FFA:
##      if iRows > 99999 then iRowDigits += 1
	cmp dword ptr [ebp-8], 99999
	jle .L_5FD7
.L_5FD8:
	inc dword ptr [ebp-16]
.L_5FD7:
.L_5FD9:
.stabn 68,0,228,.L_5FFA-_RICHEDIT_TOPROWCHANGE@4
.L_5FFB:
##      if iRowDigits <> g_RowDigits then
	mov eax, dword ptr [_G_ROWDIGITS]
	cmp dword ptr [ebp-16], eax
	je .L_5FDB
.L_5FDC:
.stabn 68,0,229,.L_5FFB-_RICHEDIT_TOPROWCHANGE@4
.L_5FFC:
##         g_RowDigits = iRowDigits
	mov eax, dword ptr [ebp-16]
	mov dword ptr [_G_ROWDIGITS], eax
.stabn 68,0,230,.L_5FFC-_RICHEDIT_TOPROWCHANGE@4
.L_5FFD:
##         PostMessage( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  , WM_USER+3 , 0 , 0 )
	push 0
	push 0
	push 1027
	push dword ptr [_G_TMAINCTX+24]
	call _PostMessageA@16
.stabn 68,0,231,.L_5FFD-_RICHEDIT_TOPROWCHANGE@4
.L_5FFE:
##      end if
.L_5FDD:
.L_5FDB:
.L_5FDA:
##   end if
.L_5FDE:
.L_5FC8:
.L_5FC7:
##   if g_iPrevTopRow <> iTopRow orelse g_iPrevRowCount <> iRows then
	mov eax, dword ptr [ebp-4]
	cmp dword ptr [_G_IPREVTOPROW], eax
	jne .L_5FDF
	mov eax, dword ptr [ebp-8]
	cmp eax, dword ptr [_G_IPREVROWCOUNT]
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-12], eax
	jmp .L_5FF1
.L_5FDF:
	mov dword ptr [ebp-12], -1
.L_5FF1:
	cmp dword ptr [ebp-12], 0
	je .L_5FE2
.L_5FE3:
.stabn 68,0,234,.L_5FFE-_RICHEDIT_TOPROWCHANGE@4
.L_6000:
##      g_iPrevTopRow = iTopRow : g_iPrevRowCount = iRows
	mov eax, dword ptr [ebp-4]
	mov dword ptr [_G_IPREVTOPROW], eax
	mov eax, dword ptr [ebp-8]
	mov dword ptr [_G_IPREVROWCOUNT], eax
.stabn 68,0,235,.L_6000-_RICHEDIT_TOPROWCHANGE@4
.L_6001:
##      var pzRows = @g_zRows      
	mov eax, offset _G_ZROWS
	mov dword ptr [ebp-16], eax
.stabn 68,0,236,.L_6001-_RICHEDIT_TOPROWCHANGE@4
.L_6002:
##      for N as long = 1 to iif(iRows<15,iRows,15)
.L_5FE4:
	mov dword ptr [ebp-20], 1
	cmp dword ptr [ebp-8], 15
	jge .L_5FE5
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-24], eax
	jmp .L_5FF2
.L_5FE5:
	mov dword ptr [ebp-24], 15
.L_5FF2:
	mov eax, dword ptr [ebp-24]
	mov dword ptr [ebp-28], eax
	jmp .L_5FE8
.L_5FEB:
.L_5FEC:
.stabn 68,0,237,.L_6002-_RICHEDIT_TOPROWCHANGE@4
.L_6003:
##         pzRows += sprintf(pzRows,!"%i\r\n",iTopRow+N)
	mov eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-4]
	push eax
	push offset _Lt_5FED
	push dword ptr [ebp-16]
	call _sprintf
	add esp, 12
	add dword ptr [ebp-16], eax
.stabn 68,0,238,.L_6003-_RICHEDIT_TOPROWCHANGE@4
.L_6004:
##      next N      
.L_5FEE:
.L_5FE9:
	inc dword ptr [ebp-20]
.L_5FE8:
	mov eax, dword ptr [ebp-28]
	cmp dword ptr [ebp-20], eax
	jle .L_5FEB
.L_5FEA:
.L_5FEF:
.stabn 68,0,239,.L_6004-_RICHEDIT_TOPROWCHANGE@4
.L_6005:
##      InvalidateRect( CTL(wcLines) [Macro Expansion: g_tMainCtx.hCtl(wcLines).hwnd ]  , NULL , FALSE )
	push 0
	push 0
	push dword ptr [_G_TMAINCTX+216]
	call _InvalidateRect@12
.stabn 68,0,240,.L_6005-_RICHEDIT_TOPROWCHANGE@4
.L_6006:
##   end if
.L_5FF0:
.L_5FE2:
.L_5FE1:
.L_5FC6:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,243,.L_5FC6-_RICHEDIT_TOPROWCHANGE@4
	.stabs "ITOPROW:1",128,0,0,-4
	.stabs "IROWS:1",128,0,0,-8
	.stabn 192,0,0,.L_5FC5-_RICHEDIT_TOPROWCHANGE@4
	.stabs "IROWDIGITS:1",128,0,0,-16
	.stabn 192,0,0,.L_5FC9-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FCC-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FCD-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FD0-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FD1-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FD4-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FD5-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FD8-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FD9-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FDC-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FDD-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FDE-_RICHEDIT_TOPROWCHANGE@4
	.stabs "PZROWS:412=*4",128,0,0,-16
	.stabn 192,0,0,.L_5FE3-_RICHEDIT_TOPROWCHANGE@4
	.stabs "N:1",128,0,0,-20
	.stabn 192,0,0,.L_5FE4-_RICHEDIT_TOPROWCHANGE@4
	.stabn 192,0,0,.L_5FEC-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FEE-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FEF-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FF0-_RICHEDIT_TOPROWCHANGE@4
	.stabn 224,0,0,.L_5FC6-_RICHEDIT_TOPROWCHANGE@4
.L_6007:
	.stabs "",36,0,0,.L_6007-_RICHEDIT_TOPROWCHANGE@4
	.stabs "RICHEDIT_SELCHANGE:F7",36,0,244,_RICHEDIT_SELCHANGE@12
	.stabs "HCTL:p413=*21",160,0,0,8
	.stabs "IROW:p1",160,0,0,12
	.stabs "ICOL:p1",160,0,0,16
.balign 16

.globl _RICHEDIT_SELCHANGE@12
_RICHEDIT_SELCHANGE@12:
	push ebp
	mov ebp, esp
	sub esp, 1048
	push ebx
	push esi
	push edi
	.stabn 68,0,244,_RICHEDIT_SELCHANGE@12-_RICHEDIT_SELCHANGE@12
.L_6008:
.L_6031:
##   g_SQCtx.iRow = iRow : g_SQCtx.iCol = iCol
	mov eax, dword ptr [ebp+12]
	mov dword ptr [_G_SQCTX+20], eax
	mov eax, dword ptr [ebp+16]
	mov dword ptr [_G_SQCTX+24], eax
.stabn 68,0,250,.L_6031-_RICHEDIT_SELCHANGE@12
.L_6032:
##   if Menu.IsChecked(meCompletion_Enable)=0 then exit sub
	push 1019
	call __ZN4MENU9ISCHECKEDEi@4
	movzx ebx, al
	neg ebx
	test ebx, ebx
	jne .L_600B
.L_600C:
	jmp .L_6009
.L_600B:
.L_600D:
.stabn 68,0,251,.L_6032-_RICHEDIT_SELCHANGE@12
##   #define zRow t.zRow_      
.L_6033:
##   end type
##   type tBuffer
##      union
##         wSize as ushort
##         zRow_ as zstring*1024
##      end union
##   dim t as tBuffer = any : t.wSize = 1023
	mov word ptr [ebp-1024], 1023
.stabn 68,0,260,.L_6033-_RICHEDIT_SELCHANGE@12
.L_6034:
##   var iSz = SendMessage( hCtl , EM_GETLINE , iRow , cast(LRESULT,@t) )
	lea ebx, [ebp-1024]
	push ebx
	push dword ptr [ebp+12]
	push 196
	push dword ptr [ebp+8]
	call _SendMessageA@16
	mov dword ptr [ebp-1028], eax
.stabn 68,0,261,.L_6034-_RICHEDIT_SELCHANGE@12
.L_6035:
##   if iSz < 0 orelse iSz > 1023 then exit sub   
	cmp dword ptr [ebp-1028], 0
	jl .L_600F
	mov eax, dword ptr [ebp-1028]
	cmp eax, 1023
	setg al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-1032], eax
	jmp .L_602E
.L_600F:
	mov dword ptr [ebp-1032], -1
.L_602E:
	cmp dword ptr [ebp-1032], 0
	je .L_6012
.L_6013:
	jmp .L_6009
.L_6012:
.L_6014:
.stabn 68,0,262,.L_6035-_RICHEDIT_SELCHANGE@12
.L_6037:
##   var iWid = 80 : zRow[ [Macro Expansion: t.zRow_  ] [iSz-2]=0   
	mov dword ptr [ebp-1036], 80
	lea eax, [ebp-1024]
	add eax, dword ptr [ebp-1028]
	mov byte ptr [eax-2], 0
.stabn 68,0,263,.L_6037-_RICHEDIT_SELCHANGE@12
.L_6038:
##   with g_SQCtx
.L_6015:
##      if ubound(.sTokenTxt) < 0 then redim .sTokenTxt(.iMaxTok-1)      
	push 1
	lea eax, [_G_SQCTX+64]
	push eax
	call _fb_ArrayUBound@8
	test eax, eax
	jge .L_6017
.L_6018:
	movsx eax, byte ptr [_G_SQCTX+4]
	dec eax
	push eax
	push 0
	push 1
	push -1
	push -1
	push 12
	lea eax, [_G_SQCTX+64]
	push eax
	call _fb_ArrayRedimEx
	add esp, 28
.L_6017:
.L_6019:
.stabn 68,0,266,.L_6038-_RICHEDIT_SELCHANGE@12
.L_6039:
##      .bChanged = 1 : .iCur = iCol 'instr( iCol+1 , zRow , " " )-1
	mov byte ptr [_G_SQCTX], 1
	mov eax, dword ptr [ebp+16]
	mov dword ptr [_G_SQCTX+8], eax
.stabn 68,0,267,.L_6039-_RICHEDIT_SELCHANGE@12
.L_603A:
##   end with
.L_601A:
##   sLastSearch = zRow [Macro Expansion: t.zRow_  ] 
	push 0
	push 1024
	lea eax, [ebp-1024]
	push eax
	push -1
	push offset _SLASTSEARCH
	call _fb_StrAssign@20
.stabn 68,0,270,.L_603A-_RICHEDIT_SELCHANGE@12
##   Try() [Macro Expansion: #ifndef __TryCatchError__
.L_603B:
## scope
.L_601B:
## #ifdef _InsideTry_
## #error " another Try() without EndTry()" end scope #define __TryCatchError__ #else 
## #define _InsideTry_ 
## _Redefine_(_Catch_,__FB_UNIQUEID__( TryCatch )Lt_601C,__LINE__,272,CatchLabel)#define __Temp__ CatchLabelLt_601C272 
## _Internal_Redefine_( _Catch_ , __Temp__ CatchLabelLt_601C272  )#if (not defined(_Catch_)) andalso _Catch_ <> CatchLabelLt_601C272
## #define _Catch_ CatchLabelLt_601C272
## #endif
## #undef __Temp__
## _Redefine_(_Catch2_,__FB_UNIQUEID__( TryCatch )Lt_601C,__LINE__,272,AfterCatch)#define __Temp__ AfterCatchLt_601C272 
## _Internal_Redefine_( _Catch2_ , __Temp__ AfterCatchLt_601C272  )#if (not defined(_Catch2_)) andalso _Catch2_ <> AfterCatchLt_601C272
## #define _Catch2_ AfterCatchLt_601C272
## #endif
## #undef __Temp__ 
## static __env as jmp_buf
## static __veh as any ptr
## if setjmp(@__env) then goto _Catch_ CatchLabelLt_601C272 
	push offset _Lt_602F
	call __setjmp
	add esp, 4
	test eax, eax
	je .L_6020
.L_6021:
	jmp .L_6022
.L_6020:
.L_6023:
.stabn 68,0,272,.L_603B-_RICHEDIT_SELCHANGE@12
.L_603C:
push offset 2f
## asm push offset 2f
.stabn 68,0,272,.L_603C-_RICHEDIT_SELCHANGE@12
.L_603D:
push 1 
## push 1 
.stabn 68,0,272,.L_603D-_RICHEDIT_SELCHANGE@12
.L_603E:
call _AddVectoredExceptionHandler@8
## call _AddVectoredExceptionHandler@8
.stabn 68,0,272,.L_603E-_RICHEDIT_SELCHANGE@12
.L_603F:
jmp 1f
## jmp 1f
.stabn 68,0,272,.L_603F-_RICHEDIT_SELCHANGE@12
.L_6040:
## 
2: 
## 2: 
.stabn 68,0,272,.L_6040-_RICHEDIT_SELCHANGE@12
.L_6041:
mov eax, [esp+4] 
## mov eax, [esp+4] 
.stabn 68,0,272,.L_6041-_RICHEDIT_SELCHANGE@12
.L_6042:
mov eax, [eax+4] 
## mov eax, [eax+4] 
.stabn 68,0,272,.L_6042-_RICHEDIT_SELCHANGE@12
.L_6043:
sub dword ptr [eax+196], 12 
## sub dword ptr [eax+offsetof(CONTEXT,ESP)cint( @cast( CONTEXT ptr, 0 )->ESP )], 12 
.stabn 68,0,272,.L_6043-_RICHEDIT_SELCHANGE@12
.L_6044:
mov dword ptr [eax+184], offset _longjmp
## mov dword ptr [eax+offsetof(CONTEXT,EIP)cint( @cast( CONTEXT ptr, 0 )->EIP )], offset _longjmp
.stabn 68,0,272,.L_6044-_RICHEDIT_SELCHANGE@12
.L_6045:
mov eax, [eax+196]
## mov eax, [eax+offsetof(CONTEXT,ESP)cint( @cast( CONTEXT ptr, 0 )->ESP )]
.stabn 68,0,272,.L_6045-_RICHEDIT_SELCHANGE@12
.L_6046:
mov dword ptr [eax+4], offset _Lt_602F
## mov dword ptr [eax+4], offset __env
.stabn 68,0,272,.L_6046-_RICHEDIT_SELCHANGE@12
.L_6047:
mov dword ptr [eax+8], 1 
## mov dword ptr [eax+8], 1 
.stabn 68,0,272,.L_6047-_RICHEDIT_SELCHANGE@12
.L_6048:
mov eax, -1 
## mov eax, -1 
.stabn 68,0,272,.L_6048-_RICHEDIT_SELCHANGE@12
.L_6049:
ret 4
## ret 4
.stabn 68,0,272,.L_6049-_RICHEDIT_SELCHANGE@12
.L_604A:
## 
1:
## 1:
.stabn 68,0,272,.L_604A-_RICHEDIT_SELCHANGE@12
.L_604B:
mov [_Lt_6030], eax
## mov [__veh], eax
.stabn 68,0,272,.L_604B-_RICHEDIT_SELCHANGE@12
.L_604C:
##asm
## end 
## scope
.L_6024:
## #endif
## #endif ] 
##      HandleTokens( sLastSearch , g_SQCtx )
	push offset _G_SQCTX
	push offset _SLASTSEARCH
	call _HANDLETOKENS@8
##      Catch() [Macro Expansion: #ifndef __TryCatchError__
.stabn 68,0,273,.L_604C-_RICHEDIT_SELCHANGE@12
## #if (not defined(_InsideTry_))
## #error " Catch() without Try()" #define __TryCatchError__ #elseif defined(_InsideCatch2_)
## #error " more than one Catch() inside a Try()/EndTry() block" #define __TryCatchError__ #else
.L_604D:
## end scope
.L_6025:
## #define _InsideCatch2_ 
## scope
.L_6026:
## #define _InsideCatch_
## goto _Catch2_ AfterCatchLt_601C272 
	jmp .L_6027
.stabn 68,0,274,.L_604D-_RICHEDIT_SELCHANGE@12
.L_604E:
## _Catch_:CatchLabelLt_601C272: 
.L_6022:
## scope
.L_6028:
## #endif 
## #endif ] 
##         LogError( "Auto completion Crashed!!!" )
	mov dword ptr [ebp-1048], 0
	mov dword ptr [ebp-1044], 0
	mov dword ptr [ebp-1040], 0
	push 0
	push 27
	push offset _Lt_6029
	push -1
	lea eax, [ebp-1048]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-1048]
	push eax
	call _LOGERROR@4
	lea eax, [ebp-1048]
	push eax
	call _fb_StrDelete@4
##      EndCatch() [Macro Expansion: #ifndef __TryCatchError__
.stabn 68,0,275,.L_604E-_RICHEDIT_SELCHANGE@12
## #if (not defined(_InsideTry_))
## #error " EndCatch() without Try() (and Catch() inside)" #define __TryCatchError__ #elseif (not defined(_InsideCatch_))
## #error " EndCatch() without Catch()" end scope _Catch_:CatchLabelLt_601C272: #define __TryCatchError__ #else
.L_604F:
## end scope
.L_602B:
## _Catch2_:AfterCatchLt_601C272: 
.L_6027:
## end scope
.L_602C:
## #endif
## #endif ] 
##   EndTry() [Macro Expansion: #ifndef __TryCatchError__
## #if (not defined(_InsideTry_))
## #error " EndTry() without Try()"  #elseif (defined(_InsideCatch_))
## end scope #error " EndTry() inside Catch() block" #elseif (defined(_InsideFinally_))
## end scope #error " EndTry() inside Finally() block" #else
## #if (not defined(_InsideCatch2_))
## end scope goto _Catch2_ _Catch_:CatchLabelLt_601C272:  _Catch2_:AfterCatchLt_601C272: #endif
push [_Lt_6030]
## asm  push [__veh]
.stabn 68,0,277,.L_604F-_RICHEDIT_SELCHANGE@12
.L_6050:
call _RemoveVectoredExceptionHandler@4
## call _RemoveVectoredExceptionHandler@4
.stabn 68,0,277,.L_6050-_RICHEDIT_SELCHANGE@12
.L_6051:
##asm
## end 
## #endif
## #endif
## #undef __TryCatchError__
## end scope ] 
.L_602D:
.L_6009:
	pop edi
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,279,.L_6009-_RICHEDIT_SELCHANGE@12
	.stabs "TBUFFER:Tt414=s1024WSIZE:6,0,16;ZROW_:4,0,8192;;",128,0,0,0
	.stabs "T:414",128,0,0,-1024
	.stabs "ISZ:1",128,0,0,-1028
	.stabs "IWID:1",128,0,0,-1036
	.stabn 192,0,0,.L_6008-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_600C-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_600D-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6013-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_6014-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6015-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6018-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_6019-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_601A-_RICHEDIT_SELCHANGE@12
	.stabs "__ENV:V343",40,0,0,_Lt_602F
	.stabs "__VEH:V415=*7",40,0,0,_Lt_6030
	.stabn 192,0,0,.L_601B-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6021-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_6023-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6024-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_6025-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6026-_RICHEDIT_SELCHANGE@12
	.stabn 192,0,0,.L_6028-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_602B-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_602C-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_602D-_RICHEDIT_SELCHANGE@12
	.stabn 224,0,0,.L_6009-_RICHEDIT_SELCHANGE@12
.L_6052:
	.stabs "",36,0,0,.L_6052-_RICHEDIT_SELCHANGE@12

.section .bss
.balign 4
	.lcomm	_Lt_602F,64
.balign 4
	.lcomm	_Lt_6030,4

.section .text
	.stabs "RICHEDIT_KEYPRESS:F1",36,0,280,_RICHEDIT_KEYPRESS@12
	.stabs "HCTL:p416=*21",160,0,0,8
	.stabs "IKEY:p1",160,0,0,12
	.stabs "IMOD:p1",160,0,0,16
.balign 16

.globl _RICHEDIT_KEYPRESS@12
_RICHEDIT_KEYPRESS@12:
	push ebp
	mov ebp, esp
	sub esp, 28
	push ebx
	push esi
	push edi
	.stabn 68,0,280,_RICHEDIT_KEYPRESS@12-_RICHEDIT_KEYPRESS@12
	mov dword ptr [ebp-4], 0
.L_6053:
.L_6085:
##   select case iKey     
.L_6055:
##   case VK_TAB
	cmp dword ptr [ebp+12], 9
	jne .L_6057
.L_6058:
.L_6059:
.stabn 68,0,285,.L_6085-_RICHEDIT_KEYPRESS@12
.L_6086:
##      if iMod=_Shift  [Macro Expansion: FSHIFT ]  orelse iMod=0 then 'andalso len(.sToken)>1 then
	cmp dword ptr [ebp+16], 4
	je .L_605A
	mov eax, dword ptr [ebp+16]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-8], eax
	jmp .L_6080
.L_605A:
	mov dword ptr [ebp-8], -1
.L_6080:
	cmp dword ptr [ebp-8], 0
	je .L_605D
.L_605E:
.stabn 68,0,286,.L_6086-_RICHEDIT_KEYPRESS@12
.L_6088:
##         var iCount = SendMessage( g_hSearch , LB_GETCOUNT , 0 , 0 )
	push 0
	push 0
	push 395
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-12], eax
.stabn 68,0,287,.L_6088-_RICHEDIT_KEYPRESS@12
.L_6089:
##         var iSel   = SendMessage( g_hSearch , LB_GETCURSEL , 0 , 0 )
	push 0
	push 0
	push 392
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
	mov dword ptr [ebp-16], eax
.stabn 68,0,288,.L_6089-_RICHEDIT_KEYPRESS@12
.L_608A:
##         var iSelOrg = iSel
	mov eax, dword ptr [ebp-16]
	mov dword ptr [ebp-20], eax
.stabn 68,0,289,.L_608A-_RICHEDIT_KEYPRESS@12
.L_608B:
##         if iSel = LB_ERR then iSel=0 else iSel = (iSel+iCount+iif(iMod=0,1,-1)) mod iCount
	cmp dword ptr [ebp-16], -1
	jne .L_6060
.L_6061:
	mov dword ptr [ebp-16], 0
.L_6062:
	jmp .L_605F
.L_6060:
.L_6063:
	mov eax, dword ptr [ebp-12]
	add eax, dword ptr [ebp-16]
	mov dword ptr [ebp-28], eax
	cmp dword ptr [ebp+16], 0
	jne .L_6064
	mov dword ptr [ebp-24], 1
	jmp .L_6081
.L_6064:
	mov dword ptr [ebp-24], -1
.L_6081:
	mov eax, dword ptr [ebp-24]
	add eax, dword ptr [ebp-28]
	cdq
	idiv dword ptr [ebp-12]
	mov eax, edx
	mov dword ptr [ebp-16], eax
.L_605F:
.L_6066:
.stabn 68,0,290,.L_608B-_RICHEDIT_KEYPRESS@12
.L_608C:
##         SendMessage( g_hSearch , LB_SETCURSEL , iSel , 0 )
	push 0
	push dword ptr [ebp-16]
	push 390
	push dword ptr [_G_HSEARCH]
	call _SendMessageA@16
.stabn 68,0,291,.L_608C-_RICHEDIT_KEYPRESS@12
.L_608D:
##         g_SearchChanged = true         
	mov byte ptr [_G_SEARCHCHANGED], -1
.stabn 68,0,292,.L_608D-_RICHEDIT_KEYPRESS@12
.L_608E:
##      end if      
.L_6067:
.L_605D:
.L_605C:
##   end select
.L_6068:
.L_6057:
.L_6056:
.L_6069:
##   if g_SearchChanged then      
	movsx eax, byte ptr [_G_SEARCHCHANGED]
	test eax, eax
	je .L_606B
.L_606C:
##      Try() [Macro Expansion: #ifndef __TryCatchError__
.stabn 68,0,296,.L_608E-_RICHEDIT_KEYPRESS@12
.L_608F:
## scope
.L_606D:
## #ifdef _InsideTry_
## #error " another Try() without EndTry()" end scope #define __TryCatchError__ #else 
## #define _InsideTry_ 
## _Redefine_(_Catch_,__FB_UNIQUEID__( TryCatch )Lt_606E,__LINE__,297,CatchLabel)#define __Temp__ CatchLabelLt_606E297 
## _Internal_Redefine_( _Catch_ , __Temp__ CatchLabelLt_606E297  )#if (not defined(_Catch_)) andalso _Catch_ <> CatchLabelLt_606E297
## #define _Catch_ CatchLabelLt_606E297
## #endif
## #undef __Temp__
## _Redefine_(_Catch2_,__FB_UNIQUEID__( TryCatch )Lt_606E,__LINE__,297,AfterCatch)#define __Temp__ AfterCatchLt_606E297 
## _Internal_Redefine_( _Catch2_ , __Temp__ AfterCatchLt_606E297  )#if (not defined(_Catch2_)) andalso _Catch2_ <> AfterCatchLt_606E297
## #define _Catch2_ AfterCatchLt_606E297
## #endif
## #undef __Temp__ 
## static __env as jmp_buf
## static __veh as any ptr
## if setjmp(@__env) then goto _Catch_ CatchLabelLt_606E297 
	push offset _Lt_6083
	call __setjmp
	add esp, 4
	test eax, eax
	je .L_6072
.L_6073:
	jmp .L_6074
.L_6072:
.L_6075:
.stabn 68,0,297,.L_608F-_RICHEDIT_KEYPRESS@12
.L_6090:
push offset 2f
## asm push offset 2f
.stabn 68,0,297,.L_6090-_RICHEDIT_KEYPRESS@12
.L_6091:
push 1 
## push 1 
.stabn 68,0,297,.L_6091-_RICHEDIT_KEYPRESS@12
.L_6092:
call _AddVectoredExceptionHandler@8
## call _AddVectoredExceptionHandler@8
.stabn 68,0,297,.L_6092-_RICHEDIT_KEYPRESS@12
.L_6093:
jmp 1f
## jmp 1f
.stabn 68,0,297,.L_6093-_RICHEDIT_KEYPRESS@12
.L_6094:
## 
2: 
## 2: 
.stabn 68,0,297,.L_6094-_RICHEDIT_KEYPRESS@12
.L_6095:
mov eax, [esp+4] 
## mov eax, [esp+4] 
.stabn 68,0,297,.L_6095-_RICHEDIT_KEYPRESS@12
.L_6096:
mov eax, [eax+4] 
## mov eax, [eax+4] 
.stabn 68,0,297,.L_6096-_RICHEDIT_KEYPRESS@12
.L_6097:
sub dword ptr [eax+196], 12 
## sub dword ptr [eax+offsetof(CONTEXT,ESP)cint( @cast( CONTEXT ptr, 0 )->ESP )], 12 
.stabn 68,0,297,.L_6097-_RICHEDIT_KEYPRESS@12
.L_6098:
mov dword ptr [eax+184], offset _longjmp
## mov dword ptr [eax+offsetof(CONTEXT,EIP)cint( @cast( CONTEXT ptr, 0 )->EIP )], offset _longjmp
.stabn 68,0,297,.L_6098-_RICHEDIT_KEYPRESS@12
.L_6099:
mov eax, [eax+196]
## mov eax, [eax+offsetof(CONTEXT,ESP)cint( @cast( CONTEXT ptr, 0 )->ESP )]
.stabn 68,0,297,.L_6099-_RICHEDIT_KEYPRESS@12
.L_609A:
mov dword ptr [eax+4], offset _Lt_6083
## mov dword ptr [eax+4], offset __env
.stabn 68,0,297,.L_609A-_RICHEDIT_KEYPRESS@12
.L_609B:
mov dword ptr [eax+8], 1 
## mov dword ptr [eax+8], 1 
.stabn 68,0,297,.L_609B-_RICHEDIT_KEYPRESS@12
.L_609C:
mov eax, -1 
## mov eax, -1 
.stabn 68,0,297,.L_609C-_RICHEDIT_KEYPRESS@12
.L_609D:
ret 4
## ret 4
.stabn 68,0,297,.L_609D-_RICHEDIT_KEYPRESS@12
.L_609E:
## 
1:
## 1:
.stabn 68,0,297,.L_609E-_RICHEDIT_KEYPRESS@12
.L_609F:
mov [_Lt_6084], eax
## mov [__veh], eax
.stabn 68,0,297,.L_609F-_RICHEDIT_KEYPRESS@12
.L_60A0:
##asm
## end 
## scope
.L_6076:
## #endif
## #endif ] 
##         HandleTokens( sLastSearch , g_SQCtx )
	push offset _G_SQCTX
	push offset _SLASTSEARCH
	call _HANDLETOKENS@8
##         Catch() [Macro Expansion: #ifndef __TryCatchError__
.stabn 68,0,298,.L_60A0-_RICHEDIT_KEYPRESS@12
## #if (not defined(_InsideTry_))
## #error " Catch() without Try()" #define __TryCatchError__ #elseif defined(_InsideCatch2_)
## #error " more than one Catch() inside a Try()/EndTry() block" #define __TryCatchError__ #else
.L_60A1:
## end scope
.L_6077:
## #define _InsideCatch2_ 
## scope
.L_6078:
## #define _InsideCatch_
## goto _Catch2_ AfterCatchLt_606E297 
	jmp .L_6079
.stabn 68,0,299,.L_60A1-_RICHEDIT_KEYPRESS@12
.L_60A2:
## _Catch_:CatchLabelLt_606E297: 
.L_6074:
## scope
.L_607A:
## #endif 
## #endif ] 
##            LogError( "Auto completion Crashed!!!" )
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	push 0
	push 27
	push offset _Lt_6029
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-16]
	push eax
	call _LOGERROR@4
	lea eax, [ebp-16]
	push eax
	call _fb_StrDelete@4
##         EndCatch() [Macro Expansion: #ifndef __TryCatchError__
.stabn 68,0,300,.L_60A2-_RICHEDIT_KEYPRESS@12
## #if (not defined(_InsideTry_))
## #error " EndCatch() without Try() (and Catch() inside)" #define __TryCatchError__ #elseif (not defined(_InsideCatch_))
## #error " EndCatch() without Catch()" end scope _Catch_:CatchLabelLt_606E297: #define __TryCatchError__ #else
.L_60A3:
## end scope
.L_607C:
## _Catch2_:AfterCatchLt_606E297: 
.L_6079:
## end scope
.L_607D:
## #endif
## #endif ] 
##      EndTry() [Macro Expansion: #ifndef __TryCatchError__
## #if (not defined(_InsideTry_))
## #error " EndTry() without Try()"  #elseif (defined(_InsideCatch_))
## end scope #error " EndTry() inside Catch() block" #elseif (defined(_InsideFinally_))
## end scope #error " EndTry() inside Finally() block" #else
## #if (not defined(_InsideCatch2_))
## end scope goto _Catch2_ _Catch_:CatchLabelLt_606E297:  _Catch2_:AfterCatchLt_606E297: #endif
push [_Lt_6084]
## asm  push [__veh]
.stabn 68,0,302,.L_60A3-_RICHEDIT_KEYPRESS@12
.L_60A4:
call _RemoveVectoredExceptionHandler@4
## call _RemoveVectoredExceptionHandler@4
.stabn 68,0,302,.L_60A4-_RICHEDIT_KEYPRESS@12
.L_60A5:
##asm
## end 
## #endif
## #endif
## #undef __TryCatchError__
## end scope ] 
.L_607E:
##   end if
.L_607F:
.L_606B:
.L_606A:
##   return 0
	mov dword ptr [ebp-4], 0
.stabn 68,0,305,.L_60A5-_RICHEDIT_KEYPRESS@12
.L_60A6:
.L_6054:
	mov eax, dword ptr [ebp-4]
	pop edi
	pop esi
	pop ebx
	mov esp, ebp
	pop ebp
	ret 12
	.stabn 68,0,306,.L_6054-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6053-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6055-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6059-_RICHEDIT_KEYPRESS@12
	.stabs "ICOUNT:1",128,0,0,-12
	.stabs "ISEL:1",128,0,0,-16
	.stabs "ISELORG:1",128,0,0,-20
	.stabn 192,0,0,.L_605E-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6061-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6062-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6063-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6066-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6067-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6068-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6069-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_606C-_RICHEDIT_KEYPRESS@12
	.stabs "__ENV:V343",40,0,0,_Lt_6083
	.stabs "__VEH:V417=*7",40,0,0,_Lt_6084
	.stabn 192,0,0,.L_606D-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6073-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6075-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6076-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6077-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_6078-_RICHEDIT_KEYPRESS@12
	.stabn 192,0,0,.L_607A-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_607C-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_607D-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_607E-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_607F-_RICHEDIT_KEYPRESS@12
	.stabn 224,0,0,.L_6054-_RICHEDIT_KEYPRESS@12
.L_60A7:
	.stabs "",36,0,0,.L_60A7-_RICHEDIT_KEYPRESS@12

.section .bss
.balign 4
	.lcomm	_Lt_6083,64
.balign 4
	.lcomm	_Lt_6084,4

.section .text
	.stabs "PROCESSACCELERATOR:F7",36,0,308,_PROCESSACCELERATOR@4
	.stabs "IID:p1",160,0,0,8
.balign 16

.globl _PROCESSACCELERATOR@4
_PROCESSACCELERATOR@4:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,308,_PROCESSACCELERATOR@4-_PROCESSACCELERATOR@4
.L_60A8:
.L_60BD:
##   select case iID
.L_60AA:
##   case acToggleMenu
	cmp dword ptr [ebp+8], 9100
	jne .L_60AC
.L_60AD:
.L_60AE:
.stabn 68,0,310,.L_60BD-_PROCESSACCELERATOR@4
.L_60BE:
##      SetMenu( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  , iif( GetMenu(CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ] ) , NULL , g_WndMenu ) )
	push dword ptr [_G_TMAINCTX+24]
	call _GetMenu@4
	test eax, eax
	je .L_60AF
	mov dword ptr [ebp-4], 0
	jmp .L_60BC
.L_60AF:
	mov eax, dword ptr [_G_WNDMENU]
	mov dword ptr [ebp-4], eax
.L_60BC:
	push dword ptr [ebp-4]
	push dword ptr [_G_TMAINCTX+24]
	call _SetMenu@8
.stabn 68,0,311,.L_60BE-_PROCESSACCELERATOR@4
.L_60BF:
##   case meFirst+1 to MeLast-1 '--- accelerators for menu's as well ---
.L_60B1:
	jmp .L_60AB
.L_60AC:
	cmp dword ptr [ebp+8], 1001
	jl .L_60B2
	cmp dword ptr [ebp+8], 1047
	jg .L_60B2
.L_60B3:
.L_60B4:
.stabn 68,0,312,.L_60BF-_PROCESSACCELERATOR@4
.L_60C0:
##      Menu.Trigger( iID )
	mov ax, word ptr [ebp+8]
	push eax
	call __ZN4MENU7TRIGGEREt@4
.stabn 68,0,313,.L_60C0-_PROCESSACCELERATOR@4
.L_60C1:
##   case acFilterDump        : puts("Dump filter parts")  '--- debug accelerators ---
.L_60B5:
	jmp .L_60AB
.L_60B2:
	cmp dword ptr [ebp+8], 9101
	jne .L_60B6
.L_60B7:
.L_60B8:
	push offset _Lt_60B9
	call _puts
	add esp, 4
.stabn 68,0,314,.L_60C1-_PROCESSACCELERATOR@4
.L_60C2:
##   end select
.L_60BA:
.L_60B6:
.L_60AB:
.L_60BB:
.L_60A9:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,316,.L_60A9-_PROCESSACCELERATOR@4
	.stabn 192,0,0,.L_60A8-_PROCESSACCELERATOR@4
	.stabn 192,0,0,.L_60AA-_PROCESSACCELERATOR@4
	.stabn 192,0,0,.L_60AE-_PROCESSACCELERATOR@4
	.stabn 224,0,0,.L_60B1-_PROCESSACCELERATOR@4
	.stabn 192,0,0,.L_60B4-_PROCESSACCELERATOR@4
	.stabn 224,0,0,.L_60B5-_PROCESSACCELERATOR@4
	.stabn 192,0,0,.L_60B8-_PROCESSACCELERATOR@4
	.stabn 224,0,0,.L_60BA-_PROCESSACCELERATOR@4
	.stabn 224,0,0,.L_60BB-_PROCESSACCELERATOR@4
	.stabn 224,0,0,.L_60A9-_PROCESSACCELERATOR@4
.L_60C3:
	.stabs "",36,0,0,.L_60C3-_PROCESSACCELERATOR@4
	.stabs "HACCEL__:Tt419=s4UNUSED:1,0,32;;",128,0,0,0
	.stabs "CREATEMAINACCELERATORS:F418=*419",36,0,317,_CREATEMAINACCELERATORS@0
.balign 16

.globl _CREATEMAINACCELERATORS@0
_CREATEMAINACCELERATORS@0:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,317,_CREATEMAINACCELERATORS@0-_CREATEMAINACCELERATORS@0
	mov dword ptr [ebp-4], 0
.L_60C4:
##   #define __Dummy( _Dummy... ) __FB_UNQUOTE__("_")
##   #macro _Entry( _idName , _Unused0 , _Modifiers , _Accelerator , _Unused... )                  __FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(_Accelerator) , "( " __FB_QUOTE__( __FB_EVAL__(_Modifiers)) " or FVIRTKEY , " #_Accelerator ", " #_idName " ), _ " , "_ " ) ) )         #endmacro
.L_617D:
##   static as ACCEL AccelList(...) = { _      ForEachMenuEntry( _Entry ,, __Dummy ,, __Dummy ,, __Dummy )) [Macro Expansion: __Dummy( "&File" )__FB_UNQUOTE__("_")_ _Entry( meFile_New , "&New" , _Ctrl FCONTROL , VK_N , @File_New )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_N)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_N" ", " $"meFile_New" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_N" ", " $"meFile_New" " ), _ " )$"( 8 or FVIRTKEY , VK_N, meFile_New ), _ " )( 8 or FVIRTKEY , VK_N, meFile_New ), _  _Entry( meFile_open , "&Open" , _Ctrl FCONTROL , VK_O , @File_Open )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_O)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_O" ", " $"meFile_open" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_O" ", " $"meFile_open" " ), _ " )$"( 8 or FVIRTKEY , VK_O, meFile_open ), _ " )( 8 or FVIRTKEY , VK_O, meFile_open ), _   _Entry( meFile_Save , "&Save" , _Ctrl FCONTROL , VK_S , @File_Save )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_S)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_S" ", " $"meFile_Save" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_S" ", " $"meFile_Save" " ), _ " )$"( 8 or FVIRTKEY , VK_S, meFile_Save ), _ " )( 8 or FVIRTKEY , VK_S, meFile_Save ), _   _Entry( meFile_SaveAs , "Save &As" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_S , @File_SaveAs )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_S)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_S" ", " $"meFile_SaveAs" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_S" ", " $"meFile_SaveAs" " ), _ " )$"( 12 or FVIRTKEY , VK_S, meFile_SaveAs ), _ " )( 12 or FVIRTKEY , VK_S, meFile_SaveAs ), _   _Entry( meFile_Close , "&Close" , _Ctrl FCONTROL , VK_W , @File_Close )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_W)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_W" ", " $"meFile_Close" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_W" ", " $"meFile_Close" " ), _ " )$"( 8 or FVIRTKEY , VK_W, meFile_Close ), _ " )( 8 or FVIRTKEY , VK_W, meFile_Close ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meFile_Import , "&Import" , _Ctrl FCONTROL , VK_I , @File_Import )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_I)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_I" ", " $"meFile_Import" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_I" ", " $"meFile_Import" " ), _ " )$"( 8 or FVIRTKEY , VK_I, meFile_Import ), _ " )( 8 or FVIRTKEY , VK_I, meFile_Import ), _  _Entry( meFile_Export , "&Export" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_I , @File_Export )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_I)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_I" ", " $"meFile_Export" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_I" ", " $"meFile_Export" " ), _ " )$"( 12 or FVIRTKEY , VK_I, meFile_Export ), _ " )( 12 or FVIRTKEY , VK_I, meFile_Export ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meFile_Exit , "&Quit" !"\tAlt+F4" , _Ctrl FCONTROL , VK_Q , @File_Exit )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_Q)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_Q" ", " $"meFile_Exit" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_Q" ", " $"meFile_Exit" " ), _ " )$"( 8 or FVIRTKEY , VK_Q, meFile_Exit ), _ " )( 8 or FVIRTKEY , VK_Q, meFile_Exit ), _  __Dummy()__FB_UNQUOTE__("_")_  __Dummy( "&Edit" )__FB_UNQUOTE__("_")_  _Entry( meEdit_Undo , "&Undo" !"\tCtrl+Z" , , , @Edit_Undo )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meEdit_Undo" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meEdit_Redo , "&Redo" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_Z , @Edit_Redo )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_Z)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_Z" ", " $"meEdit_Redo" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_Z" ", " $"meEdit_Redo" " ), _ " )$"( 12 or FVIRTKEY , VK_Z, meEdit_Redo ), _ " )( 12 or FVIRTKEY , VK_Z, meEdit_Redo ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meEdit_Find , "&Find" , _Ctrl FCONTROL , VK_F , @Edit_Find )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_F)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_F" ", " $"meEdit_Find" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_F" ", " $"meEdit_Find" " ), _ " )$"( 8 or FVIRTKEY , VK_F, meEdit_Find ), _ " )( 8 or FVIRTKEY , VK_F, meEdit_Find ), _  _Entry( meEdit_Replace , "Rep&lace" , _Ctrl FCONTROL , VK_H , @Edit_Replace )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_H)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_H" ", " $"meEdit_Replace" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_H" ", " $"meEdit_Replace" " ), _ " )$"( 8 or FVIRTKEY , VK_H, meEdit_Replace ), _ " )( 8 or FVIRTKEY , VK_H, meEdit_Replace ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meEdit_SelAll , "&Select All" , _Ctrl FCONTROL , VK_A , @Edit_SelectAll )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_A)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_A" ", " $"meEdit_SelAll" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_A" ", " $"meEdit_SelAll" " ), _ " )$"( 8 or FVIRTKEY , VK_A, meEdit_SelAll ), _ " )( 8 or FVIRTKEY , VK_A, meEdit_SelAll ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meEdit_Cut , "C&ut" !"\tCtrl+X" , , , @Edit_Cut )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meEdit_Cut" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meEdit_Copy , "&Copy" !"\tCtrl+C" , , , @Edit_Copy )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meEdit_Copy" " ), _ " , "_ " )"_ " )$"_ " )_   _Entry( meEdit_Paste , "&Paste" !"\tCtrl+V" , , , @Edit_Paste)__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meEdit_Paste" " ), _ " , "_ " )"_ " )$"_ " )_  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meCode_Build , "&Build" , _Ctrl FCONTROL , VK_B , @Button_Compile )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_B)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_B" ", " $"meCode_Build" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_B" ", " $"meCode_Build" " ), _ " )$"( 8 or FVIRTKEY , VK_B, meCode_Build ), _ " )( 8 or FVIRTKEY , VK_B, meCode_Build ), _  _Entry( meCode_Clear , "Cl&ear output" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_B , @Code_ClearOutput )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_B)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_B" ", " $"meCode_Clear" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_B" ", " $"meCode_Clear" " ), _ " )$"( 12 or FVIRTKEY , VK_B, meCode_Clear ), _ " )( 12 or FVIRTKEY , VK_B, meCode_Clear ), _  __Dummy()__FB_UNQUOTE__("_")_ __Dummy( "&Completion" )__FB_UNQUOTE__("_")_ _Entry( meCompletion_Enable , "&Enable" , _Ctrl FCONTROL , VK_E , @Completion_Enable )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_E)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_E" ", " $"meCompletion_Enable" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_E" ", " $"meCompletion_Enable" " ), _ " )$"( 8 or FVIRTKEY , VK_E, meCompletion_Enable ), _ " )( 8 or FVIRTKEY , VK_E, meCompletion_Enable ), _   __Dummy( "&Filters" , sbeCompletion_Filters )__FB_UNQUOTE__("_")_ _Entry( meCompletion_ClearFilters , "C&lear" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_C , @Completion_ClearFilters )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_C)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_C" ", " $"meCompletion_ClearFilters" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_C" ", " $"meCompletion_ClearFilters" " ), _ " )$"( 12 or FVIRTKEY , VK_C, meCompletion_ClearFilters ), _ " )( 12 or FVIRTKEY , VK_C, meCompletion_ClearFilters ), _  _Entry( meCompletion_InvertFilters , "&Invert" , _Ctrl+FCONTROL+_Alt FALT , VK_I , @Completion_InvertFilters )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_I)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FALT)24)$"24" " or FVIRTKEY , " $"VK_I" ", " $"meCompletion_InvertFilters" " ), _ " , "_ " )"( " $"24" " or FVIRTKEY , " $"VK_I" ", " $"meCompletion_InvertFilters" " ), _ " )$"( 24 or FVIRTKEY , VK_I, meCompletion_InvertFilters ), _ " )( 24 or FVIRTKEY , VK_I, meCompletion_InvertFilters ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meFilter_Variations , "&Variations" , _Alt+FALT+_Shift FSHIFT , VK_F , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_F)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT+FSHIFT)20)$"20" " or FVIRTKEY , " $"VK_F" ", " $"meFilter_Variations" " ), _ " , "_ " )"( " $"20" " or FVIRTKEY , " $"VK_F" ", " $"meFilter_Variations" " ), _ " )$"( 20 or FVIRTKEY , VK_F, meFilter_Variations ), _ " )( 20 or FVIRTKEY , VK_F, meFilter_Variations ), _  _Entry( meFilter_Donor , "&Donor" , _Alt FALT , VK_D , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_D)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_D" ", " $"meFilter_Donor" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_D" ", " $"meFilter_Donor" " ), _ " )$"( 16 or FVIRTKEY , VK_D, meFilter_Donor ), _ " )( 16 or FVIRTKEY , VK_D, meFilter_Donor ), _  _Entry( meFilter_Path , "&Path" , _Alt FALT , VK_P , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_P)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_P" ", " $"meFilter_Path" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_P" ", " $"meFilter_Path" " ), _ " )$"( 16 or FVIRTKEY , VK_P, meFilter_Path ), _ " )( 16 or FVIRTKEY , VK_P, meFilter_Path ), _  _Entry( meFilter_Printed , "P&rinted" , _Alt+FALT+_Shift FSHIFT , VK_P , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_P)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT+FSHIFT)20)$"20" " or FVIRTKEY , " $"VK_P" ", " $"meFilter_Printed" " ), _ " , "_ " )"( " $"20" " or FVIRTKEY , " $"VK_P" ", " $"meFilter_Printed" " ), _ " )$"( 20 or FVIRTKEY , VK_P, meFilter_Printed ), _ " )( 20 or FVIRTKEY , VK_P, meFilter_Printed ), _  _Entry( meFilter_Shortcut , "Shortcut" , _Alt FALT , VK_S , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_S)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_S" ", " $"meFilter_Shortcut" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_S" ", " $"meFilter_Shortcut" " ), _ " )$"( 16 or FVIRTKEY , VK_S, meFilter_Shortcut ), _ " )( 16 or FVIRTKEY , VK_S, meFilter_Shortcut ), _  _Entry( meFilter_Stickered , "Stic&kered" , _Alt FALT , VK_K , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_K)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_K" ", " $"meFilter_Stickered" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_K" ", " $"meFilter_Stickered" " ), _ " )$"( 16 or FVIRTKEY , VK_K, meFilter_Stickered ), _ " )( 16 or FVIRTKEY , VK_K, meFilter_Stickered ), _  _Entry( meFilter_MultiColor , "Multi&color" , _Alt FALT , VK_M , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_M)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_M" ", " $"meFilter_MultiColor" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_M" ", " $"meFilter_MultiColor" " ), _ " )$"( 16 or FVIRTKEY , VK_M, meFilter_MultiColor ), _ " )( 16 or FVIRTKEY , VK_M, meFilter_MultiColor ), _  _Entry( meFilter_PreColored , "Pre-c&olored", _Alt+FALT+_Shift FSHIFT , VK_C , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_C)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT+FSHIFT)20)$"20" " or FVIRTKEY , " $"VK_C" ", " $"meFilter_PreColored" " ), _ " , "_ " )"( " $"20" " or FVIRTKEY , " $"VK_C" ", " $"meFilter_PreColored" " ), _ " )$"( 20 or FVIRTKEY , VK_C, meFilter_PreColored ), _ " )( 20 or FVIRTKEY , VK_C, meFilter_PreColored ), _  _Entry( meFilter_Template , "&Template" , _Alt FALT , VK_T , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_T)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_T" ", " $"meFilter_Template" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_T" ", " $"meFilter_Template" " ), _ " )$"( 16 or FVIRTKEY , VK_T, meFilter_Template ), _ " )( 16 or FVIRTKEY , VK_T, meFilter_Template ), _  _Entry( meFilter_Alias , "&Alias" , _Alt FALT , VK_A , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_A)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_A" ", " $"meFilter_Alias" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_A" ", " $"meFilter_Alias" " ), _ " )$"( 16 or FVIRTKEY , VK_A, meFilter_Alias ), _ " )( 16 or FVIRTKEY , VK_A, meFilter_Alias ), _  _Entry( meFilter_Moulded , "&Moulded" , _Alt+FALT+_Shift FSHIFT , VK_M , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_M)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT+FSHIFT)20)$"20" " or FVIRTKEY , " $"VK_M" ", " $"meFilter_Moulded" " ), _ " , "_ " )"( " $"20" " or FVIRTKEY , " $"VK_M" ", " $"meFilter_Moulded" " ), _ " )$"( 20 or FVIRTKEY , VK_M, meFilter_Moulded ), _ " )( 20 or FVIRTKEY , VK_M, meFilter_Moulded ), _  _Entry( meFilter_Helper , "&Helper" , _Alt+FALT+_Shift FSHIFT , VK_H , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_H)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT+FSHIFT)20)$"20" " or FVIRTKEY , " $"VK_H" ", " $"meFilter_Helper" " ), _ " , "_ " )"( " $"20" " or FVIRTKEY , " $"VK_H" ", " $"meFilter_Helper" " ), _ " )$"( 20 or FVIRTKEY , VK_H, meFilter_Helper ), _ " )( 20 or FVIRTKEY , VK_H, meFilter_Helper ), _  _Entry( meFilter_Stickers , "&Stickers" , _Alt FALT , VK_S , @Completion_Toggle )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_S)1 , "( " __FB_QUOTE__( __FB_EVAL__(FALT)16)$"16" " or FVIRTKEY , " $"VK_S" ", " $"meFilter_Stickers" " ), _ " , "_ " )"( " $"16" " or FVIRTKEY , " $"VK_S" ", " $"meFilter_Stickers" " ), _ " )$"( 16 or FVIRTKEY , VK_S, meFilter_Stickers ), _ " )( 16 or FVIRTKEY , VK_S, meFilter_Stickers ), _  __Dummy()__FB_UNQUOTE__("_")_  __Dummy()__FB_UNQUOTE__("_")_ __Dummy( "&View" )__FB_UNQUOTE__("_")_ _Entry( meView_ToggleGW , "&Graphics Window" , _Ctrl FCONTROL , VK_G , @View_ToggleGW )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_G)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL)8)$"8" " or FVIRTKEY , " $"VK_G" ", " $"meView_ToggleGW" " ), _ " , "_ " )"( " $"8" " or FVIRTKEY , " $"VK_G" ", " $"meView_ToggleGW" " ), _ " )$"( 8 or FVIRTKEY , VK_G, meView_ToggleGW ), _ " )( 8 or FVIRTKEY , VK_G, meView_ToggleGW ), _   _Entry( meView_ToggleGWDock , "&Dock GW in Main" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_L , @View_ToggleGWDock )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_L)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_L" ", " $"meView_ToggleGWDock" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_L" ", " $"meView_ToggleGWDock" " ), _ " )$"( 12 or FVIRTKEY , VK_L, meView_ToggleGWDock ), _ " )( 12 or FVIRTKEY , VK_L, meView_ToggleGWDock ), _  _Entry( meView_ResetCamera , "&Reset Camera" , _Ctrl+FCONTROL+_Shift FSHIFT , VK_R , @View_Key )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__(VK_R)1 , "( " __FB_QUOTE__( __FB_EVAL__(FCONTROL+FSHIFT)12)$"12" " or FVIRTKEY , " $"VK_R" ", " $"meView_ResetCamera" " ), _ " , "_ " )"( " $"12" " or FVIRTKEY , " $"VK_R" ", " $"meView_ResetCamera" " ), _ " )$"( 12 or FVIRTKEY , VK_R, meView_ResetCamera ), _ " )( 12 or FVIRTKEY , VK_R, meView_ResetCamera ), _  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meView_ShowCollision, "&Show Collisions" !"\tSPACE" , , , @View_ToggleKey, MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_ShowCollision" " ), _ " , "_ " )"_ " )$"_ " )_  __Dummy()__FB_UNQUOTE__("_")_ _Entry( meView_ResetView , "Reset View parts" !"\tBACKSPACE" , , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_ResetView" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meView_NextPart , "View &Next part" !"\t+" , , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_NextPart" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meView_PrevPart , "View &Previous part" !"\t-" , , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_PrevPart" " ), _ " , "_ " )"_ " )$"_ " )_  __Dummy()__FB_UNQUOTE__("_")_  _Entry( meView_ShowBox , "&Show bounding box" !"\tTAB" , , , @View_Toggle , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_ShowBox" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meView_ResetBox , "Reset bounding box" !"\tShift BACKSPACE", , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_ResetBox" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meView_NextBoxPart , "Ne&xt part" !"\tShift +" , , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_NextBoxPart" " ), _ " , "_ " )"_ " )$"_ " )_  _Entry( meView_PrevBoxPart , "&Pre&vious part" !"\tShift -" , , , @View_Key , MFS_GRAYED )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meView_PrevBoxPart" " ), _ " , "_ " )"_ " )$"_ " )_  __Dummy()__FB_UNQUOTE__("_")_  __Dummy( "&Help" )__FB_UNQUOTE__("_")_  _Entry( meHelp_About , "About" , , , @Help_About )__FB_UNQUOTE__( __FB_EVAL__( __FB_IIF__( __FB_ARG_COUNT__()0 , "( " __FB_QUOTE__( __FB_EVAL__())"" " or FVIRTKEY , " "" ", " $"meHelp_About" " ), _ " , "_ " )"_ " )$"_ " )_  __Dummy()__FB_UNQUOTE__("_")_ ]       ( FSHIFT or FVIRTKEY , VK_SPACE , acToggleMenu ) _   }
##   return CreateAcceleratorTable( @AccelList(0) , ubound(AccelList)+1 )
	push 34
	push offset _Lt_617E
	call _CreateAcceleratorTableA@8
	mov dword ptr [ebp-4], eax
.stabn 68,0,327,.L_617D-_CREATEMAINACCELERATORS@0
.L_617F:
.L_60C5:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,328,.L_60C5-_CREATEMAINACCELERATORS@0
	.stabs "TAGACCEL:Tt421=s6FVIRT:3,0,8;KEY:6,16,16;CMD:6,32,16;;",128,0,0,0
	.stabs "ACCELLIST:V420=ar1;0;33;421",38,0,0,_Lt_617E
	.stabn 192,0,0,.L_60C4-_CREATEMAINACCELERATORS@0
	.stabn 224,0,0,.L_60C5-_CREATEMAINACCELERATORS@0
.L_6180:
	.stabs "",36,0,0,.L_6180-_CREATEMAINACCELERATORS@0

.section .data
.balign 4
_Lt_617E:
.byte 9
.skip 1,0
.short 78
.short 1001
.byte 9
.skip 1,0
.short 79
.short 1002
.byte 9
.skip 1,0
.short 83
.short 1003
.byte 13
.skip 1,0
.short 83
.short 1004
.byte 9
.skip 1,0
.short 87
.short 1005
.byte 9
.skip 1,0
.short 73
.short 1006
.byte 13
.skip 1,0
.short 73
.short 1007
.byte 9
.skip 1,0
.short 81
.short 1008
.byte 13
.skip 1,0
.short 90
.short 1010
.byte 9
.skip 1,0
.short 70
.short 1011
.byte 9
.skip 1,0
.short 72
.short 1012
.byte 9
.skip 1,0
.short 65
.short 1013
.byte 9
.skip 1,0
.short 66
.short 1017
.byte 13
.skip 1,0
.short 66
.short 1018
.byte 9
.skip 1,0
.short 69
.short 1019
.byte 13
.skip 1,0
.short 67
.short 1021
.byte 25
.skip 1,0
.short 73
.short 1022
.byte 21
.skip 1,0
.short 70
.short 1023
.byte 17
.skip 1,0
.short 68
.short 1024
.byte 17
.skip 1,0
.short 80
.short 1025
.byte 21
.skip 1,0
.short 80
.short 1026
.byte 17
.skip 1,0
.short 83
.short 1027
.byte 17
.skip 1,0
.short 75
.short 1028
.byte 17
.skip 1,0
.short 77
.short 1029
.byte 21
.skip 1,0
.short 67
.short 1030
.byte 17
.skip 1,0
.short 84
.short 1031
.byte 17
.skip 1,0
.short 65
.short 1032
.byte 21
.skip 1,0
.short 77
.short 1033
.byte 21
.skip 1,0
.short 72
.short 1034
.byte 17
.skip 1,0
.short 83
.short 1035
.byte 9
.skip 1,0
.short 71
.short 1036
.byte 13
.skip 1,0
.short 76
.short 1037
.byte 13
.skip 1,0
.short 82
.short 1038
.byte 5
.skip 1,0
.short 32
.short 9100

.section .text
	.stabs "DOCKGFXWINDOW:F7",36,0,330,_DOCKGFXWINDOW@0
.balign 16

.globl _DOCKGFXWINDOW@0
_DOCKGFXWINDOW@0:
	push ebp
	mov ebp, esp
	sub esp, 88
	push ebx
	.stabn 68,0,330,_DOCKGFXWINDOW@0-_DOCKGFXWINDOW@0
.L_6181:
.L_618F:
##   static as integer iOnce=0
##   if g_GfxHwnd=0 then exit sub
	cmp dword ptr [_G_GFXHWND], 0
	jne .L_6184
.L_6185:
	jmp .L_6182
.L_6184:
.L_6186:
.stabn 68,0,332,.L_618F-_DOCKGFXWINDOW@0
.L_6190:
##   dim as RECT RcWnd=any,RcGfx=any,RcCli=any,RcDesk
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
.stabn 68,0,334,.L_6190-_DOCKGFXWINDOW@0
.L_6191:
##   GetWindowRect( GetDesktopWindow() , @RcDesk )
	lea eax, [ebp-64]
	push eax
	call _GetDesktopWindow@0
	push eax
	call _GetWindowRect@8
.stabn 68,0,335,.L_6191-_DOCKGFXWINDOW@0
.L_6192:
##   GetWindowRect( g_GfxHwnd , @RcGfx )
	lea eax, [ebp-32]
	push eax
	push dword ptr [_G_GFXHWND]
	call _GetWindowRect@8
.stabn 68,0,336,.L_6192-_DOCKGFXWINDOW@0
.L_6193:
##   GetWindowRect( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  ,@RcWnd )   
	lea eax, [ebp-16]
	push eax
	push dword ptr [_G_TMAINCTX+24]
	call _GetWindowRect@8
.stabn 68,0,337,.L_6193-_DOCKGFXWINDOW@0
.L_6194:
##   var iYPos = RcWnd.top+((RcWnd.bottom-RcWnd.Top)-(RcGfx.bottom-RcGfx.top))\2   
	mov eax, dword ptr [ebp-4]
	sub eax, dword ptr [ebp-12]
	sub eax, dword ptr [ebp-20]
	add eax, dword ptr [ebp-28]
	mov ecx, 2
	cdq
	idiv ecx
	add eax, dword ptr [ebp-12]
	mov dword ptr [ebp-68], eax
.stabn 68,0,338,.L_6194-_DOCKGFXWINDOW@0
.L_6195:
##   GetClientRect( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  ,@RcCli )
	lea eax, [ebp-48]
	push eax
	push dword ptr [_G_TMAINCTX+24]
	call _GetClientRect@8
.stabn 68,0,339,.L_6195-_DOCKGFXWINDOW@0
.L_6196:
##   dim as POINT tPtRight = type(RcCli.Right-3,0)
	mov eax, dword ptr [ebp-40]
	add eax, -3
	mov dword ptr [ebp-76], eax
	mov dword ptr [ebp-72], 0
.stabn 68,0,340,.L_6196-_DOCKGFXWINDOW@0
.L_6197:
##   ClientToScreen( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  , @tPtRight )   
	lea eax, [ebp-76]
	push eax
	push dword ptr [_G_TMAINCTX+24]
	call _ClientToScreen@8
.stabn 68,0,341,.L_6197-_DOCKGFXWINDOW@0
.L_6198:
##   var hPlace = HWND_TOP
	mov dword ptr [ebp-80], 0
.stabn 68,0,342,.L_6198-_DOCKGFXWINDOW@0
.L_6199:
##   RcDesk.right += 10 'This can be acquired with GetSystemMetrics?
	add dword ptr [ebp-56], 10
.stabn 68,0,346,.L_6199-_DOCKGFXWINDOW@0
.L_619A:
##   var GfxWid = (RcGfx.right - RcGfx.left)
	mov eax, dword ptr [ebp-24]
	sub eax, dword ptr [ebp-32]
	mov dword ptr [ebp-84], eax
.stabn 68,0,347,.L_619A-_DOCKGFXWINDOW@0
.L_619B:
##   if (tPtRight.x+GfxWid) >= RcDesk.right then 
	mov eax, dword ptr [ebp-84]
	add eax, dword ptr [ebp-76]
	mov ebx, dword ptr [ebp-56]
	cmp eax, ebx
	jl .L_6189
.L_618A:
.stabn 68,0,348,.L_619B-_DOCKGFXWINDOW@0
.L_619C:
##      hPlace = HWND_TOPMOST  [Macro Expansion: cast(handle, -1) ]  : tPtRight.x = RcDesk.right-GfxWid
	mov dword ptr [ebp-80], 4294967295
	mov ebx, dword ptr [ebp-56]
	sub ebx, dword ptr [ebp-84]
	mov dword ptr [ebp-76], ebx
.stabn 68,0,349,.L_619C-_DOCKGFXWINDOW@0
.L_619D:
##   end if
.L_618B:
.L_6189:
.L_6188:
##   SetWindowPos( g_GfxHwnd , hPlace , tPtRight.x-4 ,iYPos , 0,0 , SWP_NOSIZE or SWP_NOACTIVATE or ((g_Dock3D=0 orelse iOnce<>0) and SWP_NOMOVE) )
	movsx ebx, byte ptr [_G_DOCK3D]
	test ebx, ebx
	je .L_618C
	mov ebx, dword ptr [_Lt_619E]
	test ebx, ebx
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-88], ebx
	jmp .L_618E
.L_618C:
	mov dword ptr [ebp-88], -1
.L_618E:
	mov ebx, dword ptr [ebp-88]
	and ebx, 2
	or ebx, 17
	mov eax, ebx
	push eax
	push 0
	push 0
	push dword ptr [ebp-68]
	mov eax, dword ptr [ebp-76]
	add eax, -4
	push eax
	push dword ptr [ebp-80]
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,352,.L_619D-_DOCKGFXWINDOW@0
.L_61A0:
##   iOnce = 1
	mov dword ptr [_Lt_619E], 1
.stabn 68,0,354,.L_61A0-_DOCKGFXWINDOW@0
.L_61A1:
.L_6182:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,355,.L_6182-_DOCKGFXWINDOW@0
	.stabs "IONCE:V1",38,0,0,_Lt_619E
	.stabs "RCWND:23",128,0,0,-16
	.stabs "RCGFX:23",128,0,0,-32
	.stabs "RCCLI:23",128,0,0,-48
	.stabs "RCDESK:23",128,0,0,-64
	.stabs "IYPOS:1",128,0,0,-68
	.stabs "TPTRIGHT:154",128,0,0,-76
	.stabs "HPLACE:422=*21",128,0,0,-80
	.stabs "GFXWID:1",128,0,0,-84
	.stabn 192,0,0,.L_6181-_DOCKGFXWINDOW@0
	.stabn 192,0,0,.L_6185-_DOCKGFXWINDOW@0
	.stabn 224,0,0,.L_6186-_DOCKGFXWINDOW@0
	.stabn 192,0,0,.L_618A-_DOCKGFXWINDOW@0
	.stabn 224,0,0,.L_618B-_DOCKGFXWINDOW@0
	.stabn 224,0,0,.L_6182-_DOCKGFXWINDOW@0
.L_61A2:
	.stabs "",36,0,0,.L_61A2-_DOCKGFXWINDOW@0

.section .data
.balign 4
_Lt_619E:
.int 0

.section .text
	.stabs "RESIZEMAINWINDOW:F7",36,0,356,_RESIZEMAINWINDOW@4
	.stabs "BCENTER:p16",160,0,0,8
.balign 16

.globl _RESIZEMAINWINDOW@4
_RESIZEMAINWINDOW@4:
	push ebp
	mov ebp, esp
	sub esp, 132
	.stabn 68,0,356,_RESIZEMAINWINDOW@4-_RESIZEMAINWINDOW@4
.L_61A3:
.L_61B9:
##   static as boolean bResize
##   if bResize then exit sub
	cmp byte ptr [_Lt_61BA], 0
	je .L_61A6
.L_61A7:
	jmp .L_61A4
.L_61A6:
.L_61A8:
.stabn 68,0,358,.L_61B9-_RESIZEMAINWINDOW@4
.L_61BB:
##   bResize = true
	mov byte ptr [_Lt_61BA], 1
.stabn 68,0,359,.L_61BB-_RESIZEMAINWINDOW@4
.L_61BC:
##   dim as RECT RcWnd=any,RcCli=any,RcDesk=any
##   var hWnd = CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ] 
	mov eax, dword ptr [_G_TMAINCTX+24]
	mov dword ptr [ebp-52], eax
.stabn 68,0,362,.L_61BC-_RESIZEMAINWINDOW@4
.L_61BD:
##   GetClientRect(hWnd,@RcCli)      
	lea eax, [ebp-32]
	push eax
	push dword ptr [ebp-52]
	call _GetClientRect@8
.stabn 68,0,363,.L_61BD-_RESIZEMAINWINDOW@4
.L_61BE:
##   if bCenter then 'initial position
	cmp byte ptr [ebp+8], 0
	je .L_61AA
.L_61AB:
.stabn 68,0,364,.L_61BE-_RESIZEMAINWINDOW@4
.L_61BF:
##      GetWindowRect(hWnd,@RcWnd)
	lea eax, [ebp-16]
	push eax
	push dword ptr [ebp-52]
	call _GetWindowRect@8
.stabn 68,0,365,.L_61BF-_RESIZEMAINWINDOW@4
.L_61C0:
##      with RcWnd
.L_61AC:
##         .right  -= .left : .bottom -= .top              'get window size
	mov eax, dword ptr [ebp-16]
	sub dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp-12]
	sub dword ptr [ebp-4], eax
.stabn 68,0,368,.L_61C0-_RESIZEMAINWINDOW@4
.L_61C1:
##         .right -= RcCli.right : .bottom -= RcCli.bottom 'make it be difference from wnd/client
	mov eax, dword ptr [ebp-24]
	sub dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp-20]
	sub dword ptr [ebp-4], eax
.stabn 68,0,369,.L_61C1-_RESIZEMAINWINDOW@4
.L_61C2:
##         .right += g_WndWid : .bottom += g_WndHei        'add back desired client area size
	mov eax, dword ptr [_G_WNDWID]
	add dword ptr [ebp-8], eax
	mov eax, dword ptr [_G_WNDHEI]
	add dword ptr [ebp-4], eax
.stabn 68,0,370,.L_61C2-_RESIZEMAINWINDOW@4
.L_61C3:
##         GetClientRect(GetDesktopWindow(),@RcDesk)         
	lea eax, [ebp-48]
	push eax
	call _GetDesktopWindow@0
	push eax
	call _GetClientRect@8
.stabn 68,0,371,.L_61C3-_RESIZEMAINWINDOW@4
.L_61C4:
##         dim as RECT RcGfx=any : GetWindowRect( g_GfxHwnd , @RcGfx )         
	lea eax, [ebp-116]
	push eax
	push dword ptr [_G_GFXHWND]
	call _GetWindowRect@8
.stabn 68,0,372,.L_61C4-_RESIZEMAINWINDOW@4
.L_61C5:
##         var iAllWid = .right , iGfxHei = RcGfx.bottom-RcGfx.top
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-120], eax
	mov eax, dword ptr [ebp-104]
	sub eax, dword ptr [ebp-112]
	mov dword ptr [ebp-124], eax
.stabn 68,0,373,.L_61C5-_RESIZEMAINWINDOW@4
.L_61C6:
##         if iGfxHei > .bottom then .bottom = iGfxHei
	mov eax, dword ptr [ebp-4]
	cmp dword ptr [ebp-124], eax
	jle .L_61AE
.L_61AF:
	mov eax, dword ptr [ebp-124]
	mov dword ptr [ebp-4], eax
.L_61AE:
.L_61B0:
.stabn 68,0,374,.L_61C6-_RESIZEMAINWINDOW@4
.L_61C7:
##         iAllWid = .right + RcGfx.right-RcGfx.left         
	mov eax, dword ptr [ebp-108]
	add eax, dword ptr [ebp-8]
	sub eax, dword ptr [ebp-116]
	mov dword ptr [ebp-120], eax
.stabn 68,0,375,.L_61C7-_RESIZEMAINWINDOW@4
.L_61C8:
##         var iCenterX = (RcDesk.right-iAllWid)\2 , iCenterY = (RcDesk.bottom-.bottom)\2        
	mov eax, dword ptr [ebp-40]
	sub eax, dword ptr [ebp-120]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [ebp-128], eax
	mov eax, dword ptr [ebp-36]
	sub eax, dword ptr [ebp-4]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [ebp-132], eax
.stabn 68,0,376,.L_61C8-_RESIZEMAINWINDOW@4
.L_61C9:
##         SetWindowPos(hwnd,null,iCenterX,iCenterY,.right,.bottom,SWP_NOZORDER)
	push 4
	push dword ptr [ebp-4]
	push dword ptr [ebp-8]
	push dword ptr [ebp-132]
	push dword ptr [ebp-128]
	push 0
	push dword ptr [ebp-52]
	call _SetWindowPos@28
.stabn 68,0,377,.L_61C9-_RESIZEMAINWINDOW@4
.L_61CA:
##         RcCli.right = g_WndWid : RcCli.bottom = g_WndHei
	mov eax, dword ptr [_G_WNDWID]
	mov dword ptr [ebp-24], eax
	mov eax, dword ptr [_G_WNDHEI]
	mov dword ptr [ebp-20], eax
.stabn 68,0,378,.L_61CA-_RESIZEMAINWINDOW@4
.L_61CB:
##      end with 
.L_61B1:
##   end if
.L_61B2:
.L_61AA:
.L_61A9:
##   ShowWindow( g_hContainer , SW_HIDE )      
	push 0
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,383,.L_61CB-_RESIZEMAINWINDOW@4
.L_61CC:
##   var iModify = SendMessage( CTL(wcEdit) [Macro Expansion: g_tMainCtx.hCtl(wcEdit).hwnd ]  , EM_GETMODIFY , 0 , 0 )   
	push 0
	push 0
	push 184
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
	mov dword ptr [ebp-56], eax
.stabn 68,0,384,.L_61CC-_RESIZEMAINWINDOW@4
.L_61CD:
##   ResizeLayout( hWnd , g_tMainCtx.tForm , RcCli.right , RcCli.bottom )   
	push dword ptr [ebp-20]
	push dword ptr [ebp-24]
	lea eax, [_G_TMAINCTX]
	push eax
	push dword ptr [ebp-52]
	call _RESIZELAYOUT@16
.stabn 68,0,385,.L_61CD-_RESIZEMAINWINDOW@4
.L_61CE:
##   UpdateTabCloseButton() 
	call _UPDATETABCLOSEBUTTON@0
.stabn 68,0,386,.L_61CE-_RESIZEMAINWINDOW@4
.L_61CF:
##   SendMessage( CTL(wcEdit) [Macro Expansion: g_tMainCtx.hCtl(wcEdit).hwnd ]  , EM_SETMODIFY , iModify , 0 )
	push 0
	push dword ptr [ebp-56]
	push 185
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,387,.L_61CF-_RESIZEMAINWINDOW@4
.L_61D0:
##   if g_hSearch then UpdateSearchWindowFont( g_tMainCtx.hFnt(wfStatus).HFONT )      
	cmp dword ptr [_G_HSEARCH], 0
	je .L_61B4
.L_61B5:
	push dword ptr [_G_TMAINCTX+832]
	call _UPDATESEARCHWINDOWFONT@4
.L_61B4:
.L_61B6:
.stabn 68,0,389,.L_61D0-_RESIZEMAINWINDOW@4
.L_61D1:
##   MoveWindow( CTL(wcStatus) [Macro Expansion: g_tMainCtx.hCtl(wcStatus).hwnd ]  ,0,0 , 0,0 , TRUE )
	push -1
	push 0
	push 0
	push 0
	push 0
	push dword ptr [_G_TMAINCTX+696]
	call _MoveWindow@24
.stabn 68,0,390,.L_61D1-_RESIZEMAINWINDOW@4
.L_61D2:
##   dim as long aWidths(2-1) = {RcCli.right*.85,-1}
	lea eax, [ebp-64]
	mov dword ptr [ebp-100], eax
	lea eax, [ebp-64]
	mov dword ptr [ebp-96], eax
	mov dword ptr [ebp-92], 8
	mov dword ptr [ebp-88], 4
	mov dword ptr [ebp-84], 1
	mov dword ptr [ebp-80], 49
	mov dword ptr [ebp-76], 2
	mov dword ptr [ebp-72], 0
	mov dword ptr [ebp-68], 1
	fild dword ptr [ebp-24]
	fmul qword ptr [_Lt_61B8]
	fistp dword ptr [ebp-64]
	mov dword ptr [ebp-60], -1
.stabn 68,0,391,.L_61D2-_RESIZEMAINWINDOW@4
.L_61D3:
##   SendMessage( CTL(wcStatus) [Macro Expansion: g_tMainCtx.hCtl(wcStatus).hwnd ]  , SB_SETPARTS , 2 , cast(LPARAM,@aWidths(0)) )
	lea eax, [ebp-64]
	push eax
	push 2
	push 1028
	push dword ptr [_G_TMAINCTX+696]
	call _SendMessageA@16
.stabn 68,0,392,.L_61D3-_RESIZEMAINWINDOW@4
.L_61D4:
##   DockGfxWindow()   
	call _DOCKGFXWINDOW@0
.stabn 68,0,393,.L_61D4-_RESIZEMAINWINDOW@4
.L_61D5:
##   bResize=false   
	mov byte ptr [_Lt_61BA], 0
.stabn 68,0,394,.L_61D5-_RESIZEMAINWINDOW@4
.L_61D6:
.L_61A4:
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,396,.L_61A4-_RESIZEMAINWINDOW@4
	.stabs "BRESIZE:V16",40,0,0,_Lt_61BA
	.stabs "RCWND:23",128,0,0,-16
	.stabs "RCCLI:23",128,0,0,-32
	.stabs "RCDESK:23",128,0,0,-48
	.stabs "HWND:423=*21",128,0,0,-52
	.stabs "IMODIFY:1",128,0,0,-56
	.stabs "AWIDTHS:424=ar1;0;1;1",128,0,0,-64
	.stabn 192,0,0,.L_61A3-_RESIZEMAINWINDOW@4
	.stabn 192,0,0,.L_61A7-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61A8-_RESIZEMAINWINDOW@4
	.stabn 192,0,0,.L_61AB-_RESIZEMAINWINDOW@4
	.stabs "RCGFX:23",128,0,0,-116
	.stabs "IALLWID:1",128,0,0,-120
	.stabs "IGFXHEI:1",128,0,0,-124
	.stabs "ICENTERX:1",128,0,0,-128
	.stabs "ICENTERY:1",128,0,0,-132
	.stabn 192,0,0,.L_61AC-_RESIZEMAINWINDOW@4
	.stabn 192,0,0,.L_61AF-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61B0-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61B1-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61B2-_RESIZEMAINWINDOW@4
	.stabn 192,0,0,.L_61B5-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61B6-_RESIZEMAINWINDOW@4
	.stabn 224,0,0,.L_61A4-_RESIZEMAINWINDOW@4
.L_61D7:
	.stabs "",36,0,0,.L_61D7-_RESIZEMAINWINDOW@4

.section .bss
.balign 4
	.lcomm	_Lt_61BA,1

.section .text
	.stabs "WNDPROCEDIT:F1",36,0,399,_WNDPROCEDIT@16
	.stabs "HWND:p425=*21",160,0,0,8
	.stabs "MESSAGE:p8",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16

.globl _WNDPROCEDIT@16
_WNDPROCEDIT@16:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,399,_WNDPROCEDIT@16-_WNDPROCEDIT@16
	mov dword ptr [ebp-4], 0
.L_61D8:
.L_6233:
##   static as long iMod   
##   select case message
.L_61DA:
##   case WM_KEYDOWN      
	cmp dword ptr [ebp+12], 256
	jne .L_61DC
.L_61DD:
.L_61DE:
.stabn 68,0,403,.L_6233-_WNDPROCEDIT@16
.L_6234:
##      select case wParam
.L_61DF:
##      case VK_SHIFT   : iMod or= FSHIFT
	cmp dword ptr [ebp+16], 16
	jne .L_61E1
.L_61E2:
.L_61E3:
	or dword ptr [_Lt_6235], 4
.stabn 68,0,405,.L_6234-_WNDPROCEDIT@16
.L_6236:
##      case VK_MENU    : iMod or= FALT
.L_61E4:
	jmp .L_61E0
.L_61E1:
	cmp dword ptr [ebp+16], 18
	jne .L_61E5
.L_61E6:
.L_61E7:
	or dword ptr [_Lt_6235], 16
.stabn 68,0,406,.L_6236-_WNDPROCEDIT@16
.L_6237:
##      case VK_CONTROL : iMod or= FCONTROL
.L_61E8:
	jmp .L_61E0
.L_61E5:
	cmp dword ptr [ebp+16], 17
	jne .L_61E9
.L_61EA:
.L_61EB:
	or dword ptr [_Lt_6235], 8
.stabn 68,0,407,.L_6237-_WNDPROCEDIT@16
.L_6238:
##      case else
.L_61EC:
	jmp .L_61E0
.L_61E9:
.L_61EE:
.stabn 68,0,408,.L_6238-_WNDPROCEDIT@16
.L_6239:
##         var iResu = RichEdit_KeyPress( hWnd , wParam , iMod ) 
	push dword ptr [_Lt_6235]
	push dword ptr [ebp+16]
	push dword ptr [ebp+8]
	call _RICHEDIT_KEYPRESS@12
	mov dword ptr [ebp-8], eax
.stabn 68,0,409,.L_6239-_WNDPROCEDIT@16
.L_623A:
##         if iResu then return iResu
	cmp dword ptr [ebp-8], 0
	je .L_61F0
.L_61F1:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	jmp .L_61D9
.L_61F0:
.L_61F2:
.stabn 68,0,410,.L_623A-_WNDPROCEDIT@16
.L_623B:
##      end select      
.L_61F3:
.L_61ED:
.L_61E0:
.L_61F4:
##      if wParam=VK_ESCAPE then return CallWindowProc( OrgEditProc , hWnd , EM_SETSEL , -1 , 0 )
	cmp dword ptr [ebp+16], 27
	jne .L_61F6
.L_61F7:
	push 0
	push 4294967295
	push 177
	push dword ptr [ebp+8]
	push dword ptr [_ORGEDITPROC]
	call _CallWindowProcA@20
	mov dword ptr [ebp-4], eax
	jmp .L_61D9
.L_61F6:
.L_61F8:
.stabn 68,0,412,.L_623B-_WNDPROCEDIT@16
.L_623C:
##   case WM_KEYUP
.L_61F9:
	jmp .L_61DB
.L_61DC:
	cmp dword ptr [ebp+12], 257
	jne .L_61FA
.L_61FB:
.L_61FC:
.stabn 68,0,413,.L_623C-_WNDPROCEDIT@16
.L_623D:
##      select case wParam
.L_61FD:
##      case VK_SHIFT   : iMod and= (not FSHIFT)
	cmp dword ptr [ebp+16], 16
	jne .L_61FF
.L_6200:
.L_6201:
	and dword ptr [_Lt_6235], -5
.stabn 68,0,415,.L_623D-_WNDPROCEDIT@16
.L_623E:
##      case VK_MENU    : iMod and= (not FALT)
.L_6202:
	jmp .L_61FE
.L_61FF:
	cmp dword ptr [ebp+16], 18
	jne .L_6203
.L_6204:
.L_6205:
	and dword ptr [_Lt_6235], -17
.stabn 68,0,416,.L_623E-_WNDPROCEDIT@16
.L_623F:
##      case VK_CONTROL : iMod and= (not FCONTROL)
.L_6206:
	jmp .L_61FE
.L_6203:
	cmp dword ptr [ebp+16], 17
	jne .L_6207
.L_6208:
.L_6209:
	and dword ptr [_Lt_6235], -9
.stabn 68,0,417,.L_623F-_WNDPROCEDIT@16
.L_6240:
##      end select
.L_620A:
.L_6207:
.L_61FE:
.L_620B:
##   case WM_ACTIVATE
.L_620C:
	jmp .L_61DB
.L_61FA:
	cmp dword ptr [ebp+12], 6
	jne .L_620D
.L_620E:
.L_620F:
.stabn 68,0,419,.L_6240-_WNDPROCEDIT@16
.L_6241:
##      iMod = 0
	mov dword ptr [_Lt_6235], 0
.stabn 68,0,420,.L_6241-_WNDPROCEDIT@16
.L_6242:
##   case WM_CHAR
.L_6210:
	jmp .L_61DB
.L_620D:
	cmp dword ptr [ebp+12], 258
	jne .L_6211
.L_6212:
.L_6213:
.stabn 68,0,421,.L_6242-_WNDPROCEDIT@16
.L_6243:
##      select case wParam      
.L_6214:
##      case asc(" ")
	cmp dword ptr [ebp+16], 32
	jne .L_6216
.L_6217:
.L_6218:
.stabn 68,0,423,.L_6243-_WNDPROCEDIT@16
.L_6244:
##         var sFix = "" : SearchAddPartSuffix( sFix , g_SQCtx )
	push 0
	push 1
	push offset _Lt_0000
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrInit@20
	push offset _G_SQCTX
	lea eax, [ebp-16]
	push eax
	call _SEARCHADDPARTSUFFIX@8
.stabn 68,0,424,.L_6244-_WNDPROCEDIT@16
.L_6245:
##         if len(sFix) then
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrLen@8
	test eax, eax
	je .L_621A
.L_621B:
.stabn 68,0,425,.L_6245-_WNDPROCEDIT@16
.L_6246:
##            for N as long = 0 to len(sFix)
.L_621C:
	mov dword ptr [ebp-20], 0
	push -1
	lea eax, [ebp-16]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-24], eax
	jmp .L_621E
.L_6221:
.L_6222:
.stabn 68,0,426,.L_6246-_WNDPROCEDIT@16
.L_6247:
##               PostMessage( hWnd , WM_CHAR , sFix[N] , 0 )
	push 0
	mov eax, dword ptr [ebp-16]
	add eax, dword ptr [ebp-20]
	movzx ebx, byte ptr [eax]
	push ebx
	push 258
	push dword ptr [ebp+8]
	call _PostMessageA@16
.stabn 68,0,427,.L_6247-_WNDPROCEDIT@16
.L_6248:
##            next N         
.L_6223:
.L_621F:
	inc dword ptr [ebp-20]
.L_621E:
	mov ebx, dword ptr [ebp-24]
	cmp dword ptr [ebp-20], ebx
	jle .L_6221
.L_6220:
.L_6224:
.stabn 68,0,428,.L_6248-_WNDPROCEDIT@16
.L_6249:
##         end if
.L_6225:
.L_621A:
.L_6219:
##      case 3,24 'Ctrl-C / Ctrl-X
	lea ebx, [ebp-16]
	push ebx
	call _fb_StrDelete@4
.L_6226:
	jmp .L_6215
.L_6216:
	cmp dword ptr [ebp+16], 3
	je .L_6228
.L_6229:
	cmp dword ptr [ebp+16], 24
	jne .L_6227
.L_6228:
.L_622A:
.stabn 68,0,430,.L_6249-_WNDPROCEDIT@16
.L_624A:
##         var lResu = CallWindowProc( OrgEditProc , hWnd , message , wParam, lParam )      
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [_ORGEDITPROC]
	call _CallWindowProcA@20
	mov dword ptr [ebp-8], eax
.stabn 68,0,431,.L_624A-_WNDPROCEDIT@16
.L_624B:
##         GetClipboard() : return lResu
	call _GETCLIPBOARD@0
	push eax
	call _fb_hStrDelTemp@4
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	jmp .L_61D9
.stabn 68,0,432,.L_624B-_WNDPROCEDIT@16
.L_624C:
##      end select      
.L_622B:
.L_6227:
.L_6215:
.L_622C:
##   case WM_VSCROLL
.L_622D:
	jmp .L_61DB
.L_6211:
	cmp dword ptr [ebp+12], 277
	jne .L_622E
.L_622F:
.L_6230:
.stabn 68,0,434,.L_624C-_WNDPROCEDIT@16
.L_624D:
##      var iResu = CallWindowProc( OrgEditProc , hWnd , message , wParam, lParam )
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [_ORGEDITPROC]
	call _CallWindowProcA@20
	mov dword ptr [ebp-8], eax
.stabn 68,0,435,.L_624D-_WNDPROCEDIT@16
.L_624E:
##      g_iPrevRowCount = 0
	mov dword ptr [_G_IPREVROWCOUNT], 0
.stabn 68,0,436,.L_624E-_WNDPROCEDIT@16
.L_624F:
##      RichEdit_TopRowChange( hWnd )
	push dword ptr [ebp+8]
	call _RICHEDIT_TOPROWCHANGE@4
.stabn 68,0,437,.L_624F-_WNDPROCEDIT@16
.L_6250:
##      return iResu   
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	jmp .L_61D9
.stabn 68,0,438,.L_6250-_WNDPROCEDIT@16
.L_6251:
##   end select
.L_6231:
.L_622E:
.L_61DB:
.L_6232:
##   return CallWindowProc( OrgEditProc , hWnd , message , wParam, lParam )   
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [_ORGEDITPROC]
	call _CallWindowProcA@20
	mov dword ptr [ebp-4], eax
.stabn 68,0,440,.L_6251-_WNDPROCEDIT@16
.L_6252:
.L_61D9:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,441,.L_61D9-_WNDPROCEDIT@16
	.stabs "IMOD:V1",40,0,0,_Lt_6235
	.stabn 192,0,0,.L_61D8-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61DA-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61DE-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61DF-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61E3-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61E4-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61E7-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61E8-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61EB-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61EC-_WNDPROCEDIT@16
	.stabs "IRESU:1",128,0,0,-8
	.stabn 192,0,0,.L_61EE-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61F1-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61F2-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61F3-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61F4-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61F7-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61F8-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61F9-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61FC-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_61FD-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6201-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6202-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6205-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6206-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6209-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_620A-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_620B-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_620C-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_620F-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6210-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6213-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6214-_WNDPROCEDIT@16
	.stabs "SFIX:13",128,0,0,-16
	.stabn 192,0,0,.L_6218-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_621B-_WNDPROCEDIT@16
	.stabs "N:1",128,0,0,-20
	.stabn 192,0,0,.L_621C-_WNDPROCEDIT@16
	.stabn 192,0,0,.L_6222-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6223-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6224-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6225-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6226-_WNDPROCEDIT@16
	.stabs "LRESU:1",128,0,0,-8
	.stabn 192,0,0,.L_622A-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_622B-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_622C-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_622D-_WNDPROCEDIT@16
	.stabs "IRESU:1",128,0,0,-8
	.stabn 192,0,0,.L_6230-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6231-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_6232-_WNDPROCEDIT@16
	.stabn 224,0,0,.L_61D9-_WNDPROCEDIT@16
.L_6253:
	.stabs "",36,0,0,.L_6253-_WNDPROCEDIT@16

.section .bss
.balign 4
	.lcomm	_Lt_6235,4

.section .text
	.stabs "WNDPROC:F1",36,0,444,_WNDPROC@16
	.stabs "HWND:p426=*21",160,0,0,8
	.stabs "MESSAGE:p8",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16

.globl _WNDPROC@16
_WNDPROC@16:
	push ebp
	mov ebp, esp
	sub esp, 360
	push ebx
	.stabn 68,0,444,_WNDPROC@16-_WNDPROC@16
	mov dword ptr [ebp-4], 0
.L_6254:
.L_6468:
##   var pCtx = (@g_tMainCtx)      
	mov eax, offset _G_TMAINCTX
	mov dword ptr [ebp-8], eax
.stabn 68,0,446,.L_6468-_WNDPROC@16
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\CONTROLS.BAS",132,0,0,.L_6469
.L_6469:
.L_646A:
	cmp dword ptr [ebp-8], 0
	jne .L_6256
	cmp dword ptr [ebp+12], 1
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-12], eax
	jmp .L_645F
.L_6256:
	mov dword ptr [ebp-12], 0
.L_645F:
	cmp dword ptr [ebp-12], 0
	je .L_6259
.L_625A:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_6255
.L_6259:
.L_625B:
.stabn 68,0,10,.L_646A-_WNDPROC@16
.L_646C:
##   #include "LSModules\Controls.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\CONTROLSMACROS.BAS",132,0,0,.L_646D
.L_646D:
	mov dword ptr [ebp-16], 0
.stabn 68,0,11,.L_646C-_WNDPROC@16
##   #include "LSModules\ControlsMacros.bas"
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_646E
.L_646E:
.L_646F:
##   select case( message )       
.L_625C:
##   case WM_DRAWITEM   'item in a control is being drawn (owner draw)
	cmp dword ptr [ebp+12], 43
	jne .L_625E
.L_625F:
.L_6260:
.stabn 68,0,451,.L_646F-_WNDPROC@16
.L_6470:
##      var wID = clng(wParam) , ptDrw = cast(LPDRAWITEMSTRUCT,lparam)
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-20], eax
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-24], eax
.stabn 68,0,452,.L_6470-_WNDPROC@16
.L_6471:
##      select case wId
.L_6261:
##      case wcLines : Lines_Draw( CTL(wcEdit) [Macro Expansion: g_tMainCtx.hCtl(wcEdit).hwnd ]  , *ptDrw )
	cmp dword ptr [ebp-20], 4
	jne .L_6263
.L_6264:
.L_6265:
	push dword ptr [ebp-24]
	push dword ptr [_G_TMAINCTX+264]
	call _LINES_DRAW@8
.stabn 68,0,454,.L_6471-_WNDPROC@16
.L_6472:
##      end select
.L_6266:
.L_6263:
.L_6262:
.L_6267:
##   case WM_TIMER
.L_6268:
	jmp .L_625D
.L_625E:
	cmp dword ptr [ebp+12], 275
	jne .L_6269
.L_626A:
.L_626B:
.stabn 68,0,457,.L_6472-_WNDPROC@16
.L_6473:
##      dim as Matrix4x4 tMat
	lea eax, [ebp-80]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 16
	rep stosd
	pop edi
	pop eax
.stabn 68,0,458,.L_6473-_WNDPROC@16
.L_6474:
##      tMat = g_tIdentityMatrix
	lea eax, [ebp-80]
	push edi
	push esi
	mov edi, eax
	mov esi, offset _G_TIDENTITYMATRIX
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
.stabn 68,0,459,.L_6474-_WNDPROC@16
.L_6475:
##      static as double dBeg : if dBeg = 0 then dBeg = timer
	fld qword ptr [_Lt_6476]
	fld qword ptr [_Lt_6460]
	fcomip st, st(1)
	fstp st(0)
	jnz .L_626D
.L_626E:
	call _fb_Timer@0
	fstp qword ptr [_Lt_6476]
.L_626D:
.L_626F:
.stabn 68,0,460,.L_6475-_WNDPROC@16
.L_6477:
##      MatrixRotateX( tMat , tMat , timer-dBeg )
	call _fb_Timer@0
	fsub qword ptr [_Lt_6476]
	sub esp,4
	fstp dword ptr [esp]
	lea eax, [ebp-80]
	push eax
	lea eax, [ebp-80]
	push eax
	call _MATRIXROTATEX@12
.stabn 68,0,461,.L_6477-_WNDPROC@16
.L_6478:
##      dim as zstring*256 zOutput = any
##      with tMat
.L_6270:
##         sprintf(zOutput,!"1 %i %f %f %f %g %g %g %g %g %g %g %g %g %s\r\n",16,.fPosX,.fPosY,.fPosZ, _            .m(0),.m(1),.m(2),.m(4),.m(5),.m(6),.m(8),.m(9),.m(10) , "3011.dat" )
	push offset _Lt_6271
	fld dword ptr [ebp-40]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-44]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-48]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-56]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-60]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-64]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-72]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-76]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-80]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-24]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-28]
	sub esp,8
	fstp qword ptr [esp]
	fld dword ptr [ebp-32]
	sub esp,8
	fstp qword ptr [esp]
	push 16
	push offset _Lt_4C98
	lea eax, [ebp-336]
	push eax
	call _sprintf
	add esp, 112
.stabn 68,0,464,.L_6478-_WNDPROC@16
.L_6479:
##      end with
.L_6272:
##      Viewer.LoadMemory( zOutput , "memory.ldr" )
	mov dword ptr [ebp-360], 0
	mov dword ptr [ebp-356], 0
	mov dword ptr [ebp-352], 0
	push 0
	push 11
	push offset _Lt_6274
	push -1
	lea eax, [ebp-360]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-360]
	push eax
	mov dword ptr [ebp-348], 0
	mov dword ptr [ebp-344], 0
	mov dword ptr [ebp-340], 0
	push 0
	push 256
	lea eax, [ebp-336]
	push eax
	push -1
	lea eax, [ebp-348]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-348]
	push eax
	call __ZN6VIEWER10LOADMEMORYER8FBSTRINGS1_@8
	lea eax, [ebp-360]
	push eax
	call _fb_StrDelete@4
	lea eax, [ebp-348]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,467,.L_6479-_WNDPROC@16
.L_647A:
##   case WM_MENUSELECT 'track newest menu handle/item/state
.L_6276:
	jmp .L_625D
.L_6269:
	cmp dword ptr [ebp+12], 287
	jne .L_6277
.L_6278:
.L_6279:
.stabn 68,0,468,.L_647A-_WNDPROC@16
.L_647B:
##      var iID = cuint(LOWORD(wParam) [Macro Expansion: (cuint(wParam) and &h0000FFFF) ] ) , fuFlags = cuint(HIWORD(wParam) [Macro Expansion: (cuint(wParam) shr 16) ] ) , hMenu = cast(HMENU,lParam) 
	mov eax, dword ptr [ebp+16]
	and eax, 65535
	mov dword ptr [ebp-20], eax
	mov eax, dword ptr [ebp+16]
	shr eax, 16
	mov dword ptr [ebp-24], eax
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-28], eax
.stabn 68,0,469,.L_647B-_WNDPROC@16
.L_647C:
##      if hMenu then g_CurItemID = iID : g_hCurMenu = hMenu            
	cmp dword ptr [ebp-28], 0
	je .L_627B
.L_627C:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [_G_CURITEMID], eax
	mov eax, dword ptr [ebp-28]
	mov dword ptr [_G_HCURMENU], eax
.L_627B:
.L_627D:
.stabn 68,0,470,.L_647C-_WNDPROC@16
.L_647D:
##      return 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,471,.L_647D-_WNDPROC@16
.L_647E:
##   case WM_NOTIFY     'notification from window/control
.L_627E:
	jmp .L_625D
.L_6277:
	cmp dword ptr [ebp+12], 78
	jne .L_627F
.L_6280:
.L_6281:
.stabn 68,0,472,.L_647E-_WNDPROC@16
.L_647F:
##      var wID = cast(long,wParam) , pnmh = cptr(LPNMHDR,lParam)
	mov eax, dword ptr [ebp+16]
	mov dword ptr [ebp-20], eax
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-24], eax
.stabn 68,0,473,.L_647F-_WNDPROC@16
.L_6480:
##      select case wID
.L_6282:
##      case wcTabs
	cmp dword ptr [ebp-20], 2
	jne .L_6284
.L_6285:
.L_6286:
.stabn 68,0,475,.L_6480-_WNDPROC@16
.L_6481:
##         select case pnmh->code
.L_6287:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax+8]
	mov dword ptr [ebp-28], ebx
.stabn 68,0,476,.L_6481-_WNDPROC@16
.L_6482:
##         case TCN_SELCHANGE
	cmp dword ptr [ebp-28], 4294966745
	jne .L_628A
.L_628B:
.L_628C:
.stabn 68,0,477,.L_6482-_WNDPROC@16
.L_6483:
##            var iIDX = TabCtrl_GetCurSel( CTL(wID) [Macro Expansion: g_tMainCtx.hCtl(wID).hwnd ]  ) [Macro Expansion: clng(SNDMSG((g_tMainCtx.hCtl(wID).hwnd), TCM_GETCURSEL, 0, 0)) ]             
	push 0
	push 0
	push 4875
	mov ebx, dword ptr [ebp-20]
	imul ebx, 48
	mov eax, offset _G_TMAINCTX
	add eax, ebx
	push dword ptr [eax+24]
	call _SendMessageA@16
	mov dword ptr [ebp-32], eax
.stabn 68,0,478,.L_6483-_WNDPROC@16
.L_6484:
##            ChangeToTab( iIDX , true )
	push 1
	push dword ptr [ebp-32]
	call _CHANGETOTAB@8
.stabn 68,0,479,.L_6484-_WNDPROC@16
.L_6485:
##         end select
.L_628D:
.L_628A:
.L_6288:
.L_628E:
##      case wcEdit
.L_628F:
	jmp .L_6283
.L_6284:
	cmp dword ptr [ebp-20], 5
	jne .L_6290
.L_6291:
.L_6292:
.stabn 68,0,481,.L_6485-_WNDPROC@16
.L_6486:
##         select case pnmh->code                  
.L_6293:
	mov eax, dword ptr [ebp-24]
	mov ebx, dword ptr [eax+8]
	mov dword ptr [ebp-28], ebx
.stabn 68,0,482,.L_6486-_WNDPROC@16
.L_6487:
##         case EN_SELCHANGE
	cmp dword ptr [ebp-28], 1794
	jne .L_6296
.L_6297:
.L_6298:
.stabn 68,0,483,.L_6487-_WNDPROC@16
.L_6488:
##            if g_bChangingFont then return 0
	cmp byte ptr [_G_BCHANGINGFONT], 0
	je .L_629A
.L_629B:
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.L_629A:
.L_629C:
.stabn 68,0,484,.L_6488-_WNDPROC@16
.L_6489:
##            with *cptr(SELCHANGE ptr,lParam)
.L_629D:
	mov ebx, dword ptr [ebp+20]
	mov dword ptr [ebp-32], ebx
.stabn 68,0,485,.L_6489-_WNDPROC@16
.L_648A:
##               var iRow = SendMessage( CTL(wID) [Macro Expansion: g_tMainCtx.hCtl(wID).hwnd ]  , EM_EXLINEFROMCHAR , 0 , .chrg.cpMax )
	mov ebx, dword ptr [ebp-32]
	push dword ptr [ebx+16]
	push 0
	push 1078
	mov ebx, dword ptr [ebp-20]
	imul ebx, 48
	mov eax, offset _G_TMAINCTX
	add eax, ebx
	push dword ptr [eax+24]
	call _SendMessageA@16
	mov dword ptr [ebp-36], eax
.stabn 68,0,488,.L_648A-_WNDPROC@16
.L_648B:
##               var iCol = .chrg.cpMax - SendMessage( CTL(wID) [Macro Expansion: g_tMainCtx.hCtl(wID).hwnd ]  , EM_LINEINDEX  , iRow , 0 )
	mov eax, dword ptr [ebp-32]
	push 0
	push dword ptr [ebp-36]
	push 187
	mov ebx, dword ptr [ebp-20]
	imul ebx, 48
	mov ecx, offset _G_TMAINCTX
	add ecx, ebx
	push dword ptr [ecx+24]
	mov ebx, eax
	call _SendMessageA@16
	mov ecx, dword ptr [ebx+16]
	sub ecx, eax
	mov dword ptr [ebp-40], ecx
.stabn 68,0,489,.L_648B-_WNDPROC@16
.L_648C:
##               dim as zstring*64 zPart = any : sprintf(zPart,"%i : %i",iRow+1,iCol+1)
	mov ecx, dword ptr [ebp-40]
	inc ecx
	push ecx
	mov ecx, dword ptr [ebp-36]
	inc ecx
	push ecx
	push offset _Lt_629F
	lea ecx, [ebp-104]
	push ecx
	call _sprintf
	add esp, 16
.stabn 68,0,490,.L_648C-_WNDPROC@16
.L_648D:
##               SendMessage( CTL(wcStatus) [Macro Expansion: g_tMainCtx.hCtl(wcStatus).hwnd ]  , SB_SETTEXT , spCursor , cast(LPARAM,@zPart) ) 
	lea ecx, [ebp-104]
	push ecx
	push 1
	push 1025
	push dword ptr [_G_TMAINCTX+696]
	call _SendMessageA@16
.stabn 68,0,492,.L_648D-_WNDPROC@16
.L_648E:
##               RichEdit_TopRowChange( CTL(wID) [Macro Expansion: g_tMainCtx.hCtl(wID).hwnd ]  )
	mov ecx, dword ptr [ebp-20]
	imul ecx, 48
	mov eax, offset _G_TMAINCTX
	add eax, ecx
	push dword ptr [eax+24]
	call _RICHEDIT_TOPROWCHANGE@4
.stabn 68,0,493,.L_648E-_WNDPROC@16
.L_648F:
##               RichEdit_SelChange( CTL(wID) [Macro Expansion: g_tMainCtx.hCtl(wID).hwnd ]  , iRow , iCol )
	push dword ptr [ebp-40]
	push dword ptr [ebp-36]
	mov eax, dword ptr [ebp-20]
	imul eax, 48
	mov ecx, offset _G_TMAINCTX
	add ecx, eax
	push dword ptr [ecx+24]
	call _RICHEDIT_SELCHANGE@12
.stabn 68,0,494,.L_648F-_WNDPROC@16
.L_6490:
##            end with
.L_62A0:
##         end select
.L_62A1:
.L_6296:
.L_6294:
.L_62A2:
##      end select
.L_62A3:
.L_6290:
.L_6283:
.L_62A4:
##      return 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,498,.L_6490-_WNDPROC@16
.L_6491:
##   case WM_COMMAND    'Event happened to a control (child window)
.L_62A5:
	jmp .L_625D
.L_627F:
	cmp dword ptr [ebp+12], 273
	jne .L_62A6
.L_62A7:
.L_62A8:
.stabn 68,0,499,.L_6491-_WNDPROC@16
.L_6492:
##      var wNotifyCode = cint(HIWORD(wParam) [Macro Expansion: (cuint(wParam) shr 16) ] ), wID = LOWORD(wParam) [Macro Expansion: (cuint(wParam) and &h0000FFFF) ]  , hwndCtl = cast(.HWND,lParam)      
	mov ecx, dword ptr [ebp+16]
	shr ecx, 16
	mov eax, ecx
	mov dword ptr [ebp-20], eax
	mov eax, dword ptr [ebp+16]
	and eax, 65535
	mov dword ptr [ebp-24], eax
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-28], eax
.stabn 68,0,500,.L_6492-_WNDPROC@16
.L_6493:
##      if hwndCtl=0 andalso wNotifyCode=0 then wNotifyCode = -1      
	cmp dword ptr [ebp-28], 0
	jne .L_62A9
	mov eax, dword ptr [ebp-20]
	test eax, eax
	sete al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-32], eax
	jmp .L_6461
.L_62A9:
	mov dword ptr [ebp-32], 0
.L_6461:
	cmp dword ptr [ebp-32], 0
	je .L_62AC
.L_62AD:
	mov dword ptr [ebp-20], -1
.L_62AC:
.L_62AE:
.stabn 68,0,501,.L_6493-_WNDPROC@16
.L_6495:
##      select case wNotifyCode
.L_62AF:
##      case -1         'Command from Menu
	cmp dword ptr [ebp-20], -1
	jne .L_62B1
.L_62B2:
.L_62B3:
.stabn 68,0,503,.L_6495-_WNDPROC@16
.L_6496:
##         if wID <> g_CurItemID then return 0 'not valid menu event
	mov eax, dword ptr [_G_CURITEMID]
	cmp dword ptr [ebp-24], eax
	je .L_62B5
.L_62B6:
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.L_62B5:
.L_62B7:
.stabn 68,0,504,.L_6496-_WNDPROC@16
.L_6497:
##         dim as MENUITEMINFO tItem = type( sizeof(MENUITEMINFO) , MIIM_DATA or MIIM_STATE )  
	mov dword ptr [ebp-80], 48
	mov dword ptr [ebp-76], 33
	lea eax, [ebp-72]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 10
	rep stosd
	pop edi
	pop eax
.stabn 68,0,505,.L_6497-_WNDPROC@16
.L_6498:
##         GetMenuItemInfo( g_hCurMenu , wID , false , @tItem )
	lea eax, [ebp-80]
	push eax
	push 0
	push dword ptr [ebp-24]
	push dword ptr [_G_HCURMENU]
	call _GetMenuItemInfoA@16
.stabn 68,0,506,.L_6498-_WNDPROC@16
.L_6499:
##         g_CurItemState = tItem.fState
	mov eax, dword ptr [ebp-68]
	mov dword ptr [_G_CURITEMSTATE], eax
.stabn 68,0,507,.L_6499-_WNDPROC@16
.L_649A:
##         if tItem.dwItemData then
	cmp dword ptr [ebp-48], 0
	je .L_62BA
.L_62BB:
.stabn 68,0,508,.L_649A-_WNDPROC@16
.L_649B:
##           dim MenuItemCallback as sub () = cast(any ptr,tItem.dwItemData)
	mov eax, dword ptr [ebp-48]
	mov dword ptr [ebp-84], eax
.stabn 68,0,509,.L_649B-_WNDPROC@16
.L_649C:
##           MenuItemCallback()        
	call dword ptr [ebp-84]
.stabn 68,0,510,.L_649C-_WNDPROC@16
.L_649D:
##         end if
.L_62BC:
.L_62BA:
.L_62B9:
##         g_CurItemID = 0 : g_hCurMenu = 0 : return 0
	mov dword ptr [_G_CURITEMID], 0
	mov dword ptr [_G_HCURMENU], 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,512,.L_649D-_WNDPROC@16
.L_649E:
##      case  1         'Accelerator
.L_62BD:
	jmp .L_62B0
.L_62B1:
	cmp dword ptr [ebp-20], 1
	jne .L_62BE
.L_62BF:
.L_62C0:
.stabn 68,0,513,.L_649E-_WNDPROC@16
.L_649F:
##         ProcessAccelerator( wID )
	push dword ptr [ebp-24]
	call _PROCESSACCELERATOR@4
.stabn 68,0,514,.L_649F-_WNDPROC@16
.L_64A0:
##         return 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,515,.L_64A0-_WNDPROC@16
.L_64A1:
##      case BN_CLICKED 'Clicked action for different buttons
.L_62C1:
	jmp .L_62B0
.L_62BE:
	cmp dword ptr [ebp-20], 0
	jne .L_62C2
.L_62C3:
.L_62C4:
.stabn 68,0,516,.L_64A1-_WNDPROC@16
.L_64A2:
##         select case wID
.L_62C5:
##         case wcBtnClose  : File_Close()
	cmp dword ptr [ebp-24], 1
	jne .L_62C7
.L_62C8:
.L_62C9:
	call _FILE_CLOSE@0
.stabn 68,0,518,.L_64A2-_WNDPROC@16
.L_64A3:
##         case wcButton    : Button_Compile()
.L_62CA:
	jmp .L_62C6
.L_62C7:
	cmp dword ptr [ebp-24], 3
	jne .L_62CB
.L_62CC:
.L_62CD:
	call _BUTTON_COMPILE@0
.stabn 68,0,519,.L_64A3-_WNDPROC@16
.L_64A4:
##         case wcRadOutput : Output_SetMode()
.L_62CE:
	jmp .L_62C6
.L_62CB:
	cmp dword ptr [ebp-24], 6
	jne .L_62CF
.L_62D0:
.L_62D1:
	call _OUTPUT_SETMODE@0
.stabn 68,0,520,.L_64A4-_WNDPROC@16
.L_64A5:
##         case wcRadQuery  : Output_SetMode()
.L_62D2:
	jmp .L_62C6
.L_62CF:
	cmp dword ptr [ebp-24], 7
	jne .L_62D3
.L_62D4:
.L_62D5:
	call _OUTPUT_SETMODE@0
.stabn 68,0,521,.L_64A5-_WNDPROC@16
.L_64A6:
##         case wcBtnExec   : Output_QueryExecute()
.L_62D6:
	jmp .L_62C6
.L_62D3:
	cmp dword ptr [ebp-24], 8
	jne .L_62D7
.L_62D8:
.L_62D9:
	call _OUTPUT_QUERYEXECUTE@0
.stabn 68,0,522,.L_64A6-_WNDPROC@16
.L_64A7:
##         case wcBtnLoad   : Output_Load()
.L_62DA:
	jmp .L_62C6
.L_62D7:
	cmp dword ptr [ebp-24], 9
	jne .L_62DB
.L_62DC:
.L_62DD:
	call _OUTPUT_LOAD@0
.stabn 68,0,523,.L_64A7-_WNDPROC@16
.L_64A8:
##         case wcBtnSave   : Output_Save()
.L_62DE:
	jmp .L_62C6
.L_62DB:
	cmp dword ptr [ebp-24], 10
	jne .L_62DF
.L_62E0:
.L_62E1:
	call _OUTPUT_SAVE@0
.stabn 68,0,524,.L_64A8-_WNDPROC@16
.L_64A9:
##         case wcBtnMinOut : Output_ShowHide()
.L_62E2:
	jmp .L_62C6
.L_62DF:
	cmp dword ptr [ebp-24], 11
	jne .L_62E3
.L_62E4:
.L_62E5:
	call _OUTPUT_SHOWHIDE@0
.stabn 68,0,525,.L_64A9-_WNDPROC@16
.L_64AA:
##         end select
.L_62E6:
.L_62E3:
.L_62C6:
.L_62E7:
##      end select      
.L_62E8:
.L_62C2:
.L_62B0:
.L_62E9:
##      select case wID
.L_62EA:
##      case wcEdit     'Main editor control actions
	cmp dword ptr [ebp-24], 5
	jne .L_62EC
.L_62ED:
.L_62EE:
.stabn 68,0,529,.L_64AA-_WNDPROC@16
.L_64AB:
##         select case wNotifyCode
.L_62EF:
##         case EN_SETFOCUS               
	cmp dword ptr [ebp-20], 256
	jne .L_62F1
.L_62F2:
.L_62F3:
.stabn 68,0,531,.L_64AB-_WNDPROC@16
.L_64AC:
##            ShowWindow( g_hContainer , g_SearchVis   )               
	push dword ptr [_G_SEARCHVIS]
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,532,.L_64AC-_WNDPROC@16
.L_64AD:
##         case EN_KILLFOCUS
.L_62F4:
	jmp .L_62F0
.L_62F1:
	cmp dword ptr [ebp-20], 512
	jne .L_62F5
.L_62F6:
.L_62F7:
.stabn 68,0,533,.L_64AD-_WNDPROC@16
.L_64AE:
##            var hFocus = GetFocus()
	call _GetFocus@0
	mov dword ptr [ebp-36], eax
.stabn 68,0,536,.L_64AE-_WNDPROC@16
.L_64AF:
##            if hFocus=0 orelse (hFocus <> g_hSearch andalso hFocus<>g_hContainer andalso hFocus <> CTL(wcEdit) [Macro Expansion: g_tMainCtx.hCtl(wcEdit).hwnd ] ) then
	cmp dword ptr [ebp-36], 0
	je .L_62FC
	mov eax, dword ptr [_G_HSEARCH]
	cmp dword ptr [ebp-36], eax
	je .L_62F8
	mov eax, dword ptr [ebp-36]
	cmp eax, dword ptr [_G_HCONTAINER]
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-40], ecx
	jmp .L_6463
.L_62F8:
	mov dword ptr [ebp-40], 0
.L_6463:
	cmp dword ptr [ebp-40], 0
	je .L_62FA
	mov ecx, dword ptr [ebp-36]
	cmp ecx, dword ptr [_G_TMAINCTX+264]
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-44], eax
	jmp .L_6464
.L_62FA:
	mov dword ptr [ebp-44], 0
.L_6464:
	mov eax, dword ptr [ebp-44]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-48], eax
	jmp .L_6462
.L_62FC:
	mov dword ptr [ebp-48], -1
.L_6462:
	cmp dword ptr [ebp-48], 0
	je .L_62FF
.L_6300:
.stabn 68,0,537,.L_64AF-_WNDPROC@16
.L_64B3:
##               ShowWindow( g_hContainer , SW_HIDE )
	push 0
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,538,.L_64B3-_WNDPROC@16
.L_64B4:
##            end if
.L_6301:
.L_62FF:
.L_62FE:
##         case EN_VSCROLL
.L_6302:
	jmp .L_62F0
.L_62F5:
	cmp dword ptr [ebp-20], 1538
	jne .L_6303
.L_6304:
.L_6305:
.stabn 68,0,540,.L_64B4-_WNDPROC@16
.L_64B5:
##            RichEdit_TopRowChange( hwndCtl )
	push dword ptr [ebp-28]
	call _RICHEDIT_TOPROWCHANGE@4
.stabn 68,0,541,.L_64B5-_WNDPROC@16
.L_64B6:
##         end select
.L_6306:
.L_6303:
.L_62F0:
.L_6307:
##      end select
.L_6308:
.L_62EC:
.L_62EB:
.L_6309:
##      return 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,545,.L_64B6-_WNDPROC@16
.L_64B7:
##   case WM_SIZE       'window is sizing/was sized
.L_630A:
	jmp .L_625D
.L_62A6:
	cmp dword ptr [ebp+12], 5
	jne .L_630B
.L_630C:
.L_630D:
.stabn 68,0,547,.L_64B7-_WNDPROC@16
.L_64B8:
##      ResizeMainWindow()
	push 0
	call _RESIZEMAINWINDOW@4
.stabn 68,0,548,.L_64B8-_WNDPROC@16
.L_64B9:
##      UpdateTabCloseButton() 
	call _UPDATETABCLOSEBUTTON@0
.stabn 68,0,549,.L_64B9-_WNDPROC@16
.L_64BA:
##      return 0
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,550,.L_64BA-_WNDPROC@16
.L_64BB:
##   case WM_MOVE       'window is moving/was moved
.L_630E:
	jmp .L_625D
.L_630B:
	cmp dword ptr [ebp+12], 3
	jne .L_630F
.L_6310:
.L_6311:
.stabn 68,0,551,.L_64BB-_WNDPROC@16
.L_64BC:
##      DockGfxWindow()
	call _DOCKGFXWINDOW@0
.stabn 68,0,552,.L_64BC-_WNDPROC@16
.L_64BD:
##   case WM_USER+1 'gfx resized
.L_6312:
	jmp .L_625D
.L_630F:
	cmp dword ptr [ebp+12], 1025
	jne .L_6313
.L_6314:
.L_6315:
.stabn 68,0,553,.L_64BD-_WNDPROC@16
.L_64BE:
##      SetEvent(g_hResizeEvent)
	push dword ptr [_G_HRESIZEEVENT]
	call _SetEvent@4
.stabn 68,0,554,.L_64BE-_WNDPROC@16
.L_64BF:
##      DockGfxWindow()
	call _DOCKGFXWINDOW@0
.stabn 68,0,555,.L_64BF-_WNDPROC@16
.L_64C0:
##   case WM_USER+2 'gfx moved
.L_6316:
	jmp .L_625D
.L_6313:
	cmp dword ptr [ebp+12], 1026
	jne .L_6317
.L_6318:
.L_6319:
.stabn 68,0,556,.L_64C0-_WNDPROC@16
.L_64C1:
##      DockGfxWindow()
	call _DOCKGFXWINDOW@0
.stabn 68,0,557,.L_64C1-_WNDPROC@16
.L_64C2:
##   case WM_USER+3 'Resize Number border
.L_631A:
	jmp .L_625D
.L_6317:
	cmp dword ptr [ebp+12], 1027
	jne .L_631B
.L_631C:
.L_631D:
.stabn 68,0,558,.L_64C2-_WNDPROC@16
.L_64C3:
##      puts("?")
	push offset _Lt_631E
	call _puts
	add esp, 4
.stabn 68,0,559,.L_64C3-_WNDPROC@16
.L_64C4:
##      SetControl( wcLines , cMarginL  [Macro Expansion: _pct(1.25)type( 0 , true , false , cshort((1.25)*128) ) ]  , _BtP( [Macro Expansion: _RtP ] (wcButton,0.5) [Macro Expansion: type( wcButton , true , true , cshort((0.5)*128) ) ]  , _pct(((.18+2*g_RowDigits))) [Macro Expansion: type( 0 , true , false , cshort((((.18+2*g_RowDigits)))*128) ) ]  , _pct(53) [Macro Expansion: type( 0 , true , false , cshort((53)*128) ) ]  , CTL(wcLines) [Macro Expansion: g_tMainCtx.hCtl(wcLines).hwnd ]  ) [Macro Expansion: with pCtx->hCTL(wcLines)
.L_631F:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+216]
	mov dword ptr [ebp-20], ecx
.stabn 68,0,560,.L_64C4-_WNDPROC@16
.L_64C5:
## scope 
.L_6321:
## .tX = type( 0 , true , false , cshort((1.25)*128) ) : .tY = type( wcButton , true , true , cshort((0.5)*128) ) : .tW = type( 0 , true , false , cshort((((.18+2*g_RowDigits)))*128) ) : .tH = type( 0 , true , false , cshort((53)*128) ) 
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+18], 160
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	or ecx, 3
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+22], 64
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [_G_ROWDIGITS]
	sal eax, 1
	push eax
	fild dword ptr [esp]
	add esp, 4
	fmul qword ptr [_Lt_6465]
	fadd qword ptr [_Lt_6466]
	sub esp, 4
	fistp word ptr [esp]
	pop eax
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+26], ax
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-20]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-20]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-20]
	mov word ptr [ecx+30], 6784
.stabn 68,0,560,.L_64C5-_WNDPROC@16
.L_64C6:
## if .iW = 0 then .iX = -10000 : .iY = -10000 : .iW = 1 : .iH = 1
	mov ecx, dword ptr [ebp-20]
	movsx eax, word ptr [ecx+40]
	test eax, eax
	jne .L_6327
.L_6328:
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+36], -10000
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+38], -10000
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+40], 1
	mov eax, dword ptr [ebp-20]
	mov word ptr [eax+42], 1
.L_6327:
.L_6329:
.stabn 68,0,560,.L_64C6-_WNDPROC@16
.L_64C7:
## .hWnd = g_tMainCtx.hCtl(wcLines).hwnd : if IsWindow(.hWnd)=0 then .hWnd=0
	mov eax, dword ptr [ebp-20]
	mov ecx, dword ptr [_G_TMAINCTX+216]
	mov dword ptr [eax], ecx
	mov ecx, dword ptr [ebp-20]
	push dword ptr [ecx]
	call _IsWindow@4
	test eax, eax
	jne .L_632B
.L_632C:
	mov eax, dword ptr [ebp-20]
	mov dword ptr [eax], 0
.L_632B:
.L_632D:
.stabn 68,0,560,.L_64C7-_WNDPROC@16
.L_64C8:
## end scope
.L_632E:
## #ifdef IdPrevCtl
## IdPrevCtl = wcLines
	mov dword ptr [ebp-16], 4
## #endif
.stabn 68,0,560,.L_64C8-_WNDPROC@16
.L_64C9:
## end with ] 
.L_632F:
##      ResizeMainWindow()      
	push 0
	call _RESIZEMAINWINDOW@4
.stabn 68,0,561,.L_64C9-_WNDPROC@16
.L_64CA:
##   case WM_ACTIVATE  'Activated/Deactivated
.L_6330:
	jmp .L_625D
.L_631B:
	cmp dword ptr [ebp+12], 6
	jne .L_6331
.L_6332:
.L_6333:
.stabn 68,0,562,.L_64CA-_WNDPROC@16
.L_64CB:
##      if g_GfxHwnd andalso g_Show3D then
	cmp dword ptr [_G_GFXHWND], 0
	je .L_6334
	movsx eax, byte ptr [_G_SHOW3D]
	test eax, eax
	setne cl
	shr ecx, 1
	sbb ecx, ecx
	mov dword ptr [ebp-20], ecx
	jmp .L_6467
.L_6334:
	mov dword ptr [ebp-20], 0
.L_6467:
	cmp dword ptr [ebp-20], 0
	je .L_6337
.L_6338:
.stabn 68,0,563,.L_64CB-_WNDPROC@16
.L_64CD:
##         var fActive = LOWORD(wParam) [Macro Expansion: (cuint(wParam) and &h0000FFFF) ]  , fMinimized = HIWORD(wParam) [Macro Expansion: (cuint(wParam) shr 16) ]  , hwndPrevious = cast(HWND,lParam)
	mov ecx, dword ptr [ebp+16]
	and ecx, 65535
	mov dword ptr [ebp-24], ecx
	mov ecx, dword ptr [ebp+16]
	shr ecx, 16
	mov dword ptr [ebp-28], ecx
	mov ecx, dword ptr [ebp+20]
	mov dword ptr [ebp-32], ecx
.stabn 68,0,564,.L_64CD-_WNDPROC@16
.L_64CE:
##         if fActive then            
	cmp dword ptr [ebp-24], 0
	je .L_633A
.L_633B:
.stabn 68,0,565,.L_64CE-_WNDPROC@16
.L_64CF:
##            DockGfxWindow()            
	call _DOCKGFXWINDOW@0
.stabn 68,0,566,.L_64CF-_WNDPROC@16
.L_64D0:
##            SetWindowPos( g_GfxHwnd , HWND_TOPMOST  [Macro Expansion: cast(handle, -1) ]  , 0,0,0,0 , SWP_NOMOVE or SWP_NOSIZE or SWP_NOACTIVATE)
	push 19
	push 0
	push 0
	push 0
	push 0
	push 4294967295
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,567,.L_64D0-_WNDPROC@16
.L_64D1:
##            SetWindowPos( g_GfxHwnd , HWND_NOTOPMOST  [Macro Expansion: cast(handle, -2) ]  , 0,0,0,0 , SWP_NOMOVE or SWP_NOSIZE or SWP_NOACTIVATE)
	push 19
	push 0
	push 0
	push 0
	push 0
	push 4294967294
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,568,.L_64D1-_WNDPROC@16
.L_64D2:
##         else
.L_633C:
	jmp .L_6339
.L_633A:
.L_633D:
.stabn 68,0,570,.L_64D2-_WNDPROC@16
.L_64D3:
##            if fMinimized then                              
	cmp dword ptr [ebp-28], 0
	je .L_633F
.L_6340:
.stabn 68,0,571,.L_64D3-_WNDPROC@16
.L_64D4:
##               ShowWindow( g_GfxHwnd , SW_HIDE )
	push 0
	push dword ptr [_G_GFXHWND]
	call _ShowWindow@8
.stabn 68,0,572,.L_64D4-_WNDPROC@16
.L_64D5:
##            else
.L_6341:
	jmp .L_633E
.L_633F:
.L_6342:
.stabn 68,0,573,.L_64D5-_WNDPROC@16
.L_64D6:
##               SetWindowPos( g_GfxHwnd , HWND_NOTOPMOST  [Macro Expansion: cast(handle, -2) ]  , 0,0 , 0,0 , SWP_NOMOVE or SWP_NOSIZE or SWP_NOACTIVATE )
	push 19
	push 0
	push 0
	push 0
	push 0
	push 4294967294
	push dword ptr [_G_GFXHWND]
	call _SetWindowPos@28
.stabn 68,0,574,.L_64D6-_WNDPROC@16
.L_64D7:
##            end if
.L_6343:
.L_633E:
##         end if
.L_6344:
.L_6339:
##      end if
.L_6345:
.L_6337:
.L_6336:
##   #if 0
##   case WM_ACTIVATEAPP      var fActive = wParam      'if GetForegroundWindow() <> g_hContainer then fActive = (GetFocus = CTL(wcEdit))      if fActive then         ShowWindow( g_hContainer , g_SearchVis )      else         ShowWindow( g_hContainer , SW_HIDE )      end if   #endif
##   case WM_ENTERMENULOOP , WM_ENTERSIZEMOVE  
.L_6346:
	jmp .L_625D
.L_6331:
	cmp dword ptr [ebp+12], 529
	je .L_6348
.L_6349:
	cmp dword ptr [ebp+12], 561
	jne .L_6347
.L_6348:
.L_634A:
.stabn 68,0,588,.L_64D7-_WNDPROC@16
.L_64D8:
##     ShowWindow( g_hContainer , SW_HIDE )
	push 0
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,589,.L_64D8-_WNDPROC@16
.L_64D9:
##   case WM_CREATE  'Window was created
.L_634B:
	jmp .L_625D
.L_6347:
	cmp dword ptr [ebp+12], 1
	jne .L_634C
.L_634D:
.L_634E:
.stabn 68,0,590,.L_64D9-_WNDPROC@16
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSMAINCREATE.BAS",132,0,0,.L_64DA
.L_64DA:
.L_64DB:
	cmp dword ptr [_G_TMAINCTX+24], 0
	je .L_6350
.L_6351:
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.L_6350:
.L_6352:
.stabn 68,0,1,.L_64DB-_WNDPROC@16
.L_64DC:
	cmp dword ptr [ebp-8], 0
	jne .L_6354
.L_6355:
.stabn 68,0,2,.L_64DC-_WNDPROC@16
.L_64DD:
	push 128
	lea ecx, [ebp-252]
	push ecx
	push dword ptr [ebp+8]
	call _GetClassNameA@12
.stabn 68,0,2,.L_64DD-_WNDPROC@16
.L_64DE:
	mov dword ptr [ebp-4], -1
	jmp .L_6255
.stabn 68,0,2,.L_64DE-_WNDPROC@16
.L_64DF:
.L_6356:
.L_6354:
.L_6353:
	mov ecx, dword ptr [ebp+8]
	mov dword ptr [_G_TMAINCTX+24], ecx
.stabn 68,0,2,.L_64DF-_WNDPROC@16
.L_64E0:
.L_6357:
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx]
	mov dword ptr [ebp-128], eax
.stabn 68,0,2,.L_64E0-_WNDPROC@16
.L_64E1:
.L_6359:
	lea eax, [ebp-144]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,2,.L_64E1-_WNDPROC@16
.L_64E2:
	mov eax, dword ptr [ebp-128]
	mov ecx, dword ptr [ebp-136]
	mov dword ptr [eax], ecx
	mov ecx, dword ptr [ebp-128]
	mov eax, dword ptr [ebp-132]
	mov dword ptr [ecx+4], eax
.stabn 68,0,2,.L_64E2-_WNDPROC@16
.L_64E3:
	mov eax, dword ptr [ebp-128]
	mov dword ptr [eax+8], 15
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+24]
	mov eax, dword ptr [ebp-128]
	mov dword ptr [eax+16], ecx
.stabn 68,0,2,.L_64E3-_WNDPROC@16
.L_64E4:
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx+12], 4
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+792]
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx+20], eax
.stabn 68,0,2,.L_64E4-_WNDPROC@16
.L_64E5:
.L_635A:
.L_635B:
	push dword ptr [ebp-8]
	push 0
	push dword ptr [ebp+8]
	call _SetWindowLongA@12
.stabn 68,0,2,.L_64E5-_WNDPROC@16
.L_64E6:
	push 0
	push 0
	push 0
	push 0
	call _CreateEventA@16
	mov dword ptr [ebp-20], eax
.stabn 68,0,4,.L_64E6-_WNDPROC@16
.L_64E7:
	push 0
	push 0
	push 0
	push 0
	call _CreateEventA@16
	mov dword ptr [_G_HRESIZEEVENT], eax
.stabn 68,0,5,.L_64E7-_WNDPROC@16
.L_64E8:
	push 0
	push dword ptr [ebp-20]
	push offset __ZN6VIEWER10MAINTHREADEPv@4
	call _fb_ThreadCreate@12
	push eax
	call _fb_ThreadDetach@4
.stabn 68,0,6,.L_64E8-_WNDPROC@16
.L_64E9:
	push 0
	push 0
	push 12
	mov dword ptr [ebp-32], 0
	mov dword ptr [ebp-28], 0
	mov dword ptr [ebp-24], 0
	push 0
	push 8
	push offset _Lt_2438
	push -1
	lea eax, [ebp-32]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-32]
	push eax
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+792]
	push ecx
	call __SETFONT@20
	lea ecx, [ebp-32]
	push ecx
	call _fb_StrDelete@4
.stabn 68,0,8,.L_64E9-_WNDPROC@16
.L_64EA:
	push 0
	push 0
	push 10
	mov dword ptr [ebp-44], 0
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	push 0
	push 8
	push offset _Lt_2438
	push -1
	lea ecx, [ebp-44]
	push ecx
	call _fb_StrAssign@20
	lea ecx, [ebp-44]
	push ecx
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+832]
	push eax
	call __SETFONT@20
	lea eax, [ebp-44]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,9,.L_64EA-_WNDPROC@16
.L_64EB:
	push 0
	push 0
	push 16
	mov dword ptr [ebp-56], 0
	mov dword ptr [ebp-52], 0
	mov dword ptr [ebp-48], 0
	push 0
	push 9
	push offset _Lt_2439
	push -1
	lea eax, [ebp-56]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-56]
	push eax
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+812]
	push ecx
	call __SETFONT@20
	lea ecx, [ebp-56]
	push ecx
	call _fb_StrDelete@4
.stabn 68,0,10,.L_64EB-_WNDPROC@16
.L_64EC:
	push 0
	push 0
	push 12
	mov dword ptr [ebp-68], 0
	mov dword ptr [ebp-64], 0
	mov dword ptr [ebp-60], 0
	push 0
	push 12
	push offset _Lt_243A
	push -1
	lea ecx, [ebp-68]
	push ecx
	call _fb_StrAssign@20
	lea ecx, [ebp-68]
	push ecx
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+852]
	push eax
	call __SETFONT@20
	lea eax, [ebp-68]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,11,.L_64EC-_WNDPROC@16
.L_64ED:
.L_6360:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+72]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,13,.L_64ED-_WNDPROC@16
.L_64EE:
.L_6361:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 1280
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 256
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 512
.stabn 68,0,13,.L_64EE-_WNDPROC@16
.L_64EF:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,13,.L_64EF-_WNDPROC@16
.L_64F0:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 1
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342242816
	push offset _Lt_24FE
	push offset _Lt_6366
	push 32
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,13,.L_64F0-_WNDPROC@16
.L_64F1:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_6368
.L_6369:
.stabn 68,0,13,.L_64F1-_WNDPROC@16
.L_64F2:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,13,.L_64F2-_WNDPROC@16
.L_64F3:
.L_636A:
.L_6368:
.L_6367:
.L_636B:
	mov dword ptr [ebp-16], 1
.stabn 68,0,13,.L_64F3-_WNDPROC@16
.L_64F4:
.L_636C:
	mov eax, dword ptr [ebp-8]
	mov word ptr [eax+152], 0
	mov eax, dword ptr [ebp-8]
	movzx ecx, word ptr [eax+152]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-8]
	mov word ptr [eax+152], cx
	mov ecx, dword ptr [ebp-8]
	movzx eax, word ptr [ecx+152]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-8]
	mov word ptr [ecx+152], ax
	mov eax, dword ptr [ebp-8]
	movzx ecx, word ptr [eax+152]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-8]
	mov word ptr [eax+152], cx
	mov ecx, dword ptr [ebp-8]
	mov word ptr [ecx+154], 800
.L_636E:
.stabn 68,0,14,.L_64F4-_WNDPROC@16
.L_64F5:
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+120]
	mov dword ptr [ebp-128], eax
.stabn 68,0,14,.L_64F5-_WNDPROC@16
.L_64F6:
.L_636F:
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+18], 160
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+22], 160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+26], 10880
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+30], 800
.stabn 68,0,14,.L_64F6-_WNDPROC@16
.L_64F7:
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+36], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+38], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+40], 100
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+42], 100
.stabn 68,0,14,.L_64F7-_WNDPROC@16
.L_64F8:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 2
	push dword ptr [ebp+8]
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+42]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+40]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+38]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+36]
	push eax
	push 1342242816
	push 0
	push offset _Lt_6374
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,14,.L_64F8-_WNDPROC@16
.L_64F9:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_6376
.L_6377:
.stabn 68,0,14,.L_64F9-_WNDPROC@16
.L_64FA:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,14,.L_64FA-_WNDPROC@16
.L_64FB:
.L_6378:
.L_6376:
.L_6375:
.L_6379:
	mov dword ptr [ebp-16], 2
.stabn 68,0,14,.L_64FB-_WNDPROC@16
.L_64FC:
.L_637A:
.L_637B:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+168]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,15,.L_64FC-_WNDPROC@16
.L_64FD:
.L_637C:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 128
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	or eax, 16383
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], -160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 800
.stabn 68,0,15,.L_64FD-_WNDPROC@16
.L_64FE:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,15,.L_64FE-_WNDPROC@16
.L_64FF:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 3
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342242816
	push offset _Lt_6381
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,15,.L_64FF-_WNDPROC@16
.L_6500:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_6383
.L_6384:
.stabn 68,0,15,.L_6500-_WNDPROC@16
.L_6501:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,15,.L_6501-_WNDPROC@16
.L_6502:
.L_6385:
.L_6383:
.L_6382:
.L_6386:
	mov dword ptr [ebp-16], 3
.stabn 68,0,15,.L_6502-_WNDPROC@16
.L_6503:
.L_6387:
.L_6388:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+216]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,16,.L_6503-_WNDPROC@16
.L_6504:
.L_638A:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 850
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 6784
.stabn 68,0,16,.L_6504-_WNDPROC@16
.L_6505:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,16,.L_6505-_WNDPROC@16
.L_6506:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 4
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342177293
	push offset _Lt_0000
	push offset _Lt_638F
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,16,.L_6506-_WNDPROC@16
.L_6507:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_6391
.L_6392:
.stabn 68,0,16,.L_6507-_WNDPROC@16
.L_6508:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,16,.L_6508-_WNDPROC@16
.L_6509:
.L_6393:
.L_6391:
.L_6390:
.L_6394:
	mov dword ptr [ebp-16], 4
.stabn 68,0,16,.L_6509-_WNDPROC@16
.L_650A:
.L_6395:
.L_6396:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+264]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,17,.L_650A-_WNDPROC@16
.L_650B:
.L_6398:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	or eax, 16383
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], -160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 6784
.stabn 68,0,17,.L_650B-_WNDPROC@16
.L_650C:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,17,.L_650C-_WNDPROC@16
.L_650D:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 5
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1345401220
	push offset _Lt_0000
	push offset _Lt_639D
	push 512
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,17,.L_650D-_WNDPROC@16
.L_650E:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_639F
.L_63A0:
.stabn 68,0,17,.L_650E-_WNDPROC@16
.L_650F:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,17,.L_650F-_WNDPROC@16
.L_6510:
.L_63A1:
.L_639F:
.L_639E:
.L_63A2:
	mov dword ptr [ebp-16], 5
.stabn 68,0,17,.L_6510-_WNDPROC@16
.L_6511:
.L_63A3:
.L_63A4:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+312]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,18,.L_6511-_WNDPROC@16
.L_6512:
.L_63A6:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 64
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 1920
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,18,.L_6512-_WNDPROC@16
.L_6513:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,18,.L_6513-_WNDPROC@16
.L_6514:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 6
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342377993
	push offset _Lt_63AB
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,18,.L_6514-_WNDPROC@16
.L_6515:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63AD
.L_63AE:
.stabn 68,0,18,.L_6515-_WNDPROC@16
.L_6516:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,18,.L_6516-_WNDPROC@16
.L_6517:
.L_63AF:
.L_63AD:
.L_63AC:
.L_63B0:
	mov dword ptr [ebp-16], 6
.stabn 68,0,18,.L_6517-_WNDPROC@16
.L_6518:
.L_63B1:
.L_63B2:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+360]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,19,.L_6518-_WNDPROC@16
.L_6519:
.L_63B4:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 1920
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,19,.L_6519-_WNDPROC@16
.L_651A:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,19,.L_651A-_WNDPROC@16
.L_651B:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 7
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342246921
	push offset _Lt_63B9
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,19,.L_651B-_WNDPROC@16
.L_651C:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63BB
.L_63BC:
.stabn 68,0,19,.L_651C-_WNDPROC@16
.L_651D:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,19,.L_651D-_WNDPROC@16
.L_651E:
.L_63BD:
.L_63BB:
.L_63BA:
.L_63BE:
	mov dword ptr [ebp-16], 7
.stabn 68,0,19,.L_651E-_WNDPROC@16
.L_651F:
.L_63BF:
.L_63C0:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+408]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,20,.L_651F-_WNDPROC@16
.L_6520:
.L_63C2:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 1920
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,20,.L_6520-_WNDPROC@16
.L_6521:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,20,.L_6521-_WNDPROC@16
.L_6522:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 8
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342373888
	push offset _Lt_63C7
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,20,.L_6522-_WNDPROC@16
.L_6523:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63C9
.L_63CA:
.stabn 68,0,20,.L_6523-_WNDPROC@16
.L_6524:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,20,.L_6524-_WNDPROC@16
.L_6525:
.L_63CB:
.L_63C9:
.L_63C8:
.L_63CC:
	mov dword ptr [ebp-16], 8
.stabn 68,0,20,.L_6525-_WNDPROC@16
.L_6526:
.L_63CD:
.L_63CE:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+456]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,21,.L_6526-_WNDPROC@16
.L_6527:
.L_63CF:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 128
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 1920
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,21,.L_6527-_WNDPROC@16
.L_6528:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,21,.L_6528-_WNDPROC@16
.L_6529:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 9
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342242816
	push offset _Lt_63D4
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,21,.L_6529-_WNDPROC@16
.L_652A:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63D6
.L_63D7:
.stabn 68,0,21,.L_652A-_WNDPROC@16
.L_652B:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,21,.L_652B-_WNDPROC@16
.L_652C:
.L_63D8:
.L_63D6:
.L_63D5:
.L_63D9:
	mov dword ptr [ebp-16], 9
.stabn 68,0,21,.L_652C-_WNDPROC@16
.L_652D:
.L_63DA:
.L_63DB:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+504]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,22,.L_652D-_WNDPROC@16
.L_652E:
.L_63DC:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-16]
	and ecx, 16383
	or eax, ecx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 128
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 1920
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,22,.L_652E-_WNDPROC@16
.L_652F:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,22,.L_652F-_WNDPROC@16
.L_6530:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 10
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342242816
	push offset _Lt_63E1
	push offset _Lt_6366
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,22,.L_6530-_WNDPROC@16
.L_6531:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63E3
.L_63E4:
.stabn 68,0,22,.L_6531-_WNDPROC@16
.L_6532:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,22,.L_6532-_WNDPROC@16
.L_6533:
.L_63E5:
.L_63E3:
.L_63E2:
.L_63E6:
	mov dword ptr [ebp-16], 10
.stabn 68,0,22,.L_6533-_WNDPROC@16
.L_6534:
.L_63E7:
.L_63E8:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+552]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,23,.L_6534-_WNDPROC@16
.L_6535:
.L_63EA:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	or eax, 12
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], -512
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 512
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 640
.stabn 68,0,23,.L_6535-_WNDPROC@16
.L_6536:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,23,.L_6536-_WNDPROC@16
.L_6537:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 11
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342246915
	push offset _Lt_5B66
	push offset _Lt_6366
	push 32
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,23,.L_6537-_WNDPROC@16
.L_6538:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63F0
.L_63F1:
.stabn 68,0,23,.L_6538-_WNDPROC@16
.L_6539:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,23,.L_6539-_WNDPROC@16
.L_653A:
.L_63F2:
.L_63F0:
.L_63EF:
.L_63F3:
	mov dword ptr [ebp-16], 11
.stabn 68,0,23,.L_653A-_WNDPROC@16
.L_653B:
.L_63F4:
.L_63F5:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+600]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,24,.L_653B-_WNDPROC@16
.L_653C:
.L_63F7:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 64
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	or eax, 16383
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], -160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	or ecx, 16383
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], -640
.stabn 68,0,24,.L_653C-_WNDPROC@16
.L_653D:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,24,.L_653D-_WNDPROC@16
.L_653E:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 12
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1345394820
	push offset _Lt_0000
	push offset _Lt_63FC
	push 512
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,24,.L_653E-_WNDPROC@16
.L_653F:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_63FE
.L_63FF:
.stabn 68,0,24,.L_653F-_WNDPROC@16
.L_6540:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,24,.L_6540-_WNDPROC@16
.L_6541:
.L_6400:
.L_63FE:
.L_63FD:
.L_6401:
	mov dword ptr [ebp-16], 12
.stabn 68,0,24,.L_6541-_WNDPROC@16
.L_6542:
.L_6402:
.L_6403:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+648]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,25,.L_6542-_WNDPROC@16
.L_6543:
.L_6405:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-16]
	and eax, 16383
	or ecx, eax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	or eax, 16383
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	or ecx, 16384
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	or eax, 32768
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], -160
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	or ecx, 16383
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	or eax, 16384
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	or ecx, 32768
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], -640
.stabn 68,0,25,.L_6543-_WNDPROC@16
.L_6544:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,25,.L_6544-_WNDPROC@16
.L_6545:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 13
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1345392772
	push offset _Lt_0000
	push offset _Lt_63FC
	push 512
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,25,.L_6545-_WNDPROC@16
.L_6546:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_640B
.L_640C:
.stabn 68,0,25,.L_6546-_WNDPROC@16
.L_6547:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,25,.L_6547-_WNDPROC@16
.L_6548:
.L_640D:
.L_640B:
.L_640A:
.L_640E:
	mov dword ptr [ebp-16], 13
.stabn 68,0,25,.L_6548-_WNDPROC@16
.L_6549:
.L_640F:
.L_6410:
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+696]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,26,.L_6549-_WNDPROC@16
.L_654A:
.L_6411:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+16]
	and ecx, 4294950911
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+16], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+16]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+16], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+18], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+20]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+20], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+20]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+20], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+22], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], 0
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294950912
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+24]
	and ecx, 4294950911
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+24], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+24]
	and eax, 4294934527
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+24], ax
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+26], 0
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], 0
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294950912
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	movzx eax, word ptr [ecx+28]
	and eax, 4294950911
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+28], ax
	mov eax, dword ptr [ebp-128]
	movzx ecx, word ptr [eax+28]
	and ecx, 4294934527
	mov eax, dword ptr [ebp-128]
	mov word ptr [eax+28], cx
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+30], 0
.stabn 68,0,26,.L_654A-_WNDPROC@16
.L_654B:
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+36], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+38], 0
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+40], 100
	mov ecx, dword ptr [ebp-128]
	mov word ptr [ecx+42], 100
.stabn 68,0,26,.L_654B-_WNDPROC@16
.L_654C:
	push 0
	push dword ptr [_G_APPINSTANCE]
	push 14
	push dword ptr [ebp+8]
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+42]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+40]
	push ecx
	mov ecx, dword ptr [ebp-128]
	movsx eax, word ptr [ecx+38]
	push eax
	mov eax, dword ptr [ebp-128]
	movsx ecx, word ptr [eax+36]
	push ecx
	push 1342177536
	push offset _Lt_5AB2
	push offset _Lt_6416
	push 0
	call _CreateWindowExA@48
	mov ecx, dword ptr [ebp-128]
	mov dword ptr [ecx], eax
.stabn 68,0,26,.L_654C-_WNDPROC@16
.L_654D:
	mov eax, dword ptr [ebp-128]
	cmp dword ptr [eax], 0
	jne .L_6418
.L_6419:
.stabn 68,0,26,.L_654D-_WNDPROC@16
.L_654E:
	call _GetLastError@0
	mov dword ptr [ebp-132], eax
.stabn 68,0,26,.L_654E-_WNDPROC@16
.L_654F:
.L_641A:
.L_6418:
.L_6417:
.L_641B:
	mov dword ptr [ebp-16], 14
.stabn 68,0,26,.L_654F-_WNDPROC@16
.L_6550:
.L_641C:
	push -1
	push 12
	push 5
	push 4
	push 1
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+24]
	push ecx
	call __SETCONTROLSFONT
	add esp, 24
.stabn 68,0,29,.L_6550-_WNDPROC@16
.L_6551:
	push -1
	push 14
	push 2
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+24]
	push eax
	call __SETCONTROLSFONT
	add esp, 16
.stabn 68,0,30,.L_6551-_WNDPROC@16
.L_6552:
	push -1
	push 11
	push 3
	mov eax, dword ptr [ebp-8]
	lea ecx, [eax+24]
	push ecx
	call __SETCONTROLSFONT
	add esp, 16
.stabn 68,0,31,.L_6552-_WNDPROC@16
.L_6553:
	push offset _Lt_58F1
	push offset _Lt_58F1
	push dword ptr [_G_TMAINCTX+264]
	call _SetWindowTheme@12
.stabn 68,0,33,.L_6553-_WNDPROC@16
.L_6554:
	push offset _Lt_58F1
	push offset _Lt_58F1
	push dword ptr [_G_TMAINCTX+600]
	call _SetWindowTheme@12
.stabn 68,0,34,.L_6554-_WNDPROC@16
.L_6555:
	push offset _Lt_58F1
	push offset _Lt_58F1
	push dword ptr [_G_TMAINCTX+648]
	call _SetWindowTheme@12
.stabn 68,0,35,.L_6555-_WNDPROC@16
.L_6556:
	push 16777216
	push 0
	push 1077
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,36,.L_6556-_WNDPROC@16
.L_6557:
	push 589828
	push 0
	push 1093
	push dword ptr [_G_TMAINCTX+264]
	call _SendMessageA@16
.stabn 68,0,37,.L_6557-_WNDPROC@16
.L_6558:
	push offset _WNDPROCEDIT@16
	push -4
	push dword ptr [_G_TMAINCTX+264]
	call _SetWindowLongA@12
	mov dword ptr [_ORGEDITPROC], eax
.stabn 68,0,38,.L_6558-_WNDPROC@16
.L_6559:
	mov dword ptr [ebp-96], 9
	mov dword ptr [ebp-92], 0
	mov dword ptr [ebp-88], 0
	mov eax, offset _Lt_641E
	mov dword ptr [ebp-84], eax
	mov dword ptr [ebp-80], 0
	mov dword ptr [ebp-76], -1
	mov dword ptr [ebp-72], 0
.stabn 68,0,40,.L_6559-_WNDPROC@16
.L_655A:
.L_641F:
	mov eax, dword ptr [_G_TTABS]
	lea ecx, [eax]
	mov dword ptr [ebp-128], ecx
.stabn 68,0,41,.L_655A-_WNDPROC@16
.L_655B:
	lea ecx, [ebp-96]
	push ecx
	push 0
	push 4871
	push dword ptr [_G_TMAINCTX+120]
	call _SendMessageA@16
.stabn 68,0,42,.L_655B-_WNDPROC@16
.L_655C:
	mov ecx, dword ptr [ebp-128]
	mov eax, dword ptr [_G_TMAINCTX+264]
	mov dword ptr [ecx], eax
	push 0
	push 1
	push offset _Lt_0000
	push -1
	mov eax, dword ptr [ebp-128]
	lea ecx, [eax+4]
	push ecx
	call _fb_StrAssign@20
.stabn 68,0,43,.L_655C-_WNDPROC@16
.L_655D:
.L_6421:
	push -1
	push 2
	push 2
	mov ecx, dword ptr [ebp-8]
	lea eax, [ecx+24]
	push eax
	call __SETCONTROLSFONT
	add esp, 16
.stabn 68,0,45,.L_655D-_WNDPROC@16
.L_655E:
	call _INITSEARCHWINDOW@0
.stabn 68,0,47,.L_655E-_WNDPROC@16
.L_655F:
	push 1019
	call __ZN4MENU7TRIGGEREt@4
.stabn 68,0,48,.L_655F-_WNDPROC@16
.L_6560:
	push 1037
	call __ZN4MENU7TRIGGEREt@4
.stabn 68,0,49,.L_6560-_WNDPROC@16
.L_6561:
	push 16746564
	push dword ptr [_G_TMAINCTX+312]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,52,.L_6561-_WNDPROC@16
.L_6562:
	push 16746564
	push dword ptr [_G_TMAINCTX+360]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,53,.L_6562-_WNDPROC@16
.L_6563:
	push 4491519
	push dword ptr [_G_TMAINCTX+408]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,54,.L_6563-_WNDPROC@16
.L_6564:
	push 16711680
	push dword ptr [_G_TMAINCTX+456]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,55,.L_6564-_WNDPROC@16
.L_6565:
	push 255
	push dword ptr [_G_TMAINCTX+504]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,56,.L_6565-_WNDPROC@16
.L_6566:
	push 65280
	push dword ptr [_G_TMAINCTX+552]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,57,.L_6566-_WNDPROC@16
.L_6567:
	push 65280
	push dword ptr [_G_TMAINCTX+168]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,58,.L_6567-_WNDPROC@16
.L_6568:
	push 255
	push dword ptr [_G_TMAINCTX+72]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,59,.L_6568-_WNDPROC@16
.L_6569:
	push 16746632
	push dword ptr [_G_TMAINCTX+648]
	call __ZN14COLOREDCONTROL8COLORIZEEP6HWND__j@8
.stabn 68,0,61,.L_6569-_WNDPROC@16
.L_656A:
	push 0
	push 0
	push 245
	push dword ptr [_G_TMAINCTX+360]
	call _SendMessageA@16
.stabn 68,0,63,.L_656A-_WNDPROC@16
.L_656B:
	push 0
	push 0
	push 245
	push dword ptr [_G_TMAINCTX+552]
	call _SendMessageA@16
.stabn 68,0,65,.L_656B-_WNDPROC@16
.L_656C:
	push 4294967295
	push dword ptr [ebp-20]
	call _WaitForSingleObject@8
.stabn 68,0,68,.L_656C-_WNDPROC@16
.L_656D:
	push dword ptr [ebp-20]
	call _CloseHandle@4
.stabn 68,0,69,.L_656D-_WNDPROC@16
.L_656E:
	cmp dword ptr [_G_GFXHWND], 0
	jne .L_6423
.L_6424:
	mov dword ptr [ebp-4], -1
	jmp .L_6255
.L_6423:
.L_6425:
.stabn 68,0,70,.L_656E-_WNDPROC@16
.L_656F:
	push 1
	call _RESIZEMAINWINDOW@4
.stabn 68,0,74,.L_656F-_WNDPROC@16
.L_6570:
	call _FILE_NEW@0
.stabn 68,0,75,.L_6570-_WNDPROC@16
.L_6571:
	push dword ptr [_G_TMAINCTX+24]
	call _SetForegroundWindow@4
.stabn 68,0,77,.L_6571-_WNDPROC@16
.L_6572:
	push dword ptr [_G_TMAINCTX+264]
	call _SetFocus@4
.stabn 68,0,78,.L_6572-_WNDPROC@16
.L_6573:
	push 0
	push 0
	call _CHANGETOTAB@8
.stabn 68,0,79,.L_6573-_WNDPROC@16
##      #include "LSModules\LSMainCreate.bas"          
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_6574
.L_6574:
.L_6575:
##      var N = 1 , sCurDir = curdir()+"\"
	mov dword ptr [ebp-100], 1
	push 0
	push -1
	push 2
	push offset _Lt_2642
	push -1
	call _fb_CurDir@0
	push eax
	mov dword ptr [ebp-124], 0
	mov dword ptr [ebp-120], 0
	mov dword ptr [ebp-116], 0
	lea eax, [ebp-124]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	call _fb_StrInit@20
.stabn 68,0,592,.L_6575-_WNDPROC@16
.L_6576:
##      do
.L_6427:
.L_642A:
##         var sFile = command(N) : N += 1         
	push 0
	push -1
	push dword ptr [ebp-100]
	call _fb_Command@4
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrInit@20
	inc dword ptr [ebp-100]
.stabn 68,0,594,.L_6576-_WNDPROC@16
.L_6577:
##         if len(sFile)=0 then exit do
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrLen@8
	test eax, eax
	jne .L_642C
.L_642D:
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	jmp .L_6428
.L_642C:
.L_642E:
.stabn 68,0,595,.L_6577-_WNDPROC@16
.L_6578:
##         for N as long = 0 to len(sFile)
.L_642F:
	mov dword ptr [ebp-184], 0
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrLen@8
	mov dword ptr [ebp-188], eax
	jmp .L_6431
.L_6434:
.L_6435:
.stabn 68,0,596,.L_6578-_WNDPROC@16
.L_6579:
##            if sFile[N] = asc("/") then sFile[N] = asc("\")
	mov eax, dword ptr [ebp-136]
	add eax, dword ptr [ebp-184]
	movzx ecx, byte ptr [eax]
	cmp ecx, 47
	jne .L_6437
.L_6438:
	mov ecx, dword ptr [ebp-136]
	add ecx, dword ptr [ebp-184]
	mov byte ptr [ecx], 92
.L_6437:
.L_6439:
.stabn 68,0,597,.L_6579-_WNDPROC@16
.L_657A:
##         next N
.L_643A:
.L_6432:
	inc dword ptr [ebp-184]
.L_6431:
	mov ecx, dword ptr [ebp-188]
	cmp dword ptr [ebp-184], ecx
	jle .L_6434
.L_6433:
.L_643B:
.stabn 68,0,598,.L_657A-_WNDPROC@16
.L_657B:
##         if FileExists(sCurDir+sFile) then 
	mov dword ptr [ebp-160], 0
	mov dword ptr [ebp-156], 0
	mov dword ptr [ebp-152], 0
	push 0
	push -1
	push -1
	lea ecx, [ebp-136]
	push ecx
	push -1
	lea ecx, [ebp-112]
	push ecx
	mov dword ptr [ebp-148], 0
	mov dword ptr [ebp-144], 0
	mov dword ptr [ebp-140], 0
	lea ecx, [ebp-148]
	push ecx
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-160]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-160]
	call _fb_FileExists@4
	mov dword ptr [ebp-164], eax
	lea eax, [ebp-160]
	push eax
	call _fb_StrDelete@4
	cmp dword ptr [ebp-164], 0
	je .L_643F
.L_6441:
.stabn 68,0,599,.L_657B-_WNDPROC@16
.L_657C:
##            sFile = sCurDir + sFile
	push 0
	push -1
	push -1
	lea eax, [ebp-136]
	push eax
	push -1
	lea eax, [ebp-112]
	push eax
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-136]
	push eax
	call _fb_StrAssign@20
.stabn 68,0,600,.L_657C-_WNDPROC@16
.L_657D:
##         elseif FileExists(sFile)=0 then
.L_6443:
	jmp .L_643E
.L_643F:
	push dword ptr [ebp-136]
	call _fb_FileExists@4
	test eax, eax
	jne .L_6444
.L_6445:
.stabn 68,0,601,.L_657D-_WNDPROC@16
.L_657E:
##            MessageBox( CTL(wcMain) [Macro Expansion: g_tMainCtx.hCtl(wcMain).hwnd ]  , "File not found: '"+sFile+"'" , NULL , MB_ICONERROR )
	push 16
	push 0
	mov dword ptr [ebp-216], 0
	mov dword ptr [ebp-212], 0
	mov dword ptr [ebp-208], 0
	push 0
	push -1
	push 2
	push offset _Lt_2653
	push -1
	push -1
	lea eax, [ebp-136]
	push eax
	push 18
	push offset _Lt_6446
	mov dword ptr [ebp-192], 0
	mov dword ptr [ebp-188], 0
	mov dword ptr [ebp-184], 0
	lea eax, [ebp-192]
	push eax
	call _fb_StrConcat@20
	push eax
	mov dword ptr [ebp-204], 0
	mov dword ptr [ebp-200], 0
	mov dword ptr [ebp-196], 0
	lea eax, [ebp-204]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-216]
	push eax
	call _fb_StrAssign@20
	push dword ptr [ebp-216]
	push dword ptr [_G_TMAINCTX+24]
	call _MessageBoxA@16
	lea eax, [ebp-216]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,602,.L_657E-_WNDPROC@16
.L_657F:
##            continue do
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
	jmp .L_6429
.stabn 68,0,603,.L_657F-_WNDPROC@16
.L_6580:
##         end if      
.L_644A:
.L_6444:
.L_643E:
##         var pzTemp = cptr(zstring ptr,malloc(65536))
	push 65536
	call _malloc
	add esp, 4
	mov dword ptr [ebp-168], eax
.stabn 68,0,606,.L_6580-_WNDPROC@16
.L_6581:
##         PathCanonicalizeA( pzTemp , sFile )
	push dword ptr [ebp-136]
	push dword ptr [ebp-168]
	call _PathCanonicalizeA@8
.stabn 68,0,607,.L_6581-_WNDPROC@16
.L_6582:
##         LoadScript( *pzTemp )
	mov dword ptr [ebp-180], 0
	mov dword ptr [ebp-176], 0
	mov dword ptr [ebp-172], 0
	push 0
	push 0
	push dword ptr [ebp-168]
	push -1
	lea eax, [ebp-180]
	push eax
	call _fb_StrAssign@20
	lea eax, [ebp-180]
	push eax
	call _LOADSCRIPT@4
	lea eax, [ebp-180]
	push eax
	call _fb_StrDelete@4
.stabn 68,0,608,.L_6582-_WNDPROC@16
.L_6583:
##         free(pzTemp)
	push dword ptr [ebp-168]
	call _free
	add esp, 4
.stabn 68,0,609,.L_6583-_WNDPROC@16
.L_6584:
##      loop  
	lea eax, [ebp-136]
	push eax
	call _fb_StrDelete@4
.L_644C:
.L_6429:
	jmp .L_6427
.L_6428:
.stabn 68,0,610,.L_6584-_WNDPROC@16
.L_6585:
##      return 0
	mov dword ptr [ebp-4], 0
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
	jmp .L_6255
.stabn 68,0,611,.L_6585-_WNDPROC@16
.L_6586:
##   case WM_CLOSE   'close button was clicked
	lea eax, [ebp-112]
	push eax
	call _fb_StrDelete@4
.L_644D:
	jmp .L_625D
.L_634C:
	cmp dword ptr [ebp+12], 16
	jne .L_644E
.L_644F:
.L_6450:
.stabn 68,0,612,.L_6586-_WNDPROC@16
.L_6587:
##      if File_Quit()=false then return 0      
	call _FILE_QUIT@0
	test al, al
	jne .L_6452
.L_6453:
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.L_6452:
.L_6454:
.stabn 68,0,613,.L_6587-_WNDPROC@16
.L_6588:
##      PostQuitMessage(0) ' to quit
	push 0
	call _PostQuitMessage@4
.stabn 68,0,614,.L_6588-_WNDPROC@16
.L_6589:
##   case WM_DESTROY 'Windows was closed/destroyed
.L_6455:
	jmp .L_625D
.L_644E:
	cmp dword ptr [ebp+12], 2
	jne .L_6456
.L_6457:
.L_6458:
.stabn 68,0,615,.L_6589-_WNDPROC@16
.L_658A:
##    PostQuitMessage(0) ' to quit
	push 0
	call _PostQuitMessage@4
.stabn 68,0,616,.L_658A-_WNDPROC@16
.L_658B:
##    return 0 
	mov dword ptr [ebp-4], 0
	jmp .L_6255
.stabn 68,0,617,.L_658B-_WNDPROC@16
.L_658C:
##   end select
.L_6459:
.L_6456:
.L_625D:
.L_645A:
##   if message = g_FindRepMsg then return Edit_FindReplaceAction( *cptr(FINDREPLACE ptr,lParam) )
	mov eax, dword ptr [_G_FINDREPMSG]
	cmp dword ptr [ebp+12], eax
	jne .L_645C
.L_645D:
	push dword ptr [ebp+20]
	call _EDIT_FINDREPLACEACTION@4
	mov dword ptr [ebp-4], eax
	jmp .L_6255
.L_645C:
.L_645E:
.stabn 68,0,620,.L_658C-_WNDPROC@16
.L_658D:
##   return DefWindowProc( hWnd, message, wParam, lParam )
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
.stabn 68,0,623,.L_658D-_WNDPROC@16
.L_658E:
.L_6255:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,625,.L_6255-_WNDPROC@16
	.stabs "FORMCONTEXT:Tt428=s892TFORM:42,0,192;HCTL:429=ar1;0;15;44,192,6144;HFNT:430=ar1;0;4;53,6336,800;;",128,0,0,0
	.stabs "PCTX:427=*428",128,0,0,-8
	.stabs "IDPREVCTL:1",128,0,0,-16
	.stabn 192,0,0,.L_6254-_WNDPROC@16
	.stabn 192,0,0,.L_625A-_WNDPROC@16
	.stabn 224,0,0,.L_625B-_WNDPROC@16
	.stabn 192,0,0,.L_625C-_WNDPROC@16
	.stabs "WID:1",128,0,0,-20
	.stabs "PTDRW:431=*407",128,0,0,-24
	.stabn 192,0,0,.L_6260-_WNDPROC@16
	.stabn 192,0,0,.L_6261-_WNDPROC@16
	.stabn 192,0,0,.L_6265-_WNDPROC@16
	.stabn 224,0,0,.L_6266-_WNDPROC@16
	.stabn 224,0,0,.L_6267-_WNDPROC@16
	.stabn 224,0,0,.L_6268-_WNDPROC@16
	.stabs "TMAT:184",128,0,0,-80
	.stabs "DBEG:V12",40,0,0,_Lt_6476
	.stabs "ZOUTPUT:4",128,0,0,-336
	.stabn 192,0,0,.L_626B-_WNDPROC@16
	.stabn 192,0,0,.L_626E-_WNDPROC@16
	.stabn 224,0,0,.L_626F-_WNDPROC@16
	.stabn 192,0,0,.L_6270-_WNDPROC@16
	.stabn 224,0,0,.L_6272-_WNDPROC@16
	.stabn 224,0,0,.L_6276-_WNDPROC@16
	.stabs "IID:8",128,0,0,-20
	.stabs "FUFLAGS:8",128,0,0,-24
	.stabs "HMENU:432=*324",128,0,0,-28
	.stabn 192,0,0,.L_6279-_WNDPROC@16
	.stabn 192,0,0,.L_627C-_WNDPROC@16
	.stabn 224,0,0,.L_627D-_WNDPROC@16
	.stabn 224,0,0,.L_627E-_WNDPROC@16
	.stabs "WID:1",128,0,0,-20
	.stabs "PNMH:433=*351",128,0,0,-24
	.stabn 192,0,0,.L_6281-_WNDPROC@16
	.stabn 192,0,0,.L_6282-_WNDPROC@16
	.stabn 192,0,0,.L_6286-_WNDPROC@16
	.stabn 192,0,0,.L_6287-_WNDPROC@16
	.stabs "IIDX:1",128,0,0,-32
	.stabn 192,0,0,.L_628C-_WNDPROC@16
	.stabn 224,0,0,.L_628D-_WNDPROC@16
	.stabn 224,0,0,.L_628E-_WNDPROC@16
	.stabn 224,0,0,.L_628F-_WNDPROC@16
	.stabn 192,0,0,.L_6292-_WNDPROC@16
	.stabn 192,0,0,.L_6293-_WNDPROC@16
	.stabn 192,0,0,.L_6298-_WNDPROC@16
	.stabn 192,0,0,.L_629B-_WNDPROC@16
	.stabn 224,0,0,.L_629C-_WNDPROC@16
	.stabs "IROW:1",128,0,0,-36
	.stabs "ICOL:1",128,0,0,-40
	.stabs "ZPART:4",128,0,0,-104
	.stabn 192,0,0,.L_629D-_WNDPROC@16
	.stabn 224,0,0,.L_62A0-_WNDPROC@16
	.stabn 224,0,0,.L_62A1-_WNDPROC@16
	.stabn 224,0,0,.L_62A2-_WNDPROC@16
	.stabn 224,0,0,.L_62A3-_WNDPROC@16
	.stabn 224,0,0,.L_62A4-_WNDPROC@16
	.stabn 224,0,0,.L_62A5-_WNDPROC@16
	.stabs "WNOTIFYCODE:1",128,0,0,-20
	.stabs "WID:8",128,0,0,-24
	.stabs "HWNDCTL:434=*21",128,0,0,-28
	.stabn 192,0,0,.L_62A8-_WNDPROC@16
	.stabn 192,0,0,.L_62AD-_WNDPROC@16
	.stabn 224,0,0,.L_62AE-_WNDPROC@16
	.stabn 192,0,0,.L_62AF-_WNDPROC@16
	.stabs "TITEM:325",128,0,0,-80
	.stabn 192,0,0,.L_62B3-_WNDPROC@16
	.stabn 192,0,0,.L_62B6-_WNDPROC@16
	.stabn 224,0,0,.L_62B7-_WNDPROC@16
	.stabs "MENUITEMCALLBACK:435=*436=f7",128,0,0,-84
	.stabn 192,0,0,.L_62BB-_WNDPROC@16
	.stabn 224,0,0,.L_62BC-_WNDPROC@16
	.stabn 224,0,0,.L_62BD-_WNDPROC@16
	.stabn 192,0,0,.L_62C0-_WNDPROC@16
	.stabn 224,0,0,.L_62C1-_WNDPROC@16
	.stabn 192,0,0,.L_62C4-_WNDPROC@16
	.stabn 192,0,0,.L_62C5-_WNDPROC@16
	.stabn 192,0,0,.L_62C9-_WNDPROC@16
	.stabn 224,0,0,.L_62CA-_WNDPROC@16
	.stabn 192,0,0,.L_62CD-_WNDPROC@16
	.stabn 224,0,0,.L_62CE-_WNDPROC@16
	.stabn 192,0,0,.L_62D1-_WNDPROC@16
	.stabn 224,0,0,.L_62D2-_WNDPROC@16
	.stabn 192,0,0,.L_62D5-_WNDPROC@16
	.stabn 224,0,0,.L_62D6-_WNDPROC@16
	.stabn 192,0,0,.L_62D9-_WNDPROC@16
	.stabn 224,0,0,.L_62DA-_WNDPROC@16
	.stabn 192,0,0,.L_62DD-_WNDPROC@16
	.stabn 224,0,0,.L_62DE-_WNDPROC@16
	.stabn 192,0,0,.L_62E1-_WNDPROC@16
	.stabn 224,0,0,.L_62E2-_WNDPROC@16
	.stabn 192,0,0,.L_62E5-_WNDPROC@16
	.stabn 224,0,0,.L_62E6-_WNDPROC@16
	.stabn 224,0,0,.L_62E7-_WNDPROC@16
	.stabn 224,0,0,.L_62E8-_WNDPROC@16
	.stabn 224,0,0,.L_62E9-_WNDPROC@16
	.stabn 192,0,0,.L_62EA-_WNDPROC@16
	.stabn 192,0,0,.L_62EE-_WNDPROC@16
	.stabn 192,0,0,.L_62EF-_WNDPROC@16
	.stabn 192,0,0,.L_62F3-_WNDPROC@16
	.stabn 224,0,0,.L_62F4-_WNDPROC@16
	.stabs "HFOCUS:437=*21",128,0,0,-36
	.stabn 192,0,0,.L_62F7-_WNDPROC@16
	.stabn 192,0,0,.L_6300-_WNDPROC@16
	.stabn 224,0,0,.L_6301-_WNDPROC@16
	.stabn 224,0,0,.L_6302-_WNDPROC@16
	.stabn 192,0,0,.L_6305-_WNDPROC@16
	.stabn 224,0,0,.L_6306-_WNDPROC@16
	.stabn 224,0,0,.L_6307-_WNDPROC@16
	.stabn 224,0,0,.L_6308-_WNDPROC@16
	.stabn 224,0,0,.L_6309-_WNDPROC@16
	.stabn 224,0,0,.L_630A-_WNDPROC@16
	.stabn 192,0,0,.L_630D-_WNDPROC@16
	.stabn 224,0,0,.L_630E-_WNDPROC@16
	.stabn 192,0,0,.L_6311-_WNDPROC@16
	.stabn 224,0,0,.L_6312-_WNDPROC@16
	.stabn 192,0,0,.L_6315-_WNDPROC@16
	.stabn 224,0,0,.L_6316-_WNDPROC@16
	.stabn 192,0,0,.L_6319-_WNDPROC@16
	.stabn 224,0,0,.L_631A-_WNDPROC@16
	.stabn 192,0,0,.L_631D-_WNDPROC@16
	.stabn 192,0,0,.L_631F-_WNDPROC@16
	.stabn 192,0,0,.L_6321-_WNDPROC@16
	.stabn 192,0,0,.L_6328-_WNDPROC@16
	.stabn 224,0,0,.L_6329-_WNDPROC@16
	.stabn 192,0,0,.L_632C-_WNDPROC@16
	.stabn 224,0,0,.L_632D-_WNDPROC@16
	.stabn 224,0,0,.L_632E-_WNDPROC@16
	.stabn 224,0,0,.L_632F-_WNDPROC@16
	.stabn 224,0,0,.L_6330-_WNDPROC@16
	.stabn 192,0,0,.L_6333-_WNDPROC@16
	.stabs "FACTIVE:8",128,0,0,-24
	.stabs "FMINIMIZED:8",128,0,0,-28
	.stabs "HWNDPREVIOUS:438=*21",128,0,0,-32
	.stabn 192,0,0,.L_6338-_WNDPROC@16
	.stabn 192,0,0,.L_633B-_WNDPROC@16
	.stabn 224,0,0,.L_633C-_WNDPROC@16
	.stabn 192,0,0,.L_633D-_WNDPROC@16
	.stabn 192,0,0,.L_6340-_WNDPROC@16
	.stabn 224,0,0,.L_6341-_WNDPROC@16
	.stabn 192,0,0,.L_6342-_WNDPROC@16
	.stabn 224,0,0,.L_6343-_WNDPROC@16
	.stabn 224,0,0,.L_6344-_WNDPROC@16
	.stabn 224,0,0,.L_6345-_WNDPROC@16
	.stabn 224,0,0,.L_6346-_WNDPROC@16
	.stabn 192,0,0,.L_634A-_WNDPROC@16
	.stabn 224,0,0,.L_634B-_WNDPROC@16
	.stabs "HEVENTGFXREADY:439=*7",128,0,0,-20
	.stabs "TITEM:353",128,0,0,-96
	.stabs "N:1",128,0,0,-100
	.stabs "SCURDIR:13",128,0,0,-112
	.stabn 192,0,0,.L_634E-_WNDPROC@16
	.stabn 192,0,0,.L_6351-_WNDPROC@16
	.stabn 224,0,0,.L_6352-_WNDPROC@16
	.stabs "ZCLS:4",128,0,0,-252
	.stabn 192,0,0,.L_6355-_WNDPROC@16
	.stabn 224,0,0,.L_6356-_WNDPROC@16
	.stabn 192,0,0,.L_6357-_WNDPROC@16
	.stabs "TRC:23",128,0,0,-144
	.stabn 192,0,0,.L_6359-_WNDPROC@16
	.stabn 224,0,0,.L_635A-_WNDPROC@16
	.stabn 224,0,0,.L_635B-_WNDPROC@16
	.stabs "P:440=*44",128,0,0,-128
	.stabn 192,0,0,.L_6360-_WNDPROC@16
	.stabn 192,0,0,.L_6361-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_6369-_WNDPROC@16
	.stabn 224,0,0,.L_636A-_WNDPROC@16
	.stabn 224,0,0,.L_636B-_WNDPROC@16
	.stabn 224,0,0,.L_636C-_WNDPROC@16
	.stabs "P:441=*44",128,0,0,-128
	.stabn 192,0,0,.L_636E-_WNDPROC@16
	.stabn 192,0,0,.L_636F-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_6377-_WNDPROC@16
	.stabn 224,0,0,.L_6378-_WNDPROC@16
	.stabn 224,0,0,.L_6379-_WNDPROC@16
	.stabn 224,0,0,.L_637A-_WNDPROC@16
	.stabs "P:442=*44",128,0,0,-128
	.stabn 192,0,0,.L_637B-_WNDPROC@16
	.stabn 192,0,0,.L_637C-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_6384-_WNDPROC@16
	.stabn 224,0,0,.L_6385-_WNDPROC@16
	.stabn 224,0,0,.L_6386-_WNDPROC@16
	.stabn 224,0,0,.L_6387-_WNDPROC@16
	.stabs "P:443=*44",128,0,0,-128
	.stabn 192,0,0,.L_6388-_WNDPROC@16
	.stabn 192,0,0,.L_638A-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_6392-_WNDPROC@16
	.stabn 224,0,0,.L_6393-_WNDPROC@16
	.stabn 224,0,0,.L_6394-_WNDPROC@16
	.stabn 224,0,0,.L_6395-_WNDPROC@16
	.stabs "P:444=*44",128,0,0,-128
	.stabn 192,0,0,.L_6396-_WNDPROC@16
	.stabn 192,0,0,.L_6398-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63A0-_WNDPROC@16
	.stabn 224,0,0,.L_63A1-_WNDPROC@16
	.stabn 224,0,0,.L_63A2-_WNDPROC@16
	.stabn 224,0,0,.L_63A3-_WNDPROC@16
	.stabs "P:445=*44",128,0,0,-128
	.stabn 192,0,0,.L_63A4-_WNDPROC@16
	.stabn 192,0,0,.L_63A6-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63AE-_WNDPROC@16
	.stabn 224,0,0,.L_63AF-_WNDPROC@16
	.stabn 224,0,0,.L_63B0-_WNDPROC@16
	.stabn 224,0,0,.L_63B1-_WNDPROC@16
	.stabs "P:446=*44",128,0,0,-128
	.stabn 192,0,0,.L_63B2-_WNDPROC@16
	.stabn 192,0,0,.L_63B4-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63BC-_WNDPROC@16
	.stabn 224,0,0,.L_63BD-_WNDPROC@16
	.stabn 224,0,0,.L_63BE-_WNDPROC@16
	.stabn 224,0,0,.L_63BF-_WNDPROC@16
	.stabs "P:447=*44",128,0,0,-128
	.stabn 192,0,0,.L_63C0-_WNDPROC@16
	.stabn 192,0,0,.L_63C2-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63CA-_WNDPROC@16
	.stabn 224,0,0,.L_63CB-_WNDPROC@16
	.stabn 224,0,0,.L_63CC-_WNDPROC@16
	.stabn 224,0,0,.L_63CD-_WNDPROC@16
	.stabs "P:448=*44",128,0,0,-128
	.stabn 192,0,0,.L_63CE-_WNDPROC@16
	.stabn 192,0,0,.L_63CF-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63D7-_WNDPROC@16
	.stabn 224,0,0,.L_63D8-_WNDPROC@16
	.stabn 224,0,0,.L_63D9-_WNDPROC@16
	.stabn 224,0,0,.L_63DA-_WNDPROC@16
	.stabs "P:449=*44",128,0,0,-128
	.stabn 192,0,0,.L_63DB-_WNDPROC@16
	.stabn 192,0,0,.L_63DC-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63E4-_WNDPROC@16
	.stabn 224,0,0,.L_63E5-_WNDPROC@16
	.stabn 224,0,0,.L_63E6-_WNDPROC@16
	.stabn 224,0,0,.L_63E7-_WNDPROC@16
	.stabs "P:450=*44",128,0,0,-128
	.stabn 192,0,0,.L_63E8-_WNDPROC@16
	.stabn 192,0,0,.L_63EA-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63F1-_WNDPROC@16
	.stabn 224,0,0,.L_63F2-_WNDPROC@16
	.stabn 224,0,0,.L_63F3-_WNDPROC@16
	.stabn 224,0,0,.L_63F4-_WNDPROC@16
	.stabs "P:451=*44",128,0,0,-128
	.stabn 192,0,0,.L_63F5-_WNDPROC@16
	.stabn 192,0,0,.L_63F7-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_63FF-_WNDPROC@16
	.stabn 224,0,0,.L_6400-_WNDPROC@16
	.stabn 224,0,0,.L_6401-_WNDPROC@16
	.stabn 224,0,0,.L_6402-_WNDPROC@16
	.stabs "P:452=*44",128,0,0,-128
	.stabn 192,0,0,.L_6403-_WNDPROC@16
	.stabn 192,0,0,.L_6405-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_640C-_WNDPROC@16
	.stabn 224,0,0,.L_640D-_WNDPROC@16
	.stabn 224,0,0,.L_640E-_WNDPROC@16
	.stabn 224,0,0,.L_640F-_WNDPROC@16
	.stabs "P:453=*44",128,0,0,-128
	.stabn 192,0,0,.L_6410-_WNDPROC@16
	.stabn 192,0,0,.L_6411-_WNDPROC@16
	.stabs "IERR:8",128,0,0,-132
	.stabn 192,0,0,.L_6419-_WNDPROC@16
	.stabn 224,0,0,.L_641A-_WNDPROC@16
	.stabn 224,0,0,.L_641B-_WNDPROC@16
	.stabn 224,0,0,.L_641C-_WNDPROC@16
	.stabn 192,0,0,.L_641F-_WNDPROC@16
	.stabn 224,0,0,.L_6421-_WNDPROC@16
	.stabn 192,0,0,.L_6424-_WNDPROC@16
	.stabn 224,0,0,.L_6425-_WNDPROC@16
	.stabs "SFILE:13",128,0,0,-136
	.stabs "PZTEMP:454=*4",128,0,0,-168
	.stabn 192,0,0,.L_642A-_WNDPROC@16
	.stabn 192,0,0,.L_642D-_WNDPROC@16
	.stabn 224,0,0,.L_642E-_WNDPROC@16
	.stabs "N:1",128,0,0,-184
	.stabn 192,0,0,.L_642F-_WNDPROC@16
	.stabn 192,0,0,.L_6435-_WNDPROC@16
	.stabn 192,0,0,.L_6438-_WNDPROC@16
	.stabn 224,0,0,.L_6439-_WNDPROC@16
	.stabn 224,0,0,.L_643A-_WNDPROC@16
	.stabn 224,0,0,.L_643B-_WNDPROC@16
	.stabn 192,0,0,.L_6441-_WNDPROC@16
	.stabn 224,0,0,.L_6443-_WNDPROC@16
	.stabn 192,0,0,.L_6445-_WNDPROC@16
	.stabn 224,0,0,.L_644A-_WNDPROC@16
	.stabn 224,0,0,.L_644C-_WNDPROC@16
	.stabn 224,0,0,.L_644D-_WNDPROC@16
	.stabn 192,0,0,.L_6450-_WNDPROC@16
	.stabn 192,0,0,.L_6453-_WNDPROC@16
	.stabn 224,0,0,.L_6454-_WNDPROC@16
	.stabn 224,0,0,.L_6455-_WNDPROC@16
	.stabn 192,0,0,.L_6458-_WNDPROC@16
	.stabn 224,0,0,.L_6459-_WNDPROC@16
	.stabn 224,0,0,.L_645A-_WNDPROC@16
	.stabn 192,0,0,.L_645D-_WNDPROC@16
	.stabn 224,0,0,.L_645E-_WNDPROC@16
	.stabn 224,0,0,.L_6255-_WNDPROC@16
.L_658F:
	.stabs "",36,0,0,.L_658F-_WNDPROC@16

.section .bss
.balign 8
	.lcomm	_Lt_6476,8

.section .text
	.stabs "WINMAIN:F7",36,0,630,_WINMAIN@0
.balign 16

.globl _WINMAIN@0
_WINMAIN@0:
	push ebp
	mov ebp, esp
	sub esp, 104
	push ebx
	.stabn 68,0,630,_WINMAIN@0-_WINMAIN@0
.L_6590:
.L_65BE:
##   dim tMsg as MSG
	lea eax, [ebp-28]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 7
	rep stosd
	pop edi
	pop eax
.stabn 68,0,632,.L_65BE-_WINMAIN@0
.L_65BF:
##   dim tcls as WNDCLASS
	lea eax, [ebp-68]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 10
	rep stosd
	pop edi
	pop eax
.stabn 68,0,633,.L_65BF-_WINMAIN@0
.L_65C0:
##   dim as HWND hWnd  
	mov dword ptr [ebp-72], 0
.stabn 68,0,634,.L_65C0-_WINMAIN@0
.L_65C1:
##   with tcls
.L_6592:
##    .style         = CS_HREDRAW or CS_VREDRAW
	mov dword ptr [ebp-68], 3
.stabn 68,0,639,.L_65C1-_WINMAIN@0
.L_65C2:
##    .lpfnWndProc   = @WndProc
	mov eax, offset _WNDPROC@16
	mov dword ptr [ebp-64], eax
.stabn 68,0,640,.L_65C2-_WINMAIN@0
.L_65C3:
##    .cbClsExtra    = 0
	mov dword ptr [ebp-60], 0
.stabn 68,0,641,.L_65C3-_WINMAIN@0
.L_65C4:
##    .cbWndExtra    = 0
	mov dword ptr [ebp-56], 0
.stabn 68,0,642,.L_65C4-_WINMAIN@0
.L_65C5:
##    .hInstance     = g_AppInstance
	mov eax, dword ptr [_G_APPINSTANCE]
	mov dword ptr [ebp-52], eax
.stabn 68,0,643,.L_65C5-_WINMAIN@0
.L_65C6:
##    .hIcon         = LoadIcon( g_AppInstance, "FB_PROGRAM_ICON" )
	push offset _Lt_6593
	push dword ptr [_G_APPINSTANCE]
	call _LoadIconA@8
	mov dword ptr [ebp-48], eax
.stabn 68,0,644,.L_65C6-_WINMAIN@0
.L_65C7:
##    .hCursor       = LoadCursor( NULL, IDC_ARROW  [Macro Expansion: MAKEINTRESOURCE(MAKEINTRESOURCEA(32512)cast(LPSTR, cast(ULONG_PTR, cast(WORD, (32512)))) ]  )
	push 32512
	push 0
	call _LoadCursorA@8
	mov dword ptr [ebp-44], eax
.stabn 68,0,645,.L_65C7-_WINMAIN@0
.L_65C8:
##    .hbrBackground = GetSysColorBrush( COLOR_BTNFACE )
	push 15
	call _GetSysColorBrush@4
	mov dword ptr [ebp-40], eax
.stabn 68,0,646,.L_65C8-_WINMAIN@0
.L_65C9:
##    .lpszMenuName  = NULL
	mov dword ptr [ebp-36], 0
.stabn 68,0,647,.L_65C9-_WINMAIN@0
.L_65CA:
##    .lpszClassName = strptr( sAppName )
	mov eax, dword ptr [_SAPPNAME]
	mov dword ptr [ebp-32], eax
.stabn 68,0,648,.L_65CA-_WINMAIN@0
.L_65CB:
##   end with
.L_6594:
##   if( RegisterClass( @tcls ) = FALSE ) then
	lea eax, [ebp-68]
	push eax
	call _RegisterClassA@4
	movzx eax, ax
	test eax, eax
	jne .L_6596
.L_6597:
.stabn 68,0,652,.L_65CB-_WINMAIN@0
.L_65CC:
##    MessageBox( null, "Failed to register wcls!", sAppName, MB_ICONINFORMATION )
	push 64
	push dword ptr [_SAPPNAME]
	push offset _Lt_6598
	push 0
	call _MessageBoxA@16
.stabn 68,0,653,.L_65CC-_WINMAIN@0
.L_65CD:
##    exit sub
	jmp .L_6591
.stabn 68,0,654,.L_65CD-_WINMAIN@0
.L_65CE:
##   end if
.L_6599:
.L_6596:
.L_6595:
##   var hMenu = CreateMainMenu()
	call _CREATEMAINMENU@0
	mov dword ptr [ebp-76], eax
.stabn 68,0,660,.L_65CE-_WINMAIN@0
.L_65CF:
##   var hAcceleratos = CreateMainAccelerators()
	call _CREATEMAINACCELERATORS@0
	mov dword ptr [ebp-80], eax
.stabn 68,0,661,.L_65CF-_WINMAIN@0
.L_65D0:
##   hWnd = CreateWindowEx(WS_EX_COMPOSITED,sAppName,sAppName, WS_TILEDWINDOW or WS_CLIPCHILDREN, _   200,200,g_WndWid,g_WndHei,null,hMenu,g_AppInstance,0)
	push 0
	push dword ptr [_G_APPINSTANCE]
	push dword ptr [ebp-76]
	push 0
	push dword ptr [_G_WNDHEI]
	push dword ptr [_G_WNDWID]
	push 200
	push 200
	push 47120384
	push dword ptr [_SAPPNAME]
	push dword ptr [_SAPPNAME]
	push 33554432
	call _CreateWindowExA@48
	mov dword ptr [ebp-72], eax
.stabn 68,0,663,.L_65D0-_WINMAIN@0
.L_65D1:
##   ShowWindow( hWnd , SW_SHOW )
	push 5
	push dword ptr [ebp-72]
	call _ShowWindow@8
.stabn 68,0,671,.L_65D1-_WINMAIN@0
.L_65D2:
##   UpdateWindow( hWnd )
	push dword ptr [ebp-72]
	call _UpdateWindow@4
.stabn 68,0,672,.L_65D2-_WINMAIN@0
.L_65D3:
##   dim as HWND hOldFocus = cast(HWND,-1)
	mov dword ptr [ebp-84], 4294967295
.stabn 68,0,674,.L_65D3-_WINMAIN@0
.L_65D4:
##   while( GetMessage( @tMsg, NULL, 0, 0 ) <> FALSE )    
.L_659A:
	push 0
	push 0
	push 0
	lea eax, [ebp-28]
	push eax
	call _GetMessageA@16
	test eax, eax
	je .L_659B
.L_659C:
.stabn 68,0,675,.L_65D4-_WINMAIN@0
.L_65D5:
##      if TranslateAccelerator( hWnd , hAcceleratos , @tMsg ) then continue while      
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp-80]
	push dword ptr [ebp-72]
	call _TranslateAcceleratorA@12
	test eax, eax
	je .L_659E
.L_659F:
	jmp .L_659A
.L_659E:
.L_65A0:
.stabn 68,0,676,.L_65D5-_WINMAIN@0
.L_65D6:
##      if IsDialogMessage( GetActiveWindow() , @tMsg ) then continue while
	lea eax, [ebp-28]
	push eax
	call _GetActiveWindow@0
	push eax
	call _IsDialogMessageA@8
	test eax, eax
	je .L_65A2
.L_65A3:
	jmp .L_659A
.L_65A2:
.L_65A4:
.stabn 68,0,677,.L_65D6-_WINMAIN@0
.L_65D7:
##      TranslateMessage( @tMsg )
	lea eax, [ebp-28]
	push eax
	call _TranslateMessage@4
.stabn 68,0,678,.L_65D7-_WINMAIN@0
.L_65D8:
##      DispatchMessage( @tMsg )    
	lea eax, [ebp-28]
	push eax
	call _DispatchMessageA@4
.stabn 68,0,679,.L_65D8-_WINMAIN@0
.L_65D9:
##      ProcessMessage( tMsg )
	lea eax, [ebp-28]
	push eax
	call _PROCESSMESSAGE@4
.stabn 68,0,680,.L_65D9-_WINMAIN@0
.L_65DA:
##      var hFocus = GetFocus()
	call _GetFocus@0
	mov dword ptr [ebp-88], eax
.stabn 68,0,681,.L_65DA-_WINMAIN@0
.L_65DB:
##      if hFocus <> hOldFocus then
	mov eax, dword ptr [ebp-84]
	cmp dword ptr [ebp-88], eax
	je .L_65A6
.L_65A7:
.stabn 68,0,682,.L_65DB-_WINMAIN@0
.L_65DC:
##         hOldFocus = hFocus
	mov eax, dword ptr [ebp-88]
	mov dword ptr [ebp-84], eax
.stabn 68,0,683,.L_65DC-_WINMAIN@0
.L_65DD:
##         if g_hContainer andalso g_hSearch then
	cmp dword ptr [_G_HCONTAINER], 0
	je .L_65A8
	cmp dword ptr [_G_HSEARCH], 0
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-92], eax
	jmp .L_65BA
.L_65A8:
	mov dword ptr [ebp-92], 0
.L_65BA:
	cmp dword ptr [ebp-92], 0
	je .L_65AB
.L_65AC:
.stabn 68,0,684,.L_65DD-_WINMAIN@0
.L_65DF:
##            if hFocus=NULL orelse (hFocus <> g_hSearch andalso hFocus <> g_hContainer andalso hFocus <> CTL(wcEdit) [Macro Expansion: g_tMainCtx.hCtl(wcEdit).hwnd ] ) then
	cmp dword ptr [ebp-88], 0
	je .L_65B1
	mov eax, dword ptr [_G_HSEARCH]
	cmp dword ptr [ebp-88], eax
	je .L_65AD
	mov eax, dword ptr [ebp-88]
	cmp eax, dword ptr [_G_HCONTAINER]
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-96], ebx
	jmp .L_65BC
.L_65AD:
	mov dword ptr [ebp-96], 0
.L_65BC:
	cmp dword ptr [ebp-96], 0
	je .L_65AF
	mov ebx, dword ptr [ebp-88]
	cmp ebx, dword ptr [_G_TMAINCTX+264]
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-100], eax
	jmp .L_65BD
.L_65AF:
	mov dword ptr [ebp-100], 0
.L_65BD:
	mov eax, dword ptr [ebp-100]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-104], eax
	jmp .L_65BB
.L_65B1:
	mov dword ptr [ebp-104], -1
.L_65BB:
	cmp dword ptr [ebp-104], 0
	je .L_65B4
.L_65B5:
.stabn 68,0,685,.L_65DF-_WINMAIN@0
.L_65E3:
##               ShowWindow( g_hContainer , SW_HIDE )
	push 0
	push dword ptr [_G_HCONTAINER]
	call _ShowWindow@8
.stabn 68,0,686,.L_65E3-_WINMAIN@0
.L_65E4:
##            end if
.L_65B6:
.L_65B4:
.L_65B3:
##         end if
.L_65B7:
.L_65AB:
.L_65AA:
##      end if
.L_65B8:
.L_65A6:
.L_65A5:
##   wend    
.L_65B9:
	jmp .L_659A
.L_659B:
.stabn 68,0,690,.L_65E4-_WINMAIN@0
.L_65E5:
.L_6591:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,692,.L_6591-_WINMAIN@0
	.stabs "TMSG:307",128,0,0,-28
	.stabs "TAGWNDCLASSA:Tt455=s40STYLE:8,0,32;LPFNWNDPROC:456=*457=f1,32,32;CBCLSEXTRA:1,64,32;CBWNDEXTRA:1,96,32;HINSTANCE:458=*297,128,32;HICON:459=*299,160,32;HCURSOR:460=*299,192,32;HBRBACKGROUND:461=*302,224,32;LPSZMENUNAME:462=*4,256,32;LPSZCLASSNAME:463=*4,288,32;;",128,0,0,0
	.stabs "TCLS:455",128,0,0,-68
	.stabs "HWND:464=*21",128,0,0,-72
	.stabs "HMENU:465=*324",128,0,0,-76
	.stabs "HACCELERATOS:466=*419",128,0,0,-80
	.stabs "HOLDFOCUS:467=*21",128,0,0,-84
	.stabn 192,0,0,.L_6590-_WINMAIN@0
	.stabn 192,0,0,.L_6592-_WINMAIN@0
	.stabn 224,0,0,.L_6594-_WINMAIN@0
	.stabn 192,0,0,.L_6597-_WINMAIN@0
	.stabn 224,0,0,.L_6599-_WINMAIN@0
	.stabs "HFOCUS:468=*21",128,0,0,-88
	.stabn 192,0,0,.L_659C-_WINMAIN@0
	.stabn 192,0,0,.L_659F-_WINMAIN@0
	.stabn 224,0,0,.L_65A0-_WINMAIN@0
	.stabn 192,0,0,.L_65A3-_WINMAIN@0
	.stabn 224,0,0,.L_65A4-_WINMAIN@0
	.stabn 192,0,0,.L_65A7-_WINMAIN@0
	.stabn 192,0,0,.L_65AC-_WINMAIN@0
	.stabn 192,0,0,.L_65B5-_WINMAIN@0
	.stabn 224,0,0,.L_65B6-_WINMAIN@0
	.stabn 224,0,0,.L_65B7-_WINMAIN@0
	.stabn 224,0,0,.L_65B8-_WINMAIN@0
	.stabn 224,0,0,.L_65B9-_WINMAIN@0
	.stabn 224,0,0,.L_6591-_WINMAIN@0
.L_65E6:
	.stabs "",36,0,0,.L_65E6-_WINMAIN@0
	.stabs "BEFOREEXIT:F1",36,0,702,_BEFOREEXIT@4
	.stabs "DWCTRLTYPE:p8",160,0,0,8
.balign 16

.globl _BEFOREEXIT@4
_BEFOREEXIT@4:
	push ebp
	mov ebp, esp
	sub esp, 4
	.stabn 68,0,702,_BEFOREEXIT@4-_BEFOREEXIT@4
	mov dword ptr [ebp-4], 0
.L_65EE:
.L_65F0:
##   GetClipboard() : system() : return 0 'never? :P
	call _GETCLIPBOARD@0
	push eax
	call _fb_hStrDelTemp@4
	push 0
	call _fb_End@4
	mov dword ptr [ebp-4], 0
.stabn 68,0,703,.L_65F0-_BEFOREEXIT@4
.L_65F1:
.L_65EF:
	mov eax, dword ptr [ebp-4]
	mov esp, ebp
	pop ebp
	ret 4
	.stabn 68,0,704,.L_65EF-_BEFOREEXIT@4
	.stabn 192,0,0,.L_65EE-_BEFOREEXIT@4
	.stabn 224,0,0,.L_65EF-_BEFOREEXIT@4
.L_65F2:
	.stabs "",36,0,0,.L_65F2-_BEFOREEXIT@4
	.stabs "{MODLEVEL}:f7",36,0,1,_fb_ctor__legoscript
.balign 16
_fb_ctor__legoscript:
	push ebp
	mov ebp, esp
	sub esp, 40
	push ebx
	.stabn 68,0,1,_fb_ctor__legoscript-_fb_ctor__legoscript
.L_0003:
###cmdline "-g"
###define __Main "LegoScript"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STDARG.BI",132,0,0,.L_65FB
.L_65FB:
.L_65FC:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\_MINGW.BI",132,0,0,.L_65FD
.L_65FD:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINAPIFAMILY.BI",132,0,0,.L_65FE
.L_65FE:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINDEF.BI",132,0,0,.L_65FF
.L_65FF:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\BASETSD.BI",132,0,0,.L_6600
.L_6600:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINDEF.BI",132,0,0,.L_6601
.L_6601:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STDDEF.BI",132,0,0,.L_6602
.L_6602:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\MEM.BI",132,0,0,.L_6603
.L_6603:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\_MINGW_UNICODE.BI",132,0,0,.L_6604
.L_6604:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WIN32\\CTYPE.BI",132,0,0,.L_6605
.L_6605:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\CTYPE.BI",132,0,0,.L_6606
.L_6606:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\APISET.BI",132,0,0,.L_6607
.L_6607:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\BITS\\LOCALE.BI",132,0,0,.L_6608
.L_6608:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\LOCALE.BI",132,0,0,.L_6609
.L_6609:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\CRTDEFS.BI",132,0,0,.L_660A
.L_660A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\SETJMP.BI",132,0,0,.L_660B
.L_660B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\LONG.BI",132,0,0,.L_660C
.L_660C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WIN32\\STDLIB.BI",132,0,0,.L_660D
.L_660D:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STDLIB.BI",132,0,0,.L_660E
.L_660E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\ERRNO.BI",132,0,0,.L_660F
.L_660F:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\INTRIN.BI",132,0,0,.L_6610
.L_6610:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\GUIDDEF.BI",132,0,0,.L_6611
.L_6611:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINNT.BI",132,0,0,.L_6612
.L_6612:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\KTMTYPES.BI",132,0,0,.L_6613
.L_6613:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINERROR.BI",132,0,0,.L_6614
.L_6614:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINBASE.BI",132,0,0,.L_6615
.L_6615:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINGDI.BI",132,0,0,.L_6616
.L_6616:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINUSER.BI",132,0,0,.L_6617
.L_6617:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINNLS.BI",132,0,0,.L_6618
.L_6618:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINCON.BI",132,0,0,.L_6619
.L_6619:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINVER.BI",132,0,0,.L_661A
.L_661A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\REASON.BI",132,0,0,.L_661B
.L_661B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINREG.BI",132,0,0,.L_661C
.L_661C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINNETWK.BI",132,0,0,.L_661D
.L_661D:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINSVC.BI",132,0,0,.L_661E
.L_661E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\MCX.BI",132,0,0,.L_661F
.L_661F:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\IMM.BI",132,0,0,.L_6620
.L_6620:
###include once "windows.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\PRSHT.BI",132,0,0,.L_6621
.L_6621:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPC.BI",132,0,0,.L_6622
.L_6622:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCDCE.BI",132,0,0,.L_6623
.L_6623:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCDCEP.BI",132,0,0,.L_6624
.L_6624:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCNSI.BI",132,0,0,.L_6625
.L_6625:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCNTERR.BI",132,0,0,.L_6626
.L_6626:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCASYNC.BI",132,0,0,.L_6627
.L_6627:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCNSIP.BI",132,0,0,.L_6628
.L_6628:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RPCNDR.BI",132,0,0,.L_6629
.L_6629:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WTYPESBASE.BI",132,0,0,.L_662A
.L_662A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\UNKNWNBASE.BI",132,0,0,.L_662B
.L_662B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OBJIDLBASE.BI",132,0,0,.L_662C
.L_662C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\COMMCTRL.BI",132,0,0,.L_662D
.L_662D:
###include once "win\commctrl.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\COMMDLG.BI",132,0,0,.L_662E
.L_662E:
###include once "win\commdlg.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\CDERR.BI",132,0,0,.L_662F
.L_662F:
###include once "win\cderr.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\CGUID.BI",132,0,0,.L_6630
.L_6630:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\COMBASEAPI.BI",132,0,0,.L_6631
.L_6631:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WTYPES.BI",132,0,0,.L_6632
.L_6632:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OBJIDL.BI",132,0,0,.L_6633
.L_6633:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OLE-COMMON.BI",132,0,0,.L_6634
.L_6634:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OLEIDL.BI",132,0,0,.L_6635
.L_6635:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SERVPROV.BI",132,0,0,.L_6636
.L_6636:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OAIDL.BI",132,0,0,.L_6637
.L_6637:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\MSXML.BI",132,0,0,.L_6638
.L_6638:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\URLMON.BI",132,0,0,.L_6639
.L_6639:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\PROPIDL.BI",132,0,0,.L_663A
.L_663A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OBJBASE.BI",132,0,0,.L_663B
.L_663B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OLEAUTO.BI",132,0,0,.L_663C
.L_663C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OLE2.BI",132,0,0,.L_663D
.L_663D:
###include once "win\ole2.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\RICHEDIT.BI",132,0,0,.L_663E
.L_663E:
###include once "win\Richedit.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\UXTHEME.BI",132,0,0,.L_663F
.L_663F:
###include once "win\uxtheme.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHTYPES.BI",132,0,0,.L_6640
.L_6640:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINCRYPT.BI",132,0,0,.L_6641
.L_6641:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\BCRYPT.BI",132,0,0,.L_6642
.L_6642:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\NCRYPT.BI",132,0,0,.L_6643
.L_6643:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\WINCRYPT.BI",132,0,0,.L_6644
.L_6644:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\ISGUIDS.BI",132,0,0,.L_6645
.L_6645:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OCIDL.BI",132,0,0,.L_6646
.L_6646:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\DOCOBJ.BI",132,0,0,.L_6647
.L_6647:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\EXDISP.BI",132,0,0,.L_6648
.L_6648:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHLDISP.BI",132,0,0,.L_6649
.L_6649:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\KNOWNFOLDERS.BI",132,0,0,.L_664A
.L_664A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHLGUID.BI",132,0,0,.L_664B
.L_664B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\COMCAT.BI",132,0,0,.L_664C
.L_664C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\STRUCTUREDQUERYCONDITION.BI",132,0,0,.L_664D
.L_664D:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\PROPKEYDEF.BI",132,0,0,.L_664E
.L_664E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\PROPSYS.BI",132,0,0,.L_664F
.L_664F:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OBJECTARRAY.BI",132,0,0,.L_6650
.L_6650:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHELLAPI.BI",132,0,0,.L_6651
.L_6651:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHOBJIDL.BI",132,0,0,.L_6652
.L_6652:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\DIMM.BI",132,0,0,.L_6653
.L_6653:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\OLECTL.BI",132,0,0,.L_6654
.L_6654:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\MSHTMHST.BI",132,0,0,.L_6655
.L_6655:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\MSHTMLC.BI",132,0,0,.L_6656
.L_6656:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHLOBJ.BI",132,0,0,.L_6657
.L_6657:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\SHLWAPI.BI",132,0,0,.L_6658
.L_6658:
###include once "win\shlwapi.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STRING.BI",132,0,0,.L_6659
.L_6659:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\MATH.BI",132,0,0,.L_665A
.L_665A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\SYS\\WIN32\\TYPES.BI",132,0,0,.L_665B
.L_665B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WIN32\\TIME.BI",132,0,0,.L_665C
.L_665C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\TIME.BI",132,0,0,.L_665D
.L_665D:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WIN32\\STDIO.BI",132,0,0,.L_665E
.L_665E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STDIO.BI",132,0,0,.L_665F
.L_665F:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\STDINT.BI",132,0,0,.L_6660
.L_6660:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WIN32\\WCHAR.BI",132,0,0,.L_6661
.L_6661:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\WCHAR.BI",132,0,0,.L_6662
.L_6662:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\CRT\\IO.BI",132,0,0,.L_6663
.L_6663:
###include once "crt.bi"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\FBTHREAD.BI",132,0,0,.L_6664
.L_6664:
###include once "fbthread.bi"
###undef File_Open
###define Errorf(p...)
###define Debugf(p...)
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_6665
.L_6665:
##end enum
##enum StatusParts
##   spStatus
##   spCursor
##end enum
##enum WindowControls
##  wcMain
##  wcBtnClose
##  wcTabs
##  wcButton  
##  wcLines
##  wcEdit
##  wcRadOutput
##  wcRadQuery
##  wcBtnExec
##  wcBtnLoad
##  wcBtnSave
##  wcBtnMinOut
##  wcOutput
##  wcQuery
##  wcStatus
##  wcLast
##end enum
##enum WindowFonts
##   wfDefault
##   wfEdit
##   wfStatus
##   wfArrows
##   wfLast
##end enum
##enum Accelerators
##   acFirst = 9100-1
##   acToggleMenu   
##   acFilterDump
###define CTL(_I) g_tMainCtx.hCtl(_I).hwnd
##dim shared as boolean g_bChangingFont = false
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\COLOREDBUTTONS.BAS",132,0,0,.L_6666
.L_6666:
###include Once "LSModules\ColoredButtons.bas"
###include once "LSModules\TryCatch.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LAYOUT.BAS",132,0,0,.L_6667
.L_6667:
###include once "LSModules\Layout.bas"
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_6668
.L_6668:
##end type
##type FormContext
##  as FormStruct        tForm        'Form structure
##  as ControlStruct     hCTL(wcLast) 'controls
##  as FontStruct        hFnt(wfLast) 'fonts  
##end type
##type TabStruct
##   hEdit      as hwnd
##   sFilename  as string
##   iLinked    as long   = -1
##redim shared g_tTabs(0) as TabStruct 
	push 0
	push 0
	push 1
	push offset __ZN9TABSTRUCTD1Ev
	push offset __ZN9TABSTRUCTC1Ev
	push 20
	push offset _G_TTABS
	call _fb_ArrayRedimObj
	add esp, 28
.stabn 68,0,92,.L_65FC-_fb_ctor__legoscript
.L_6669:
##dim shared as long g_iTabCount = 1 , g_iCurTab = 0
##const g_sMainFont  = "verdana" , g_sFixedFont = "consolas" , g_sArrowFont = "Wingdings 3"
##dim shared as FormContext g_tMainCtx
##dim shared as hinstance g_AppInstance  'instance
##dim shared as string sAppName        'AppName (window title 'prefix')
##dim shared as HMENU g_WndMenu        'Main Menu handle
##dim shared as long g_WndWid=640 , g_WndHei=480
##dim shared g_hCurMenu as any ptr , g_CurItemID as long , g_CurItemState as long
##dim shared as HANDLE g_hResizeEvent
##dim shared as hwnd g_GfxHwnd
##dim shared as byte g_DoQuit , g_Show3D , g_Dock3D
##dim shared as string g_CurrentFilePath
##declare sub DockGfxWindow()
##declare sub File_SaveAs()
##declare sub RichEdit_Replace( hCtl as HWND , iStart as long , iEnd as long , sText as string , bKeepSel as long = true )
###define GiveUp(_N) return false
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\VBCOMPAT.BI",132,0,0,.L_666A
.L_666A:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\DATETIME.BI",132,0,0,.L_666B
.L_666B:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\VBCOMPAT.BI",132,0,0,.L_666C
.L_666C:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\STRING.BI",132,0,0,.L_666D
.L_666D:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\VBCOMPAT.BI",132,0,0,.L_666E
.L_666E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\FILE.BI",132,0,0,.L_666F
.L_666F:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\LOADLDR.BAS",132,0,0,.L_6670
.L_6670:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\INCLUDE\\STRUCTS.BAS",132,0,0,.L_6671
.L_6671:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\INCLUDE\\PARTPATHS.BAS",132,0,0,.L_6672
.L_6672:
.L_245F:
	push 0
	push -1
	push 21
	push offset _Lt_2461
	push -1
	push 11
	push offset _Lt_2460
	call _fb_StrAllocTempDescZEx@8
	push eax
	call _fb_GetEnviron@4
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,28,.L_6669-_fb_ctor__legoscript
.L_6673:
.L_2463:
	mov dword ptr [ebp-28], 1
.L_2467:
.L_2468:
.stabn 68,0,29,.L_6673-_fb_ctor__legoscript
.L_6674:
	push 0
	push -1
	push 0
	mov eax, dword ptr [ebp-28]
	push dword ptr [_G_PZPATHS+eax*4]
	push -1
	lea eax, [ebp-12]
	push eax
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-40]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-28]
	imul eax, 12
	lea ebx, [_G_SPATHLIST+eax]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,30,.L_6674-_fb_ctor__legoscript
.L_6675:
.L_246A:
.L_2465:
	inc dword ptr [ebp-28]
.L_2464:
	cmp dword ptr [ebp-28], 8
	jle .L_2467
.L_2466:
.L_246B:
.stabn 68,0,31,.L_6675-_fb_ctor__legoscript
.L_6676:
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrDelete@4
.L_246C:
.stabn 68,0,32,.L_6676-_fb_ctor__legoscript
.L_6677:
.L_2470:
	push 0
	push -1
	push 36
	push offset _Lt_2471
	push -1
	push 11
	push offset _Lt_2460
	call _fb_StrAllocTempDescZEx@8
	push eax
	call _fb_GetEnviron@4
	push eax
	mov dword ptr [ebp-24], 0
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	lea eax, [ebp-24]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,44,.L_6677-_fb_ctor__legoscript
.L_6678:
.L_2473:
	mov dword ptr [ebp-28], 1
.L_2477:
.L_2478:
.stabn 68,0,45,.L_6678-_fb_ctor__legoscript
.L_6679:
	push 0
	push -1
	push 0
	mov eax, dword ptr [ebp-28]
	push dword ptr [_G_PZSHADOWPATHS+eax*4]
	push -1
	lea eax, [ebp-12]
	push eax
	mov dword ptr [ebp-40], 0
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-40]
	push eax
	call _fb_StrConcat@20
	push eax
	push -1
	mov eax, dword ptr [ebp-28]
	imul eax, 12
	lea ebx, [_G_SSHADOWPATHLIST+eax]
	push ebx
	call _fb_StrAssign@20
.stabn 68,0,46,.L_6679-_fb_ctor__legoscript
.L_667A:
.L_247A:
.L_2475:
	inc dword ptr [ebp-28]
.L_2474:
	cmp dword ptr [ebp-28], 3
	jle .L_2477
.L_2476:
.L_247B:
.stabn 68,0,47,.L_667A-_fb_ctor__legoscript
.L_667B:
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrDelete@4
.L_247C:
.stabn 68,0,48,.L_667B-_fb_ctor__legoscript
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\LOADLDR.BAS",132,0,0,.L_667C
.L_667C:
.L_667D:
	push 0
	push 0
	push 1
	push 0
	push -1
	push 8
	push offset _G_TMODELS
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,29,.L_667D-_fb_ctor__legoscript
.L_667E:
	push 0
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push offset _G_SFILENAMES
	call _fb_StrAssign@20
.stabn 68,0,31,.L_667E-_fb_ctor__legoscript
.L_667F:
	push 0
	push -1
	push 0
	push 1
	call _fb_CHR
	add esp, 8
	push eax
	push -1
	push offset _G_SFILESTOLOAD
	call _fb_StrAssign@20
.stabn 68,0,32,.L_667F-_fb_ctor__legoscript
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\PARSERFUNCTIONS.BAS",132,0,0,.L_6680
.L_6680:
.L_6681:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\LOADLDR.BAS",132,0,0,.L_6682
.L_6682:
###include "Loader\LoadLDR.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\INCLUDE\\COLOURS.BAS",132,0,0,.L_6683
.L_6683:
.L_34BF:
	mov dword ptr [_G_COLOURS], 4281608731
.stabn 68,0,444,.L_6681-_fb_ctor__legoscript
.L_6684:
	mov dword ptr [_G_COLOURS+4], 4289223198
.stabn 68,0,444,.L_6684-_fb_ctor__legoscript
.L_6685:
	mov dword ptr [_G_COLOURS+8], 4281042176
.stabn 68,0,444,.L_6685-_fb_ctor__legoscript
.L_6686:
	mov dword ptr [_G_COLOURS+12], 4288650502
.stabn 68,0,444,.L_6686-_fb_ctor__legoscript
.L_6687:
	mov dword ptr [_G_COLOURS+16], 4278190260
.stabn 68,0,444,.L_6687-_fb_ctor__legoscript
.L_6688:
	mov dword ptr [_G_COLOURS+20], 4288493011
.stabn 68,0,444,.L_6688-_fb_ctor__legoscript
.L_6689:
	mov dword ptr [_G_COLOURS+24], 4280562516
.stabn 68,0,444,.L_6689-_fb_ctor__legoscript
.L_668A:
	mov dword ptr [_G_COLOURS+28], 4287468170
.stabn 68,0,444,.L_668A-_fb_ctor__legoscript
.L_668B:
	mov dword ptr [_G_COLOURS+32], 4283783508
.stabn 68,0,444,.L_668B-_fb_ctor__legoscript
.L_668C:
	mov dword ptr [_G_COLOURS+36], 4292463511
.stabn 68,0,444,.L_668C-_fb_ctor__legoscript
.L_668D:
	mov dword ptr [_G_COLOURS+40], 4282493784
.stabn 68,0,444,.L_668D-_fb_ctor__legoscript
.L_668E:
	mov dword ptr [_G_COLOURS+44], 4288981504
.stabn 68,0,444,.L_668E-_fb_ctor__legoscript
.L_668F:
	mov dword ptr [_G_COLOURS+48], 4284575216
.stabn 68,0,444,.L_668F-_fb_ctor__legoscript
.L_6690:
	mov dword ptr [_G_COLOURS+52], 4290488822
.stabn 68,0,444,.L_6690-_fb_ctor__legoscript
.L_6691:
	mov dword ptr [_G_COLOURS+56], 4278896890
.stabn 68,0,444,.L_6691-_fb_ctor__legoscript
.L_6692:
	mov dword ptr [_G_COLOURS+60], 4294243572
.stabn 68,0,444,.L_6692-_fb_ctor__legoscript
.L_6693:
	mov dword ptr [_G_COLOURS+68], 4289255853
.stabn 68,0,444,.L_6693-_fb_ctor__legoscript
.L_6694:
	mov dword ptr [_G_COLOURS+72], 4286568191
.stabn 68,0,444,.L_6694-_fb_ctor__legoscript
.L_6695:
	mov dword ptr [_G_COLOURS+76], 4287412951
.stabn 68,0,444,.L_6695-_fb_ctor__legoscript
.L_6696:
	mov dword ptr [_G_COLOURS+80], 4292263599
.stabn 68,0,444,.L_6696-_fb_ctor__legoscript
.L_6697:
	mov dword ptr [_G_COLOURS+88], 4286652263
.stabn 68,0,444,.L_6697-_fb_ctor__legoscript
.L_6698:
	mov dword ptr [_G_COLOURS+92], 4288298510
.stabn 68,0,444,.L_6698-_fb_ctor__legoscript
.L_6699:
	mov dword ptr [_G_COLOURS+100], 4280515030
.stabn 68,0,444,.L_6699-_fb_ctor__legoscript
.L_669A:
	mov dword ptr [_G_COLOURS+104], 4285931408
.stabn 68,0,444,.L_669A-_fb_ctor__legoscript
.L_669B:
	mov dword ptr [_G_COLOURS+108], 4279814821
.stabn 68,0,444,.L_669B-_fb_ctor__legoscript
.L_669C:
	mov dword ptr [_G_COLOURS+112], 4284644745
.stabn 68,0,444,.L_669C-_fb_ctor__legoscript
.L_669D:
	mov dword ptr [_G_COLOURS+116], 4291665663
.stabn 68,0,444,.L_669D-_fb_ctor__legoscript
.L_669E:
	mov dword ptr [_G_COLOURS+120], 4290342560
.stabn 68,0,444,.L_669E-_fb_ctor__legoscript
.L_669F:
	mov dword ptr [_G_COLOURS+124], 4292781261
.stabn 68,0,444,.L_669F-_fb_ctor__legoscript
.L_66A0:
	mov dword ptr [_G_COLOURS+272], 4286825469
.stabn 68,0,444,.L_66A0-_fb_ctor__legoscript
.L_66A1:
	mov dword ptr [_G_COLOURS+276], 4289204874
.stabn 68,0,444,.L_66A1-_fb_ctor__legoscript
.L_66A2:
	mov dword ptr [_G_COLOURS+280], 4278792543
.stabn 68,0,444,.L_66A2-_fb_ctor__legoscript
.L_66A3:
	mov dword ptr [_G_COLOURS+284], 4288059030
.stabn 68,0,444,.L_66A3-_fb_ctor__legoscript
.L_66A4:
	mov dword ptr [_G_COLOURS+288], 4284769380
.stabn 68,0,444,.L_66A4-_fb_ctor__legoscript
.L_66A5:
	mov dword ptr [_G_COLOURS+292], 4291335795
.stabn 68,0,444,.L_66A5-_fb_ctor__legoscript
.L_66A6:
	mov dword ptr [_G_COLOURS+296], 4285908095
.stabn 68,0,444,.L_66A6-_fb_ctor__legoscript
.L_66A7:
	mov dword ptr [_G_COLOURS+308], 4291808510
.stabn 68,0,444,.L_66A7-_fb_ctor__legoscript
.L_66A8:
	mov dword ptr [_G_COLOURS+312], 4288006655
.stabn 68,0,444,.L_66A8-_fb_ctor__legoscript
.L_66A9:
	mov dword ptr [_G_COLOURS+336], 4283792810
.stabn 68,0,444,.L_66A9-_fb_ctor__legoscript
.L_66AA:
	mov dword ptr [_G_COLOURS+340], 4287699524
.stabn 68,0,444,.L_66AA-_fb_ctor__legoscript
.L_66AB:
	mov dword ptr [_G_COLOURS+344], 4282473851
.stabn 68,0,444,.L_66AB-_fb_ctor__legoscript
.L_66AC:
	mov dword ptr [_G_COLOURS+356], 4289157148
.stabn 68,0,444,.L_66AC-_fb_ctor__legoscript
.L_66AD:
	mov dword ptr [_G_COLOURS+368], 4284121275
.stabn 68,0,444,.L_66AD-_fb_ctor__legoscript
.L_66AE:
	mov dword ptr [_G_COLOURS+400], 4289050617
.stabn 68,0,444,.L_66AE-_fb_ctor__legoscript
.L_66AF:
	mov dword ptr [_G_COLOURS+440], 4288300582
.stabn 68,0,444,.L_66AF-_fb_ctor__legoscript
.L_66B0:
	mov dword ptr [_G_COLOURS+448], 4289487176
.stabn 68,0,444,.L_66B0-_fb_ctor__legoscript
.L_66B1:
	mov dword ptr [_G_COLOURS+460], 4280669367
.stabn 68,0,444,.L_66B1-_fb_ctor__legoscript
.L_66B2:
	mov dword ptr [_G_COLOURS+472], 4291614364
.stabn 68,0,444,.L_66B2-_fb_ctor__legoscript
.L_66B3:
	mov dword ptr [_G_COLOURS+480], 4287818462
.stabn 68,0,444,.L_66B3-_fb_ctor__legoscript
.L_66B4:
	mov dword ptr [_G_COLOURS+500], 4286031865
.stabn 68,0,444,.L_66B4-_fb_ctor__legoscript
.L_66B5:
	mov dword ptr [_G_COLOURS+512], 4282409389
.stabn 68,0,444,.L_66B5-_fb_ctor__legoscript
.L_66B6:
	mov dword ptr [_G_COLOURS+604], 4291348680
.stabn 68,0,444,.L_66B6-_fb_ctor__legoscript
.L_66B7:
	mov dword ptr [_G_COLOURS+764], 4278234364
.stabn 68,0,444,.L_66B7-_fb_ctor__legoscript
.L_66B8:
	mov dword ptr [_G_COLOURS+848], 4294427549
.stabn 68,0,444,.L_66B8-_fb_ctor__legoscript
.L_66B9:
	mov dword ptr [_G_COLOURS+864], 4279708551
.stabn 68,0,444,.L_66B9-_fb_ctor__legoscript
.L_66BA:
	mov dword ptr [_G_COLOURS+872], 4288107918
.stabn 68,0,444,.L_66BA-_fb_ctor__legoscript
.L_66BB:
	mov dword ptr [_G_COLOURS+876], 4288499286
.stabn 68,0,444,.L_66BB-_fb_ctor__legoscript
.L_66BC:
	mov dword ptr [_G_COLOURS+904], 4285328639
.stabn 68,0,444,.L_66BC-_fb_ctor__legoscript
.L_66BD:
	mov dword ptr [_G_COLOURS+928], 4292397431
.stabn 68,0,444,.L_66BD-_fb_ctor__legoscript
.L_66BE:
	mov dword ptr [_G_COLOURS+1088], 4284101145
.stabn 68,0,444,.L_66BE-_fb_ctor__legoscript
.L_66BF:
	mov dword ptr [_G_COLOURS+1152], 4279911680
.stabn 68,0,444,.L_66BF-_fb_ctor__legoscript
.L_66C0:
	mov dword ptr [_G_COLOURS+1180], 4290942207
.stabn 68,0,444,.L_66C0-_fb_ctor__legoscript
.L_66C1:
	mov dword ptr [_G_COLOURS+1232], 4278198581
.stabn 68,0,444,.L_66C1-_fb_ctor__legoscript
.L_66C2:
	mov dword ptr [_G_COLOURS+1252], 4294957483
.stabn 68,0,444,.L_66C2-_fb_ctor__legoscript
.L_66C3:
	mov dword ptr [_G_COLOURS+1280], 4279369842
.stabn 68,0,444,.L_66C3-_fb_ctor__legoscript
.L_66C4:
	mov dword ptr [_G_COLOURS+1284], 4291009350
.stabn 68,0,444,.L_66C4-_fb_ctor__legoscript
.L_66C5:
	mov dword ptr [_G_COLOURS+1288], 4293051240
.stabn 68,0,444,.L_66C5-_fb_ctor__legoscript
.L_66C6:
	mov dword ptr [_G_COLOURS+1292], 4293587667
.stabn 68,0,444,.L_66C6-_fb_ctor__legoscript
.L_66C7:
	mov dword ptr [_G_COLOURS+1304], 4288346594
.stabn 68,0,444,.L_66C7-_fb_ctor__legoscript
.L_66C8:
	mov dword ptr [_G_COLOURS+1320], 4283332471
.stabn 68,0,444,.L_66C8-_fb_ctor__legoscript
.L_66C9:
	mov dword ptr [_G_COLOURS+1340], 4284375176
.stabn 68,0,444,.L_66C9-_fb_ctor__legoscript
.L_66CA:
	mov dword ptr [_G_COLOURS+1404], 4289824247
.stabn 68,0,444,.L_66CA-_fb_ctor__legoscript
.L_66CB:
	mov dword ptr [_G_COLOURS+1412], 4286017023
.stabn 68,0,444,.L_66CB-_fb_ctor__legoscript
.L_66CC:
	mov dword ptr [_G_COLOURS+1464], 4281101784
.stabn 68,0,444,.L_66CC-_fb_ctor__legoscript
.L_66CD:
	mov dword ptr [_G_COLOURS+1472], 4280418285
.stabn 68,0,444,.L_66CD-_fb_ctor__legoscript
.L_66CE:
	mov dword ptr [_G_COLOURS+1480], 4282734965
.stabn 68,0,444,.L_66CE-_fb_ctor__legoscript
.L_66CF:
	mov dword ptr [_G_COLOURS+1484], 4285768652
.stabn 68,0,444,.L_66CF-_fb_ctor__legoscript
.L_66D0:
	mov dword ptr [_G_COLOURS+1492], 4286408053
.stabn 68,0,444,.L_66D0-_fb_ctor__legoscript
.L_66D1:
	mov dword ptr [_G_COLOURS+1512], 4286353008
.stabn 68,0,444,.L_66D1-_fb_ctor__legoscript
.L_66D2:
	mov dword ptr [_G_COLOURS+1516], 4288315760
.stabn 68,0,444,.L_66D2-_fb_ctor__legoscript
.L_66D3:
	mov dword ptr [_G_COLOURS+1608], 4278930634
.stabn 68,0,444,.L_66D3-_fb_ctor__legoscript
.L_66D4:
	mov dword ptr [_G_COLOURS+1688], 4282145937
.stabn 68,0,444,.L_66D4-_fb_ctor__legoscript
.L_66D5:
	mov dword ptr [_G_COLOURS+1692], 4281548628
.stabn 68,0,444,.L_66D5-_fb_ctor__legoscript
.L_66D6:
	mov dword ptr [_G_COLOURS+1800], 4282677202
.stabn 68,0,444,.L_66D6-_fb_ctor__legoscript
.L_66D7:
	mov dword ptr [_G_COLOURS+1848], 4280583925
.stabn 68,0,444,.L_66D7-_fb_ctor__legoscript
.L_66D8:
	mov dword ptr [_G_COLOURS+1936], 4280045713
.stabn 68,0,444,.L_66D8-_fb_ctor__legoscript
.L_66D9:
	mov dword ptr [_G_COLOURS+2012], 4289049788
.stabn 68,0,444,.L_66D9-_fb_ctor__legoscript
.L_66DA:
	mov dword ptr [_G_COLOURS+2028], 4280065274
.stabn 68,0,444,.L_66DA-_fb_ctor__legoscript
.L_66DB:
	mov dword ptr [_G_COLOURS+2032], 4279533823
.stabn 68,0,444,.L_66DB-_fb_ctor__legoscript
.L_66DC:
	mov dword ptr [_G_COLOURS+2036], 4282878671
.stabn 68,0,444,.L_66DC-_fb_ctor__legoscript
.L_66DD:
	mov dword ptr [_G_COLOURS+2040], 4286119032
.stabn 68,0,444,.L_66DD-_fb_ctor__legoscript
.L_66DE:
	mov dword ptr [_G_COLOURS+132], 2157977600
.stabn 68,0,444,.L_66DE-_fb_ctor__legoscript
.L_66DF:
	mov dword ptr [_G_COLOURS+136], 2151774243
.stabn 68,0,444,.L_66DF-_fb_ctor__legoscript
.L_66E0:
	mov dword ptr [_G_COLOURS+140], 2152130134
.stabn 68,0,444,.L_66E0-_fb_ctor__legoscript
.L_66E1:
	mov dword ptr [_G_COLOURS+144], 2148080329
.stabn 68,0,444,.L_66E1-_fb_ctor__legoscript
.L_66E2:
	mov dword ptr [_G_COLOURS+148], 2157274847
.stabn 68,0,444,.L_66E2-_fb_ctor__legoscript
.L_66E3:
	mov dword ptr [_G_COLOURS+152], 2148368639
.stabn 68,0,444,.L_66E3-_fb_ctor__legoscript
.L_66E4:
	mov dword ptr [_G_COLOURS+156], 2163269569
.stabn 68,0,444,.L_66E4-_fb_ctor__legoscript
.L_66E5:
	mov dword ptr [_G_COLOURS+160], 2152882019
.stabn 68,0,444,.L_66E5-_fb_ctor__legoscript
.L_66E6:
	mov dword ptr [_G_COLOURS+164], 2159516245
.stabn 68,0,444,.L_66E6-_fb_ctor__legoscript
.L_66E7:
	mov dword ptr [_G_COLOURS+168], 2147549120
.stabn 68,0,444,.L_66E7-_fb_ctor__legoscript
.L_66E8:
	mov dword ptr [_G_COLOURS+172], 2163206574
.stabn 68,0,444,.L_66E8-_fb_ctor__legoscript
.L_66E9:
	mov dword ptr [_G_COLOURS+176], 2157932694
.stabn 68,0,444,.L_66E9-_fb_ctor__legoscript
.L_66EA:
	mov dword ptr [_G_COLOURS+180], 2158794748
.stabn 68,0,444,.L_66EA-_fb_ctor__legoscript
.L_66EB:
	mov dword ptr [_G_COLOURS+184], 2150616565
.stabn 68,0,444,.L_66EB-_fb_ctor__legoscript
.L_66EC:
	mov dword ptr [_G_COLOURS+188], 2164063484
.stabn 68,0,444,.L_66EC-_fb_ctor__legoscript
.L_66ED:
	mov dword ptr [_G_COLOURS+208], 2160829861
.stabn 68,0,444,.L_66ED-_fb_ctor__legoscript
.L_66EE:
	mov dword ptr [_G_COLOURS+216], 2147528922
.stabn 68,0,444,.L_66EE-_fb_ctor__legoscript
.L_66EF:
	mov dword ptr [_G_COLOURS+228], 2149355504
.stabn 68,0,444,.L_66EF-_fb_ctor__legoscript
.L_66F0:
	mov dword ptr [_G_COLOURS+128], 3523215360
.stabn 68,0,444,.L_66F0-_fb_ctor__legoscript
.L_66F1:
	mov dword ptr [_G_COLOURS+632], 2159775473
.stabn 68,0,444,.L_66F1-_fb_ctor__legoscript
.L_66F2:
	mov dword ptr [_G_COLOURS+908], 2154617269
.stabn 68,0,444,.L_66F2-_fb_ctor__legoscript
.L_66F3:
	mov dword ptr [_G_COLOURS+924], 2154674172
.stabn 68,0,444,.L_66F3-_fb_ctor__legoscript
.L_66F4:
	mov dword ptr [_G_COLOURS+936], 2156980475
.stabn 68,0,444,.L_66F4-_fb_ctor__legoscript
.L_66F5:
	mov dword ptr [_G_COLOURS+1136], 2158330306
.stabn 68,0,444,.L_66F5-_fb_ctor__legoscript
.L_66F6:
	mov dword ptr [_G_COLOURS+1140], 2157036157
.stabn 68,0,444,.L_66F6-_fb_ctor__legoscript
.L_66F7:
	mov dword ptr [_G_COLOURS+1172], 2162469739
.stabn 68,0,444,.L_66F7-_fb_ctor__legoscript
.L_66F8:
	mov dword ptr [_G_COLOURS+41500], 2149654817
.stabn 68,0,444,.L_66F8-_fb_ctor__legoscript
.L_66F9:
	mov dword ptr [_G_COLOURS+240], 4283193956
.stabn 68,0,444,.L_66F9-_fb_ctor__legoscript
.L_66FA:
	mov dword ptr [_G_COLOURS+244], 4290745964
.stabn 68,0,444,.L_66FA-_fb_ctor__legoscript
.L_66FB:
	mov dword ptr [_G_COLOURS+248], 4285641532
.stabn 68,0,444,.L_66FB-_fb_ctor__legoscript
.L_66FC:
	mov dword ptr [_G_COLOURS+252], 4287516074
.stabn 68,0,444,.L_66FC-_fb_ctor__legoscript
.L_66FD:
	mov dword ptr [_G_COLOURS+256], 4281608731
.stabn 68,0,444,.L_66FD-_fb_ctor__legoscript
.L_66FE:
	mov dword ptr [_G_COLOURS+1336], 4285972959
.stabn 68,0,444,.L_66FE-_fb_ctor__legoscript
.L_66FF:
	mov dword ptr [_G_COLOURS+1532], 4291743438
.stabn 68,0,444,.L_66FF-_fb_ctor__legoscript
.L_6700:
	mov dword ptr [_G_COLOURS+332], 4280750858
.stabn 68,0,444,.L_6700-_fb_ctor__legoscript
.L_6701:
	mov dword ptr [_G_COLOURS+536], 4282076534
.stabn 68,0,444,.L_6701-_fb_ctor__legoscript
.L_6702:
	mov dword ptr [_G_COLOURS+540], 4288716960
.stabn 68,0,444,.L_6702-_fb_ctor__legoscript
.L_6703:
	mov dword ptr [_G_COLOURS+548], 4287657307
.stabn 68,0,444,.L_6703-_fb_ctor__legoscript
.L_6704:
	mov dword ptr [_G_COLOURS+568], 4284919006
.stabn 68,0,444,.L_6704-_fb_ctor__legoscript
.L_6705:
	mov dword ptr [_G_COLOURS+588], 4283396739
.stabn 68,0,444,.L_6705-_fb_ctor__legoscript
.L_6706:
	mov dword ptr [_G_COLOURS+592], 4282928456
.stabn 68,0,444,.L_6706-_fb_ctor__legoscript
.L_6707:
	mov dword ptr [_G_COLOURS+600], 4288256920
.stabn 68,0,444,.L_6707-_fb_ctor__legoscript
.L_6708:
	mov dword ptr [_G_COLOURS+704], 4282929556
.stabn 68,0,444,.L_6708-_fb_ctor__legoscript
.L_6709:
	mov dword ptr [_G_COLOURS+712], 4282017707
.stabn 68,0,444,.L_6709-_fb_ctor__legoscript
.L_670A:
	mov dword ptr [_G_COLOURS+716], 4287137673
.stabn 68,0,444,.L_670A-_fb_ctor__legoscript
.L_670B:
	mov dword ptr [_G_COLOURS+732], 4292866806
.stabn 68,0,444,.L_670B-_fb_ctor__legoscript
.L_670C:
	mov dword ptr [_G_COLOURS+736], 4280680662
.stabn 68,0,444,.L_670C-_fb_ctor__legoscript
.L_670D:
	mov dword ptr [_G_COLOURS+740], 4288895232
.stabn 68,0,444,.L_670D-_fb_ctor__legoscript
.L_670E:
	mov dword ptr [_G_COLOURS+744], 4282158592
.stabn 68,0,444,.L_670E-_fb_ctor__legoscript
.L_670F:
	mov dword ptr [_G_COLOURS+748], 4281088343
.stabn 68,0,444,.L_670F-_fb_ctor__legoscript
.L_6710:
	mov dword ptr [_G_COLOURS+756], 4282876588
.stabn 68,0,444,.L_6710-_fb_ctor__legoscript
.L_6711:
	mov dword ptr [_G_COLOURS+800], 4280582768
.stabn 68,0,444,.L_6711-_fb_ctor__legoscript
.L_6712:
	mov dword ptr [_G_COLOURS+1188], 4281237418
.stabn 68,0,444,.L_6712-_fb_ctor__legoscript
.L_6713:
	mov dword ptr [_G_COLOURS+320], 4285953654
.stabn 68,0,444,.L_6713-_fb_ctor__legoscript
.L_6714:
	mov dword ptr [_G_COLOURS+324], 4285513922
.stabn 68,0,444,.L_6714-_fb_ctor__legoscript
.L_6715:
	mov dword ptr [_G_COLOURS+328], 4281642203
.stabn 68,0,444,.L_6715-_fb_ctor__legoscript
.L_6716:
	mov dword ptr [_G_COLOURS+348], 4281941054
.stabn 68,0,444,.L_6716-_fb_ctor__legoscript
.L_6717:
	mov dword ptr [_G_COLOURS+1200], 4283662274
.stabn 68,0,444,.L_6717-_fb_ctor__legoscript
.L_6718:
	mov dword ptr [_G_COLOURS+40180], 4292463511
.stabn 68,0,444,.L_6718-_fb_ctor__legoscript
.L_6719:
	mov dword ptr [_G_COLOURS+40184], 4288308653
.stabn 68,0,444,.L_6719-_fb_ctor__legoscript
.L_671A:
	mov dword ptr [_G_COLOURS+40196], 4291808510
.stabn 68,0,444,.L_671A-_fb_ctor__legoscript
.L_671B:
	mov dword ptr [_G_COLOURS+316], 4042190574
.stabn 68,0,444,.L_671B-_fb_ctor__legoscript
.L_671C:
	mov dword ptr [_G_COLOURS+84], 4038131680
.stabn 68,0,444,.L_671C-_fb_ctor__legoscript
.L_671D:
	mov dword ptr [_G_COLOURS+1176], 4037920445
.stabn 68,0,444,.L_671D-_fb_ctor__legoscript
.L_671E:
	mov dword ptr [_G_COLOURS+1316], 4040684533
.stabn 68,0,444,.L_671E-_fb_ctor__legoscript
.L_671F:
	mov dword ptr [_G_COLOURS+456], 2157274847
.stabn 68,0,444,.L_671F-_fb_ctor__legoscript
.L_6720:
	mov dword ptr [_G_COLOURS+468], 2163142382
.stabn 68,0,444,.L_6720-_fb_ctor__legoscript
.L_6721:
	mov dword ptr [_G_COLOURS+516], 2153840740
.stabn 68,0,444,.L_6721-_fb_ctor__legoscript
.L_6722:
	mov dword ptr [_G_COLOURS+1208], 2163206574
.stabn 68,0,444,.L_6722-_fb_ctor__legoscript
.L_6723:
	mov dword ptr [_G_COLOURS+1356], 2147549120
.stabn 68,0,444,.L_6723-_fb_ctor__legoscript
.L_6724:
	mov dword ptr [_G_COLOURS+1364], 2149355504
.stabn 68,0,444,.L_6724-_fb_ctor__legoscript
.L_6725:
	mov dword ptr [_G_COLOURS+1440], 4043111676
.stabn 68,0,444,.L_6725-_fb_ctor__legoscript
.L_6726:
	mov dword ptr [_G_COLOURS+1448], 3371166126
.stabn 68,0,444,.L_6726-_fb_ctor__legoscript
.L_6727:
	mov dword ptr [_G_COLOURS+1452], 3360841571
.stabn 68,0,444,.L_6727-_fb_ctor__legoscript
.L_6728:
	mov dword ptr [_G_COLOURS+1456], 3365234399
.stabn 68,0,444,.L_6728-_fb_ctor__legoscript
.L_6729:
	mov dword ptr [_G_COLOURS+1460], 3363905383
.stabn 68,0,444,.L_6729-_fb_ctor__legoscript
.L_672A:
	mov dword ptr [_G_COLOURS+1468], 3359733795
.stabn 68,0,444,.L_672A-_fb_ctor__legoscript
.L_672B:
	mov dword ptr [_G_COLOURS+41404], 2152130134
.stabn 68,0,444,.L_672B-_fb_ctor__legoscript
.L_672C:
	mov dword ptr [_G_COLOURS+41464], 3365937152
.stabn 68,0,444,.L_672C-_fb_ctor__legoscript
.L_672D:
	mov dword ptr [_G_COLOURS+300], 4278190080
.stabn 68,0,444,.L_672D-_fb_ctor__legoscript
.L_672E:
	mov dword ptr [_G_COLOURS+304], 4284571491
.stabn 68,0,444,.L_672E-_fb_ctor__legoscript
.L_672F:
	mov dword ptr [_G_COLOURS+528], 4278190080
.stabn 68,0,444,.L_672F-_fb_ctor__legoscript
.L_6730:
	mov dword ptr [_G_COLOURS+532], 4278190080
.stabn 68,0,444,.L_6730-_fb_ctor__legoscript
.L_6731:
	mov dword ptr [_G_COLOURS+260], 4278896890
.stabn 68,0,444,.L_6731-_fb_ctor__legoscript
.L_6732:
	mov dword ptr [_G_COLOURS+1024], 4281608731
.stabn 68,0,444,.L_6732-_fb_ctor__legoscript
.L_6733:
	mov dword ptr [_G_COLOURS+1092], 4289223198
.stabn 68,0,444,.L_6733-_fb_ctor__legoscript
.L_6734:
	mov dword ptr [_G_COLOURS+1296], 4278190260
.stabn 68,0,444,.L_6734-_fb_ctor__legoscript
.L_6735:
	mov dword ptr [_G_COLOURS+1400], 4280515030
.stabn 68,0,444,.L_6735-_fb_ctor__legoscript
.L_6736:
	mov dword ptr [_G_COLOURS+1500], 4287468170
.stabn 68,0,444,.L_6736-_fb_ctor__legoscript
.L_6737:
	mov dword ptr [_G_COLOURS+1624], 4284101145
.stabn 68,0,444,.L_6737-_fb_ctor__legoscript
.L_6738:
	mov dword ptr [_G_COLOURS+1796], 4286652263
.stabn 68,0,444,.L_6738-_fb_ctor__legoscript
.L_6739:
	mov dword ptr [_G_COLOURS+1960], 4279814821
.stabn 68,0,444,.L_6739-_fb_ctor__legoscript
.L_673A:
	mov dword ptr [_G_COLOURS+1984], 4288059030
.stabn 68,0,444,.L_673A-_fb_ctor__legoscript
.L_673B:
	mov dword ptr [_G_COLOURS+2016], 4287137673
.stabn 68,0,444,.L_673B-_fb_ctor__legoscript
.L_673C:
	mov dword ptr [_G_COLOURS+2044], 4294243572
.stabn 68,0,444,.L_673C-_fb_ctor__legoscript
.L_673D:
	mov dword ptr [_G_COLOURS+40008], 4281042176
.stabn 68,0,444,.L_673D-_fb_ctor__legoscript
.L_673E:
	mov dword ptr [_G_COLOURS+40040], 4282493784
.stabn 68,0,444,.L_673E-_fb_ctor__legoscript
.L_673F:
	mov dword ptr [_G_COLOURS+40104], 4285931408
.stabn 68,0,444,.L_673F-_fb_ctor__legoscript
.L_6740:
	mov dword ptr [_G_COLOURS+40120], 4290342560
.stabn 68,0,444,.L_6740-_fb_ctor__legoscript
.L_6741:
	mov dword ptr [_G_COLOURS+40124], 4292781261
.stabn 68,0,444,.L_6741-_fb_ctor__legoscript
.L_6742:
	mov dword ptr [_G_COLOURS+40280], 4278792543
.stabn 68,0,444,.L_6742-_fb_ctor__legoscript
.L_6743:
	mov dword ptr [_G_COLOURS+40292], 4291335795
.stabn 68,0,444,.L_6743-_fb_ctor__legoscript
.L_6744:
	mov dword ptr [_G_COLOURS+40312], 4288006655
.stabn 68,0,444,.L_6744-_fb_ctor__legoscript
.L_6745:
	mov dword ptr [_G_COLOURS+40904], 4285328639
.stabn 68,0,444,.L_6745-_fb_ctor__legoscript
.L_6746:
	mov dword ptr [_G_COLOURS+41232], 4278198581
.stabn 68,0,444,.L_6746-_fb_ctor__legoscript
.L_6747:
	mov dword ptr [_G_COLOURS+41280], 4279369842
.stabn 68,0,444,.L_6747-_fb_ctor__legoscript
.L_6748:
	mov dword ptr [_G_COLOURS+41284], 4291009350
.stabn 68,0,444,.L_6748-_fb_ctor__legoscript
.L_6749:
	mov dword ptr [_G_COLOURS+41288], 4293051240
.stabn 68,0,444,.L_6749-_fb_ctor__legoscript
.L_674A:
	mov dword ptr [_G_COLOURS+41292], 4293587667
.stabn 68,0,444,.L_674A-_fb_ctor__legoscript
.L_674B:
	mov dword ptr [_G_COLOURS+41512], 4286353008
.stabn 68,0,444,.L_674B-_fb_ctor__legoscript
.L_674C:
	mov dword ptr [_G_COLOURS+41936], 4280045713
.stabn 68,0,444,.L_674C-_fb_ctor__legoscript
.L_674D:
	mov dword ptr [_G_COLOURS+264], 2150616565
.stabn 68,0,444,.L_674D-_fb_ctor__legoscript
.L_674E:
	mov dword ptr [_G_COLOURS+268], 2164063484
.stabn 68,0,444,.L_674E-_fb_ctor__legoscript
.L_674F:
	mov dword ptr [_G_COLOURS+40140], 2152130134
.stabn 68,0,444,.L_674F-_fb_ctor__legoscript
.L_6750:
	mov dword ptr [_G_COLOURS+40144], 2148080329
.stabn 68,0,444,.L_6750-_fb_ctor__legoscript
.L_6751:
	mov dword ptr [_G_COLOURS+40172], 2163206574
.stabn 68,0,444,.L_6751-_fb_ctor__legoscript
.L_6752:
	mov dword ptr [_G_COLOURS+64], 4286644223
.stabn 68,0,444,.L_6752-_fb_ctor__legoscript
.L_6753:
	mov dword ptr [_G_COLOURS+96], 4286545791
.stabn 68,0,444,.L_6753-_fb_ctor__legoscript
.L_6754:
	mov dword ptr [_G_COLOURS+1972], 4284573541
.stabn 68,0,444,.L_6754-_fb_ctor__legoscript
.L_6755:
	mov dword ptr [_G_COLOURS+1976], 4291875024
.stabn 68,0,444,.L_6755-_fb_ctor__legoscript
.L_6756:
	mov dword ptr [_G_COLOURS+1980], 4284054190
.stabn 68,0,444,.L_6756-_fb_ctor__legoscript
.L_6757:
	mov dword ptr [_G_COLOURS+40188], 285212671
.stabn 68,0,444,.L_6757-_fb_ctor__legoscript
.L_6758:
	mov dword ptr [_G_COLOURS+40000], 4291944427
.stabn 68,0,444,.L_6758-_fb_ctor__legoscript
.L_6759:
	mov dword ptr [_G_EDGECOLOURS], 4286611584
.stabn 68,0,446,.L_6759-_fb_ctor__legoscript
.L_675A:
	mov dword ptr [_G_EDGECOLOURS+4], 4281545523
.stabn 68,0,446,.L_675A-_fb_ctor__legoscript
.L_675B:
	mov dword ptr [_G_EDGECOLOURS+8], 4281545523
.stabn 68,0,446,.L_675B-_fb_ctor__legoscript
.L_675C:
	mov dword ptr [_G_EDGECOLOURS+12], 4281545523
.stabn 68,0,446,.L_675C-_fb_ctor__legoscript
.L_675D:
	mov dword ptr [_G_EDGECOLOURS+16], 4281545523
.stabn 68,0,446,.L_675D-_fb_ctor__legoscript
.L_675E:
	mov dword ptr [_G_EDGECOLOURS+20], 4281545523
.stabn 68,0,446,.L_675E-_fb_ctor__legoscript
.L_675F:
	mov dword ptr [_G_EDGECOLOURS+24], 4280163870
.stabn 68,0,446,.L_675F-_fb_ctor__legoscript
.L_6760:
	mov dword ptr [_G_EDGECOLOURS+28], 4281545523
.stabn 68,0,446,.L_6760-_fb_ctor__legoscript
.L_6761:
	mov dword ptr [_G_EDGECOLOURS+32], 4281545523
.stabn 68,0,446,.L_6761-_fb_ctor__legoscript
.L_6762:
	mov dword ptr [_G_EDGECOLOURS+36], 4281545523
.stabn 68,0,446,.L_6762-_fb_ctor__legoscript
.L_6763:
	mov dword ptr [_G_EDGECOLOURS+40], 4281545523
.stabn 68,0,446,.L_6763-_fb_ctor__legoscript
.L_6764:
	mov dword ptr [_G_EDGECOLOURS+44], 4281545523
.stabn 68,0,446,.L_6764-_fb_ctor__legoscript
.L_6765:
	mov dword ptr [_G_EDGECOLOURS+48], 4281545523
.stabn 68,0,446,.L_6765-_fb_ctor__legoscript
.L_6766:
	mov dword ptr [_G_EDGECOLOURS+52], 4281545523
.stabn 68,0,446,.L_6766-_fb_ctor__legoscript
.L_6767:
	mov dword ptr [_G_EDGECOLOURS+56], 4281545523
.stabn 68,0,446,.L_6767-_fb_ctor__legoscript
.L_6768:
	mov dword ptr [_G_EDGECOLOURS+60], 4281545523
.stabn 68,0,446,.L_6768-_fb_ctor__legoscript
.L_6769:
	mov dword ptr [_G_EDGECOLOURS+68], 4281545523
.stabn 68,0,446,.L_6769-_fb_ctor__legoscript
.L_676A:
	mov dword ptr [_G_EDGECOLOURS+72], 4281545523
.stabn 68,0,446,.L_676A-_fb_ctor__legoscript
.L_676B:
	mov dword ptr [_G_EDGECOLOURS+76], 4281545523
.stabn 68,0,446,.L_676B-_fb_ctor__legoscript
.L_676C:
	mov dword ptr [_G_EDGECOLOURS+80], 4281545523
.stabn 68,0,446,.L_676C-_fb_ctor__legoscript
.L_676D:
	mov dword ptr [_G_EDGECOLOURS+88], 4281545523
.stabn 68,0,446,.L_676D-_fb_ctor__legoscript
.L_676E:
	mov dword ptr [_G_EDGECOLOURS+92], 4281545523
.stabn 68,0,446,.L_676E-_fb_ctor__legoscript
.L_676F:
	mov dword ptr [_G_EDGECOLOURS+100], 4281545523
.stabn 68,0,446,.L_676F-_fb_ctor__legoscript
.L_6770:
	mov dword ptr [_G_EDGECOLOURS+104], 4281545523
.stabn 68,0,446,.L_6770-_fb_ctor__legoscript
.L_6771:
	mov dword ptr [_G_EDGECOLOURS+108], 4281545523
.stabn 68,0,446,.L_6771-_fb_ctor__legoscript
.L_6772:
	mov dword ptr [_G_EDGECOLOURS+112], 4281545523
.stabn 68,0,446,.L_6772-_fb_ctor__legoscript
.L_6773:
	mov dword ptr [_G_EDGECOLOURS+116], 4281545523
.stabn 68,0,446,.L_6773-_fb_ctor__legoscript
.L_6774:
	mov dword ptr [_G_EDGECOLOURS+120], 4281545523
.stabn 68,0,446,.L_6774-_fb_ctor__legoscript
.L_6775:
	mov dword ptr [_G_EDGECOLOURS+124], 4281545523
.stabn 68,0,446,.L_6775-_fb_ctor__legoscript
.L_6776:
	mov dword ptr [_G_EDGECOLOURS+272], 4281545523
.stabn 68,0,446,.L_6776-_fb_ctor__legoscript
.L_6777:
	mov dword ptr [_G_EDGECOLOURS+276], 4281545523
.stabn 68,0,446,.L_6777-_fb_ctor__legoscript
.L_6778:
	mov dword ptr [_G_EDGECOLOURS+280], 4286611584
.stabn 68,0,446,.L_6778-_fb_ctor__legoscript
.L_6779:
	mov dword ptr [_G_EDGECOLOURS+284], 4281545523
.stabn 68,0,446,.L_6779-_fb_ctor__legoscript
.L_677A:
	mov dword ptr [_G_EDGECOLOURS+288], 4281545523
.stabn 68,0,446,.L_677A-_fb_ctor__legoscript
.L_677B:
	mov dword ptr [_G_EDGECOLOURS+292], 4281545523
.stabn 68,0,446,.L_677B-_fb_ctor__legoscript
.L_677C:
	mov dword ptr [_G_EDGECOLOURS+296], 4281545523
.stabn 68,0,446,.L_677C-_fb_ctor__legoscript
.L_677D:
	mov dword ptr [_G_EDGECOLOURS+308], 4281545523
.stabn 68,0,446,.L_677D-_fb_ctor__legoscript
.L_677E:
	mov dword ptr [_G_EDGECOLOURS+312], 4281545523
.stabn 68,0,446,.L_677E-_fb_ctor__legoscript
.L_677F:
	mov dword ptr [_G_EDGECOLOURS+336], 4281545523
.stabn 68,0,446,.L_677F-_fb_ctor__legoscript
.L_6780:
	mov dword ptr [_G_EDGECOLOURS+340], 4281545523
.stabn 68,0,446,.L_6780-_fb_ctor__legoscript
.L_6781:
	mov dword ptr [_G_EDGECOLOURS+344], 4281545523
.stabn 68,0,446,.L_6781-_fb_ctor__legoscript
.L_6782:
	mov dword ptr [_G_EDGECOLOURS+356], 4281545523
.stabn 68,0,446,.L_6782-_fb_ctor__legoscript
.L_6783:
	mov dword ptr [_G_EDGECOLOURS+368], 4281545523
.stabn 68,0,446,.L_6783-_fb_ctor__legoscript
.L_6784:
	mov dword ptr [_G_EDGECOLOURS+400], 4281545523
.stabn 68,0,446,.L_6784-_fb_ctor__legoscript
.L_6785:
	mov dword ptr [_G_EDGECOLOURS+440], 4281545523
.stabn 68,0,446,.L_6785-_fb_ctor__legoscript
.L_6786:
	mov dword ptr [_G_EDGECOLOURS+448], 4281545523
.stabn 68,0,446,.L_6786-_fb_ctor__legoscript
.L_6787:
	mov dword ptr [_G_EDGECOLOURS+460], 4281545523
.stabn 68,0,446,.L_6787-_fb_ctor__legoscript
.L_6788:
	mov dword ptr [_G_EDGECOLOURS+472], 4281545523
.stabn 68,0,446,.L_6788-_fb_ctor__legoscript
.L_6789:
	mov dword ptr [_G_EDGECOLOURS+480], 4281545523
.stabn 68,0,446,.L_6789-_fb_ctor__legoscript
.L_678A:
	mov dword ptr [_G_EDGECOLOURS+500], 4281545523
.stabn 68,0,446,.L_678A-_fb_ctor__legoscript
.L_678B:
	mov dword ptr [_G_EDGECOLOURS+512], 4281545523
.stabn 68,0,446,.L_678B-_fb_ctor__legoscript
.L_678C:
	mov dword ptr [_G_EDGECOLOURS+604], 4281545523
.stabn 68,0,446,.L_678C-_fb_ctor__legoscript
.L_678D:
	mov dword ptr [_G_EDGECOLOURS+764], 4281545523
.stabn 68,0,446,.L_678D-_fb_ctor__legoscript
.L_678E:
	mov dword ptr [_G_EDGECOLOURS+848], 4281545523
.stabn 68,0,446,.L_678E-_fb_ctor__legoscript
.L_678F:
	mov dword ptr [_G_EDGECOLOURS+864], 4281545523
.stabn 68,0,446,.L_678F-_fb_ctor__legoscript
.L_6790:
	mov dword ptr [_G_EDGECOLOURS+872], 4281545523
.stabn 68,0,446,.L_6790-_fb_ctor__legoscript
.L_6791:
	mov dword ptr [_G_EDGECOLOURS+876], 4281545523
.stabn 68,0,446,.L_6791-_fb_ctor__legoscript
.L_6792:
	mov dword ptr [_G_EDGECOLOURS+904], 4281545523
.stabn 68,0,446,.L_6792-_fb_ctor__legoscript
.L_6793:
	mov dword ptr [_G_EDGECOLOURS+928], 4281545523
.stabn 68,0,446,.L_6793-_fb_ctor__legoscript
.L_6794:
	mov dword ptr [_G_EDGECOLOURS+1088], 4281545523
.stabn 68,0,446,.L_6794-_fb_ctor__legoscript
.L_6795:
	mov dword ptr [_G_EDGECOLOURS+1152], 4286611584
.stabn 68,0,446,.L_6795-_fb_ctor__legoscript
.L_6796:
	mov dword ptr [_G_EDGECOLOURS+1180], 4281545523
.stabn 68,0,446,.L_6796-_fb_ctor__legoscript
.L_6797:
	mov dword ptr [_G_EDGECOLOURS+1232], 4286611584
.stabn 68,0,446,.L_6797-_fb_ctor__legoscript
.L_6798:
	mov dword ptr [_G_EDGECOLOURS+1252], 4281545523
.stabn 68,0,446,.L_6798-_fb_ctor__legoscript
.L_6799:
	mov dword ptr [_G_EDGECOLOURS+1280], 4281545523
.stabn 68,0,446,.L_6799-_fb_ctor__legoscript
.L_679A:
	mov dword ptr [_G_EDGECOLOURS+1284], 4281545523
.stabn 68,0,446,.L_679A-_fb_ctor__legoscript
.L_679B:
	mov dword ptr [_G_EDGECOLOURS+1288], 4281545523
.stabn 68,0,446,.L_679B-_fb_ctor__legoscript
.L_679C:
	mov dword ptr [_G_EDGECOLOURS+1292], 4281545523
.stabn 68,0,446,.L_679C-_fb_ctor__legoscript
.L_679D:
	mov dword ptr [_G_EDGECOLOURS+1304], 4281545523
.stabn 68,0,446,.L_679D-_fb_ctor__legoscript
.L_679E:
	mov dword ptr [_G_EDGECOLOURS+1320], 4281545523
.stabn 68,0,446,.L_679E-_fb_ctor__legoscript
.L_679F:
	mov dword ptr [_G_EDGECOLOURS+1340], 4281545523
.stabn 68,0,446,.L_679F-_fb_ctor__legoscript
.L_67A0:
	mov dword ptr [_G_EDGECOLOURS+1404], 4281545523
.stabn 68,0,446,.L_67A0-_fb_ctor__legoscript
.L_67A1:
	mov dword ptr [_G_EDGECOLOURS+1412], 4281545523
.stabn 68,0,446,.L_67A1-_fb_ctor__legoscript
.L_67A2:
	mov dword ptr [_G_EDGECOLOURS+1464], 4281545523
.stabn 68,0,446,.L_67A2-_fb_ctor__legoscript
.L_67A3:
	mov dword ptr [_G_EDGECOLOURS+1472], 4281545523
.stabn 68,0,446,.L_67A3-_fb_ctor__legoscript
.L_67A4:
	mov dword ptr [_G_EDGECOLOURS+1480], 4281545523
.stabn 68,0,446,.L_67A4-_fb_ctor__legoscript
.L_67A5:
	mov dword ptr [_G_EDGECOLOURS+1484], 4281545523
.stabn 68,0,446,.L_67A5-_fb_ctor__legoscript
.L_67A6:
	mov dword ptr [_G_EDGECOLOURS+1492], 4281545523
.stabn 68,0,446,.L_67A6-_fb_ctor__legoscript
.L_67A7:
	mov dword ptr [_G_EDGECOLOURS+1512], 4281545523
.stabn 68,0,446,.L_67A7-_fb_ctor__legoscript
.L_67A8:
	mov dword ptr [_G_EDGECOLOURS+1516], 4281545523
.stabn 68,0,446,.L_67A8-_fb_ctor__legoscript
.L_67A9:
	mov dword ptr [_G_EDGECOLOURS+1608], 4281545523
.stabn 68,0,446,.L_67A9-_fb_ctor__legoscript
.L_67AA:
	mov dword ptr [_G_EDGECOLOURS+1688], 4281545523
.stabn 68,0,446,.L_67AA-_fb_ctor__legoscript
.L_67AB:
	mov dword ptr [_G_EDGECOLOURS+1692], 4281545523
.stabn 68,0,446,.L_67AB-_fb_ctor__legoscript
.L_67AC:
	mov dword ptr [_G_EDGECOLOURS+1800], 4281545523
.stabn 68,0,446,.L_67AC-_fb_ctor__legoscript
.L_67AD:
	mov dword ptr [_G_EDGECOLOURS+1848], 4281545523
.stabn 68,0,446,.L_67AD-_fb_ctor__legoscript
.L_67AE:
	mov dword ptr [_G_EDGECOLOURS+1936], 4281545523
.stabn 68,0,446,.L_67AE-_fb_ctor__legoscript
.L_67AF:
	mov dword ptr [_G_EDGECOLOURS+2012], 4281545523
.stabn 68,0,446,.L_67AF-_fb_ctor__legoscript
.L_67B0:
	mov dword ptr [_G_EDGECOLOURS+2028], 4281545523
.stabn 68,0,446,.L_67B0-_fb_ctor__legoscript
.L_67B1:
	mov dword ptr [_G_EDGECOLOURS+2032], 4281545523
.stabn 68,0,446,.L_67B1-_fb_ctor__legoscript
.L_67B2:
	mov dword ptr [_G_EDGECOLOURS+2036], 4281545523
.stabn 68,0,446,.L_67B2-_fb_ctor__legoscript
.L_67B3:
	mov dword ptr [_G_EDGECOLOURS+2040], 4281545523
.stabn 68,0,446,.L_67B3-_fb_ctor__legoscript
.L_67B4:
	mov dword ptr [_G_EDGECOLOURS+132], 2151156480
.stabn 68,0,446,.L_67B4-_fb_ctor__legoscript
.L_67B5:
	mov dword ptr [_G_EDGECOLOURS+136], 2150321943
.stabn 68,0,446,.L_67B5-_fb_ctor__legoscript
.L_67B6:
	mov dword ptr [_G_EDGECOLOURS+140], 2149101351
.stabn 68,0,446,.L_67B6-_fb_ctor__legoscript
.L_67B7:
	mov dword ptr [_G_EDGECOLOURS+144], 2147814758
.stabn 68,0,446,.L_67B7-_fb_ctor__legoscript
.L_67B8:
	mov dword ptr [_G_EDGECOLOURS+148], 2153719737
.stabn 68,0,446,.L_67B8-_fb_ctor__legoscript
.L_67B9:
	mov dword ptr [_G_EDGECOLOURS+152], 2147504552
.stabn 68,0,446,.L_67B9-_fb_ctor__legoscript
.L_67BA:
	mov dword ptr [_G_EDGECOLOURS+156], 2161947759
.stabn 68,0,446,.L_67BA-_fb_ctor__legoscript
.L_67BB:
	mov dword ptr [_G_EDGECOLOURS+160], 2149787690
.stabn 68,0,446,.L_67BB-_fb_ctor__legoscript
.L_67BC:
	mov dword ptr [_G_EDGECOLOURS+164], 2155242034
.stabn 68,0,446,.L_67BC-_fb_ctor__legoscript
.L_67BD:
	mov dword ptr [_G_EDGECOLOURS+168], 2147522931
.stabn 68,0,446,.L_67BD-_fb_ctor__legoscript
.L_67BE:
	mov dword ptr [_G_EDGECOLOURS+172], 2162086233
.stabn 68,0,446,.L_67BE-_fb_ctor__legoscript
.L_67BF:
	mov dword ptr [_G_EDGECOLOURS+176], 2154120031
.stabn 68,0,446,.L_67BF-_fb_ctor__legoscript
.L_67C0:
	mov dword ptr [_G_EDGECOLOURS+180], 2153460985
.stabn 68,0,446,.L_67C0-_fb_ctor__legoscript
.L_67C1:
	mov dword ptr [_G_EDGECOLOURS+184], 2148045492
.stabn 68,0,446,.L_67C1-_fb_ctor__legoscript
.L_67C2:
	mov dword ptr [_G_EDGECOLOURS+188], 2160708041
.stabn 68,0,446,.L_67C2-_fb_ctor__legoscript
.L_67C3:
	mov dword ptr [_G_EDGECOLOURS+208], 2158388324
.stabn 68,0,446,.L_67C3-_fb_ctor__legoscript
.L_67C4:
	mov dword ptr [_G_EDGECOLOURS+216], 2147507829
.stabn 68,0,446,.L_67C4-_fb_ctor__legoscript
.L_67C5:
	mov dword ptr [_G_EDGECOLOURS+228], 2148162718
.stabn 68,0,446,.L_67C5-_fb_ctor__legoscript
.L_67C6:
	mov dword ptr [_G_EDGECOLOURS+128], 3526570803
.stabn 68,0,446,.L_67C6-_fb_ctor__legoscript
.L_67C7:
	mov dword ptr [_G_EDGECOLOURS+632], 2156147686
.stabn 68,0,446,.L_67C7-_fb_ctor__legoscript
.L_67C8:
	mov dword ptr [_G_EDGECOLOURS+908], 2150544006
.stabn 68,0,446,.L_67C8-_fb_ctor__legoscript
.L_67C9:
	mov dword ptr [_G_EDGECOLOURS+924], 2148173562
.stabn 68,0,446,.L_67C9-_fb_ctor__legoscript
.L_67CA:
	mov dword ptr [_G_EDGECOLOURS+936], 2150355703
.stabn 68,0,446,.L_67CA-_fb_ctor__legoscript
.L_67CB:
	mov dword ptr [_G_EDGECOLOURS+1136], 2154907540
.stabn 68,0,446,.L_67CB-_fb_ctor__legoscript
.L_67CC:
	mov dword ptr [_G_EDGECOLOURS+1140], 2153616710
.stabn 68,0,446,.L_67CC-_fb_ctor__legoscript
.L_67CD:
	mov dword ptr [_G_EDGECOLOURS+1172], 2160491300
.stabn 68,0,446,.L_67CD-_fb_ctor__legoscript
.L_67CE:
	mov dword ptr [_G_EDGECOLOURS+41500], 2153010260
.stabn 68,0,446,.L_67CE-_fb_ctor__legoscript
.L_67CF:
	mov dword ptr [_G_EDGECOLOURS+240], 4283259750
.stabn 68,0,446,.L_67CF-_fb_ctor__legoscript
.L_67D0:
	mov dword ptr [_G_EDGECOLOURS+244], 4287259453
.stabn 68,0,446,.L_67D0-_fb_ctor__legoscript
.L_67D1:
	mov dword ptr [_G_EDGECOLOURS+248], 4282476322
.stabn 68,0,446,.L_67D1-_fb_ctor__legoscript
.L_67D2:
	mov dword ptr [_G_EDGECOLOURS+252], 4283575395
.stabn 68,0,446,.L_67D2-_fb_ctor__legoscript
.L_67D3:
	mov dword ptr [_G_EDGECOLOURS+256], 4285947709
.stabn 68,0,446,.L_67D3-_fb_ctor__legoscript
.L_67D4:
	mov dword ptr [_G_EDGECOLOURS+1336], 4281243842
.stabn 68,0,446,.L_67D4-_fb_ctor__legoscript
.L_67D5:
	mov dword ptr [_G_EDGECOLOURS+1532], 4288453788
.stabn 68,0,446,.L_67D5-_fb_ctor__legoscript
.L_67D6:
	mov dword ptr [_G_EDGECOLOURS+332], 4281545523
.stabn 68,0,446,.L_67D6-_fb_ctor__legoscript
.L_67D7:
	mov dword ptr [_G_EDGECOLOURS+536], 4281545523
.stabn 68,0,446,.L_67D7-_fb_ctor__legoscript
.L_67D8:
	mov dword ptr [_G_EDGECOLOURS+540], 4281545523
.stabn 68,0,446,.L_67D8-_fb_ctor__legoscript
.L_67D9:
	mov dword ptr [_G_EDGECOLOURS+548], 4281545523
.stabn 68,0,446,.L_67D9-_fb_ctor__legoscript
.L_67DA:
	mov dword ptr [_G_EDGECOLOURS+568], 4281545523
.stabn 68,0,446,.L_67DA-_fb_ctor__legoscript
.L_67DB:
	mov dword ptr [_G_EDGECOLOURS+588], 4281545523
.stabn 68,0,446,.L_67DB-_fb_ctor__legoscript
.L_67DC:
	mov dword ptr [_G_EDGECOLOURS+592], 4281545523
.stabn 68,0,446,.L_67DC-_fb_ctor__legoscript
.L_67DD:
	mov dword ptr [_G_EDGECOLOURS+600], 4281545523
.stabn 68,0,446,.L_67DD-_fb_ctor__legoscript
.L_67DE:
	mov dword ptr [_G_EDGECOLOURS+704], 4281545523
.stabn 68,0,446,.L_67DE-_fb_ctor__legoscript
.L_67DF:
	mov dword ptr [_G_EDGECOLOURS+712], 4281545523
.stabn 68,0,446,.L_67DF-_fb_ctor__legoscript
.L_67E0:
	mov dword ptr [_G_EDGECOLOURS+716], 4281545523
.stabn 68,0,446,.L_67E0-_fb_ctor__legoscript
.L_67E1:
	mov dword ptr [_G_EDGECOLOURS+732], 4281545523
.stabn 68,0,446,.L_67E1-_fb_ctor__legoscript
.L_67E2:
	mov dword ptr [_G_EDGECOLOURS+736], 4281545523
.stabn 68,0,446,.L_67E2-_fb_ctor__legoscript
.L_67E3:
	mov dword ptr [_G_EDGECOLOURS+740], 4281545523
.stabn 68,0,446,.L_67E3-_fb_ctor__legoscript
.L_67E4:
	mov dword ptr [_G_EDGECOLOURS+744], 4281545523
.stabn 68,0,446,.L_67E4-_fb_ctor__legoscript
.L_67E5:
	mov dword ptr [_G_EDGECOLOURS+748], 4281545523
.stabn 68,0,446,.L_67E5-_fb_ctor__legoscript
.L_67E6:
	mov dword ptr [_G_EDGECOLOURS+756], 4281545523
.stabn 68,0,446,.L_67E6-_fb_ctor__legoscript
.L_67E7:
	mov dword ptr [_G_EDGECOLOURS+800], 4281545523
.stabn 68,0,446,.L_67E7-_fb_ctor__legoscript
.L_67E8:
	mov dword ptr [_G_EDGECOLOURS+1188], 4281545523
.stabn 68,0,446,.L_67E8-_fb_ctor__legoscript
.L_67E9:
	mov dword ptr [_G_EDGECOLOURS+320], 4281545523
.stabn 68,0,446,.L_67E9-_fb_ctor__legoscript
.L_67EA:
	mov dword ptr [_G_EDGECOLOURS+324], 4281545523
.stabn 68,0,446,.L_67EA-_fb_ctor__legoscript
.L_67EB:
	mov dword ptr [_G_EDGECOLOURS+328], 4281545523
.stabn 68,0,446,.L_67EB-_fb_ctor__legoscript
.L_67EC:
	mov dword ptr [_G_EDGECOLOURS+348], 4281545523
.stabn 68,0,446,.L_67EC-_fb_ctor__legoscript
.L_67ED:
	mov dword ptr [_G_EDGECOLOURS+1200], 4281545523
.stabn 68,0,446,.L_67ED-_fb_ctor__legoscript
.L_67EE:
	mov dword ptr [_G_EDGECOLOURS+40180], 4281545523
.stabn 68,0,446,.L_67EE-_fb_ctor__legoscript
.L_67EF:
	mov dword ptr [_G_EDGECOLOURS+40184], 4281545523
.stabn 68,0,446,.L_67EF-_fb_ctor__legoscript
.L_67F0:
	mov dword ptr [_G_EDGECOLOURS+40196], 4281545523
.stabn 68,0,446,.L_67F0-_fb_ctor__legoscript
.L_67F1:
	mov dword ptr [_G_EDGECOLOURS+316], 4038769338
.stabn 68,0,446,.L_67F1-_fb_ctor__legoscript
.L_67F2:
	mov dword ptr [_G_EDGECOLOURS+84], 4031643576
.stabn 68,0,446,.L_67F2-_fb_ctor__legoscript
.L_67F3:
	mov dword ptr [_G_EDGECOLOURS+1176], 4034043277
.stabn 68,0,446,.L_67F3-_fb_ctor__legoscript
.L_67F4:
	mov dword ptr [_G_EDGECOLOURS+1316], 4035304160
.stabn 68,0,446,.L_67F4-_fb_ctor__legoscript
.L_67F5:
	mov dword ptr [_G_EDGECOLOURS+456], 2153719737
.stabn 68,0,446,.L_67F5-_fb_ctor__legoscript
.L_67F6:
	mov dword ptr [_G_EDGECOLOURS+468], 2159721146
.stabn 68,0,446,.L_67F6-_fb_ctor__legoscript
.L_67F7:
	mov dword ptr [_G_EDGECOLOURS+516], 2147483648
.stabn 68,0,446,.L_67F7-_fb_ctor__legoscript
.L_67F8:
	mov dword ptr [_G_EDGECOLOURS+1208], 2162086233
.stabn 68,0,446,.L_67F8-_fb_ctor__legoscript
.L_67F9:
	mov dword ptr [_G_EDGECOLOURS+1356], 2147522931
.stabn 68,0,446,.L_67F9-_fb_ctor__legoscript
.L_67FA:
	mov dword ptr [_G_EDGECOLOURS+1364], 2148162718
.stabn 68,0,446,.L_67FA-_fb_ctor__legoscript
.L_67FB:
	mov dword ptr [_G_EDGECOLOURS+1440], 4039756233
.stabn 68,0,446,.L_67FB-_fb_ctor__legoscript
.L_67FC:
	mov dword ptr [_G_EDGECOLOURS+1448], 3370045785
.stabn 68,0,446,.L_67FC-_fb_ctor__legoscript
.L_67FD:
	mov dword ptr [_G_EDGECOLOURS+1452], 3357747242
.stabn 68,0,446,.L_67FD-_fb_ctor__legoscript
.L_67FE:
	mov dword ptr [_G_EDGECOLOURS+1456], 3361679289
.stabn 68,0,446,.L_67FE-_fb_ctor__legoscript
.L_67FF:
	mov dword ptr [_G_EDGECOLOURS+1460], 3361084484
.stabn 68,0,446,.L_67FF-_fb_ctor__legoscript
.L_6800:
	mov dword ptr [_G_EDGECOLOURS+1468], 3358281495
.stabn 68,0,446,.L_6800-_fb_ctor__legoscript
.L_6801:
	mov dword ptr [_G_EDGECOLOURS+41404], 2149101351
.stabn 68,0,446,.L_6801-_fb_ctor__legoscript
.L_6802:
	mov dword ptr [_G_EDGECOLOURS+41464], 3359116032
.stabn 68,0,446,.L_6802-_fb_ctor__legoscript
.L_6803:
	mov dword ptr [_G_EDGECOLOURS+300], 4281884843
.stabn 68,0,446,.L_6803-_fb_ctor__legoscript
.L_6804:
	mov dword ptr [_G_EDGECOLOURS+304], 4287137673
.stabn 68,0,446,.L_6804-_fb_ctor__legoscript
.L_6805:
	mov dword ptr [_G_EDGECOLOURS+528], 4287137673
.stabn 68,0,446,.L_6805-_fb_ctor__legoscript
.L_6806:
	mov dword ptr [_G_EDGECOLOURS+532], 4281642203
.stabn 68,0,446,.L_6806-_fb_ctor__legoscript
.L_6807:
	mov dword ptr [_G_EDGECOLOURS+260], 4281545523
.stabn 68,0,446,.L_6807-_fb_ctor__legoscript
.L_6808:
	mov dword ptr [_G_EDGECOLOURS+1024], 4286611584
.stabn 68,0,446,.L_6808-_fb_ctor__legoscript
.L_6809:
	mov dword ptr [_G_EDGECOLOURS+1092], 4281545523
.stabn 68,0,446,.L_6809-_fb_ctor__legoscript
.L_680A:
	mov dword ptr [_G_EDGECOLOURS+1296], 4281545523
.stabn 68,0,446,.L_680A-_fb_ctor__legoscript
.L_680B:
	mov dword ptr [_G_EDGECOLOURS+1400], 4281545523
.stabn 68,0,446,.L_680B-_fb_ctor__legoscript
.L_680C:
	mov dword ptr [_G_EDGECOLOURS+1500], 4281545523
.stabn 68,0,446,.L_680C-_fb_ctor__legoscript
.L_680D:
	mov dword ptr [_G_EDGECOLOURS+1624], 4281545523
.stabn 68,0,446,.L_680D-_fb_ctor__legoscript
.L_680E:
	mov dword ptr [_G_EDGECOLOURS+1796], 4281545523
.stabn 68,0,446,.L_680E-_fb_ctor__legoscript
.L_680F:
	mov dword ptr [_G_EDGECOLOURS+1960], 4281545523
.stabn 68,0,446,.L_680F-_fb_ctor__legoscript
.L_6810:
	mov dword ptr [_G_EDGECOLOURS+1984], 4281545523
.stabn 68,0,446,.L_6810-_fb_ctor__legoscript
.L_6811:
	mov dword ptr [_G_EDGECOLOURS+2016], 4281545523
.stabn 68,0,446,.L_6811-_fb_ctor__legoscript
.L_6812:
	mov dword ptr [_G_EDGECOLOURS+2044], 4281545523
.stabn 68,0,446,.L_6812-_fb_ctor__legoscript
.L_6813:
	mov dword ptr [_G_EDGECOLOURS+40008], 4281545523
.stabn 68,0,446,.L_6813-_fb_ctor__legoscript
.L_6814:
	mov dword ptr [_G_EDGECOLOURS+40040], 4281545523
.stabn 68,0,446,.L_6814-_fb_ctor__legoscript
.L_6815:
	mov dword ptr [_G_EDGECOLOURS+40104], 4281545523
.stabn 68,0,446,.L_6815-_fb_ctor__legoscript
.L_6816:
	mov dword ptr [_G_EDGECOLOURS+40120], 4281545523
.stabn 68,0,446,.L_6816-_fb_ctor__legoscript
.L_6817:
	mov dword ptr [_G_EDGECOLOURS+40124], 4281545523
.stabn 68,0,446,.L_6817-_fb_ctor__legoscript
.L_6818:
	mov dword ptr [_G_EDGECOLOURS+40280], 4286611584
.stabn 68,0,446,.L_6818-_fb_ctor__legoscript
.L_6819:
	mov dword ptr [_G_EDGECOLOURS+40292], 4281545523
.stabn 68,0,446,.L_6819-_fb_ctor__legoscript
.L_681A:
	mov dword ptr [_G_EDGECOLOURS+40312], 4281545523
.stabn 68,0,446,.L_681A-_fb_ctor__legoscript
.L_681B:
	mov dword ptr [_G_EDGECOLOURS+40904], 4281545523
.stabn 68,0,446,.L_681B-_fb_ctor__legoscript
.L_681C:
	mov dword ptr [_G_EDGECOLOURS+41232], 4286611584
.stabn 68,0,446,.L_681C-_fb_ctor__legoscript
.L_681D:
	mov dword ptr [_G_EDGECOLOURS+41280], 4281545523
.stabn 68,0,446,.L_681D-_fb_ctor__legoscript
.L_681E:
	mov dword ptr [_G_EDGECOLOURS+41284], 4281545523
.stabn 68,0,446,.L_681E-_fb_ctor__legoscript
.L_681F:
	mov dword ptr [_G_EDGECOLOURS+41288], 4281545523
.stabn 68,0,446,.L_681F-_fb_ctor__legoscript
.L_6820:
	mov dword ptr [_G_EDGECOLOURS+41292], 4281545523
.stabn 68,0,446,.L_6820-_fb_ctor__legoscript
.L_6821:
	mov dword ptr [_G_EDGECOLOURS+41512], 4281545523
.stabn 68,0,446,.L_6821-_fb_ctor__legoscript
.L_6822:
	mov dword ptr [_G_EDGECOLOURS+41936], 4281545523
.stabn 68,0,446,.L_6822-_fb_ctor__legoscript
.L_6823:
	mov dword ptr [_G_EDGECOLOURS+264], 2148045492
.stabn 68,0,446,.L_6823-_fb_ctor__legoscript
.L_6824:
	mov dword ptr [_G_EDGECOLOURS+268], 2160708041
.stabn 68,0,446,.L_6824-_fb_ctor__legoscript
.L_6825:
	mov dword ptr [_G_EDGECOLOURS+40140], 2149101351
.stabn 68,0,446,.L_6825-_fb_ctor__legoscript
.L_6826:
	mov dword ptr [_G_EDGECOLOURS+40144], 2147814758
.stabn 68,0,446,.L_6826-_fb_ctor__legoscript
.L_6827:
	mov dword ptr [_G_EDGECOLOURS+40172], 2162086233
.stabn 68,0,446,.L_6827-_fb_ctor__legoscript
.L_6828:
	mov dword ptr [_G_EDGECOLOURS+64], 4281545523
.stabn 68,0,446,.L_6828-_fb_ctor__legoscript
.L_6829:
	mov dword ptr [_G_EDGECOLOURS+96], 4281545523
.stabn 68,0,446,.L_6829-_fb_ctor__legoscript
.L_682A:
	mov dword ptr [_G_EDGECOLOURS+1972], 4281545523
.stabn 68,0,446,.L_682A-_fb_ctor__legoscript
.L_682B:
	mov dword ptr [_G_EDGECOLOURS+1976], 4281545523
.stabn 68,0,446,.L_682B-_fb_ctor__legoscript
.L_682C:
	mov dword ptr [_G_EDGECOLOURS+1980], 4281545523
.stabn 68,0,446,.L_682C-_fb_ctor__legoscript
.L_682D:
	mov dword ptr [_G_EDGECOLOURS+40188], 285212671
.stabn 68,0,446,.L_682D-_fb_ctor__legoscript
.L_682E:
	mov dword ptr [_G_EDGECOLOURS+40000], 4281545523
.stabn 68,0,446,.L_682E-_fb_ctor__legoscript
.L_682F:
.L_34C0:
###include "Loader\Include\Colours.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\CLIPBOARD.BAS",132,0,0,.L_6830
.L_6830:
###include "Loader\Modules\Clipboard.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\GL\\WINDOWS\\GL.BI",132,0,0,.L_6831
.L_6831:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\GL\\WINDOWS\\GLEXT.BI",132,0,0,.L_6832
.L_6832:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\GL\\WINDOWS\\GLU.BI",132,0,0,.L_6833
.L_6833:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\GL\\GLUT.BI",132,0,0,.L_6834
.L_6834:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\FBGFX.BI",132,0,0,.L_6835
.L_6835:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\FREEBASIC-1.10.0-WINLIBS-GCC-9.3.0\\INC\\WIN\\MMSYSTEM.BI",132,0,0,.L_6836
.L_6836:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\RESIZABLEGL.BAS",132,0,0,.L_6837
.L_6837:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\INITGL.BAS",132,0,0,.L_6838
.L_6838:
###include "Loader\Modules\InitGL.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MATH3D.BAS",132,0,0,.L_6839
.L_6839:
###include "Loader\Modules\Math3D.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\NORMALS.BAS",132,0,0,.L_683A
.L_683A:
###include "Loader\Modules\Normals.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MATRIX.BAS",132,0,0,.L_683B
.L_683B:
	push edi
	push esi
	mov edi, offset _TMATRIXSTACK
	mov esi, offset _G_TIDENTITYMATRIX
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
.stabn 68,0,36,.L_682F-_fb_ctor__legoscript
.L_683C:
###include "Loader\Modules\Matrix.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\MODEL.BAS",132,0,0,.L_683D
.L_683D:
.L_4125:
	mov dword ptr [ebp-4], 0
.L_4129:
.L_412A:
.stabn 68,0,599,.L_683C-_fb_ctor__legoscript
.L_683E:
	mov eax, dword ptr [ebp-4]
	and eax, 1
	je .L_412B
	mov dword ptr [ebp-8], 1431655765
	jmp .L_65F9
.L_412B:
	mov dword ptr [ebp-8], -1431655766
.L_65F9:
	mov eax, dword ptr [ebp-4]
	mov ebx, dword ptr [ebp-8]
	mov dword ptr [_MALESTIPPLE+eax*4], ebx
.stabn 68,0,600,.L_683E-_fb_ctor__legoscript
.L_683F:
	mov ebx, dword ptr [ebp-4]
	and ebx, 1
	je .L_412D
	mov dword ptr [ebp-12], -1431655766
	jmp .L_65FA
.L_412D:
	mov dword ptr [ebp-12], 1431655765
.L_65FA:
	mov ebx, dword ptr [ebp-4]
	mov eax, dword ptr [ebp-12]
	mov dword ptr [_FEMALESTIPPLE+ebx*4], eax
.stabn 68,0,601,.L_683F-_fb_ctor__legoscript
.L_6840:
.L_412F:
.L_4127:
	inc dword ptr [ebp-4]
.L_4126:
	cmp dword ptr [ebp-4], 31
	jle .L_4129
.L_4128:
.L_4130:
.stabn 68,0,602,.L_6840-_fb_ctor__legoscript
.L_6841:
###include "Loader\Modules\Model.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LS2LDR.BAS",132,0,0,.L_6842
.L_6842:
	push 255
	push 0
	push 1
	push offset __ZN12PARTSTRUCTLSD1Ev
	push offset __ZN12PARTSTRUCTLSC1Ev
	push 128
	push offset _G_TPART
	call _fb_ArrayRedimObj
	add esp, 28
.stabn 68,0,101,.L_6841-_fb_ctor__legoscript
.L_6843:
	push 255
	push 0
	push 1
	push 0
	push -1
	push 16
	push offset _G_TCONN
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,102,.L_6843-_fb_ctor__legoscript
.L_6844:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSFUNCTIONS.BAS",132,0,0,.L_6845
.L_6845:
.L_4514:
	push 0
	push 7
	push offset _Lt_4515
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrInit@20
.stabn 68,0,2,.L_6844-_fb_ctor__legoscript
.L_6846:
.L_4516:
	mov dword ptr [ebp-28], 0
	push -1
	lea eax, [ebp-12]
	push eax
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-32], eax
	jmp .L_4518
.L_451B:
.L_451C:
.stabn 68,0,3,.L_6846-_fb_ctor__legoscript
.L_6847:
	mov eax, dword ptr [ebp-12]
	add eax, dword ptr [ebp-28]
	movzx ebx, byte ptr [eax]
	movsx eax, byte ptr [_G_BSEPARATORS+ebx]
	or eax, 1
	mov bl, al
	mov eax, dword ptr [ebp-12]
	add eax, dword ptr [ebp-28]
	movzx ecx, byte ptr [eax]
	mov byte ptr [_G_BSEPARATORS+ecx], bl
.stabn 68,0,4,.L_6847-_fb_ctor__legoscript
.L_6848:
.L_451D:
.L_4519:
	inc dword ptr [ebp-28]
.L_4518:
	mov ebx, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], ebx
	jle .L_451B
.L_451A:
.L_451E:
.stabn 68,0,5,.L_6848-_fb_ctor__legoscript
.L_6849:
	push 0
	push 2
	push offset _Lt_26D3
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrInit@20
.stabn 68,0,6,.L_6849-_fb_ctor__legoscript
.L_684A:
.L_451F:
	mov dword ptr [ebp-28], 0
	push -1
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrLen@8
	dec eax
	mov dword ptr [ebp-32], eax
	jmp .L_4521
.L_4524:
.L_4525:
.stabn 68,0,7,.L_684A-_fb_ctor__legoscript
.L_684B:
	mov eax, dword ptr [ebp-24]
	add eax, dword ptr [ebp-28]
	movzx ebx, byte ptr [eax]
	movsx eax, byte ptr [_G_BSEPARATORS+ebx]
	or eax, 2
	mov bl, al
	mov eax, dword ptr [ebp-24]
	add eax, dword ptr [ebp-28]
	movzx ecx, byte ptr [eax]
	mov byte ptr [_G_BSEPARATORS+ecx], bl
.stabn 68,0,8,.L_684B-_fb_ctor__legoscript
.L_684C:
.L_4526:
.L_4522:
	inc dword ptr [ebp-28]
.L_4521:
	mov ebx, dword ptr [ebp-32]
	cmp dword ptr [ebp-28], ebx
	jle .L_4524
.L_4523:
.L_4527:
.stabn 68,0,9,.L_684C-_fb_ctor__legoscript
.L_684D:
	lea ebx, [ebp-24]
	push ebx
	call _fb_StrDelete@4
	lea ebx, [ebp-12]
	push ebx
	call _fb_StrDelete@4
.L_4528:
.stabn 68,0,10,.L_684D-_fb_ctor__legoscript
.L_684E:
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LS2LDR.BAS",132,0,0,.L_684F
.L_684F:
###include "LS2LDR.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\PARTSEARCH.BAS",132,0,0,.L_6850
.L_6850:
	push 0
	push 0
	push 1
	push 0
	push -1
	push 4
	push offset _G_LPARTINDEX
	call _fb_ArrayRedimEx
	add esp, 28
.stabn 68,0,56,.L_684E-_fb_ctor__legoscript
.L_6851:
	call _LOADPARTNAMES@0
.stabn 68,0,271,.L_6851-_fb_ctor__legoscript
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\COMBOBOX.BAS",132,0,0,.L_6852
.L_6852:
.L_6853:
	call _LOADCONFIG@0
.stabn 68,0,97,.L_6853-_fb_ctor__legoscript
.L_6854:
###include "ComboBox.bas"
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_6855
.L_6855:
##end sub
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSMENU.BAS",132,0,0,.L_6856
.L_6856:
###include "LsModules\LSMenu.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSVIEWER.BAS",132,0,0,.L_6857
.L_6857:
###include "LsModules\LSViewer.bas"
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LSACTIONS.BAS",132,0,0,.L_6858
.L_6858:
###include "LSModules\LSActions.bas"
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_6859
.L_6859:
##end function
##static shared as long g_iPrevTopRow = 0 , g_iPrevRowCount = 0 , g_RowDigits = 2
##static shared as zstring*128 g_zRows
##static shared as SearchQueryContext g_SQCtx
##static shared as string sLastSearch
##end sub
##end sub
##end sub
##end sub
##end function
##end sub
##end function
##end sub   
##end sub
##static shared as any ptr OrgEditProc
##end function
##end function
##end sub
##sAppName = "LegoScript"
	push 0
	push 11
	push offset _Lt_37A8
	push -1
	push offset _SAPPNAME
	call _fb_StrAssign@20
.stabn 68,0,694,.L_6854-_fb_ctor__legoscript
.L_685A:
##InitCommonControls()
	call _InitCommonControls@0
.stabn 68,0,695,.L_685A-_fb_ctor__legoscript
.L_685B:
##if LoadLibrary("Riched20.dll")=0 then
	push offset _Lt_65E7
	call _LoadLibraryA@4
	test eax, eax
	jne .L_65E9
.L_65EA:
.stabn 68,0,696,.L_685B-_fb_ctor__legoscript
.L_685C:
##  MessageBox(null,"Failed To Load richedit component",null,MB_ICONERROR)
	push 16
	push 0
	push offset _Lt_65EB
	push 0
	call _MessageBoxA@16
.stabn 68,0,697,.L_685C-_fb_ctor__legoscript
.L_685D:
##  end
	push 0
	call _fb_End@4
.stabn 68,0,698,.L_685D-_fb_ctor__legoscript
.L_685E:
##end if
.L_65EC:
.L_65E9:
.L_65E8:
##g_FindRepMsg = RegisterWindowMessage(FINDMSGSTRING) [Macro Expansion: FINDMSGSTRINGA ] ) [Macro Expansion: "commdlg_FindReplace" ] )
	push offset _Lt_65ED
	call _RegisterWindowMessageA@4
	mov dword ptr [_G_FINDREPMSG], eax
.stabn 68,0,700,.L_685E-_fb_ctor__legoscript
.L_685F:
##end function
##SetConsoleCtrlHandler( @BeforeExit , TRUE )
	push -1
	push offset _BEFOREEXIT@4
	call _SetConsoleCtrlHandler@8
.stabn 68,0,705,.L_685F-_fb_ctor__legoscript
.L_6860:
##g_AppInstance = GetModuleHandle(null)
	push 0
	call _GetModuleHandleA@4
	mov dword ptr [_G_APPINSTANCE], eax
.stabn 68,0,707,.L_6860-_fb_ctor__legoscript
.L_6861:
##WinMain() '<- main function
	call _WINMAIN@0
.stabn 68,0,708,.L_6861-_fb_ctor__legoscript
.L_6862:
##g_DoQuit = 1
	mov byte ptr [_G_DOQUIT], 1
.stabn 68,0,709,.L_6862-_fb_ctor__legoscript
###if 0
##   3865 BP10 #7 s69 = 3001p11 B1 y90 c1;   B1 s1 = 3001p11 B2 #2 c5;   B2 s1 = 3001p11 B3 #3 c6;   B3 c5 = 3001p11 B4 #4 s1;   B4 c1 = 4070 B5 #5 s2;   003238a P1 #2 c1 = 003238b P2 #4 s1;#endif
.L_0004:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,719,.L_0004-_fb_ctor__legoscript
	.stabn 192,0,0,.L_0003-_fb_ctor__legoscript
	.stabs "SPATH:13",128,0,0,-12
	.stabn 192,0,0,.L_245F-_fb_ctor__legoscript
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_2463-_fb_ctor__legoscript
	.stabn 192,0,0,.L_2468-_fb_ctor__legoscript
	.stabn 224,0,0,.L_246A-_fb_ctor__legoscript
	.stabn 224,0,0,.L_246B-_fb_ctor__legoscript
	.stabn 224,0,0,.L_246C-_fb_ctor__legoscript
	.stabs "SPATH:13",128,0,0,-12
	.stabn 192,0,0,.L_2470-_fb_ctor__legoscript
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_2473-_fb_ctor__legoscript
	.stabn 192,0,0,.L_2478-_fb_ctor__legoscript
	.stabn 224,0,0,.L_247A-_fb_ctor__legoscript
	.stabn 224,0,0,.L_247B-_fb_ctor__legoscript
	.stabn 224,0,0,.L_247C-_fb_ctor__legoscript
	.stabn 192,0,0,.L_34BF-_fb_ctor__legoscript
	.stabn 224,0,0,.L_34C0-_fb_ctor__legoscript
	.stabs "IY:1",128,0,0,-4
	.stabn 192,0,0,.L_4125-_fb_ctor__legoscript
	.stabn 192,0,0,.L_412A-_fb_ctor__legoscript
	.stabn 224,0,0,.L_412F-_fb_ctor__legoscript
	.stabn 224,0,0,.L_4130-_fb_ctor__legoscript
	.stabs "SSEPARATORS:13",128,0,0,-12
	.stabs "SOPERATORS:13",128,0,0,-24
	.stabn 192,0,0,.L_4514-_fb_ctor__legoscript
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_4516-_fb_ctor__legoscript
	.stabn 192,0,0,.L_451C-_fb_ctor__legoscript
	.stabn 224,0,0,.L_451D-_fb_ctor__legoscript
	.stabn 224,0,0,.L_451E-_fb_ctor__legoscript
	.stabs "N:1",128,0,0,-28
	.stabn 192,0,0,.L_451F-_fb_ctor__legoscript
	.stabn 192,0,0,.L_4525-_fb_ctor__legoscript
	.stabn 224,0,0,.L_4526-_fb_ctor__legoscript
	.stabn 224,0,0,.L_4527-_fb_ctor__legoscript
	.stabn 224,0,0,.L_4528-_fb_ctor__legoscript
	.stabn 192,0,0,.L_65EA-_fb_ctor__legoscript
	.stabn 224,0,0,.L_65EC-_fb_ctor__legoscript
	.stabn 224,0,0,.L_0004-_fb_ctor__legoscript
.L_6863:
	.stabs "",36,0,0,.L_6863-_fb_ctor__legoscript
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LSMODULES\\LAYOUT.BAS",132,0,0,.L_6867
.L_6867:
	.stabs "__ZN10FONTSTRUCTC1Ev:f7",36,0,69,__ZN10FONTSTRUCTC1Ev
	.stabs "THIS:v53",160,0,0,8
.balign 16
__ZN10FONTSTRUCTC1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,69,__ZN10FONTSTRUCTC1Ev-__ZN10FONTSTRUCTC1Ev
	mov eax, dword ptr [ebp+8]
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 4
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 16
	mov byte ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 17
	mov byte ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 18
	mov byte ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 19
	movsx ebx, byte ptr [eax]
	and ebx, 4294967294
	mov eax, dword ptr [ebp+8]
	add eax, 19
	mov byte ptr [eax], bl
	mov ebx, dword ptr [ebp+8]
	add ebx, 19
	movsx eax, byte ptr [ebx]
	and eax, 4294967293
	mov ebx, dword ptr [ebp+8]
	add ebx, 19
	mov byte ptr [ebx], al
.L_21FD:
.L_21FE:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,69,.L_21FE-__ZN10FONTSTRUCTC1Ev
	.stabn 192,0,0,.L_21FD-__ZN10FONTSTRUCTC1Ev
	.stabn 224,0,0,.L_21FE-__ZN10FONTSTRUCTC1Ev
.L_6868:
	.stabs "",36,0,0,.L_6868-__ZN10FONTSTRUCTC1Ev
	.stabs "__ZN10FONTSTRUCTaSERKS_:f7",36,0,69,__ZN10FONTSTRUCTaSERKS_
	.stabs "THIS:v53",160,0,0,8
	.stabs "__FB_RHS__:v53",160,0,0,12
.balign 16
__ZN10FONTSTRUCTaSERKS_:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,69,__ZN10FONTSTRUCTaSERKS_-__ZN10FONTSTRUCTaSERKS_
.L_21FF:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	push 0
	push -1
	mov ecx, dword ptr [ebp+12]
	add ecx, 4
	lea ebx, [ecx]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 4
	lea ecx, [ebx]
	push ecx
	call _fb_StrAssign@20
	mov ecx, dword ptr [ebp+12]
	add ecx, 16
	mov ebx, dword ptr [ebp+8]
	add ebx, 16
	mov al, byte ptr [ecx]
	mov byte ptr [ebx], al
	mov eax, dword ptr [ebp+12]
	add eax, 17
	mov ebx, dword ptr [ebp+8]
	add ebx, 17
	mov cl, byte ptr [eax]
	mov byte ptr [ebx], cl
	mov ecx, dword ptr [ebp+12]
	add ecx, 18
	mov ebx, dword ptr [ebp+8]
	add ebx, 18
	mov al, byte ptr [ecx]
	mov byte ptr [ebx], al
	mov eax, dword ptr [ebp+8]
	add eax, 19
	movsx ebx, byte ptr [eax]
	and ebx, 4294967294
	mov eax, dword ptr [ebp+12]
	add eax, 19
	movsx ecx, byte ptr [eax]
	and ecx, 1
	and ecx, 1
	or ebx, ecx
	mov ecx, dword ptr [ebp+8]
	add ecx, 19
	mov byte ptr [ecx], bl
	mov ebx, dword ptr [ebp+8]
	add ebx, 19
	movsx ecx, byte ptr [ebx]
	and ecx, 4294967293
	mov ebx, dword ptr [ebp+12]
	add ebx, 19
	movsx eax, byte ptr [ebx]
	sar eax, 1
	mov ebx, eax
	and ebx, 1
	and ebx, 1
	shl ebx, 1
	or ecx, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, 19
	mov byte ptr [ebx], cl
.L_2200:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,69,.L_2200-__ZN10FONTSTRUCTaSERKS_
	.stabn 192,0,0,.L_21FF-__ZN10FONTSTRUCTaSERKS_
	.stabn 224,0,0,.L_2200-__ZN10FONTSTRUCTaSERKS_
.L_6869:
	.stabs "",36,0,0,.L_6869-__ZN10FONTSTRUCTaSERKS_
	.stabs "__ZN10FONTSTRUCTD1Ev:f7",36,0,69,__ZN10FONTSTRUCTD1Ev
	.stabs "THIS:v53",160,0,0,8
.balign 16
__ZN10FONTSTRUCTD1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,69,__ZN10FONTSTRUCTD1Ev-__ZN10FONTSTRUCTD1Ev
.L_2203:
.L_2204:
	mov eax, dword ptr [ebp+8]
	add eax, 4
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,69,.L_2204-__ZN10FONTSTRUCTD1Ev
	.stabn 192,0,0,.L_2203-__ZN10FONTSTRUCTD1Ev
	.stabn 224,0,0,.L_2204-__ZN10FONTSTRUCTD1Ev
.L_686A:
	.stabs "",36,0,0,.L_686A-__ZN10FONTSTRUCTD1Ev
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_686B
.L_686B:
	.stabs "__ZN11FORMCONTEXTC1Ev:f7",36,0,86,__ZN11FORMCONTEXTC1Ev
	.stabs "THIS:v428",160,0,0,8
.balign 16
__ZN11FORMCONTEXTC1Ev:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,86,__ZN11FORMCONTEXTC1Ev-__ZN11FORMCONTEXTC1Ev
	mov eax, dword ptr [ebp+8]
	lea ebx, [eax]
	push edi
	mov edi, ebx
	xor eax, eax
	mov ecx, 6
	rep stosd
	pop edi
	mov ebx, dword ptr [ebp+8]
	add ebx, 24
	lea eax, [ebx]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 192
	rep stosd
	pop edi
	pop eax
	mov eax, dword ptr [ebp+8]
	add eax, 792
	lea ebx, [eax]
	mov dword ptr [ebp-8], ebx
	mov dword ptr [ebp-4], 0
.L_2419:
	push dword ptr [ebp-8]
	call __ZN10FONTSTRUCTC1Ev
	add esp, 4
	add dword ptr [ebp-8], 20
	inc dword ptr [ebp-4]
	cmp dword ptr [ebp-4], 5
	jne .L_2419
.L_2416:
.L_2417:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,86,.L_2417-__ZN11FORMCONTEXTC1Ev
	.stabn 192,0,0,.L_2416-__ZN11FORMCONTEXTC1Ev
	.stabn 224,0,0,.L_2417-__ZN11FORMCONTEXTC1Ev
.L_686C:
	.stabs "",36,0,0,.L_686C-__ZN11FORMCONTEXTC1Ev
	.stabs "__ZN11FORMCONTEXTaSERKS_:f7",36,0,86,__ZN11FORMCONTEXTaSERKS_
	.stabs "THIS:v428",160,0,0,8
	.stabs "__FB_RHS__:v428",160,0,0,12
.balign 16
__ZN11FORMCONTEXTaSERKS_:
	push ebp
	mov ebp, esp
	sub esp, 24
	push ebx
	.stabn 68,0,86,__ZN11FORMCONTEXTaSERKS_-__ZN11FORMCONTEXTaSERKS_
.L_241B:
	mov eax, dword ptr [ebp+8]
	lea ebx, [eax]
	mov eax, dword ptr [ebp+12]
	lea ecx, [eax]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
	mov ecx, dword ptr [ebp+8]
	add ecx, 24
	lea ebx, [ecx]
	mov dword ptr [ebp-8], ebx
	mov ebx, dword ptr [ebp+12]
	add ebx, 24
	lea ecx, [ebx]
	mov dword ptr [ebp-12], ecx
	mov dword ptr [ebp-4], 0
.L_241E:
	push edi
	push esi
	mov edi, dword ptr [ebp-8]
	mov esi, dword ptr [ebp-12]
	mov ecx, 12
	rep movsd
	pop esi
	pop edi
	add dword ptr [ebp-8], 48
	add dword ptr [ebp-12], 48
	inc dword ptr [ebp-4]
	cmp dword ptr [ebp-4], 16
	jne .L_241E
	mov ecx, dword ptr [ebp+8]
	add ecx, 792
	lea ebx, [ecx]
	mov dword ptr [ebp-20], ebx
	mov ebx, dword ptr [ebp+12]
	add ebx, 792
	lea ecx, [ebx]
	mov dword ptr [ebp-24], ecx
	mov dword ptr [ebp-16], 0
.L_2422:
	push dword ptr [ebp-24]
	push dword ptr [ebp-20]
	call __ZN10FONTSTRUCTaSERKS_
	add esp, 8
	add dword ptr [ebp-20], 20
	add dword ptr [ebp-24], 20
	inc dword ptr [ebp-16]
	cmp dword ptr [ebp-16], 5
	jne .L_2422
.L_241C:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,86,.L_241C-__ZN11FORMCONTEXTaSERKS_
	.stabn 192,0,0,.L_241B-__ZN11FORMCONTEXTaSERKS_
	.stabn 224,0,0,.L_241C-__ZN11FORMCONTEXTaSERKS_
.L_686D:
	.stabs "",36,0,0,.L_686D-__ZN11FORMCONTEXTaSERKS_
	.stabs "__ZN11FORMCONTEXTD1Ev:f7",36,0,86,__ZN11FORMCONTEXTD1Ev
	.stabs "THIS:v428",160,0,0,8
.balign 16
__ZN11FORMCONTEXTD1Ev:
	push ebp
	mov ebp, esp
	sub esp, 8
	push ebx
	.stabn 68,0,86,__ZN11FORMCONTEXTD1Ev-__ZN11FORMCONTEXTD1Ev
.L_242A:
.L_242B:
	mov eax, dword ptr [ebp+8]
	add eax, 872
	lea ebx, [eax]
	mov dword ptr [ebp-8], ebx
	mov dword ptr [ebp-4], 0
.L_242D:
	push dword ptr [ebp-8]
	call __ZN10FONTSTRUCTD1Ev
	add esp, 4
	add dword ptr [ebp-8], -20
	inc dword ptr [ebp-4]
	cmp dword ptr [ebp-4], 5
	jne .L_242D
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,86,.L_242B-__ZN11FORMCONTEXTD1Ev
	.stabn 192,0,0,.L_242A-__ZN11FORMCONTEXTD1Ev
	.stabn 224,0,0,.L_242B-__ZN11FORMCONTEXTD1Ev
.L_686E:
	.stabs "",36,0,0,.L_686E-__ZN11FORMCONTEXTD1Ev
	.stabs "__ZN9TABSTRUCTC1Ev:f7",36,0,91,__ZN9TABSTRUCTC1Ev
	.stabs "TABSTRUCT:Tt469=s20HEDIT:470=*21,0,32;SFILENAME:13,32,96;ILINKED:1,128,32;;",128,0,0,0
	.stabs "THIS:v469",160,0,0,8
.balign 16
__ZN9TABSTRUCTC1Ev:
	push ebp
	mov ebp, esp
	.stabn 68,0,91,__ZN9TABSTRUCTC1Ev-__ZN9TABSTRUCTC1Ev
	mov eax, dword ptr [ebp+8]
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 4
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 16
	mov dword ptr [eax], -1
.L_242F:
.L_2430:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,91,.L_2430-__ZN9TABSTRUCTC1Ev
	.stabn 192,0,0,.L_242F-__ZN9TABSTRUCTC1Ev
	.stabn 224,0,0,.L_2430-__ZN9TABSTRUCTC1Ev
.L_686F:
	.stabs "",36,0,0,.L_686F-__ZN9TABSTRUCTC1Ev
	.stabs "__ZN9TABSTRUCTaSERKS_:f7",36,0,91,__ZN9TABSTRUCTaSERKS_
	.stabs "THIS:v469",160,0,0,8
	.stabs "__FB_RHS__:v469",160,0,0,12
.balign 16
__ZN9TABSTRUCTaSERKS_:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,91,__ZN9TABSTRUCTaSERKS_-__ZN9TABSTRUCTaSERKS_
.L_2431:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	push 0
	push -1
	mov ecx, dword ptr [ebp+12]
	add ecx, 4
	lea ebx, [ecx]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 4
	lea ecx, [ebx]
	push ecx
	call _fb_StrAssign@20
	mov ecx, dword ptr [ebp+12]
	add ecx, 16
	mov ebx, dword ptr [ebp+8]
	add ebx, 16
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
.L_2432:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,91,.L_2432-__ZN9TABSTRUCTaSERKS_
	.stabn 192,0,0,.L_2431-__ZN9TABSTRUCTaSERKS_
	.stabn 224,0,0,.L_2432-__ZN9TABSTRUCTaSERKS_
.L_6870:
	.stabs "",36,0,0,.L_6870-__ZN9TABSTRUCTaSERKS_
	.stabs "__ZN9TABSTRUCTD1Ev:f7",36,0,91,__ZN9TABSTRUCTD1Ev
	.stabs "THIS:v469",160,0,0,8
.balign 16
__ZN9TABSTRUCTD1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,91,__ZN9TABSTRUCTD1Ev-__ZN9TABSTRUCTD1Ev
.L_2435:
.L_2436:
	mov eax, dword ptr [ebp+8]
	add eax, 4
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,91,.L_2436-__ZN9TABSTRUCTD1Ev
	.stabn 192,0,0,.L_2435-__ZN9TABSTRUCTD1Ev
	.stabn 224,0,0,.L_2436-__ZN9TABSTRUCTD1Ev
.L_6871:
	.stabs "",36,0,0,.L_6871-__ZN9TABSTRUCTD1Ev
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\INCLUDE\\STRUCTS.BAS",132,0,0,.L_6872
.L_6872:
	.stabs "__ZN8PARTSIZEC1Ev:f7",36,0,162,__ZN8PARTSIZEC1Ev
	.stabs "THIS:v102",160,0,0,8
.balign 16
__ZN8PARTSIZEC1Ev:
	push ebp
	mov ebp, esp
	.stabn 68,0,162,__ZN8PARTSIZEC1Ev-__ZN8PARTSIZEC1Ev
	mov eax, dword ptr [ebp+8]
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	add eax, 4
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	add eax, 8
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	add eax, 12
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	add eax, 16
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
	mov eax, dword ptr [ebp+8]
	add eax, 20
	push dword ptr [_Lt_31F1]
	pop dword ptr [eax]
.L_2449:
.L_244A:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,162,.L_244A-__ZN8PARTSIZEC1Ev
	.stabn 192,0,0,.L_2449-__ZN8PARTSIZEC1Ev
	.stabn 224,0,0,.L_244A-__ZN8PARTSIZEC1Ev
.L_6873:
	.stabs "",36,0,0,.L_6873-__ZN8PARTSIZEC1Ev
	.stabs "__ZN7DATFILEaSERKS_:f7",36,0,176,__ZN7DATFILEaSERKS_
	.stabs "THIS:v101",160,0,0,8
	.stabs "__FB_RHS__:v101",160,0,0,12
.balign 16
__ZN7DATFILEaSERKS_:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,176,__ZN7DATFILEaSERKS_-__ZN7DATFILEaSERKS_
.L_244D:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+8]
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 4
	mov ebx, dword ptr [ebp+8]
	add ebx, 4
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+8]
	add eax, 8
	lea ebx, [eax]
	mov eax, dword ptr [ebp+12]
	add eax, 8
	lea ecx, [eax]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 6
	rep movsd
	pop esi
	pop edi
	pop ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 32
	mov ebx, dword ptr [ebp+8]
	add ebx, 32
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+12]
	add eax, 36
	mov ebx, dword ptr [ebp+8]
	add ebx, 36
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 40
	mov ebx, dword ptr [ebp+8]
	add ebx, 40
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+8]
	add eax, 44
	lea ebx, [eax]
	mov dword ptr [ebp-8], ebx
	mov ebx, dword ptr [ebp+12]
	add ebx, 44
	lea eax, [ebx]
	mov dword ptr [ebp-12], eax
	mov dword ptr [ebp-4], 0
.L_2450:
	push edi
	push esi
	mov edi, dword ptr [ebp-8]
	mov esi, dword ptr [ebp-12]
	mov ecx, 14
	rep movsd
	pop esi
	pop edi
	add dword ptr [ebp-8], 56
	add dword ptr [ebp-12], 56
	inc dword ptr [ebp-4]
	cmp dword ptr [ebp-4], 33554432
	jne .L_2450
.L_244E:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,176,.L_244E-__ZN7DATFILEaSERKS_
	.stabn 192,0,0,.L_244D-__ZN7DATFILEaSERKS_
	.stabn 224,0,0,.L_244E-__ZN7DATFILEaSERKS_
.L_6874:
	.stabs "",36,0,0,.L_6874-__ZN7DATFILEaSERKS_
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LOADER\\MODULES\\RESIZABLEGL.BAS",132,0,0,.L_687C
.L_687C:
	.stabs "__ZN3GFX10FBSUBCLASSEP6HWND__lji@16:f1",36,0,25,__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "HWND:p471=*21",160,0,0,8
	.stabs "IMSG:p1",160,0,0,12
	.stabs "WPARAM:p8",160,0,0,16
	.stabs "LPARAM:p1",160,0,0,20
.balign 16
__ZN3GFX10FBSUBCLASSEP6HWND__lji@16:
	push ebp
	mov ebp, esp
	sub esp, 40
	push ebx
	.stabn 68,0,25,__ZN3GFX10FBSUBCLASSEP6HWND__lji@16-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	mov dword ptr [ebp-4], 0
.L_3788:
.L_687D:
.L_378A:
	cmp dword ptr [ebp+12], 131
	jne .L_378C
.L_378D:
.L_378E:
.stabn 68,0,27,.L_687D-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_687E:
	cmp dword ptr [ebp+16], 0
	je .L_3790
.L_3791:
.stabn 68,0,28,.L_687E-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_687F:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-8], eax
.stabn 68,0,29,.L_687F-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6880:
.L_3792:
	mov eax, dword ptr [ebp+20]
	mov dword ptr [ebp-12], eax
.stabn 68,0,30,.L_6880-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6881:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [__ZN3GFX10G_IOFFLEFTE]
	add dword ptr [eax], ebx
	mov ebx, dword ptr [ebp-12]
	mov dword ptr [ebp-20], ebx
	mov ebx, dword ptr [__ZN3GFX12LSCREENFLAGSE]
	and ebx, 2
	je .L_3794
	mov dword ptr [ebp-16], 0
	jmp .L_6875
.L_3794:
	mov ebx, dword ptr [__ZN3GFX9G_IOFFTOPE]
	mov dword ptr [ebp-16], ebx
.L_6875:
	mov ebx, dword ptr [ebp-20]
	mov eax, dword ptr [ebp-16]
	add dword ptr [ebx+4], eax
.stabn 68,0,31,.L_6881-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6882:
	mov eax, dword ptr [ebp-12]
	mov ebx, dword ptr [__ZN3GFX10G_IOFFLEFTE]
	sub dword ptr [eax+8], ebx
	mov ebx, dword ptr [ebp-12]
	mov eax, dword ptr [__ZN3GFX9G_IOFFTOPE]
	sub dword ptr [ebx+12], eax
.stabn 68,0,32,.L_6882-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6883:
.L_3796:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,39,.L_6883-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6884:
.L_3797:
.L_3790:
.L_378F:
.L_3798:
	jmp .L_378B
.L_378C:
	cmp dword ptr [ebp+12], 532
	jne .L_3799
.L_379A:
.L_379B:
.stabn 68,0,41,.L_6884-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6885:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,42,.L_6885-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6886:
.L_379C:
	jmp .L_378B
.L_3799:
	cmp dword ptr [ebp+12], 5
	jne .L_379D
.L_379E:
.L_379F:
.stabn 68,0,43,.L_6886-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6887:
	mov eax, dword ptr [__ZN3GFX12LSCREENFLAGSE]
	and eax, 2
	je .L_37A1
.L_37A2:
.stabn 68,0,44,.L_6887-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6888:
	mov dword ptr [ebp-20], 0
	mov dword ptr [ebp-16], 0
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	lea eax, [ebp-20]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,45,.L_6888-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6889:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [__ZN3GFX9G_ICLIWIDE], eax
	jne .L_37A3
	mov eax, dword ptr [ebp-8]
	cmp eax, dword ptr [__ZN3GFX9G_ICLIHEIE]
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-24], eax
	jmp .L_6877
.L_37A3:
	mov dword ptr [ebp-24], -1
.L_6877:
	cmp dword ptr [ebp-24], 0
	je .L_37A6
.L_37A7:
.stabn 68,0,46,.L_6889-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_688B:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [__ZN3GFX9G_ICLIWIDE], eax
	mov eax, dword ptr [ebp-8]
	mov dword ptr [__ZN3GFX9G_ICLIHEIE], eax
.stabn 68,0,47,.L_688B-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_688C:
	cmp dword ptr [_G_TMAINCTX+24], 0
	je .L_37A9
	push dword ptr [_G_TMAINCTX+24]
	call _IsWindowVisible@4
	test eax, eax
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-28], ebx
	jmp .L_6878
.L_37A9:
	mov dword ptr [ebp-28], 0
.L_6878:
	cmp dword ptr [ebp-28], 0
	je .L_37AC
.L_37AD:
.stabn 68,0,49,.L_688C-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_688E:
	push 0
	push 0
	push 1025
	push dword ptr [_G_TMAINCTX+24]
	call _SendMessageA@16
.stabn 68,0,51,.L_688E-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_688F:
.L_37AE:
.L_37AC:
.L_37AB:
.L_37AF:
.L_37A6:
.L_37A5:
.L_37B0:
.L_37A1:
.L_37A0:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,56,.L_688F-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6890:
.L_37B1:
	jmp .L_378B
.L_379D:
	cmp dword ptr [ebp+12], 534
	je .L_37B3
.L_37B4:
	cmp dword ptr [ebp+12], 3
	jne .L_37B2
.L_37B3:
.L_37B5:
.stabn 68,0,57,.L_6890-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6891:
	mov dword ptr [ebp-12], 0
	mov dword ptr [ebp-8], 0
	lea eax, [ebp-12]
	push eax
	push dword ptr [ebp+8]
	call _ClientToScreen@8
.stabn 68,0,59,.L_6891-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6892:
	mov eax, dword ptr [ebp-12]
	cmp dword ptr [__ZN3GFX6TOLDPTE], eax
	jne .L_37B6
	mov eax, dword ptr [ebp-8]
	cmp eax, dword ptr [__ZN3GFX6TOLDPTE+4]
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-16], eax
	jmp .L_6879
.L_37B6:
	mov dword ptr [ebp-16], -1
.L_6879:
	cmp dword ptr [ebp-16], 0
	je .L_37B9
.L_37BA:
.stabn 68,0,60,.L_6892-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6894:
	cmp dword ptr [_G_TMAINCTX+24], 0
	je .L_37BB
	push dword ptr [_G_TMAINCTX+24]
	call _IsWindowVisible@4
	test eax, eax
	setne bl
	shr ebx, 1
	sbb ebx, ebx
	mov dword ptr [ebp-20], ebx
	jmp .L_687A
.L_37BB:
	mov dword ptr [ebp-20], 0
.L_687A:
	cmp dword ptr [ebp-20], 0
	je .L_37BE
.L_37BF:
.stabn 68,0,62,.L_6894-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6896:
	push 0
	push 0
	push 1026
	push dword ptr [_G_TMAINCTX+24]
	call _PostMessageA@16
.stabn 68,0,64,.L_6896-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6897:
.L_37C0:
.L_37BE:
.L_37BD:
.L_37C1:
.L_37B9:
.L_37B8:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
.stabn 68,0,68,.L_6897-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6898:
.L_37C2:
	jmp .L_378B
.L_37B2:
	cmp dword ptr [ebp+12], 32
	jne .L_37C3
.L_37C4:
.L_37C5:
.stabn 68,0,69,.L_6898-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_6899:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,70,.L_6899-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689A:
.L_37C6:
	jmp .L_378B
.L_37C3:
	cmp dword ptr [ebp+12], 514
	je .L_37C8
.L_37C9:
	cmp dword ptr [ebp+12], 513
	je .L_37C8
.L_37CA:
	cmp dword ptr [ebp+12], 517
	je .L_37C8
.L_37CB:
	cmp dword ptr [ebp+12], 516
	je .L_37C8
.L_37CC:
	cmp dword ptr [ebp+12], 520
	je .L_37C8
.L_37CD:
	cmp dword ptr [ebp+12], 519
	jne .L_37C7
.L_37C8:
.L_37CE:
.stabn 68,0,71,.L_689A-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689B:
	mov eax, dword ptr [ebp+20]
	and eax, 65535
	mov word ptr [ebp-8], ax
	mov eax, dword ptr [ebp+20]
	shr eax, 16
	mov word ptr [ebp-12], ax
.stabn 68,0,72,.L_689B-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689C:
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,73,.L_689C-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689D:
	movsx eax, word ptr [ebp-8]
	imul eax, dword ptr [__ZN3GFX9G_ISCRWIDE]
	cdq
	idiv dword ptr [ebp-20]
	mov word ptr [ebp-8], ax
.stabn 68,0,74,.L_689D-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689E:
	movsx eax, word ptr [ebp-12]
	imul eax, dword ptr [__ZN3GFX9G_ISCRHEIE]
	cdq
	idiv dword ptr [ebp-16]
	mov word ptr [ebp-12], ax
.stabn 68,0,75,.L_689E-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_689F:
	movzx eax, word ptr [ebp-8]
	and eax, 65535
	movzx eax, ax
	movzx ebx, word ptr [ebp-12]
	and ebx, 65535
	movzx ebx, bx
	shl ebx, 16
	or eax, ebx
	mov ecx, eax
	mov dword ptr [ebp+20], ecx
.stabn 68,0,76,.L_689F-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A0:
.L_37CF:
	jmp .L_378B
.L_37C7:
	cmp dword ptr [ebp+12], 515
	je .L_37D1
.L_37D2:
	cmp dword ptr [ebp+12], 518
	je .L_37D1
.L_37D3:
	cmp dword ptr [ebp+12], 521
	jne .L_37D0
.L_37D1:
.L_37D4:
.stabn 68,0,77,.L_68A0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A1:
	mov ecx, dword ptr [ebp+20]
	and ecx, 65535
	mov word ptr [ebp-8], cx
	mov ecx, dword ptr [ebp+20]
	shr ecx, 16
	mov word ptr [ebp-12], cx
.stabn 68,0,78,.L_68A1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A2:
	lea ecx, [ebp-28]
	push ecx
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,79,.L_68A2-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A3:
	movsx ecx, word ptr [ebp-8]
	imul ecx, dword ptr [__ZN3GFX9G_ISCRWIDE]
	mov eax, ecx
	cdq
	idiv dword ptr [ebp-20]
	mov ecx, eax
	mov word ptr [ebp-8], cx
.stabn 68,0,80,.L_68A3-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A4:
	movsx ecx, word ptr [ebp-12]
	imul ecx, dword ptr [__ZN3GFX9G_ISCRHEIE]
	mov eax, ecx
	cdq
	idiv dword ptr [ebp-16]
	mov ecx, eax
	mov word ptr [ebp-12], cx
.stabn 68,0,81,.L_68A4-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A5:
	movzx ecx, word ptr [ebp-8]
	and ecx, 65535
	movzx ecx, cx
	movzx ebx, word ptr [ebp-12]
	and ebx, 65535
	movzx ebx, bx
	shl ebx, 16
	or ecx, ebx
	mov eax, ecx
	mov dword ptr [ebp+20], eax
.stabn 68,0,82,.L_68A5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A6:
.L_37D5:
	jmp .L_378B
.L_37D0:
	cmp dword ptr [ebp+12], 512
	jne .L_37D6
.L_37D7:
.L_37D8:
.stabn 68,0,83,.L_68A6-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A7:
	mov eax, dword ptr [ebp+20]
	and eax, 65535
	mov word ptr [ebp-8], ax
	mov eax, dword ptr [ebp+20]
	shr eax, 16
	mov word ptr [ebp-12], ax
.stabn 68,0,84,.L_68A7-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A8:
	lea eax, [ebp-28]
	push eax
	push dword ptr [ebp+8]
	call _GetClientRect@8
.stabn 68,0,85,.L_68A8-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68A9:
	movsx eax, word ptr [ebp-8]
	imul eax, dword ptr [__ZN3GFX9G_ISCRWIDE]
	cdq
	idiv dword ptr [ebp-20]
	mov word ptr [ebp-8], ax
.stabn 68,0,86,.L_68A9-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AA:
	movsx eax, word ptr [ebp-12]
	imul eax, dword ptr [__ZN3GFX9G_ISCRHEIE]
	cdq
	idiv dword ptr [ebp-16]
	mov word ptr [ebp-12], ax
.stabn 68,0,87,.L_68AA-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AB:
	movzx eax, word ptr [ebp-8]
	and eax, 65535
	movzx eax, ax
	movzx ebx, word ptr [ebp-12]
	and ebx, 65535
	movzx ebx, bx
	shl ebx, 16
	or eax, ebx
	mov ecx, eax
	mov dword ptr [ebp+20], ecx
.stabn 68,0,88,.L_68AB-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AC:
.L_37D9:
	jmp .L_378B
.L_37D6:
	cmp dword ptr [ebp+12], 132
	je .L_37DB
.L_37DC:
	cmp dword ptr [ebp+12], 160
	je .L_37DB
.L_37DD:
	cmp dword ptr [ebp+12], 12
	je .L_37DB
.L_37DE:
	cmp dword ptr [ebp+12], 174
	je .L_37DB
.L_37DF:
	cmp dword ptr [ebp+12], 32
	jne .L_37DA
.L_37DB:
.L_37E0:
.stabn 68,0,89,.L_68AC-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AD:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,90,.L_68AD-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AE:
.L_37E1:
	jmp .L_378B
.L_37DA:
	cmp dword ptr [ebp+12], 36
	jne .L_37E2
.L_37E3:
.L_37E4:
.stabn 68,0,91,.L_68AE-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68AF:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.stabn 68,0,92,.L_68AF-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B0:
.L_37E5:
	jmp .L_378B
.L_37E2:
	cmp dword ptr [ebp+12], 1114
	jne .L_37E6
.L_37E7:
.L_37E8:
.stabn 68,0,93,.L_68B0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B1:
	cmp dword ptr [__ZN3GFX9LOLDSTYLEE], 0
	je .L_37EA
.L_37EB:
.stabn 68,0,94,.L_68B1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B2:
	mov byte ptr [__ZN3GFX12G_FULLSCREENE], 0
.stabn 68,0,95,.L_68B2-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B3:
	mov dword ptr [__ZN3GFX10G_IOFFLEFTE], 0
	mov dword ptr [__ZN3GFX9G_IOFFTOPE], 0
.stabn 68,0,96,.L_68B3-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B4:
	push 9
	push dword ptr [ebp+8]
	call _ShowWindow@8
.stabn 68,0,97,.L_68B4-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B5:
	push dword ptr [__ZN3GFX9LOLDSTYLEE]
	push -16
	push dword ptr [ebp+8]
	call _SetWindowLongA@12
	mov dword ptr [__ZN3GFX9LOLDSTYLEE], 0
.stabn 68,0,98,.L_68B5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B6:
	push 35
	push 0
	push 0
	push 0
	push 0
	push 4294967294
	push dword ptr [ebp+8]
	call _SetWindowPos@28
.stabn 68,0,99,.L_68B6-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B7:
.L_37EC:
	jmp .L_37E9
.L_37EA:
.L_37ED:
.stabn 68,0,100,.L_68B7-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B8:
	mov byte ptr [__ZN3GFX12G_FULLSCREENE], 1
.stabn 68,0,101,.L_68B8-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68B9:
	push 0
	call _GetSystemMetrics@4
	mov dword ptr [ebp-8], eax
	push 1
	call _GetSystemMetrics@4
	mov dword ptr [ebp-12], eax
.stabn 68,0,102,.L_68B9-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BA:
	cmp dword ptr [__ZN3GFX9G_IASPECTE], 0
	je .L_37EF
.L_37F0:
.stabn 68,0,103,.L_68BA-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BB:
	push 0
	push offset _Lt_0000
	call _fb_StrAllocTempDescZEx@8
	push eax
	mov dword ptr [ebp-32], 0
	lea eax, [ebp-32]
	push eax
	mov dword ptr [ebp-28], 0
	lea eax, [ebp-28]
	push eax
	mov dword ptr [ebp-24], 0
	lea eax, [ebp-24]
	push eax
	mov dword ptr [ebp-20], 0
	lea eax, [ebp-20]
	push eax
	push offset __ZN3GFX9G_ISCRHEIE
	push offset __ZN3GFX9G_ISCRWIDE
	call _fb_GfxScreenInfo32@28
.stabn 68,0,104,.L_68BB-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BC:
	mov dword ptr [ebp-36], 0
	mov dword ptr [ebp-40], 0
.stabn 68,0,105,.L_68BC-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BD:
	mov eax, dword ptr [ebp-12]
	mov dword ptr [ebp-40], eax
	mov eax, dword ptr [__ZN3GFX9G_ISCRWIDE]
	imul eax, dword ptr [ebp-40]
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRHEIE]
	mov dword ptr [ebp-36], eax
.stabn 68,0,106,.L_68BD-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BE:
	mov eax, dword ptr [ebp-8]
	cmp dword ptr [ebp-36], eax
	jle .L_37F6
.L_37F7:
.stabn 68,0,107,.L_68BE-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68BF:
	mov eax, dword ptr [ebp-8]
	mov dword ptr [ebp-36], eax
	mov eax, dword ptr [__ZN3GFX9G_ISCRHEIE]
	imul eax, dword ptr [ebp-36]
	cdq
	idiv dword ptr [__ZN3GFX9G_ISCRWIDE]
	mov dword ptr [ebp-40], eax
.stabn 68,0,108,.L_68BF-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C0:
.L_37F8:
.L_37F6:
.L_37F5:
	mov eax, dword ptr [ebp-8]
	sub eax, dword ptr [ebp-36]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [__ZN3GFX10G_IOFFLEFTE], eax
	mov eax, dword ptr [ebp-12]
	sub eax, dword ptr [ebp-40]
	mov ecx, 2
	cdq
	idiv ecx
	mov dword ptr [__ZN3GFX9G_IOFFTOPE], eax
.stabn 68,0,110,.L_68C0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C1:
.L_37F9:
	jmp .L_37EE
.L_37EF:
.L_37FA:
.stabn 68,0,111,.L_68C1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C2:
	mov dword ptr [__ZN3GFX10G_IOFFLEFTE], 0
	mov dword ptr [__ZN3GFX9G_IOFFTOPE], 0
.stabn 68,0,112,.L_68C2-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C3:
.L_37FB:
.L_37EE:
	push -16
	push dword ptr [ebp+8]
	call _GetWindowLongA@8
	or eax, 268435456
	mov dword ptr [__ZN3GFX9LOLDSTYLEE], eax
.stabn 68,0,114,.L_68C3-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C4:
	push -1879048192
	push -16
	push dword ptr [ebp+8]
	call _SetWindowLongA@12
.stabn 68,0,115,.L_68C4-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C5:
	push 3
	push dword ptr [ebp+8]
	call _ShowWindow@8
.stabn 68,0,116,.L_68C5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C6:
	push 35
	push 0
	push 0
	push 0
	push 0
	push 4294967295
	push dword ptr [ebp+8]
	call _SetWindowPos@28
.stabn 68,0,117,.L_68C6-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C7:
	cmp dword ptr [__ZN3GFX10G_IOFFLEFTE], 0
	jne .L_37FC
	mov eax, dword ptr [__ZN3GFX9G_IOFFTOPE]
	test eax, eax
	setne al
	shr eax, 1
	sbb eax, eax
	mov dword ptr [ebp-16], eax
	jmp .L_687B
.L_37FC:
	mov dword ptr [ebp-16], -1
.L_687B:
	cmp dword ptr [ebp-16], 0
	je .L_37FF
.L_3800:
.stabn 68,0,118,.L_68C7-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68C9:
	push 1377
	push 0
	push 0
	push dword ptr [ebp+8]
	call _RedrawWindow@16
.stabn 68,0,119,.L_68C9-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68CA:
.L_3801:
.L_37FF:
.L_37FE:
.L_3802:
.L_37E9:
.L_3803:
.L_37E6:
.L_3805:
.stabn 68,0,129,.L_68CA-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68CB:
.L_3806:
.L_3804:
.L_378B:
.L_3807:
	movsx eax, byte ptr [__ZN3GFX6G_TEMPE]
	test eax, eax
	je .L_3809
.L_380A:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	call _DefWindowProcA@16
	mov dword ptr [ebp-4], eax
	jmp .L_3789
.L_3809:
.L_380B:
.stabn 68,0,133,.L_68CB-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68CC:
	push dword ptr [ebp+20]
	push dword ptr [ebp+16]
	push dword ptr [ebp+12]
	push dword ptr [ebp+8]
	push dword ptr [__ZN3GFX10LORGFBPROCE]
	call _CallWindowProcA@20
	mov dword ptr [ebp-4], eax
.stabn 68,0,134,.L_68CC-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68CD:
.L_3789:
	mov eax, dword ptr [ebp-4]
	pop ebx
	mov esp, ebp
	pop ebp
	ret 16
	.stabn 68,0,135,.L_3789-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_3788-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_378A-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_378E-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "IRESU:1",128,0,0,-8
	.stabn 192,0,0,.L_3791-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_3792-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3796-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3797-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3798-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_379B-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_379C-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_379F-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "TRC:23",128,0,0,-20
	.stabn 192,0,0,.L_37A2-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37A7-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37AD-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37AE-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37AF-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37B0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37B1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "TNEWPT:154",128,0,0,-12
	.stabn 192,0,0,.L_37B5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37BA-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37BF-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37C0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37C1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37C2-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37C5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37C6-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "XPOS:5",128,0,0,-8
	.stabs "YPOS:5",128,0,0,-12
	.stabs "FBCLI:23",128,0,0,-28
	.stabn 192,0,0,.L_37CE-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37CF-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "XPOS:5",128,0,0,-8
	.stabs "YPOS:5",128,0,0,-12
	.stabs "FBCLI:23",128,0,0,-28
	.stabn 192,0,0,.L_37D4-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37D5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "XPOS:5",128,0,0,-8
	.stabs "YPOS:5",128,0,0,-12
	.stabs "FBCLI:23",128,0,0,-28
	.stabn 192,0,0,.L_37D8-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37D9-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37E0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37E1-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37E4-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37E5-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37E8-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37EB-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37EC-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "IDESKWID:1",128,0,0,-8
	.stabs "IDESKHEI:1",128,0,0,-12
	.stabn 192,0,0,.L_37ED-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "IWID:1",128,0,0,-36
	.stabs "IHEI:1",128,0,0,-40
	.stabn 192,0,0,.L_37F0-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37F7-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37F8-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37F9-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_37FA-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_37FB-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_3800-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3801-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3802-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3803-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_3805-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3806-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3807-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 192,0,0,.L_380A-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_380B-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabn 224,0,0,.L_3789-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
.L_68CE:
	.stabs "",36,0,0,.L_68CE-__ZN3GFX10FBSUBCLASSEP6HWND__lji@16
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\LS2LDR.BAS",132,0,0,.L_68CF
.L_68CF:
	.stabs "__ZN12PARTSTRUCTLSC1Ev:f7",36,0,88,__ZN12PARTSTRUCTLSC1Ev
	.stabs "THIS:v233",160,0,0,8
.balign 16
__ZN12PARTSTRUCTLSC1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,88,__ZN12PARTSTRUCTLSC1Ev-__ZN12PARTSTRUCTLSC1Ev
	mov eax, dword ptr [ebp+8]
	lea ebx, [eax]
	push edi
	mov edi, ebx
	xor eax, eax
	mov ecx, 7
	rep stosd
	pop edi
	mov ebx, dword ptr [ebp+8]
	add ebx, 28
	lea eax, [ebx]
	push eax
	push edi
	mov edi, eax
	xor eax, eax
	mov ecx, 16
	rep stosd
	pop edi
	pop eax
	mov eax, dword ptr [ebp+8]
	add eax, 92
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 104
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 116
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 120
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 124
	mov byte ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 125
	movsx ebx, byte ptr [eax]
	and ebx, 4294967294
	mov eax, dword ptr [ebp+8]
	add eax, 125
	mov byte ptr [eax], bl
	mov ebx, dword ptr [ebp+8]
	add ebx, 125
	movsx eax, byte ptr [ebx]
	and eax, 4294967293
	mov ebx, dword ptr [ebp+8]
	add ebx, 125
	mov byte ptr [ebx], al
.L_450A:
.L_450B:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,88,.L_450B-__ZN12PARTSTRUCTLSC1Ev
	.stabn 192,0,0,.L_450A-__ZN12PARTSTRUCTLSC1Ev
	.stabn 224,0,0,.L_450B-__ZN12PARTSTRUCTLSC1Ev
.L_68D0:
	.stabs "",36,0,0,.L_68D0-__ZN12PARTSTRUCTLSC1Ev
	.stabs "__ZN12PARTSTRUCTLSaSERKS_:f7",36,0,88,__ZN12PARTSTRUCTLSaSERKS_
	.stabs "THIS:v233",160,0,0,8
	.stabs "__FB_RHS__:v233",160,0,0,12
.balign 16
__ZN12PARTSTRUCTLSaSERKS_:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,88,__ZN12PARTSTRUCTLSaSERKS_-__ZN12PARTSTRUCTLSaSERKS_
.L_450C:
	mov eax, dword ptr [ebp+8]
	lea ebx, [eax]
	mov eax, dword ptr [ebp+12]
	lea ecx, [eax]
	push ecx
	push edi
	push esi
	mov edi, ebx
	mov esi, ecx
	mov ecx, 7
	rep movsd
	pop esi
	pop edi
	pop ecx
	mov ecx, dword ptr [ebp+8]
	add ecx, 28
	lea ebx, [ecx]
	mov ecx, dword ptr [ebp+12]
	add ecx, 28
	lea eax, [ecx]
	push edi
	push esi
	mov edi, ebx
	mov esi, eax
	mov ecx, 16
	rep movsd
	pop esi
	pop edi
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 92
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 92
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 104
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 104
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	mov eax, dword ptr [ebp+12]
	add eax, 116
	mov ebx, dword ptr [ebp+8]
	add ebx, 116
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 120
	mov ebx, dword ptr [ebp+8]
	add ebx, 120
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+12]
	add eax, 124
	mov ebx, dword ptr [ebp+8]
	add ebx, 124
	mov cl, byte ptr [eax]
	mov byte ptr [ebx], cl
	mov ecx, dword ptr [ebp+8]
	add ecx, 125
	movsx ebx, byte ptr [ecx]
	and ebx, 4294967294
	mov ecx, dword ptr [ebp+12]
	add ecx, 125
	movsx eax, byte ptr [ecx]
	and eax, 1
	and eax, 1
	or ebx, eax
	mov eax, dword ptr [ebp+8]
	add eax, 125
	mov byte ptr [eax], bl
	mov ebx, dword ptr [ebp+8]
	add ebx, 125
	movsx eax, byte ptr [ebx]
	and eax, 4294967293
	mov ebx, dword ptr [ebp+12]
	add ebx, 125
	movsx ecx, byte ptr [ebx]
	sar ecx, 1
	mov ebx, ecx
	and ebx, 1
	and ebx, 1
	shl ebx, 1
	or eax, ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, 125
	mov byte ptr [ebx], al
.L_450D:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,88,.L_450D-__ZN12PARTSTRUCTLSaSERKS_
	.stabn 192,0,0,.L_450C-__ZN12PARTSTRUCTLSaSERKS_
	.stabn 224,0,0,.L_450D-__ZN12PARTSTRUCTLSaSERKS_
.L_68D1:
	.stabs "",36,0,0,.L_68D1-__ZN12PARTSTRUCTLSaSERKS_
	.stabs "__ZN12PARTSTRUCTLSD1Ev:f7",36,0,88,__ZN12PARTSTRUCTLSD1Ev
	.stabs "THIS:v233",160,0,0,8
.balign 16
__ZN12PARTSTRUCTLSD1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,88,__ZN12PARTSTRUCTLSD1Ev-__ZN12PARTSTRUCTLSD1Ev
.L_4510:
.L_4511:
	mov eax, dword ptr [ebp+8]
	add eax, 104
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 92
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,88,.L_4511-__ZN12PARTSTRUCTLSD1Ev
	.stabn 192,0,0,.L_4510-__ZN12PARTSTRUCTLSD1Ev
	.stabn 224,0,0,.L_4511-__ZN12PARTSTRUCTLSD1Ev
.L_68D2:
	.stabs "",36,0,0,.L_68D2-__ZN12PARTSTRUCTLSD1Ev
	.stabs "C:\\USERS\\KRIS\\DESKTOP\\LS\\WIN32\\COMBOBOX.BAS",132,0,0,.L_68D3
.L_68D3:
	.stabs "__ZN16FILTEREDLISTDUMPC1Ev:f7",36,0,261,__ZN16FILTEREDLISTDUMPC1Ev
	.stabs "FILTEREDLISTDUMP:Tt472=s168SISDONOR:13,0,96;SISALIAS:13,96,96;SISPRECOLORED:13,192,96;SISPATH:13,288,96;SISSHORTCUT:13,384,96;SISMULTICOLOR:13,480,96;SISTEMPLATE:13,576,96;SISPRINTED:13,672,96;SISSTICKERED:13,768,96;SISMOULDED:13,864,96;SISSTICKER:13,960,96;SISHELPER:13,1056,96;SISINVERTED:13,1152,96;SISHIDDEN:13,1248,96;;",128,0,0,0
	.stabs "THIS:v472",160,0,0,8
.balign 16
__ZN16FILTEREDLISTDUMPC1Ev:
	push ebp
	mov ebp, esp
	.stabn 68,0,261,__ZN16FILTEREDLISTDUMPC1Ev-__ZN16FILTEREDLISTDUMPC1Ev
	mov eax, dword ptr [ebp+8]
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 12
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 24
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 36
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 48
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 60
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 72
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 84
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 96
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 108
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 120
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 132
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 144
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 156
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
.L_50C8:
.L_50C9:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,261,.L_50C9-__ZN16FILTEREDLISTDUMPC1Ev
	.stabn 192,0,0,.L_50C8-__ZN16FILTEREDLISTDUMPC1Ev
	.stabn 224,0,0,.L_50C9-__ZN16FILTEREDLISTDUMPC1Ev
.L_68D4:
	.stabs "",36,0,0,.L_68D4-__ZN16FILTEREDLISTDUMPC1Ev
	.stabs "__ZN16FILTEREDLISTDUMPaSERKS_:f7",36,0,261,__ZN16FILTEREDLISTDUMPaSERKS_
	.stabs "THIS:v472",160,0,0,8
	.stabs "__FB_RHS__:v472",160,0,0,12
.balign 16
__ZN16FILTEREDLISTDUMPaSERKS_:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,261,__ZN16FILTEREDLISTDUMPaSERKS_-__ZN16FILTEREDLISTDUMPaSERKS_
.L_50CA:
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 12
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 12
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 24
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 24
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 36
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 36
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 48
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 48
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 60
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 60
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 72
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 72
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 84
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 84
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 96
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 96
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 108
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 108
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 120
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 120
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 132
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 132
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 144
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 144
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 156
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 156
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
.L_50CB:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,261,.L_50CB-__ZN16FILTEREDLISTDUMPaSERKS_
	.stabn 192,0,0,.L_50CA-__ZN16FILTEREDLISTDUMPaSERKS_
	.stabn 224,0,0,.L_50CB-__ZN16FILTEREDLISTDUMPaSERKS_
.L_68D5:
	.stabs "",36,0,0,.L_68D5-__ZN16FILTEREDLISTDUMPaSERKS_
	.stabs "__ZN16FILTEREDLISTDUMPD1Ev:f7",36,0,261,__ZN16FILTEREDLISTDUMPD1Ev
	.stabs "THIS:v472",160,0,0,8
.balign 16
__ZN16FILTEREDLISTDUMPD1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,261,__ZN16FILTEREDLISTDUMPD1Ev-__ZN16FILTEREDLISTDUMPD1Ev
.L_50CE:
.L_50CF:
	mov eax, dword ptr [ebp+8]
	add eax, 156
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 144
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 132
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 120
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 108
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 96
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 84
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 72
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 60
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 48
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 36
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 24
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 12
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,261,.L_50CF-__ZN16FILTEREDLISTDUMPD1Ev
	.stabn 192,0,0,.L_50CE-__ZN16FILTEREDLISTDUMPD1Ev
	.stabn 224,0,0,.L_50CF-__ZN16FILTEREDLISTDUMPD1Ev
.L_68D6:
	.stabs "",36,0,0,.L_68D6-__ZN16FILTEREDLISTDUMPD1Ev
	.stabs "__ZN18SEARCHQUERYCONTEXTC1Ev:f7",36,0,437,__ZN18SEARCHQUERYCONTEXTC1Ev
	.stabs "THIS:v314",160,0,0,8
.balign 16
__ZN18SEARCHQUERYCONTEXTC1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,437,__ZN18SEARCHQUERYCONTEXTC1Ev-__ZN18SEARCHQUERYCONTEXTC1Ev
	mov eax, dword ptr [ebp+8]
	mov byte ptr [eax], 1
	mov eax, dword ptr [ebp+8]
	inc eax
	mov byte ptr [eax], -1
	mov eax, dword ptr [ebp+8]
	add eax, 4
	mov byte ptr [eax], 8
	mov eax, dword ptr [ebp+8]
	add eax, 8
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 12
	mov dword ptr [eax], 1
	mov eax, dword ptr [ebp+8]
	add eax, 16
	mov dword ptr [eax], 1
	mov eax, dword ptr [ebp+8]
	add eax, 20
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 24
	mov dword ptr [eax], 0
	mov eax, dword ptr [ebp+8]
	add eax, 28
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	mov eax, dword ptr [ebp+8]
	add eax, 40
	mov dword ptr [eax], 0
	mov dword ptr [eax+4], 0
	mov dword ptr [eax+8], 0
	push 0
	push 1
	push offset _Lt_0000
	push -1
	mov eax, dword ptr [ebp+8]
	add eax, 52
	lea ebx, [eax]
	push ebx
	call _fb_StrInit@20
	mov ebx, dword ptr [ebp+8]
	add ebx, 64
	mov dword ptr [ebx], 0
	mov ebx, dword ptr [ebp+8]
	add ebx, 68
	mov dword ptr [ebx], 0
	mov ebx, dword ptr [ebp+8]
	add ebx, 72
	mov dword ptr [ebx], 0
	mov ebx, dword ptr [ebp+8]
	add ebx, 76
	mov dword ptr [ebx], 12
	mov ebx, dword ptr [ebp+8]
	add ebx, 80
	mov dword ptr [ebx], 1
	mov ebx, dword ptr [ebp+8]
	add ebx, 84
	mov dword ptr [ebx], 17
	mov ebx, dword ptr [ebp+8]
	add ebx, 88
	mov dword ptr [ebx], 0
	mov dword ptr [ebx+4], 0
	mov dword ptr [ebx+8], 0
.L_52F3:
.L_52F4:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,437,.L_52F4-__ZN18SEARCHQUERYCONTEXTC1Ev
	.stabn 192,0,0,.L_52F3-__ZN18SEARCHQUERYCONTEXTC1Ev
	.stabn 224,0,0,.L_52F4-__ZN18SEARCHQUERYCONTEXTC1Ev
.L_68D7:
	.stabs "",36,0,0,.L_68D7-__ZN18SEARCHQUERYCONTEXTC1Ev
	.stabs "__ZN18SEARCHQUERYCONTEXTaSERKS_:f7",36,0,437,__ZN18SEARCHQUERYCONTEXTaSERKS_
	.stabs "THIS:v314",160,0,0,8
	.stabs "__FB_RHS__:v314",160,0,0,12
.balign 16
__ZN18SEARCHQUERYCONTEXTaSERKS_:
	push ebp
	mov ebp, esp
	sub esp, 12
	push ebx
	.stabn 68,0,437,__ZN18SEARCHQUERYCONTEXTaSERKS_-__ZN18SEARCHQUERYCONTEXTaSERKS_
.L_52F5:
	mov eax, dword ptr [ebp+12]
	mov ebx, dword ptr [ebp+8]
	mov cl, byte ptr [eax]
	mov byte ptr [ebx], cl
	mov ecx, dword ptr [ebp+12]
	inc ecx
	mov ebx, dword ptr [ebp+8]
	inc ebx
	mov al, byte ptr [ecx]
	mov byte ptr [ebx], al
	mov eax, dword ptr [ebp+12]
	add eax, 2
	mov ebx, dword ptr [ebp+8]
	add ebx, 2
	mov cl, byte ptr [eax]
	mov byte ptr [ebx], cl
	mov ecx, dword ptr [ebp+12]
	add ecx, 3
	mov ebx, dword ptr [ebp+8]
	add ebx, 3
	mov al, byte ptr [ecx]
	mov byte ptr [ebx], al
	mov eax, dword ptr [ebp+12]
	add eax, 4
	mov ebx, dword ptr [ebp+8]
	add ebx, 4
	mov cl, byte ptr [eax]
	mov byte ptr [ebx], cl
	mov ecx, dword ptr [ebp+12]
	add ecx, 8
	mov ebx, dword ptr [ebp+8]
	add ebx, 8
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+12]
	add eax, 12
	mov ebx, dword ptr [ebp+8]
	add ebx, 12
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 16
	mov ebx, dword ptr [ebp+8]
	add ebx, 16
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	mov eax, dword ptr [ebp+12]
	add eax, 20
	mov ebx, dword ptr [ebp+8]
	add ebx, 20
	mov ecx, dword ptr [eax]
	mov dword ptr [ebx], ecx
	mov ecx, dword ptr [ebp+12]
	add ecx, 24
	mov ebx, dword ptr [ebp+8]
	add ebx, 24
	mov eax, dword ptr [ecx]
	mov dword ptr [ebx], eax
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 28
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 28
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 40
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 40
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 52
	lea ebx, [eax]
	push ebx
	push -1
	mov ebx, dword ptr [ebp+8]
	add ebx, 52
	lea eax, [ebx]
	push eax
	call _fb_StrAssign@20
	push 0
	push 0
	push -1
	mov eax, dword ptr [ebp+12]
	add eax, 64
	lea ebx, [eax]
	push ebx
	mov ebx, dword ptr [ebp+8]
	add ebx, 64
	lea eax, [ebx]
	push eax
	call _fb_ArrayRedimTo@20
	mov eax, dword ptr [ebp+8]
	add eax, 64
	mov ebx, dword ptr [eax+4]
	mov dword ptr [ebp-4], ebx
	mov ebx, dword ptr [ebp+12]
	add ebx, 64
	mov eax, dword ptr [ebx+4]
	mov dword ptr [ebp-8], eax
	mov eax, dword ptr [ebp+12]
	add eax, 64
	mov ebx, dword ptr [eax+8]
	add ebx, dword ptr [ebp-8]
	mov dword ptr [ebp-12], ebx
.L_52F7:
	mov ebx, dword ptr [ebp-12]
	cmp dword ptr [ebp-8], ebx
	jae .L_52F8
	push 0
	push -1
	push dword ptr [ebp-8]
	push -1
	push dword ptr [ebp-4]
	call _fb_StrAssign@20
	add dword ptr [ebp-4], 12
	add dword ptr [ebp-8], 12
	jmp .L_52F7
.L_52F8:
.L_52F6:
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,437,.L_52F6-__ZN18SEARCHQUERYCONTEXTaSERKS_
	.stabn 192,0,0,.L_52F5-__ZN18SEARCHQUERYCONTEXTaSERKS_
	.stabn 224,0,0,.L_52F6-__ZN18SEARCHQUERYCONTEXTaSERKS_
.L_68D8:
	.stabs "",36,0,0,.L_68D8-__ZN18SEARCHQUERYCONTEXTaSERKS_
	.stabs "__ZN18SEARCHQUERYCONTEXTD1Ev:f7",36,0,437,__ZN18SEARCHQUERYCONTEXTD1Ev
	.stabs "THIS:v314",160,0,0,8
.balign 16
__ZN18SEARCHQUERYCONTEXTD1Ev:
	push ebp
	mov ebp, esp
	push ebx
	.stabn 68,0,437,__ZN18SEARCHQUERYCONTEXTD1Ev-__ZN18SEARCHQUERYCONTEXTD1Ev
.L_52FE:
.L_52FF:
	mov eax, dword ptr [ebp+8]
	add eax, 64
	lea ebx, [eax]
	push ebx
	call _fb_ArrayStrErase@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 52
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	mov eax, dword ptr [ebp+8]
	add eax, 40
	lea ebx, [eax]
	push ebx
	call _fb_StrDelete@4
	mov ebx, dword ptr [ebp+8]
	add ebx, 28
	lea eax, [ebx]
	push eax
	call _fb_StrDelete@4
	pop ebx
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,437,.L_52FF-__ZN18SEARCHQUERYCONTEXTD1Ev
	.stabn 192,0,0,.L_52FE-__ZN18SEARCHQUERYCONTEXTD1Ev
	.stabn 224,0,0,.L_52FF-__ZN18SEARCHQUERYCONTEXTD1Ev
.L_68D9:
	.stabs "",36,0,0,.L_68D9-__ZN18SEARCHQUERYCONTEXTD1Ev
	.stabs "..\\LS\\WIN32\\LEGOSCRIPT.BAS",132,0,0,.L_68DA
.L_68DA:
	.stabs ".L_65F3:f7",36,0,719,__GLOBAL__I
.balign 16
__GLOBAL__I:
	push ebp
	mov ebp, esp
	.stabn 68,0,719,__GLOBAL__I-__GLOBAL__I
.L_65F4:
	push offset _G_TMAINCTX
	call __ZN11FORMCONTEXTC1Ev
	add esp, 4
	push offset _TFILTEREDDUMP
	call __ZN16FILTEREDLISTDUMPC1Ev
	add esp, 4
	push offset _G_SQCTX
	call __ZN18SEARCHQUERYCONTEXTC1Ev
	add esp, 4
.L_65F5:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,719,.L_65F5-__GLOBAL__I
	.stabn 192,0,0,.L_65F4-__GLOBAL__I
	.stabn 224,0,0,.L_65F5-__GLOBAL__I
.L_68DB:
	.stabs "",36,0,0,.L_68DB-__GLOBAL__I
	.stabs ".L_65F6:f7",36,0,719,__GLOBAL__D
.balign 16
__GLOBAL__D:
	push ebp
	mov ebp, esp
	.stabn 68,0,719,__GLOBAL__D-__GLOBAL__D
.L_65F7:
	push offset _G_SQCTX
	call __ZN18SEARCHQUERYCONTEXTD1Ev
	add esp, 4
	push offset _TFILTEREDDUMP
	call __ZN16FILTEREDLISTDUMPD1Ev
	add esp, 4
	push offset __ZN12PARTSTRUCTLSD1Ev
	push offset __ZN12PARTSTRUCTLSC1Ev
	push offset _G_TPART
	call _fb_ArrayEraseObj@12
	push offset _G_TMAINCTX
	call __ZN11FORMCONTEXTD1Ev
	add esp, 4
	push offset __ZN9TABSTRUCTD1Ev
	push offset __ZN9TABSTRUCTC1Ev
	push offset _G_TTABS
	call _fb_ArrayEraseObj@12
.L_65F8:
	mov esp, ebp
	pop ebp
	ret
	.stabn 68,0,719,.L_65F8-__GLOBAL__D
	.stabn 192,0,0,.L_65F7-__GLOBAL__D
	.stabn 224,0,0,.L_65F8-__GLOBAL__D
.L_68DC:
	.stabs "",36,0,0,.L_68DC-__GLOBAL__D

.section .fbctinf
.ascii "-l\0"
.ascii "kernel32\0"
.ascii "-l\0"
.ascii "gdi32\0"
.ascii "-l\0"
.ascii "msimg32\0"
.ascii "-l\0"
.ascii "user32\0"
.ascii "-l\0"
.ascii "version\0"
.ascii "-l\0"
.ascii "advapi32\0"
.ascii "-l\0"
.ascii "imm32\0"
.ascii "-l\0"
.ascii "comctl32\0"
.ascii "-l\0"
.ascii "comdlg32\0"
.ascii "-l\0"
.ascii "ole32\0"
.ascii "-l\0"
.ascii "uuid\0"
.ascii "-l\0"
.ascii "oleaut32\0"
.ascii "-l\0"
.ascii "uxtheme\0"
.ascii "-l\0"
.ascii "shlwapi\0"
.ascii "-l\0"
.ascii "shell32\0"
.ascii "-l\0"
.ascii "msvcrt\0"
.ascii "-l\0"
.ascii "opengl32\0"
.ascii "-l\0"
.ascii "glu32\0"
.ascii "-l\0"
.ascii "glut32\0"
.ascii "-l\0"
.ascii "winmm\0"
.ascii "-mt\0"
.ascii "-gfx\0"


.section .data
.balign 4
_Lt_0000:	.ascii	"\0"

.section .bss
.balign 4
	.lcomm	_Lt_213D,36
	.stabs "_IOBUF:Tt475=s32_PTR:476=*4,0,32;_CNT:1,32,32;_BASE:477=*4,64,32;_FLAG:1,96,32;_FILE:1,128,32;_CHARBUF:1,160,32;_BUFSIZ:1,192,32;_TMPFNAME:478=*4,224,32;;",128,0,0,0
	.stabs "FBARRAY1:Tt473=s36DATA:474=*475,0,32;PTR:479=*475,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:480=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "Lt_213D:S473",40,0,0,_Lt_213D

.section .data
	.stabs "G_BCHANGINGFONT:S16",38,0,0,_G_BCHANGINGFONT
.balign 4
_G_BCHANGINGFONT:
.byte 0

.section .bss
.balign 4
	.lcomm	__ZN14COLOREDCONTROL8HBMALPHAE,4
	.stabs "__ZN14COLOREDCONTROL8HBMALPHAE:S481=*27",40,0,0,__ZN14COLOREDCONTROL8HBMALPHAE
.balign 4
	.lcomm	__ZN14COLOREDCONTROL8HDCALPHAE,4
	.stabs "__ZN14COLOREDCONTROL8HDCALPHAE:S482=*19",40,0,0,__ZN14COLOREDCONTROL8HDCALPHAE
.balign 4
	.lcomm	__ZN14COLOREDCONTROL10CSCOLORIZEE,24
	.stabs "_LIST_ENTRY:Tt487=s8FLINK:488=*487,0,32;BLINK:489=*487,32,32;;",128,0,0,0
	.stabs "_RTL_CRITICAL_SECTION_DEBUG:Tt485=s32TYPE:6,0,16;CREATORBACKTRACEINDEX:6,16,16;CRITICALSECTION:486=*483,32,32;PROCESSLOCKSLIST:487,64,64;ENTRYCOUNT:8,128,32;CONTENTIONCOUNT:8,160,32;FLAGS:8,192,32;CREATORBACKTRACEINDEXHIGH:6,224,16;SPAREWORD:6,240,16;;",128,0,0,0
	.stabs "_RTL_CRITICAL_SECTION_:Tt483=s24DEBUGINFO:484=*485,0,32;LOCKCOUNT:1,32,32;RECURSIONCOUNT:1,64,32;OWNINGTHREAD:490=*7,96,32;LOCKSEMAPHORE:491=*7,128,32;SPINCOUNT:8,160,32;;",128,0,0,0
	.stabs "__ZN14COLOREDCONTROL10CSCOLORIZEE:S483",40,0,0,__ZN14COLOREDCONTROL10CSCOLORIZEE

.section .data
.balign 4
_Lt_2165:	.ascii	"ccColor\0"
.balign 4
_Lt_22BA:	.ascii	"_W^\0"
	.stabs "FBARRAY1:Tt492=s36DATA:493=*469,0,32;PTR:494=*469,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:495=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "G_TTABS:S492",38,0,0,_G_TTABS
.balign 4
_G_TTABS:
.long 0
.long 0
.int 0
.int 20
.int 1
.int 17
.skip 12,0
	.stabs "G_ITABCOUNT:S1",38,0,0,_G_ITABCOUNT
.balign 4
_G_ITABCOUNT:
.long 1
	.stabs "G_ICURTAB:S1",38,0,0,_G_ICURTAB
.balign 4
_G_ICURTAB:
.long 0
.balign 4
_Lt_2438:	.ascii	"verdana\0"
.balign 4
_Lt_2439:	.ascii	"consolas\0"
.balign 4
_Lt_243A:	.ascii	"Wingdings 3\0"

.section .bss
.balign 4
	.lcomm	_G_TMAINCTX,892
	.stabs "G_TMAINCTX:S428",40,0,0,_G_TMAINCTX
.balign 4
	.lcomm	_G_APPINSTANCE,4
	.stabs "G_APPINSTANCE:S496=*297",40,0,0,_G_APPINSTANCE
.balign 4
	.lcomm	_SAPPNAME,12
	.stabs "SAPPNAME:S13",40,0,0,_SAPPNAME
.balign 4
	.lcomm	_G_WNDMENU,4
	.stabs "G_WNDMENU:S497=*324",40,0,0,_G_WNDMENU

.section .data
	.stabs "G_WNDWID:S1",38,0,0,_G_WNDWID
.balign 4
_G_WNDWID:
.long 640
	.stabs "G_WNDHEI:S1",38,0,0,_G_WNDHEI
.balign 4
_G_WNDHEI:
.long 480

.section .bss
.balign 4
	.lcomm	_G_HCURMENU,4
	.stabs "G_HCURMENU:S498=*7",40,0,0,_G_HCURMENU
.balign 4
	.lcomm	_G_CURITEMID,4
	.stabs "G_CURITEMID:S1",40,0,0,_G_CURITEMID
.balign 4
	.lcomm	_G_CURITEMSTATE,4
	.stabs "G_CURITEMSTATE:S1",40,0,0,_G_CURITEMSTATE
.balign 4
	.lcomm	_G_HRESIZEEVENT,4
	.stabs "G_HRESIZEEVENT:S499=*7",40,0,0,_G_HRESIZEEVENT
.balign 4
	.lcomm	_G_GFXHWND,4
	.stabs "G_GFXHWND:S500=*21",40,0,0,_G_GFXHWND
.balign 4
	.lcomm	_G_DOQUIT,1
	.stabs "G_DOQUIT:S2",40,0,0,_G_DOQUIT
.balign 4
	.lcomm	_G_SHOW3D,1
	.stabs "G_SHOW3D:S2",40,0,0,_G_SHOW3D
.balign 4
	.lcomm	_G_DOCK3D,1
	.stabs "G_DOCK3D:S2",40,0,0,_G_DOCK3D
.balign 4
	.lcomm	_G_CURRENTFILEPATH,12
	.stabs "G_CURRENTFILEPATH:S13",40,0,0,_G_CURRENTFILEPATH

.section .data
	.stabs "G_PZPATHS:S501=ar1;0;8;502=*4",38,0,0,_G_PZPATHS
.balign 4
_G_PZPATHS:
.long 0
.int _Lt_2455
.int _Lt_2456
.int _Lt_2457
.int _Lt_2458
.int _Lt_2459
.int _Lt_245A
.int _Lt_245B
.int _Lt_245C
.balign 4
_Lt_2455:	.ascii	"\\parts\0"
.balign 4
_Lt_2456:	.ascii	"\\unoff\\parts\0"
.balign 4
_Lt_2457:	.ascii	"\\p\\48\0"
.balign 4
_Lt_2458:	.ascii	"\\p\0"
.balign 4
_Lt_2459:	.ascii	"\\p\\8\0"
.balign 4
_Lt_245A:	.ascii	"\\unoff\\p\\8\0"
.balign 4
_Lt_245B:	.ascii	"\\unoff\\p\0"
.balign 4
_Lt_245C:	.ascii	"\\unoff\\p\\48\0"

.section .bss
.balign 4
	.lcomm	_G_SPATHLIST,108
	.stabs "G_SPATHLIST:S503=ar1;0;8;13",40,0,0,_G_SPATHLIST

.section .data
.balign 4
_Lt_2460:	.ascii	"userprofile\0"
.balign 4
_Lt_2461:	.ascii	"\\Desktop\\LDCAD\\LDRAW\0"
	.stabs "G_PZSHADOWPATHS:S504=ar1;0;3;505=*4",38,0,0,_G_PZSHADOWPATHS
.balign 4
_G_PZSHADOWPATHS:
.long 0
.int _Lt_2455
.int _Lt_2458
.int _Lt_246D
.balign 4
_Lt_246D:	.ascii	"\\parts\\s\0"

.section .bss
.balign 4
	.lcomm	_G_SSHADOWPATHLIST,48
	.stabs "G_SSHADOWPATHLIST:S506=ar1;0;3;13",40,0,0,_G_SSHADOWPATHLIST

.section .data
.balign 4
_Lt_2471:	.ascii	"\\Desktop\\LDCAD\\shadow\\offlib\\shadow\0"

.section .bss
.balign 4
	.lcomm	_G_SFILENAMES,12
	.stabs "G_SFILENAMES:S13",40,0,0,_G_SFILENAMES
.balign 4
	.lcomm	_G_SFILESTOLOAD,12
	.stabs "G_SFILESTOLOAD:S13",40,0,0,_G_SFILESTOLOAD
.balign 4
	.lcomm	_G_MODELCOUNT,4
	.stabs "G_MODELCOUNT:S1",40,0,0,_G_MODELCOUNT

.section .data
	.stabs "MODELLIST:Tt509=s8IFILENAMEOFFSET:1,0,32;PMODEL:510=*101,32,32;;",128,0,0,0
	.stabs "FBARRAY1:Tt507=s36DATA:508=*509,0,32;PTR:511=*509,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:512=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "G_TMODELS:S507",38,0,0,_G_TMODELS
.balign 4
_G_TMODELS:
.long 0
.long 0
.int 0
.int 8
.int 1
.int 17
.skip 12,0
.balign 4
_Lt_2493:	.ascii	"A\0"
.balign 4
_Lt_2499:	.ascii	" \0"
.balign 4
_Lt_24A8:	.ascii	"\n\0"
.balign 4
_Lt_24F0:	.ascii	"-\0"
.balign 4
_Lt_24FE:	.ascii	"X\0"
.balign 4
_Lt_2563:	.ascii	".\0"
.balign 8
_Lt_25AC:	.quad	0x40F86A0000000000
.balign 8
_Lt_25AD:	.quad	0x4024000000000000
.balign 4
_Lt_2642:	.ascii	"\\\0"
.balign 4
_Lt_2643:	.ascii	"/\0"
.balign 4
_Lt_2652:	.ascii	"Failed to open file '\0"
.balign 4
_Lt_2653:	.ascii	"'\0"
.balign 4
_Lt_26CA:	.ascii	"[\0"
.balign 4
_Lt_26D3:	.ascii	"=\0"
.balign 4
_Lt_26E0:	.ascii	"]\0"
.balign 4
_Lt_2749:	.ascii	"[%s] was referenced in a shadow file, but was not found\n\0"
.balign 4
_Lt_2766:	.ascii	"Syntax error reading '\0"
.balign 4
_Lt_2767:	.ascii	"' at line \0"
.balign 4
_Lt_2770:	.ascii	"ERROR: only comments are expect in shadow files, in '\0"
.balign 4
_Lt_2780:	.ascii	"//!LDCAD\0"
.balign 4
_Lt_2784:	.ascii	"!LDCAD\0"
.balign 4
_Lt_2798:	.ascii	"SNAP_INCL\0"
.balign 4
_Lt_27A2:	.ascii	"Shadow include Recursion limit reached error reading '\0"
.balign 4
_Lt_27B0:	.ascii	"Out of memory error reading '\0"
.balign 4
_Lt_27D6:	.ascii	"duplicated reference error reading '\0"
.balign 4
_Lt_27E4:	.ascii	"null reference error reading '\0"
.balign 4
_Lt_27FF:	.ascii	"ERROR: Expected Position parameter error reading '\0"
.balign 4
_Lt_281E:	.ascii	"grid syntax error reading '\0"
.balign 4
_Lt_282E:	.ascii	"ERROR: Expected grid X Count parameter error reading '\0"
.balign 4
_Lt_283C:	.ascii	"ERROR: Expected grid X count parameter error reading '\0"
.balign 4
_Lt_284A:	.ascii	"invalid grid X count error reading '\0"
.balign 4
_Lt_2870:	.ascii	"ERROR: Expected grid Z count parameter error reading '\0"
.balign 4
_Lt_2888:	.ascii	"invalid grid Z count error reading '\0"
.balign 4
_Lt_2895:	.ascii	"ERROR: Expected grid step X parameter error reading '\0"
.balign 4
_Lt_289E:	.ascii	"Warning: float grid step X (%f)\n\0"
.balign 4
_Lt_28A6:	.ascii	"ERROR: Expected grid step Z parameter error reading '\0"
.balign 4
_Lt_28AF:	.ascii	"Warning: float grid step Z (%f)\n\0"
.balign 4
_Lt_28C6:	.ascii	"ERROR: Expected Orientation parameter error reading '\0"
.balign 4
_Lt_28D5:	.ascii	"shadow Include parm error reading '\0"
.balign 4
_Lt_28E5:	.ascii	"include without reference error reading '\0"
.balign 4
_Lt_28F8:	.ascii	"SNAP_CYL\0"
.balign 4
_Lt_2930:	.ascii	"Invalid Gender error reading '\0"
.balign 4
_Lt_294C:	.ascii	"Too many secs error reading '\0"
.balign 4
_Lt_2973:	.ascii	"Invalid sec shape error reading '\0"
.balign 4
_Lt_2981:	.ascii	"ERROR: Expected Radius parameter error reading '\0"
.balign 4
_Lt_298A:	.ascii	"Warning: innacurate fixed Radius (%f)\n\0"
.balign 4
_Lt_2992:	.ascii	"ERROR: Expected Length parameter error reading '\0"
.balign 4
_Lt_299B:	.ascii	"Warning: float Length (%f)\n\0"
.balign 4
_Lt_29A8:	.ascii	"sec syntax error reading '\0"
.balign 4
_Lt_29B8:	.ascii	"none\0"
.balign 4
_Lt_29BD:	.ascii	"one\0"
.balign 4
_Lt_29C2:	.ascii	"two\0"
.balign 4
_Lt_29D6:	.ascii	"Invalid caps error reading '\0"
.balign 4
_Lt_2AAC:	.ascii	"Invalid Cender error reading '\0"
.balign 4
_Lt_2AF1:	.ascii	"Invalid Scale error reading '\0"
.balign 4
_Lt_2B11:	.ascii	"Invalid Mirror error reading '\0"
.balign 4
_Lt_2B31:	.ascii	"Cylinder Parm error reading '\0"
.balign 4
_Lt_2B5A:	.ascii	"ERROR: Failed to load shadow file '%s'\\n\0"
.balign 4
_Lt_2B66:	.long	0x42C80000
.balign 4
_Lt_2B68:	.long	0x461C4000
.balign 4
_Lt_2D71:	.ascii	"Failed to allocate memory to load file\0"
.balign 4
_Lt_2D76:	.ascii	"\377""\0"
.balign 4
_Lt_2DA5:	.ascii	"Expected colour as second parameter error reading '\0"
.balign 4
_Lt_2DB1:	.ascii	"BFC\0"
.balign 4
_Lt_2DB7:	.ascii	"FILE\0"
.balign 4
_Lt_2DDD:	.ascii	"/!\\ INTERNAL ERROR: forwarded entry not found at the 'To Load List' /!\\\0"
.balign 4
_Lt_2E01:	.ascii	"Expected X (float) as second parameter error reading '\0"
.balign 4
_Lt_2E13:	.ascii	"Expected Y (float) as third parameter error reading '\0"
.balign 4
_Lt_2E25:	.ascii	"Expected Z (float) as fourth parameter error reading '\0"
.balign 4
_Lt_2E37:	.ascii	"Expected A (float) as fifth parameter error reading '\0"
.balign 4
_Lt_2E49:	.ascii	"Expected B (float) as sixth parameter error reading '\0"
.balign 4
_Lt_2E5B:	.ascii	"Expected C (float) as seventh parameter error reading '\0"
.balign 4
_Lt_2E6D:	.ascii	"Expected D (float) as eighth parameter error reading '\0"
.balign 4
_Lt_2E7F:	.ascii	"Expected E (float) as ninth parameter error reading '\0"
.balign 4
_Lt_2E91:	.ascii	"Expected F (float) as tenth parameter error reading '\0"
.balign 4
_Lt_2EA3:	.ascii	"Expected G (float) as eleventh parameter error reading '\0"
.balign 4
_Lt_2EB5:	.ascii	"Expected H (float) as twelth parameter error reading '\0"
.balign 4
_Lt_2EC7:	.ascii	"Expected I (float) as thirteenth parameter error reading '\0"
.balign 4
_Lt_2ED1:	.ascii	"Expected filename as fourteenth parameter error reading '\0"
.balign 4
_Lt_2EF1:	.ascii	" expect end of line in '\0"
.balign 4
_Lt_2F0C:	.ascii	"Expected X1 (float) as second parameter error reading '\0"
.balign 4
_Lt_2F1E:	.ascii	"Expected Y1 (float) as third parameter error reading '\0"
.balign 4
_Lt_2F30:	.ascii	"Expected Z1 (float) as fourth parameter error reading '\0"
.balign 4
_Lt_2F42:	.ascii	"Expected X2 (float) as fifth parameter error reading '\0"
.balign 4
_Lt_2F54:	.ascii	"Expected Y2 (float) as sixth parameter error reading '\0"
.balign 4
_Lt_2F60:	.ascii	"Expected Z2 (float) as seventh parameter error reading '\0"
.balign 4
_Lt_2FE6:	.ascii	"Expected X3 (float) as eighth parameter error reading '\0"
.balign 4
_Lt_2FF8:	.ascii	"Expected Y3 (float) as ninth parameter error reading '\0"
.balign 4
_Lt_3004:	.ascii	"Expected Z3 (float) as tenth parameter error reading '\0"
.balign 4
_Lt_30B4:	.ascii	"Expected X4 (float) as eleventh parameter error reading '\0"
.balign 4
_Lt_30C6:	.ascii	"Expected Y4 (float) as twelth parameter error reading '\0"
.balign 4
_Lt_30D2:	.ascii	"Expected Z4 (float) as thirteenth parameter error reading '\0"
.balign 4
_Lt_31B7:	.ascii	"Unknown line\0"
.balign 4
_Lt_31C8:	.ascii	"Faillure?\0"
.balign 4
_Lt_31E7:	.ascii	"ERROR: DEPENDENCY NOT FOUND! '\0"
.balign 4
_Lt_31EA:	.ascii	"Model Path: '\0"
.balign 4
_Lt_31F1:	.long	0xC996B438

.section .bss
.balign 4
	.lcomm	_G_COLOURS,44004
	.stabs "G_COLOURS:S513=ar1;0;11000;8",40,0,0,_G_COLOURS
.balign 4
	.lcomm	_G_EDGECOLOURS,44004
	.stabs "G_EDGECOLOURS:S514=ar1;0;11000;8",40,0,0,_G_EDGECOLOURS
.balign 4
	.lcomm	_Lt_3786,36
	.stabs "FBARRAY1:Tt515=s36DATA:516=*517=*7,0,32;PTR:518=*519=*7,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:520=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "Lt_3786:S515",40,0,0,_Lt_3786
.balign 4
	.lcomm	__ZN3GFX10LORGFBPROCE,4
	.stabs "__ZN3GFX10LORGFBPROCE:S1",40,0,0,__ZN3GFX10LORGFBPROCE
.balign 4
	.lcomm	__ZN3GFX9LOLDSTYLEE,4
	.stabs "__ZN3GFX9LOLDSTYLEE:S1",40,0,0,__ZN3GFX9LOLDSTYLEE
.balign 4
	.lcomm	__ZN3GFX12LSCREENFLAGSE,4
	.stabs "__ZN3GFX12LSCREENFLAGSE:S1",40,0,0,__ZN3GFX12LSCREENFLAGSE
.balign 4
	.lcomm	__ZN3GFX9G_ISCRWIDE,4
	.stabs "__ZN3GFX9G_ISCRWIDE:S1",40,0,0,__ZN3GFX9G_ISCRWIDE
.balign 4
	.lcomm	__ZN3GFX9G_ISCRHEIE,4
	.stabs "__ZN3GFX9G_ISCRHEIE:S1",40,0,0,__ZN3GFX9G_ISCRHEIE
.balign 4
	.lcomm	__ZN3GFX12G_LFIRSTSIZEE,4
	.stabs "__ZN3GFX12G_LFIRSTSIZEE:S1",40,0,0,__ZN3GFX12G_LFIRSTSIZEE
.balign 4
	.lcomm	__ZN3GFX9G_IASPECTE,4
	.stabs "__ZN3GFX9G_IASPECTE:S1",40,0,0,__ZN3GFX9G_IASPECTE
.balign 4
	.lcomm	__ZN3GFX10G_IOFFLEFTE,4
	.stabs "__ZN3GFX10G_IOFFLEFTE:S1",40,0,0,__ZN3GFX10G_IOFFLEFTE
.balign 4
	.lcomm	__ZN3GFX9G_IOFFTOPE,4
	.stabs "__ZN3GFX9G_IOFFTOPE:S1",40,0,0,__ZN3GFX9G_IOFFTOPE
.balign 4
	.lcomm	__ZN3GFX9G_ICLIWIDE,4
	.stabs "__ZN3GFX9G_ICLIWIDE:S1",40,0,0,__ZN3GFX9G_ICLIWIDE
.balign 4
	.lcomm	__ZN3GFX9G_ICLIHEIE,4
	.stabs "__ZN3GFX9G_ICLIHEIE:S1",40,0,0,__ZN3GFX9G_ICLIHEIE
.balign 4
	.lcomm	__ZN3GFX6G_TEMPE,1
	.stabs "__ZN3GFX6G_TEMPE:S2",40,0,0,__ZN3GFX6G_TEMPE
.balign 4
	.lcomm	__ZN3GFX12G_FULLSCREENE,1
	.stabs "__ZN3GFX12G_FULLSCREENE:S2",40,0,0,__ZN3GFX12G_FULLSCREENE
.balign 4
	.lcomm	__ZN3GFX12G_SGFXDRIVERE,12
	.stabs "__ZN3GFX12G_SGFXDRIVERE:S13",40,0,0,__ZN3GFX12G_SGFXDRIVERE
.balign 4
	.lcomm	__ZN3GFX13G_BORDERCOLORE,4
	.stabs "__ZN3GFX13G_BORDERCOLORE:S8",40,0,0,__ZN3GFX13G_BORDERCOLORE

.section .data
	.stabs "__ZN3GFX6TOLDPTE:S154",38,0,0,__ZN3GFX6TOLDPTE
.balign 4
__ZN3GFX6TOLDPTE:
.long -9999
.long 9999
.balign 4
_Lt_37A8:	.ascii	"LegoScript\0"
.balign 4
_Lt_387E:	.ascii	"GDI\0"
.balign 8
_Lt_38CA:	.quad	0x4059000000000000
.balign 8
_Lt_38CB:	.quad	0x3FF0000000000000
.balign 8
_Lt_38CC:	.quad	0x4046800000000000
.balign 4
_Lt_38CD:	.long	0x3F000000
.balign 4
_Lt_38CE:	.long	0x3F3FBFC0
.balign 4
_Lt_38CF:	.long	0x3F0C8C8D
.balign 4
_Lt_38D0:	.long	0x3EE6E6E7
.balign 4
_Lt_38D1:	.long	0x3FA00000
.balign 4
_Lt_38D2:	.long	0xBD4CCCCD
.balign 4
_Lt_38D3:	.long	0x3F800000
.balign 4
_Lt_38D4:	.long	0x3E4CCCCD
.balign 4
_Lt_38D5:	.long	0x3D4CCCCD
.balign 4
_Lt_3912:	.long	0x00000000
.balign 4
_Lt_3954:	.long	0xC61C4000

.section .bss
.balign 4
	.lcomm	_TMATRIXSTACK,65536
	.stabs "TMATRIXSTACK:S521=ar1;0;1023;184",40,0,0,_TMATRIXSTACK
.balign 4
	.lcomm	_G_CURRENTMATRIX,4
	.stabs "G_CURRENTMATRIX:S1",40,0,0,_G_CURRENTMATRIX

.section .data
	.stabs "G_TIDENTITYMATRIX:S184",38,0,0,_G_TIDENTITYMATRIX
.balign 4
_G_TIDENTITYMATRIX:
.long 0x3F800000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x3F800000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x3F800000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x00000000
.long 0x3F800000

.section .bss
.balign 4
	.lcomm	_G_TBLANKMATRIX,64
	.stabs "G_TBLANKMATRIX:S184",40,0,0,_G_TBLANKMATRIX

.section .data
.balign 4
_Lt_3971:	.ascii	"MATRIX STACK OVERFLOW!!!!\0"
.balign 8
_Lt_39E7:	.quad	0x3F1A36E2EB1C432D
.balign 4
_Lt_3A34:	.ascii	"%s%.1f\0"
.balign 4
_Lt_3A3B:	.long	0x41200000
.balign 4
_Lt_3A4F:	.ascii	"stud\0"
.balign 4
_Lt_3A66:	.ascii	"%s\n\0"
.balign 4
_Lt_3A67:	.ascii	"spClutch\0"
.balign 4
_Lt_3A6C:	.ascii	"4od.\0"
.balign 4
_Lt_3A6D:	.ascii	"4a.\0"
.balign 4
_Lt_3A70:	.ascii	"3a.\0"
.balign 4
_Lt_3A7E:	.ascii	"spStud\0"
.balign 4
_Lt_3A81:	.ascii	"axle.\0"
.balign 4
_Lt_3AE6:	.ascii	"Bad Color: \0"

.section .bss
.balign 4
	.lcomm	_G_TOTALLINES,4
	.stabs "G_TOTALLINES:S1",40,0,0,_G_TOTALLINES
.balign 4
	.lcomm	_G_TOTALOPTIS,4
	.stabs "G_TOTALOPTIS:S1",40,0,0,_G_TOTALOPTIS
.balign 4
	.lcomm	_G_TOTALTRIGS,4
	.stabs "G_TOTALTRIGS:S1",40,0,0,_G_TOTALTRIGS
.balign 4
	.lcomm	_G_TOTALQUADS,4
	.stabs "G_TOTALQUADS:S1",40,0,0,_G_TOTALQUADS

.section .data
.balign 4
_Lt_4045:	.long	0x40800000
.balign 8
_Lt_4046:	.quad	0x3FB999999999999A
.balign 8
_Lt_4047:	.quad	0xBFB999999999999A

.section .bss
.balign 4
	.lcomm	_MALESTIPPLE,128
	.stabs "MALESTIPPLE:S522=ar1;0;31;8",40,0,0,_MALESTIPPLE
.balign 4
	.lcomm	_FEMALESTIPPLE,128
	.stabs "FEMALESTIPPLE:S523=ar1;0;31;8",40,0,0,_FEMALESTIPPLE

.section .data
.balign 8
_Lt_4139:	.quad	0x4000000000000000
.balign 4
_Lt_413A:	.long	0x42B40000
.balign 8
_Lt_413B:	.quad	0x3FE6DB6DB6DB6DB7
.balign 4
_Lt_413C:	.long	0x3F924925
.balign 4
_Lt_413D:	.long	0x40000000
.balign 8
_Lt_4157:	.quad	0x3FE0000000000000
.balign 4
_Lt_4158:	.long	0x42340000
.balign 4
_Lt_4199:	.ascii	"sit_Include\0"
.balign 4
_Lt_419F:	.ascii	"B\0"
.balign 4
_Lt_41AC:	.ascii	"Origin!\0"
.balign 4
_Lt_41E1:	.ascii	"Center flag\0"
.balign 4
_Lt_41FF:	.ascii	"Invalid\0"
.balign 4
_Lt_4200:	.ascii	"Round\0"
.balign 4
_Lt_4201:	.ascii	"Axle\0"
.balign 4
_Lt_4202:	.ascii	"Square\0"
.balign 4
_Lt_4203:	.ascii	"FlexPrev\0"
.balign 4
_Lt_4204:	.ascii	"FlexNext\0"
.balign 4
_Lt_421D:	.ascii	"!!!!! CHECK TWO CAPS!!!!!\0"
.balign 4
_Lt_422D:	.ascii	"!!!!!! MALE GRID FOUND !!!!!\0"
.balign 4
_Lt_4286:	.ascii	"Unknown male round cylinder?\0"
.balign 4
_Lt_4290:	.ascii	"Unknown male?\0"
.balign 4
_Lt_42A8:	.ascii	"Length 1 section ignored\0"
.balign 4
_Lt_42F4:	.ascii	"ERROR: unimplemented clutches were not added\0"
.balign 4
_Lt_4309:	.ascii	"Axle hole without slide??????\0"
.balign 4
_Lt_4351:	.ascii	"ERROR: remaining section counter is negative\0"
.balign 4
_Lt_4356:	.ascii	"ERROR: Too many unhandled sections!\0"
.balign 4
_Lt_4364:	.ascii	"Stud += %i (Fallback)\n\0"
.balign 4
_Lt_4375:	.ascii	"WARNING: %i clutches added as fallback\n\0"
.balign 8
_Lt_43CF:	.quad	0xC000000000000000
.balign 4
_Lt_44AD:	.long	0xBF800000

.section .bss
.balign 4
	.lcomm	_G_BSEPARATORS,256
	.stabs "G_BSEPARATORS:S524=ar1;0;255;2",40,0,0,_G_BSEPARATORS

.section .data
	.stabs "FBARRAY1:Tt525=s36DATA:526=*233,0,32;PTR:527=*233,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:528=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "G_TPART:S525",38,0,0,_G_TPART
.balign 4
_G_TPART:
.long 0
.long 0
.int 0
.int 128
.int 1
.int 17
.skip 12,0
	.stabs "FBARRAY1:Tt529=s36DATA:530=*236,0,32;PTR:531=*236,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:532=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "G_TCONN:S529",38,0,0,_G_TCONN
.balign 4
_G_TCONN:
.long 0
.long 0
.int 0
.int 16
.int 1
.int 17
.skip 12,0
	.stabs "G_IPARTCOUNT:S1",38,0,0,_G_IPARTCOUNT
.balign 4
_G_IPARTCOUNT:
.long 1
	.stabs "G_ICONNCOUNT:S1",38,0,0,_G_ICONNCOUNT
.balign 4
_G_ICONNCOUNT:
.long 0

.section .bss
.balign 4
	.lcomm	_G_NULLSNAP,28
	.stabs "G_NULLSNAP:S212",40,0,0,_G_NULLSNAP

.section .data
.balign 4
_Lt_4515:	.ascii	"\11"" \r\n/;\0"
.balign 4
_Lt_4686:	.ascii	".dat\0"
.balign 4
_Lt_4705:	.ascii	"%\0"
.balign 4
_Lt_4734:	.ascii	";\0"
.balign 4
_Lt_489D:	.ascii	"Main.ldr\0"
.balign 4
_Lt_489E:	.ascii	"/main.ldr\0"
.balign 4
_Lt_48B9:	.ascii	"Error: \0"
.balign 4
_Lt_48BA:	.ascii	"Too many tokens\0"
.balign 4
_Lt_48BC:	.ascii	"\r\nat \0"
.balign 4
_Lt_48BD:	.ascii	":\0"
.balign 4
_Lt_48BE:	.ascii	" '\0"
.balign 4
_Lt_48BF:	.ascii	"'\r\n\0"
.balign 4
_Lt_48E1:	.ascii	"#include\0"
.balign 4
_Lt_48E7:	.ascii	"Expected filename, got end of line\0"
.balign 4
_Lt_48F6:	.ascii	"Expected end of line got '\0"
.balign 4
_Lt_490A:	.ascii	"Expected string, got end of line\0"
.balign 4
_Lt_491B:	.ascii	"Mismatched string quotes\0"
.balign 4
_Lt_4940:	.ascii	"Recursive #include\0"
.balign 4
_Lt_4958:	.ascii	"file not found??\0"
.balign 4
_Lt_495A:	.ascii	"File not found\0"
.balign 4
_Lt_4973:	.ascii	"#pragma\0"
.balign 4
_Lt_4979:	.ascii	"Unknown pre-processor directive\0"
.balign 4
_Lt_49A0:	.ascii	"Expected part name, got end of statement\0"
.balign 4
_Lt_49AF:	.ascii	"' is not a valid part name\0"
.balign 4
_Lt_49C0:	.ascii	"Name already exists\0"
.balign 4
_Lt_49D1:	.ascii	"' primative not found\0"
.balign 4
_Lt_49E1:	.ascii	"NULL\0"
.balign 4
_Lt_49EA:	.ascii	"' is not a valid primative or part name\0"
.balign 4
_Lt_49FB:	.ascii	"part name not declared\0"
.balign 4
_Lt_4A13:	.ascii	"missing operands in the right side\0"
.balign 4
_Lt_4A29:	.ascii	"a part can't connect to itself\0"
.balign 4
_Lt_4A41:	.ascii	"premature end of statement\0"
.balign 4
_Lt_4A56:	.ascii	"Warning: \0"
.balign 4
_Lt_4A57:	.ascii	"NULL part attribute ignored\0"
.balign 4
_Lt_4A73:	.ascii	"Expected '=', got '\0"
.balign 4
_Lt_4A86:	.ascii	"Expected end of statement, got '\0"
.balign 4
_Lt_4A98:	.ascii	"invalid connector number\0"
.balign 4
_Lt_4AA7:	.ascii	"failed to load model\0"
.balign 4
_Lt_4ABF:	.ascii	"part '\0"
.balign 4
_Lt_4AC0:	.ascii	"(\0"
.balign 4
_Lt_4AC1:	.ascii	")'\0"
.balign 4
_Lt_4AC2:	.ascii	" only have \0"
.balign 4
_Lt_4AC3:	.ascii	" studs.\0"
.balign 4
_Lt_4AE3:	.ascii	" clutches.\0"
.balign 4
_Lt_4B02:	.ascii	"same type of connector\0"
.balign 4
_Lt_4B15:	.ascii	"expected end of statement, got '\0"
.balign 4
_Lt_4B2A:	.ascii	"Can't define attributes for existing parts (redefined X offset or rotation)\0"
.balign 4
_Lt_4B40:	.ascii	"Defined X offset twice\0"
.balign 4
_Lt_4B52:	.ascii	"Defined X rotation twice\0"
.balign 4
_Lt_4B69:	.ascii	"Can't define attributes for existing parts (redefined Y offset or rotation)\0"
.balign 4
_Lt_4B7E:	.ascii	"Defined Y offset twice\0"
.balign 4
_Lt_4B90:	.ascii	"Defined Y rotation twice\0"
.balign 4
_Lt_4BA5:	.ascii	"Can't define attributes for existing parts (redefined Z offset or rotation)\0"
.balign 4
_Lt_4BBA:	.ascii	"Defined Z offset twice\0"
.balign 4
_Lt_4BCC:	.ascii	"Defined Z rotation twice\0"
.balign 4
_Lt_4BE1:	.ascii	"Can't define attributes for existing parts\0"
.balign 4
_Lt_4BF0:	.ascii	"color attribute was already set for part '\0"
.balign 4
_Lt_4C01:	.ascii	"Invalid color format '\0"
.balign 4
_Lt_4C12:	.ascii	"Unknown token '\0"
.balign 4
_Lt_4C2F:	.ascii	"left part is missing connector\0"
.balign 4
_Lt_4C40:	.ascii	"right part is missing connector\0"
.balign 4
_Lt_4C51:	.ascii	"meaningless connection with both parts being NULL\0"
.balign 4
_Lt_4C98:	.ascii	"1 %i %f %f %f %g %g %g %g %g %g %g %g %g %s\r\n\0"
.balign 4
_Lt_4CBA:	.ascii	"Error\0"
.balign 4
_Lt_4CD8:	.ascii	"Prev rotation\0"
.balign 4
_Lt_4CDD:	.ascii	"Auto Rotating\0"
.balign 8
_Lt_4D25:	.quad	0x3F91DF46A2529D39
.balign 4
_Lt_4D2C:	.long	0x47C35000

.section .bss
.balign 4
	.lcomm	_G_LHASHLIST,262144
	.stabs "G_LHASHLIST:S533=ar1;0;65535;8",40,0,0,_G_LHASHLIST

.section .data
	.stabs "FBARRAY1:Tt534=s36DATA:535=*8,0,32;PTR:536=*8,32,32;SIZE:1,64,32;ELEMENT_LEN:1,96,32;DIMENSIONS:1,128,32;FLAGS:1,160,32;DIMTB:537=ar1;0;0;70,192,96;;",128,0,0,0
	.stabs "Lt_4E55:S534",38,0,0,_Lt_4E55
.balign 4
_Lt_4E55:
.int _G_LHASHLIST
.int _G_LHASHLIST
.int 262144
.int 4
.int 1
.int 49
.int 65536
.int 0
.int 65535

.section .bss
.balign 4
	.lcomm	_G_LPARTCOUNT,4
	.stabs "G_LPARTCOUNT:S8",40,0,0,_G_LPARTCOUNT

.section .data
	.stabs "G_LPARTINDEX:S534",38,0,0,_G_LPARTINDEX
.balign 4
_G_LPARTINDEX:
.long 0
.long 0
.int 0
.int 4
.int 1
.int 17
.skip 12,0

.section .bss
.balign 4
	.lcomm	_G_PPARTSNAMES,4
	.stabs "G_PPARTSNAMES:S538=*7",40,0,0,_G_PPARTSNAMES

.section .data
.balign 4
_Lt_4F3B:	.ascii	"\\PartCache.bin\0"
.balign 4
_Lt_4F4B:	.ascii	"\\p\\\0"
.balign 4
_Lt_4F50:	.ascii	"*.dat\0"
.balign 4
_Lt_4F66:	.ascii	"helper\0"
.balign 4
_Lt_4F6B:	.ascii	"unofficial_part alias\0"
.balign 4
_Lt_4F70:	.ascii	"unofficial_shortcut\0"
.balign 4
_Lt_4F75:	.ascii	"sticker\0"
.balign 4
_Lt_4F7A:	.ascii	" print\0"
.balign 4
_Lt_4F81:	.ascii	" pattern\0"
.balign 4
_Lt_4F8F:	.ascii	" brick\0"
.balign 4
_Lt_4F96:	.ascii	" plate\0"
.balign 4
_Lt_4FA2:	.ascii	"WARNING: couldnt obtain comment for '\0"
.balign 4
_Lt_4FA9:	.ascii	"Failed reallocate\0"
.balign 4
_Lt_4FB9:	.ascii	"ERROR: failed to open file to write cache file\0"
.balign 4
_Lt_4FC2:	.ascii	"ERROR: Failed to allocate memory for parts cache\0"

.section .bss
.balign 4
	.lcomm	_G_HCON,4
	.stabs "G_HCON:S539=*21",40,0,0,_G_HCON
.balign 4
	.lcomm	_G_HCONTAINER,4
	.stabs "G_HCONTAINER:S540=*21",40,0,0,_G_HCONTAINER
.balign 4
	.lcomm	_G_HSEARCH,4
	.stabs "G_HSEARCH:S541=*21",40,0,0,_G_HSEARCH
.balign 4
	.lcomm	_G_HSTATUS,4
	.stabs "G_HSTATUS:S542=*21",40,0,0,_G_HSTATUS
.balign 4
	.lcomm	_G_HFONTSEARCH,4
	.stabs "G_HFONTSEARCH:S543=*55",40,0,0,_G_HFONTSEARCH
.balign 4
	.lcomm	_G_RCCON,16
	.stabs "G_RCCON:S23",40,0,0,_G_RCCON
.balign 4
	.lcomm	_G_RCSEARCH,16
	.stabs "G_RCSEARCH:S23",40,0,0,_G_RCSEARCH
.balign 4
	.lcomm	_G_RCCURSOR,8
	.stabs "G_RCCURSOR:S154",40,0,0,_G_RCCURSOR
.balign 4
	.lcomm	_G_CONWID,4
	.stabs "G_CONWID:S1",40,0,0,_G_CONWID
.balign 4
	.lcomm	_G_CONHEI,4
	.stabs "G_CONHEI:S1",40,0,0,_G_CONHEI
.balign 4
	.lcomm	_G_FNTWID,4
	.stabs "G_FNTWID:S1",40,0,0,_G_FNTWID
.balign 4
	.lcomm	_G_FNTHEI,4
	.stabs "G_FNTHEI:S1",40,0,0,_G_FNTHEI
.balign 4
	.lcomm	_G_SEARCHVIS,4
	.stabs "G_SEARCHVIS:S1",40,0,0,_G_SEARCHVIS
.balign 4
	.lcomm	_G_SEARCHROWHEI,4
	.stabs "G_SEARCHROWHEI:S1",40,0,0,_G_SEARCHROWHEI
.balign 4
	.lcomm	_G_SEARCHCHANGED,1
	.stabs "G_SEARCHCHANGED:S2",40,0,0,_G_SEARCHCHANGED
.balign 4
	.lcomm	_G_DOFILTERDUMP,1
	.stabs "G_DOFILTERDUMP:S2",40,0,0,_G_DOFILTERDUMP

.section .data
	.stabs "G_FILTERFLAGS:S1",38,0,0,_G_FILTERFLAGS
.balign 4
_G_FILTERFLAGS:
.long 0
	.stabs "G_REVERSEFILTERFLAGS:S1",38,0,0,_G_REVERSEFILTERFLAGS
.balign 4
_G_REVERSEFILTERFLAGS:
.long 0
	.stabs "CFG_MAXSEARCHPARTS:S1",38,0,0,_CFG_MAXSEARCHPARTS
.balign 4
_CFG_MAXSEARCHPARTS:
.long 50
	.stabs "CFG_SEARCHBOXROWS:S2",38,0,0,_CFG_SEARCHBOXROWS
.balign 4
_CFG_SEARCHBOXROWS:
.byte 5
	.stabs "CFG_SEARCHBOXCOLS:S2",38,0,0,_CFG_SEARCHBOXCOLS
.balign 4
_CFG_SEARCHBOXCOLS:
.byte 5
	.stabs "CFG_PRIMAUTOCOMPLETEMANUAL:S2",38,0,0,_CFG_PRIMAUTOCOMPLETEMANUAL
.balign 4
_CFG_PRIMAUTOCOMPLETEMANUAL:
.byte 1
	.stabs "CFG_PRIMAUTOCOMPLETESELECTION:S2",38,0,0,_CFG_PRIMAUTOCOMPLETESELECTION
.balign 4
_CFG_PRIMAUTOCOMPLETESELECTION:
.byte 1
.balign 4
_Lt_5016:	.ascii	"LS_CLI.ini\0"
.balign 4
_Lt_5017:	.ascii	"Config\0"
.balign 4
_Lt_501E:	.ascii	"MaxSearchParts\0"
.balign 4
_Lt_5020:	.ascii	"SearchBoxRows\0"
.balign 4
_Lt_5021:	.ascii	"SearchBoxColumns\0"
.balign 4
_Lt_5022:	.ascii	"PrimAutoCompleteManual\0"
.balign 4
_Lt_5023:	.ascii	"PrimAutoCompleteSelection\0"
.balign 4
_Lt_506E:	.ascii	"\154\0\151\0\163\0\164\0\142\0\157\0\170\0\0\0"
.balign 4
_Lt_506F:	.ascii	"1\0"
.balign 4
_Lt_5070:	.ascii	"2\0"
.balign 4
_Lt_507E:	.ascii	"SearchContainer\0"
.balign 4
_Lt_5085:	.ascii	"Failed to register Class\0"

.section .bss
.balign 4
	.lcomm	_TFILTEREDDUMP,168
	.stabs "TFILTEREDDUMP:S472",40,0,0,_TFILTEREDDUMP
.balign 4
	.lcomm	_G_IFILTEREDCOUNT,4
	.stabs "G_IFILTEREDCOUNT:S1",40,0,0,_G_IFILTEREDCOUNT

.section .data
.balign 4
_Lt_50D5:	.ascii	"moved to \0"
.balign 4
_Lt_50DD:	.ascii	" > \0"
.balign 4
_Lt_50E7:	.ascii	"[Unnoficial] \0"
.balign 4
_Lt_51CA:	.ascii	" Filtered) \0"
.balign 4
_Lt_523D:	.ascii	"\\FilteredParts.txt\0"
.balign 4
_Lt_5255:	.ascii	"[Donor]\0"
.balign 4
_Lt_525D:	.ascii	"[Alias]\0"
.balign 4
_Lt_5265:	.ascii	"[PreColored]\0"
.balign 4
_Lt_526D:	.ascii	"[Path]\0"
.balign 4
_Lt_5275:	.ascii	"[Shortcut]\0"
.balign 4
_Lt_527D:	.ascii	"[MultiColor]\0"
.balign 4
_Lt_5285:	.ascii	"[Template]\0"
.balign 4
_Lt_528D:	.ascii	"[Printed]\0"
.balign 4
_Lt_5295:	.ascii	"[Stickered]\0"
.balign 4
_Lt_529D:	.ascii	"[Moulded]\0"
.balign 4
_Lt_52A5:	.ascii	"[Sticker]\0"
.balign 4
_Lt_52AD:	.ascii	"[Helper]\0"
.balign 4
_Lt_52B5:	.ascii	"[Inverted]\0"
.balign 4
_Lt_52BD:	.ascii	"[Hidden]\0"
.balign 4
_Lt_532C:	.ascii	" > Tokens: \0"
.balign 4
_Lt_532D:	.ascii	") \0"
.balign 4
_Lt_532E:	.ascii	" {\0"
.balign 4
_Lt_5342:	.ascii	",\0"
.balign 4
_Lt_5348:	.ascii	"['\0"
.balign 4
_Lt_5349:	.ascii	"']\0"
.balign 4
_Lt_5377:	.ascii	" Filters:\0"
.balign 4
_Lt_5380:	.ascii	" Donor\0"
.balign 4
_Lt_5385:	.ascii	" Alias\0"
.balign 4
_Lt_538A:	.ascii	" PreColored\0"
.balign 4
_Lt_538F:	.ascii	" Path\0"
.balign 4
_Lt_5394:	.ascii	" Shortcut\0"
.balign 4
_Lt_5399:	.ascii	" MultiColor\0"
.balign 4
_Lt_539E:	.ascii	" Template\0"
.balign 4
_Lt_53A3:	.ascii	" Printed\0"
.balign 4
_Lt_53A8:	.ascii	" Stickered\0"
.balign 4
_Lt_53AD:	.ascii	" Moulded\0"
.balign 4
_Lt_53B2:	.ascii	" Sticker\0"
.balign 4
_Lt_53B7:	.ascii	" Helper\0"
.balign 4
_Lt_53BC:	.ascii	" Inverted\0"
.balign 4
_Lt_53C1:	.ascii	" Hidden\0"
.balign 4
_Lt_53C9:	.ascii	" filtered)\0"
.balign 4
_Lt_53CB:	.ascii	"}\0"
.balign 4
_Lt_544B:	.ascii	"hinge\0"
.balign 4
_Lt_5452:	.ascii	"P\0"
.balign 4
_Lt_5472:	.ascii	"\\FatalErrors.log\0"
	.stabs "__ZN6VIEWER10G_LOADFILEE:S2",38,0,0,__ZN6VIEWER10G_LOADFILEE
.balign 4
__ZN6VIEWER10G_LOADFILEE:
.byte 0

.section .bss
.balign 4
	.lcomm	__ZN6VIEWER10G_SGFXFILEE,12
	.stabs "__ZN6VIEWER10G_SGFXFILEE:S13",40,0,0,__ZN6VIEWER10G_SGFXFILEE
.balign 4
	.lcomm	__ZN6VIEWER11G_SFILENAMEE,12
	.stabs "__ZN6VIEWER11G_SFILENAMEE:S13",40,0,0,__ZN6VIEWER11G_SFILENAMEE
.balign 4
	.lcomm	__ZN6VIEWER7G_MUTEXE,4
	.stabs "__ZN6VIEWER7G_MUTEXE:S544=*7",40,0,0,__ZN6VIEWER7G_MUTEXE
.balign 4
	.lcomm	__ZN6VIEWER14BSHOWCOLLISIONE,1
	.stabs "__ZN6VIEWER14BSHOWCOLLISIONE:S16",40,0,0,__ZN6VIEWER14BSHOWCOLLISIONE

.section .data
.balign 4
_Lt_5580:	.ascii	"g_CurPart = %i    \r\0"
.balign 4
_Lt_5584:	.ascii	"g_CurDraw = %i    \r\0"
.balign 4
_Lt_55AF:	.ascii	"start notepad \0"
.balign 4
_Lt_55B3:	.ascii	"Shadow file not found\0"
.balign 4
_Lt_55CB:	.ascii	"Model file not found\0"
.balign 4
_Lt_5614:	.ascii	"Fps: \0"
.balign 4
_Lt_5663:	.ascii	"Viewer.LoadFile crashed!!!\0"
.balign 4
_Lt_5686:	.ascii	"Crashed at rendering!!!\0"
.balign 4
_Lt_56B8:	.long	0x42F00000
.balign 4
_Lt_56B9:	.long	0x41A00000
.balign 4
_Lt_56BA:	.long	0xC0400000
.balign 8
_Lt_56BB:	.quad	0x4028000000000000
.balign 8
_Lt_56BC:	.quad	0xC008000000000000
.balign 8
_Lt_56BD:	.quad	0x3FA1111111111111
.balign 4
_Lt_56C0:	.long	0xC2200000
.balign 4
_Lt_56C3:	.long	0x3E800000
.balign 8
_Lt_56C6:	.quad	0x4020000000000000
.balign 4
_Lt_57EA:	.ascii	"Failed to open:\n\n'\0"
.balign 4
_Lt_57EF:	.ascii	" - \0"
.balign 4
_Lt_5824:	.ascii	"        \0"
.balign 4
_Lt_5843:	.ascii	"out of bounds tabs\0"
.balign 4
_Lt_584F:	.ascii	"{{Tab count mismatch!!!}}\0"
.balign 4
_Lt_5878:	.ascii	"Untitled\0"
.balign 4
_Lt_58F1:	.ascii	"\0\0"
.balign 4
_Lt_58F3:	.ascii	"   \0"
.balign 4
_Lt_5901:	.ascii	"_1\0"
.balign 4
_Lt_598D:	.ascii	"LegoScript Files\0""*.ls\0""LDraw Files\0""*.ldr\0""All Files\0""*.*\0""\0""\0"
.balign 4
_Lt_598E:	.ascii	"ls\0"
.balign 4
_Lt_59CC:	.ascii	"Failed to retrieve text content...\0"
.balign 4
_Lt_59D1:	.ascii	"Failed to save:\n\n'\0"
.balign 4
_Lt_59EB:	.ascii	"LegoScript Files\0""*.ls\0""All Files\0""*.*\0""\0""\0"
.balign 4
_Lt_5A1B:	.ascii	"All unsaved data will be lost, continue?\0"
.balign 4
_Lt_5A1C:	.ascii	"File->Open\0"
.balign 4
_Lt_5A25:	.ascii	"closing last tab?\0"
.balign 4
_Lt_5A6F:	.ascii	"this file is modified, save it?\0"
.balign 4
_Lt_5A70:	.ascii	"File->Quit\0"
.balign 4
_Lt_5A94:	.ascii	"Building...\0"
.balign 4
_Lt_5A98:	.ascii	"Build failed.\0"
.balign 4
_Lt_5AA1:	.ascii	".ls\0"
.balign 4
_Lt_5AA5:	.ascii	".ldr\0"
.balign 4
_Lt_5AB2:	.ascii	"Ready.\0"
.balign 4
_Lt_5AB3:	.ascii	"Script error.\0"
.balign 4
_Lt_5AB4:	.ascii	"No output generated!\0"
.balign 4
_Lt_5AE1:	.ascii	"Compilation Crashed!!!\0"
.balign 4
_Lt_5B48:	.ascii	"OUTPUT_LOAD\0"
.balign 4
_Lt_5B4E:	.ascii	"OUTPUT_SAVE\0"
.balign 4
_Lt_5B66:	.ascii	"\161""\0"
.balign 4
_Lt_5B67:	.ascii	"\160""\0"

.section .bss
.balign 4
	.lcomm	_G_TFINDREP,40
	.stabs "G_TFINDREP:S386",40,0,0,_G_TFINDREP
.balign 4
	.lcomm	_G_FINDREPMSG,4
	.stabs "G_FINDREPMSG:S1",40,0,0,_G_FINDREPMSG
.balign 4
	.lcomm	_G_SLASTQUERY,12
	.stabs "G_SLASTQUERY:S13",40,0,0,_G_SLASTQUERY
.balign 4
	.lcomm	_G_SLASTREPLACE,12
	.stabs "G_SLASTREPLACE:S13",40,0,0,_G_SLASTREPLACE

.section .data
.balign 4
_Lt_5BF5:	.ascii	"No Results found\0"
.balign 4
_Lt_5BF7:	.ascii	"Replace\0"
.balign 4
_Lt_5BF8:	.ascii	"Find\0"
.balign 4
_Lt_5BFD:	.ascii	"Replaced \0"
.balign 4
_Lt_5BFE:	.ascii	" times\0"
.balign 4
_Lt_5C43:	.ascii	"FILE_IMPORT\0"
.balign 4
_Lt_5C49:	.ascii	"FILE_EXPORT\0"
.balign 4
_Lt_5C4F:	.ascii	"EDIT_UNDO\0"
.balign 4
_Lt_5C55:	.ascii	"EDIT_REDO\0"
.balign 4
_Lt_5C62:	.ascii	"Failed: %X %X\n\0"
.balign 4
_Lt_5C66:	.ascii	"CDERR_FINDRESFAILURE\0"
.balign 4
_Lt_5C6B:	.ascii	"CDERR_MEMLOCKFAILURE\0"
.balign 4
_Lt_5C70:	.ascii	"CDERR_INITIALIZATION\0"
.balign 4
_Lt_5C75:	.ascii	"CDERR_NOHINSTANCE\0"
.balign 4
_Lt_5C7A:	.ascii	"CDERR_LOCKRESFAILURE\0"
.balign 4
_Lt_5C7F:	.ascii	"CDERR_NOHOOK\0"
.balign 4
_Lt_5C84:	.ascii	"CDERR_LOADRESFAILURE\0"
.balign 4
_Lt_5C89:	.ascii	"CDERR_NOTEMPLATE\0"
.balign 4
_Lt_5C8E:	.ascii	"CDERR_LOADSTRFAILURE\0"
.balign 4
_Lt_5C93:	.ascii	"CDERR_STRUCTSIZE\0"
.balign 4
_Lt_5C98:	.ascii	"CDERR_MEMALLOCFAILURE\0"
.balign 4
_Lt_5C9D:	.ascii	"FRERR_BUFFERLENGTHZERO\0"
.balign 4
_Lt_5CBC:	.ascii	"Replace failed\0"
.balign 4
_Lt_5CDE:	.ascii	"COMPLETION_ENABLE\0"
.balign 4
_Lt_5CEF:	.ascii	"COMPLETION_CLEARFILTERS\0"
.balign 4
_Lt_5D01:	.ascii	"COMPLETION_INVERTFILTERS\0"
.balign 4
_Lt_5DC8:	.ascii	"bad View_ToggleKey()\0"
.balign 4
_Lt_5E06:	.ascii	"bad View_key\0"
.balign 4
_Lt_5E30:	.ascii	"HELP_ABOUT\0"
.balign 4
_Lt_5E37:	.ascii	"&File\0"
.balign 4
_Lt_5E40:	.ascii	"&New\tCtrl+N\0"
.balign 4
_Lt_5E47:	.ascii	"&Open\tCtrl+O\0"
.balign 4
_Lt_5E4D:	.ascii	"&Save\tCtrl+S\0"
.balign 4
_Lt_5E54:	.ascii	"Save &As\tCtrl+Shift+S\0"
.balign 4
_Lt_5E5B:	.ascii	"&Close\tCtrl+W\0"
.balign 4
_Lt_5E63:	.ascii	"&Import\tCtrl+I\0"
.balign 4
_Lt_5E69:	.ascii	"&Export\tCtrl+Shift+I\0"
.balign 4
_Lt_5E73:	.ascii	"&Quit\tAlt+F4\tCtrl+Q\0"
.balign 4
_Lt_5E77:	.ascii	"&Edit\0"
.balign 4
_Lt_5E7B:	.ascii	"&Undo\tCtrl+Z\0"
.balign 4
_Lt_5E82:	.ascii	"&Redo\tCtrl+Shift+Z\0"
.balign 4
_Lt_5E89:	.ascii	"&Find\tCtrl+F\0"
.balign 4
_Lt_5E90:	.ascii	"Rep&lace\tCtrl+H\0"
.balign 4
_Lt_5E97:	.ascii	"&Select All\tCtrl+A\0"
.balign 4
_Lt_5E9C:	.ascii	"C&ut\tCtrl+X\0"
.balign 4
_Lt_5EA0:	.ascii	"&Copy\tCtrl+C\0"
.balign 4
_Lt_5EA4:	.ascii	"&Paste\tCtrl+V\0"
.balign 4
_Lt_5EAB:	.ascii	"&Build\tCtrl+B\0"
.balign 4
_Lt_5EB1:	.ascii	"Cl&ear output\tCtrl+Shift+B\0"
.balign 4
_Lt_5EB5:	.ascii	"&Completion\0"
.balign 4
_Lt_5EBB:	.ascii	"&Enable\tCtrl+E\0"
.balign 4
_Lt_5EBE:	.ascii	"&Filters\0"
.balign 4
_Lt_5EC5:	.ascii	"C&lear\tCtrl+Shift+C\0"
.balign 4
_Lt_5ECC:	.ascii	"&Invert\tCtrl+Alt+I\0"
.balign 4
_Lt_5ED3:	.ascii	"&Variations\tAlt+Shift+F\0"
.balign 4
_Lt_5EDA:	.ascii	"&Donor\tAlt+D\0"
.balign 4
_Lt_5EE0:	.ascii	"&Path\tAlt+P\0"
.balign 4
_Lt_5EE6:	.ascii	"P&rinted\tAlt+Shift+P\0"
.balign 4
_Lt_5EEA:	.ascii	"Shortcut\tAlt+S\0"
.balign 4
_Lt_5EF1:	.ascii	"Stic&kered\tAlt+K\0"
.balign 4
_Lt_5EF7:	.ascii	"Multi&color\tAlt+M\0"
.balign 4
_Lt_5EFD:	.ascii	"Pre-c&olored\tAlt+Shift+C\0"
.balign 4
_Lt_5F04:	.ascii	"&Template\tAlt+T\0"
.balign 4
_Lt_5F09:	.ascii	"&Alias\tAlt+A\0"
.balign 4
_Lt_5F0F:	.ascii	"&Moulded\tAlt+Shift+M\0"
.balign 4
_Lt_5F15:	.ascii	"&Helper\tAlt+Shift+H\0"
.balign 4
_Lt_5F1A:	.ascii	"&Stickers\tAlt+S\0"
.balign 4
_Lt_5F1F:	.ascii	"&View\0"
.balign 4
_Lt_5F26:	.ascii	"&Graphics Window\tCtrl+G\0"
.balign 4
_Lt_5F2E:	.ascii	"&Dock GW in Main\tCtrl+Shift+L\0"
.balign 4
_Lt_5F35:	.ascii	"&Reset Camera\tCtrl+Shift+R\0"
.balign 4
_Lt_5F3A:	.ascii	"&Show Collisions\tSPACE\0"
.balign 4
_Lt_5F3F:	.ascii	"Reset View parts\tBACKSPACE\0"
.balign 4
_Lt_5F43:	.ascii	"View &Next part\t+\0"
.balign 4
_Lt_5F47:	.ascii	"View &Previous part\t-\0"
.balign 4
_Lt_5F4C:	.ascii	"&Show bounding box\tTAB\0"
.balign 4
_Lt_5F50:	.ascii	"Reset bounding box\tShift BACKSPACE\0"
.balign 4
_Lt_5F54:	.ascii	"Ne&xt part\tShift +\0"
.balign 4
_Lt_5F58:	.ascii	"&Pre&vious part\tShift -\0"
.balign 4
_Lt_5F5C:	.ascii	"&Help\0"
.balign 4
_Lt_5F5E:	.ascii	"About\0"
	.stabs "G_IPREVTOPROW:S1",38,0,0,_G_IPREVTOPROW
.balign 4
_G_IPREVTOPROW:
.long 0
	.stabs "G_IPREVROWCOUNT:S1",38,0,0,_G_IPREVROWCOUNT
.balign 4
_G_IPREVROWCOUNT:
.long 0
	.stabs "G_ROWDIGITS:S1",38,0,0,_G_ROWDIGITS
.balign 4
_G_ROWDIGITS:
.long 2

.section .bss
.balign 4
	.lcomm	_G_ZROWS,128
	.stabs "G_ZROWS:S4",40,0,0,_G_ZROWS
.balign 4
	.lcomm	_G_SQCTX,100
	.stabs "G_SQCTX:S314",40,0,0,_G_SQCTX
.balign 4
	.lcomm	_SLASTSEARCH,12
	.stabs "SLASTSEARCH:S13",40,0,0,_SLASTSEARCH

.section .data
.balign 4
_Lt_5FED:	.ascii	"%i\r\n\0"
.balign 4
_Lt_6029:	.ascii	"Auto completion Crashed!!!\0"
.balign 4
_Lt_60B9:	.ascii	"Dump filter parts\0"
.balign 8
_Lt_61B8:	.quad	0x3FEB333333333333

.section .bss
.balign 4
	.lcomm	_ORGEDITPROC,4
	.stabs "ORGEDITPROC:S545=*7",40,0,0,_ORGEDITPROC

.section .data
.balign 4
_Lt_6271:	.ascii	"3011.dat\0"
.balign 4
_Lt_6274:	.ascii	"memory.ldr\0"
.balign 4
_Lt_629F:	.ascii	"%i : %i\0"
.balign 4
_Lt_631E:	.ascii	"?\0"
.balign 4
_Lt_6366:	.ascii	"button\0"
.balign 4
_Lt_6374:	.ascii	"SysTabControl32\0"
.balign 4
_Lt_6381:	.ascii	"Build\0"
.balign 4
_Lt_638F:	.ascii	"static\0"
.balign 4
_Lt_639D:	.ascii	"RICHEDIT20W\0"
.balign 4
_Lt_63AB:	.ascii	"Output\0"
.balign 4
_Lt_63B9:	.ascii	"Query\0"
.balign 4
_Lt_63C7:	.ascii	"Execute\0"
.balign 4
_Lt_63D4:	.ascii	"Load\0"
.balign 4
_Lt_63E1:	.ascii	"Save\0"
.balign 4
_Lt_63FC:	.ascii	"edit\0"
.balign 4
_Lt_6416:	.ascii	"msctls_statusbar32\0"
.balign 4
_Lt_641E:	.ascii	"Unnamed\0"
.balign 4
_Lt_6446:	.ascii	"File not found: '\0"
.balign 8
_Lt_6460:	.quad	0x0000000000000000
.balign 8
_Lt_6465:	.quad	0x4060000000000000
.balign 8
_Lt_6466:	.quad	0x40370A3D70A3D70A
.balign 4
_Lt_6593:	.ascii	"FB_PROGRAM_ICON\0"
.balign 4
_Lt_6598:	.ascii	"Failed to register wcls!\0"
.balign 4
_Lt_65E7:	.ascii	"Riched20.dll\0"
.balign 4
_Lt_65EB:	.ascii	"Failed To Load richedit component\0"
.balign 4
_Lt_65ED:	.ascii	"commdlg_FindReplace\0"

.section .ctors
.int _fb_ctor__legoscript
.int __ZN14COLOREDCONTROL4INITEv@0
.int __GLOBAL__I

.section .dtors
.int __GLOBAL__D

.section .text
	.stabs "",100,0,0,.L_68DD
.L_68DD:

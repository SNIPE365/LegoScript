dim as string sBrick(...) = { _
   "3005" , "14716" , "2453" , "2453a" , "2453b" , "3004" , "3065" , "3245b", _
   "3245c", "772" , "22886" , "2454" , "3622" , "3755" , "3010" , "3066" , _
   "49311" , "3009" , "3067" , "crssprt02" , "3754" , "3008" , "crssprt01" , _
   "6111" , "6112" , "2465" , "3003" , "2357" , "bhol02" , "3003old" , _
   "30145" , "3002" , "bhol03" , "3002old" , "3001" , "3001special" , "bhol04" , _
   "3001old" , "3001oldb" , "30144" , "2456" , "6213" , "3007" , "x1214" , _
   "bhol06" , "crssprt03" , "3006" , "bhol05" , "crssprt04" , "702" , "bhol01" , _
   "702old" , "2356" , "6212" , "4202" , "30400" , "4201" , "4204" , _
   "733eX" , "733" , "700" , "700eD" , "700eD2" , "700eX" , "700e" , _
   "30072" , "65559" , "65551pb01" , "65557pb01" , "60189pb01" , "60189pb02" , "65552pb01" , _
   "65557pb02" , "65551pb02" , "65556pb01" , "60305pb01" , "60190pb01" , "60190pb02" , "60191pb01" , _
   "60191pb02" , "60207pb01" , "60207pb02" , "60223pb01" , "60223pb02" , "60225pb01" , "60297pb01" , _
   "65558pb01" , "60237pb01" , "60237pb02" , "60305pb02" , "65563pb01" , "60236pb01" , "60192pb01" , _
   "60192pb02" , "60311pb01" , "60220pb01" , "60220pb02" , "60222pb01" , "60222pb02" , "60312pb01" , _
   "60224pb01" , "60224pb02" , "60226pb01" , "60227pb01" , "60229pb01" , "65548pb02" , "60233pb01" , _
   "60238pb01" , "60330pb01" , "65548pb01" , "60312pb02" , "60311pb02" , "60296pb01" , "60330pb02" , _
   "65555pb01" , "65550pb01" , "60235pb01" , "60331pb01" , "60292pb01" , "60221pb01" , "60221pb02" , _
   "60228pb01" , "60329pb01" , "60230pb01" , "60232pb01" , "60234pb01" , "65547pb01" , "65547pb02" , _
   "60239pb01" , "65549pb01" , "60240pb01" , "60244pb01" , "60294pb01" , "60292pb02" , "60329pb02" , _
   "60295pb02" , "60295pb01" , "60291pb01" , "60289pb01" , "60332pb01" , "60231pb01" , "60293pb01" , _
   "60243pb01" , "60293pb02" , "60290" , "60290pb01" , "3963" , "2921" , "60476" , _
   "4070" , "60475b" , "60475" , "20310" , "87087" , "15411" , "26604" , _
   "47905" , "4733" , "32952" , "3581" , "15444" , "60583b" , "60583a" , _
   "60583" , "86996" , "80488" , "34816" , "26597" , "30236" , "3134" , _
   "3134a" , "4216" , "30237" , "3317" , "2877" , "30136" , "98283" , _
   "30237b" , "2458" , "44865" , "30526" , "30237a" , "86876" , "11211" , _
   "52107" , "22885" , "67329" , "80796" , "2605c01" , "37452" , "88393" , _
   "4595" , "35477" , "2653" , "30137" , "15533" , "30414" , "4088" , _
   "4217" , "30603" , "30601" , "4729" , "66961" , "90258" , "47117" , _
   "6232" , "4730" , "30000" , "3137" , "3137open" , "73764" , "80432" , _
   "80433" , "80432c01" , "6056" , "71752" , "69234" , "30274" , "52038" , _
   "14520" , "4748" , "4747" , "4747b" , "30592" , "6249" , "71100" , _
   "7049" , "800" , "4180" , "18892" , "7049a" , "7049b" , "6061" , _
   "2434" , "3863" , "73090a" , "73090b" , "30520" , "30621" , "47855" , _
   "47122" , "30076" , "30181" , "45403" , "45403c01" , "3160" , "2628" , _
   "15624" , "71772" , "2629" , "18922" , "74166" , "30645" , "52040" , _
   "47976" , "47116" , "69958" , "93608" , "6161" , "47115" , "2612" , _
   "66855" , "87620" , "2462" , "2464" , "2463" , "14413" , "6107" , _
   "6037" , "6043" , "6042" , "6032" , "3062" , "3062a" , "3062old" , _
   "20952" , "5610a" , "71076" , "25214" , "x12" , "4588" , "71075" , _
   "3386" , "33286" , "77808" , "65473" , "5489" , "15395" , "24947" , _
   "553" , "553a" , "20953" , "5256" , "3941" , "92947" , "17485" , _
   "27266" , "5690" , "30151" , "5331" , "33287" , "30361" , "30361c" , _
   "30361b" , "30361a" , "4591" , "74169" , "5057" , "49308" , "73111" , _
   "79850" , "6222" , "87081" , "68325" , "84866" , "65138" , "18897" , _
   "57587" , "3063" , "85080" , "3063a" , "5906" , "5152" , "65617" , _
   "88293" , "x1042b" , "x1042a" , "2577" , "48092" , "5649" , "5651" , _
   "49612" , "47974" , "47974c01" , "5532" , "76795" , "24599" , "76776" , _
   "95188" , "87559" , "58846" , "6162" , "47114" , "33230" , "4073" , _
   "3661" , "bb0517" , "26047" , "25893u" , "79194" , "25893" , "52494" , _
   "33291" , "24866" , "53119" , "5610b" , "85861" , "11609" , "3614b" , _
   "3614a" , "15470" , "1745" , "35480" , "77850" , "77845" , "4073sprue" , _
   "35442" , "40145" , "50407" , "40145c01" , "2655" , "2655c02" , "2655c07" , _
   "2655c04" , "2655c06" , "2655c08" , "2655c05" , "2655c01" , "2655c03" , "4032" , _
   "98284" , "2654" , "39613" , "3263" , "35443" , "11833" , "60474" , _
   "39611" , "3766" , "89681" , "73832" , "35446" , "46342" , "11213"  _
}
dim as string sPlate(...) = { _
   "41948" , "74611" , "65140" , "65486" , "80031" , "79491" , "18980" , _
   "30357" , "68568" , "30565" , "80015" , "6003" , "712" , "712pb01" , _
   "712old" , "712oldpb01" , "713" , "713old" , "18646" , "22888" , "78257" , _
   "4085" , "4081" , "4081b" , "4081a" , "61252" , "4085d" , "4085a" , _
   "49668" , "15070" , "6019" , "4085c" , "4085b" , "3794b" , "15573" , _
   "3794a" , "3794" , "60470b" , "60470" , "27261" , "15208" , "92692" , _
   "61406pb05" , "61406pb08" , "61406pb03" , "61406pb02" , "61406pb04" , "61406pb06" , "61406pb07" , _
   "61406pb01" , "4623b" , "4623a" , "4623" , "60478" , "48336" , "2540" , _
   "3839" , "3839b" , "3839a" , "18649" , "63868" , "78256" , "11476" , _
   "92280" , "32028" , "27259" , "4596" , "2508" , "44861" , "88289" , _
   "18677" , "3172" , "11458" , "50949" , "14418" , "14704" , "263" , _
   "x461" , "x461b" , "14419" , "22890" , "3170" , "14417" , "21445" , _
   "66897" , "79987" , "34103" , "4590" , "41740" , "92593" , "61072" , _
   "30043" , "68382" , "3184" , "3183" , "98263" , "3183a" , "3183b" , _
   "3183c" , "2926" , "6583" , "4510" , "30275" , "27934" , "3204" , _
   "30033" , "75937" , "30094" , "5066" , "15440" , "87580" , "3481" , _
   "2444" , "10247" , "15108" , "2817" , "2476" , "2476b" , "15092" , _
   "422" , "3729" , "15456" , "3730" , "63082" , "41862" , "4488" , _
   "8" , "4600" , "47720" , "6157" , "11002" , "99206" , "4304" , _
   "30166" , "73831" , "3462" , "3176" , "3176c01" , "65509" , "88000" , _
   "26599" , "40687" , "30157" , "3779" , "737" , "737c01" , "737b" , _
   "737a" , "737ac01" , "737ac03" , "737ac02" , "737ac04" , "737bc01" , "3491" , _
   "30195" , "78168" , "25195" , "79846" , "87609" , "30586" , "62743" , _
   "15397" , "bb0185" , "47998" , "11399" , "64799" , "35044" , "66792" , _
   "79387" , "30042" , "709" , "92099" , "6576" , "967" , "4607" , _
   "711" , "bb1365c01" , "79998" , "27255" , "30062" , "2539" , "73110" , _
   "66789" , "30303" , "30041" , "92107" , "3058" , "3058a" , "3058b" , _
   "67929" , "79759c01" , "4151" , "4151b" , "4151c" , "66790" , "6063" , _
   "89523" , "bb1363c01" , "bb1364c01" , "18601" , "44666" , "3024" , "3023" , _
   "3023old" , "3023old2" , "3623" , "3710" , "78329" , "3666" , "3460" , _
   "4477" , "60479" , "3022" , "2420" , "3021" , "3020" , "3795" , _
   "3034" , "3034old" , "3832" , "2445" , "91988" , "4282" , "11212" , _
   "77844" , "3031" , "2639" , "3032" , "3035" , "3035old" , "3030" , _
   "3030a" , "3029" , "3958" , "3036" , "3036old" , "3033" , "3028" , _
   "3456" , "3027" , "3026" , "41539" , "728" , "92438" , "91405" _
}

#include "Loader\PartSearch.bas"

function GetPartDescription( sPart as string ) as string
   var iPart = SearchPart(sPart)   
   if iPart<0 then return ""
   var pPart = PartStructFromIndex(iPart)   
   var sDesc = trim(pPart->zDesc), iPos=0      
   while sDesc[iPos] = asc("~") 'process special command
      const sMoved = "moved to "
      var iMoved = instr(iPos+1,lcase(sDesc),sMoved)
      if iMoved then
         var iPart2 = SearchPart(mid(sDesc,iMoved+len(sMoved)))         
         if iPart2 then            
            pPart = PartStructFromIndex(iPart2)                  
            var iPos2 = len(sDesc)+2
            sDesc = left(sDesc,iPos)+mid(sDesc,iPos+2) & " > " & pPart->zDesc
            iPos = iPos2
            continue while
         end if
      end if
      exit while
   wend
   'print pPart->zName
   if pPart->iFolder=2 then return "[Unnoficial] "+sDesc
   return " "+sDesc
end function
function GetPartType( sDesc as string ) as string   
   for N as long = 0 to len(sDesc)-1
      select case sDesc[N]
      case asc("0") to asc("9"),asc("A") to asc("Z"),asc("a") to asc("z"): exit for
      end select
      sDesc[N]=asc(" ")
   next N                  
   if instr(sDesc,"hinge")=0 then
      if instr(sDesc," plate") then 
         return "P"                  
      elseif instr(sDesc," brick") then
         return "B"
      end if
   end if
   return ""
end function

dim as long iBrickNotFound,iBrickErrors,iPlateNotFound,iPlateErrors

#if 1
for N as long = 0 to ubound(sBrick)   
   var sDesc = GetPartDescription( sBrick(N) )
   if len(sDesc)=0 then iBrickNotFound += 1 : continue for 'print "Part not found: '"+sBrick(N)+"'": continue for
   var sType = GetPartType( sDesc )
   if sType <> "B" then 
      print "Part '"+sBrick(N)+"' - '"+sDesc+"' suppose to be 'B'rick... got: '"+sType+"'"
      iBrickErrors += 1
   end if
next N
#endif
#if 1
for N as long = 0 to ubound(sPlate)
   var sDesc = GetPartDescription( sPlate(N ) )
   if len(sDesc)=0 then iPlateNotFound += 1 : continue for 'print "Part not found: '"+sPlate(N)+"'": continue for
   var sType = GetPartType( sDesc )
   if sType <> "P" then 
      print "Part '"+sPlate(N)+"' - '"+sDesc+"' suppose to be 'P'late... got: '"+sType+"'"
      iPlateErrors += 1
   end if
next N
#endif

if (iBrickNotFound+iBrickErrors+iPlateNotFound+iPlateErrors) then
   if iBrickNotFound then print "Not Found bricks: ";iBrickNotFound  & " " & csng(cint((1000*iBrickNotFound)\(ubound(sBrick)+1))/10) & "%"
   if iPlateNotFound then print "Not Found plates: ";iPlateNotFound  & " " & csng(cint((1000*iPlateNotFound)\(ubound(sPlate)+1))/10) & "%"
   if iBrickErrors   then print "Bricks with errors: ";iBrickErrors  & " " & csng(cint((1000*iBrickErrors)\(ubound(sBrick)+1-iBrickNotFound))/10) & "%"
   if iPlateErrors   then print "Plates with errorrs: ";iPlateErrors & " " & csng(cint((1000*iPlateErrors)\(ubound(sPlate)+1-iPlateNotFound))/10) & "%"
else
   print "ALL GOOD!"
end if
sleep

